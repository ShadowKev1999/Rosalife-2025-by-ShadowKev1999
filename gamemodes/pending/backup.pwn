public OnGameModeInit()
{
    Streamer_SetMaxItems(STREAMER_TYPE_OBJECT, 40000);
	Streamer_SetVisibleItems(STREAMER_TYPE_OBJECT, 1000);

    setJackpotScreen();

	CA_Init();

	SendRconCommand("password "SERV_PASS"");

	lspddoor = CreateDynamicObject(1495, 345.81671, 1827.40979, 2240.56494,   0.00000, 0.00000, 0.00000); // lspd tür innen
	lspddoorWK = CreateDynamicObject(1495, 322.76929, 1834.26904, 2240.58203,   0.00000, 0.00000, 90.00000); //lspd tür waffenkammer innen

	//WaffenTransport
	SpawnWaffenTransporter();
	WaffenTransportTimer = SetTimer("SpawnWaffenTransporter", 1800000, true);
	SetTimer("RefillScriptsideVehicles", 60000, true);

	SetTimer("HalbeStundenTimer", 1800000, true);

	//Server Zwischenspeichern
	SetTimer("ServerZwischenSpeichern", 7200000, true);

	mysql_connection();
	SendRconCommand("hostname "SERV_STAG" "SERV_NAME" - "SERV_SLOG"");
	SetGameModeText(SERV_LOAD);
	//ShowPlayerMarkers(false);
 	ShowPlayerMarkers(PLAYER_MARKERS_MODE_STREAMED);
	//LimitPlayerMarkerRadius(8.0);
	EnableStuntBonusForAll(false);
	ManualVehicleEngineAndLights();
	DisableInteriorEnterExits();
	//Parteien System
	OnPartieInit();
	//Actor System
	Actor_Init();
	//ServerEconomy
	ServerEconomy_Init();
	//ServerPickupSystem
	ServerPickupInit();
	//LumberJack System
	//Log_ScriptInit();
	//Furniture System
	Init_Furnitures();
	//EnterExit System
	EnterExit_Init();
	//ItemSystem
	Item_Init();
	//Race System
	Race_Init();
	//VehicleSystem
	Vehicle_Init();
	//BeachBarSystem
	BeachBar_Init();
	//MiningSystem
	//Minining_Init();
	//FisherJob
	FisherJobInit();
	//CouponSystem / PlayerObjects
	Coupons_Init();
	//PhoneCell_System
	PhoneCell_Init();
	//EasterEvent
	Easter_Tables();
	//Casino
	Casino_Init();
	//DynamicRobbery
	DynamicRobberyInit();
	//FastFoodStood
	FastFoodStood_Init();

	//Bots - redv-reallife.de Reloaded
	InitBots();

 	for(new id = 0; id < MAX_BOTS; id++)
 	{
		BotBSN[id] = CreateDynamicActor(205, 377.1171,-65.6229,1001.5078, 179.5881, id+1, .interiorid = 10);
		BotCB[id] = CreateDynamicActor(167, 369.2933,-4.4847,1001.8516, 178.6006, id+1, .interiorid = 9);
	}
	Wetter();
	SetTimer("Wetter",1800000, true);
	SetTimer("ServerNews",900000,true);
	SetTimer("TorStatus",60000,true);
	SetTimer("DrogenStatus",60000,true);
	SetTimer("RandomDefekte",3600000,true);

	Init_NoDeathmatch();

	LoadJobInfos();

	//MAPPINGS
	MappingsInit();

    new expevent = mysql_GetInt("allgemein", "DoubleEXP", "ServerID", "1");
    if(expevent == 1){GlobalVars[DoubleEXP] = true;}
	new easterEvent = mysql_GetInt("allgemein", "EasterEvent", "ServerID", "1");
	if(easterEvent == 1) {
		GlobalVars[EasterEvent] = true;

		//EasterEvent
		Easter_OnGameModeInit();
	}
	new halloweenEvent = mysql_GetInt("allgemein", "HalloweenEvent", "ServerID", "1");
	if(halloweenEvent) {
		TextDrawSetString(DoubleEXPTD[0], "! HALLOWEEN !");
		TextDrawSetString(DoubleEXPTD[1], "! HALLOWEEN !");

		foreach(new i : Player) {
			TextDrawShowForPlayer(i, DoubleEXPTD[0]);
			TextDrawShowForPlayer(i, DoubleEXPTD[1]);
		}

		GlobalVars[HalloweenEvent] = true;

		InitHalloweenEvent();
	}
	ServerLadenTimer = SetTimer("ServerLaden",1000,true);
	ServerLadenStatus = 1;

	//Models News Definitionen
	SkinordnungGovernment = LoadModelSelectionMenu("Skinordnung/GOV.txt");
	SkinordnungSAPD = LoadModelSelectionMenu("Skinordnung/SAPD.txt");
	SkinordnungSFPD = LoadModelSelectionMenu("Skinordnung/SFPD.txt");
	SkinordnungMEDIC = LoadModelSelectionMenu("Skinordnung/MEDIC.txt");
	SkinordnungFIRE = LoadModelSelectionMenu("Skinordnung/FIRE.txt");
	SkinordnungFBI = LoadModelSelectionMenu("Skinordnung/FBI.txt");
	SkinordnungOrdnungsamt = LoadModelSelectionMenu("Skinordnung/OAMT.txt");
	SkinordnungSanNews = LoadModelSelectionMenu("Skinordnung/SANNEWS.txt");
	SkinordnungGrove = LoadModelSelectionMenu("Skinordnung/GROVE.txt");
	SkinordnungBallas = LoadModelSelectionMenu("Skinordnung/BALLAS.txt");
	SkinordnungVagos = LoadModelSelectionMenu("Skinordnung/VAGOS.txt");
	SkinordnungAztecas = LoadModelSelectionMenu("Skinordnung/AZTECAS.txt");
	SkinordnungRifa = LoadModelSelectionMenu("Skinordnung/RIFA.txt");
	SkinordnungTriads = LoadModelSelectionMenu("Skinordnung/TRIADS.txt");
	SkinordnungDaNangBoys = LoadModelSelectionMenu("Skinordnung/BOYS.txt");
	SkinordnungBikers = LoadModelSelectionMenu("Skinordnung/BIKERS.txt");
	SkinordnungItalia = LoadModelSelectionMenu("Skinordnung/ITALIA.txt");
	SkinordnungRussia = LoadModelSelectionMenu("Skinordnung/RUSSIA.txt");

	SkinsBoy = LoadModelSelectionMenu("Skinordnung/SkinsBoy.txt");
	SkinsGirl = LoadModelSelectionMenu("Skinordnung/SkinsGirl.txt");

	//Menü´s - redv-reallife.de Reloaded
	Schwarzmarkt = CreateMenu("Auswahl", 1, 50.0, 180.0, 200.0, 200.0);
	AddMenuItem(Schwarzmarkt,0, "Nebenjobs");
	AddMenuItem(Schwarzmarkt,0, "Wanteds entfernen (5000$)");
	AddMenuItem(Schwarzmarkt,0, "Bombe verkaufen (5.000$)");
	AddMenuItem(Schwarzmarkt,0, "Masken kaufen (1.000$ pro Maske)");
	AddMenuItem(Schwarzmarkt,0, "Verlassen");

	BSNMenu = CreateMenu("~r~Fast Food",1,50.0,180.0,200.0,200.0);
    SetMenuColumnHeader(BSNMenu,0,"~r~Was darf es sein...?");
    AddMenuItem(BSNMenu,0,"Cola 2$");
	AddMenuItem(BSNMenu,0,"Cheeseburger 3$");
	AddMenuItem(BSNMenu,0,"Pommes 5$");
	AddMenuItem(BSNMenu,0,"Bigmac 6$");
	AddMenuItem(BSNMenu,0,"Hamburger Royal 12$");

	//3DTextLabel´s & Pickup´s - redv-reallife.de Reloaded

	//Tuning Anmelden O-Amt
	AddStaticPickup(1274, 1, 1075.3168,-1666.5822,12.8669, -1); //Beladen
	CreateDynamic3DTextLabel("{FFFFFF}Tuning Anmeldung\nBenutze '{FF0000}/tuningmelden{FFFFFF}' um dein Tuning anzumelden (5000$).", 0x008080FF, 1075.3168,-1666.5822,12.8669, 12.0);

	//Langstreckenfahrer Nebenjob
	AddStaticPickup(1239, 1, 2401.6890,-2674.8210,13.6659, -1); //Beladen
	CreateDynamic3DTextLabel("{FFFFFF}Langstreckenfahrer Anhänger\nBenutze '{FF0000}/truck beladen/abladen/schmuggler{FFFFFF}' um einen Anhänger zu bekommen", 0x008080FF, 2401.6890,-2674.8210,13.6659, 12.0);
    AddStaticPickup(1239, 1, 2553.7888,-8456.8926,13.8301, -1); //Abladen
	CreateDynamic3DTextLabel("{FFFFFF}Ölfabrik Warenlieferung\nBenutze '{FF0000}/truck abladen{FFFFFF}' um deinen Anhänger auszutauschen", 0x008080FF, 2553.7888,-8456.8926,13.8301, 12.0);
	AddStaticPickup(1239, 1, 2546.9290,-8484.1396,13.8301, -1); //HotDog-Stand
	CreateDynamic3DTextLabel("{FFFFFF}Langstreckenfahrer Hotdog\nBenutze '{FF0000}/hotdog{FFFFFF}' um einen Hotdog zu bekommen", 0x008080FF, 2546.9290,-8484.1396,13.8301, 3.0);
	AddStaticPickup(1239, 1, 2437.7014,-5924.0571,13.8430, -1); //Rasthof-BSN
	CreateDynamic3DTextLabel("{FFFFFF}Langstreckenfahrer Rasthof\nBenutze '{FF0000}/burger{FFFFFF}' um einen Burger zu bekommen", 0x008080FF, 2437.7014,-5924.0571,13.8430, 3.0);
    AddStaticPickup(1239, 1, 2504.7148,-2640.4246,13.8623, -1); //Job-Duty
	CreateDynamic3DTextLabel("{FFFFFF}Benutze '{FF0000}N' {FFFFFF}oder {FF0000}'/jduty{FFFFFF}' um den Dienst zu starten", 0x008080FF, 2504.7148,-2640.4246,13.8623, 10.0);

	//Fishing
	FishingInit();

	//Payback in News Base
	AddStaticPickup(1581, 1, 1410.9038,-13.4412,1006.7496, -1);//Payback Karte
	CreateDynamic3DTextLabel("{FFFFFF}PAYBACK-Karte\nBenutze '{FF0000}/paybackkarte{FFFFFF}'\num eine kostenlose Payback-Karte zu erhalten", 0x008080FF, 1410.9038,-13.4412,1006.7496, 5.0);

	//San Fierro Police Department
	AddStaticPickup(3096, 1, 1560.3781,-1694.8395,6.5000, -1); //SAPD Repairpoint
	CreateDynamic3DTextLabel("{FF0000}Werkstatt\n{FFFFFF}Benutze '{FF0000}N{FFFFFF}'\num das Fahrzeug zu reparieren", 0x008080FF, 1560.3781,-1694.8395,6.5000, 10.0);

	//Waffenkammer LSPD
	AddStaticPickup(2061, 1, 316.2444,1834.3264,2241.5850, -1); //LSPD Waffenkammer
	CreateDynamic3DTextLabel("{FFFFFF}Waffenkammer\nBenutze '{FF0000}N{FFFFFF}' oder '/waffenkammer' für die Waffenausgabe", 0x008080FF, 316.2444,1834.3264,2241.5850, 5.0);

	//Ordnungsamt Base
	AddStaticPickup(1242, 1, 1055.0511,-1695.7314,13.2615, -1);//OAmt Duty
	CreateDynamic3DTextLabel("{FEFEFE}Benutze die {FF0000}Taste N{FEFEFE} um den Dienst zu betreten/verlassen", 0x008080FF, 1055.0511,-1695.7314,13.2615, 5.0);
	AddStaticPickup(1239, 1, 1055.1564,-1682.1302,16.7169, -1);//OAmt /freikaufen
	CreateDynamic3DTextLabel("{FEFEFE}Benutze '{FF0000}/freikaufen{FEFEFE}'\n um ein Fahrzeug freizukaufen", 0x008080FF, 1055.1564,-1682.1302,16.7169, 5.0);

	//Ort: Los Santos
	//Stadthalle Pickup
	AddStaticPickup(1239, 1, 918.7917,-1463.4541,2754.3389, -1);
	//Create3DTextLabel("{FFFFFF}Benutze '{FF0000}TASTE N{FFFFFF}' oder '{FF0000}/stadthalle{FFFFFF}'", 0x008080FF, 918.7917,-1463.4541,2754.3389, 10.0, 0, false);
	CreateDynamic3DTextLabel("{FFFFFF}Stadthalle\nBenutze '{FF0000}TASTE N{FFFFFF}' oder '{FF0000}/stadthalle{FFFFFF}'", 0x008080FF, 918.7917,-1463.4541,2754.3389, 5.0);
	
	AddStaticPickup(19130, 1, 1506.2091,-1796.6313,14.1047, -1); //Stadthallen Eingang
	CreateDynamic3DTextLabel("{FFFFFF}Stadthalle\nBenutze '{FF0000}ENTER{FFFFFF}' zum betreten", 0x008080FF, 1506.2091,-1796.6313,14.1047, 5.0);	
	AddStaticPickup(19130, 1, 920.1977,-1474.9122,2754.3318, -1); //Stadthallen Ausgang
	CreateDynamic3DTextLabel("{FFFFFF}Stadthalle\nBenutze '{FF0000}ENTER{FFFFFF}' zu verlassen", 0x008080FF, 920.1977,-1474.9122,2754.3318, 5.0);	
	AddStaticPickup(19130, 1, 906.6867,-1457.7841,2754.3218, -1); //Stadthallen Aufzug1
	CreateDynamic3DTextLabel("{FFFFFF}Aufzug\nBenutze '{FF0000}ENTER{FFFFFF}' um nach oben zu gelangen.", 0x008080FF, 906.6867,-1457.7841,2754.3218, 5.0);	
	AddStaticPickup(19130, 1, 909.7888,-1457.4507,2754.3218, -1); //Stadthallen Aufzug2
	CreateDynamic3DTextLabel("{FFFFFF}Aufzug\nBenutze '{FF0000}ENTER{FFFFFF}' um nach oben zu gelangen.", 0x008080FF, 909.7888,-1457.4507,2754.3218, 5.0);
	AddStaticPickup(19130, 1, 929.6670,-1457.4449,2761.0063, -1); //Stadthallen Aufzug Runter1
	CreateDynamic3DTextLabel("{FFFFFF}Aufzug\nBenutze '{FF0000}ENTER{FFFFFF}' um nach unten zu gelangen.", 0x008080FF, 929.6670,-1457.4449,2761.0063, 5.0);	
	AddStaticPickup(19130, 1, 932.6934,-1457.4520,2761.0164, -1); //Stadthallen Aufzug Runter2
	CreateDynamic3DTextLabel("{FFFFFF}Aufzug\nBenutze '{FF0000}ENTER{FFFFFF}' um nach unten zu gelangen.", 0x008080FF, 932.6934,-1457.4520,2761.0164, 5.0);	
	
	
	AddStaticPickup(19130, 1, 1564.7876,-1666.4253,28.3956, -1); //LSPD Heli Port Aussen
	CreateDynamic3DTextLabel("{FFFFFF}LSPD\nBenutze '{FF0000}ENTER{FFFFFF}' zum betreten", 0x008080FF, 1564.7876,-1666.4253,28.3956, 5.0);
	AddStaticPickup(19130, 1, 323.6872,1838.8647,2241.5850, -1); //LSPD Heli Port Interior
	CreateDynamic3DTextLabel("{FFFFFF}LSPD Landeplatz\nBenutze '{FF0000}ENTER{FFFFFF}' zum betreten", 0x008080FF, 323.6872,1838.8647,2241.5850, 5.0);
	AddStaticPickup(19130, 1, 1524.4829,-1677.8102,6.2188, -1); //LSPD Garage Eingang
	CreateDynamic3DTextLabel("{FFFFFF}LSPD\nBenutze '{FF0000}ENTER{FFFFFF}' zum betreten", 0x008080FF, 1524.4829,-1677.8102,6.2188, 5.0);
	AddStaticPickup(19130, 1, 330.4257,1842.7358,2241.5850, -1); //LSPD Garage Ausgang
	CreateDynamic3DTextLabel("{FFFFFF}Tiefgarage\nBenutze '{FF0000}ENTER{FFFFFF}' zum betreten", 0x008080FF, 330.4257,1842.7358,2241.5850, 5.0);
	AddStaticPickup(19130, 1, 1554.1569,-1675.6135,16.1953, -1); //LSPD Normaler Eingang
	CreateDynamic3DTextLabel("{FFFFFF}Los Santos Police Department\nBenutze '{FF0000}ENTER{FFFFFF}' zum betreten", 0x008080FF, 1554.1569,-1675.6135,16.1953, 5.0);
	AddStaticPickup(19130, 1, 350.1518,1834.3275,2241.5850, -1); //LSPD Normaler Ausgang
	CreateDynamic3DTextLabel("{FFFFFF}Los Santos Police Department\nBenutze '{FF0000}ENTER{FFFFFF}' zum verlassen", 0x008080FF, 350.1518,1834.3275,2241.5850, 5.0);
	AddStaticPickup(1242, 1, 298.3004,1828.1854,2241.5850, -1);//LSPD Duty & Equip
	CreateDynamic3DTextLabel("{FEFEFE}Benutze die {FF0000}Taste N{FEFEFE} um den Dienst zu betreten/verlassen", 0x008080FF, 298.3004,1828.1854,2241.5850, 5.0);
    AddStaticPickup(1242, 1, 298.3799,1822.3867,2241.5850, -1);//LSPD Skinchange
	CreateDynamic3DTextLabel("{FEFEFE}Benutze die {FF0000}Taste N{FEFEFE} um den Skin zu wechseln", 0x008080FF, 298.3799,1822.3867,2241.5850, 5.0);
	AddStaticPickup(1242, 1, 307.2472,1822.1039,2241.5850, -1);//LSPD SWAT Duty
	CreateDynamic3DTextLabel("{FEFEFE}Benutze die {FF0000}Taste N{FEFEFE} um den S.W.A.T Dienst zu betreten/verlassen", 0x008080FF, 307.2472,1822.1039,2241.5850, 5.0);
	AddStaticPickup(2036, 1, 341.2662,1830.4661,2241.5850, -1);//LSPD Waffenschein
	CreateDynamic3DTextLabel("{FFFFFF}Waffenschein\nBenutze '{FF0000}/waffenschein{FFFFFF}'\num ein Waffenschein zu kaufen", 0x008080FF, 341.2662,1830.4661,2241.5850, 5.0);
 	AddStaticPickup(1247, 1, 339.5168,1830.3673,2241.5850, -1);//LSPD Stellen Icon
	CreateDynamic3DTextLabel("{FFFFFF}Benutze '{FF0000}/stellen{FFFFFF}'\num dich zu stellen", 0x008080FF, 339.5168,1830.3673,2241.5850, 5.0);
	//Ort: San Fierro
	AddStaticPickup(19130, 1, -1594.1666,716.2354,-4.9063, -1); //SFPD Garage Eingang
	CreateDynamic3DTextLabel("{FFFFFF}SFPD\nBenutze '{FF0000}ENTER{FFFFFF}' zum betreten", 0x008080FF, -1594.1666,716.2354,-4.9063, 5.0);
	AddStaticPickup(19130, 1, 213.9759,122.1085,999.0156, -1); //SFPD Garage Ausgang
	CreateDynamic3DTextLabel("{FFFFFF}Tiefgarage\nBenutze '{FF0000}ENTER{FFFFFF}' zum betreten", 0x008080FF, 213.9759,122.1085,999.0156, 5.0);
	AddStaticPickup(19130, 1, -1605.6135,710.8735,13.8672, -1); //SFPD Normaler Eingang
	CreateDynamic3DTextLabel("{FFFFFF}SFPD\nBenutze '{FF0000}ENTER{FFFFFF}' zum betreten", 0x008080FF, -1605.6135,710.8735,13.8672, 5.0);
	AddStaticPickup(19130, 1, 246.4395,107.2980,1003.2188, -1); //SFPD Normaler Ausgang
	CreateDynamic3DTextLabel("{FFFFFF}SFPD\nBenutze '{FF0000}ENTER{FFFFFF}' zum verlassen", 0x008080FF, 246.4395,107.2980,1003.2188, 5.0);
	AddStaticPickup(1242, 1, 231.1223,113.2377,1003.2188, -1);//SFPD Equip & Duty
	CreateDynamic3DTextLabel("{FEFEFE}Benutze die {FF0000}Taste N{FEFEFE} zum equiptieren\nBenutze die {FF0000}Taste N{FEFEFE} um den Dienst zu betreten/verlassen", 0x008080FF, 231.1223,113.2377,1003.2188, 5.0);
 	AddStaticPickup(1581, 1, 252.1846,117.4193,1003.2188, -1);//SFPD Waffenschein
	CreateDynamic3DTextLabel("{FFFFFF}Waffenschein\nBenutze '{FF0000}/waffenschein{FFFFFF}'\num ein Waffenschein zu kaufen", 0x008080FF, 252.1846,117.4193,1003.2188, 5.0);

    //Ort: Las Venturas
	AddStaticPickup(19130, 1, 2282.1255,2423.9487,3.4766, -1); //LVPD Garage Eingang
	CreateDynamic3DTextLabel("{FFFFFF}LVPD\nBenutze '{FF0000}ENTER{FFFFFF}' zum betreten", 0x008080FF, 2282.1255,2423.9487,3.4766, 5.0);
	AddStaticPickup(19130, 1, 238.7352,139.3221,1003.0234, -1); //LVPD Garage Ausgang
	CreateDynamic3DTextLabel("{FFFFFF}Tiefgarage\nBenutze '{FF0000}ENTER{FFFFFF}' zum betreten", 0x008080FF, 238.7352,139.3221,1003.0234, 5.0);
	AddStaticPickup(19130, 1, 2340.2913,2458.3687,14.9688, -1); //LVPD Normaler Eingang
	CreateDynamic3DTextLabel("{FFFFFF}LVPD\nBenutze '{FF0000}ENTER{FFFFFF}' zum betreten", 0x008080FF, 2340.2913,2458.3687,14.9688, 5.0);
	AddStaticPickup(19130, 1, 288.6907,167.7179,1007.1719, -1); //LVPD Normaler Ausgang
	CreateDynamic3DTextLabel("{FFFFFF}LVPD\nBenutze '{FF0000}ENTER{FFFFFF}' zum verlassen", 0x008080FF, 288.6907,167.7179,1007.1719, 5.0);
	AddStaticPickup(1242, 1, 210.4058,185.9881,1003.0313, -1);//LVPD Equip & Duty
	CreateDynamic3DTextLabel("{FEFEFE}Benutze die {FF0000}Taste N{FEFEFE} zum equiptieren\nBenutze die {FF0000}Taste N{FEFEFE} um den Dienst zu betreten/verlassen", 0x008080FF, 210.4058,185.9881,1003.0313, 5.0);
	AddStaticPickup(1581, 1, 292.4972,180.1965,1007.1794, -1);//LVPD Waffenschein
	CreateDynamic3DTextLabel("{FFFFFF}Waffenschein\nBenutze '{FF0000}/waffenschein{FFFFFF}'\num ein Waffenschein zu kaufen", 0x008080FF, 292.4972,180.1965,1007.1794, 5.0);

	//Ort: Dillimore
	AddStaticPickup(19130, 1, 627.3911,-571.7522,17.9145, -1); //Dillimore Normaler Eingang
	CreateDynamic3DTextLabel("{FFFFFF}Dillimore Station\nBenutze '{FF0000}ENTER{FFFFFF}' zum betreten", 0x008080FF, 627.3911,-571.7522,17.9145, 5.0);
	AddStaticPickup(19130, 1, 322.1980,302.4980,999.1484, -1); //Dillimore Normaler Ausgang
	CreateDynamic3DTextLabel("{FFFFFF}Dillimore Station\nBenutze '{FF0000}ENTER{FFFFFF}' zum verlassen", 0x008080FF, 322.1980,302.4980,999.1484, 5.0);
	AddStaticPickup(1242, 1, 327.1490,307.2458,999.1484, -1);//Dillimore Equip & Duty
	CreateDynamic3DTextLabel("{FEFEFE}Benutze die {FF0000}Taste N{FEFEFE} zum equiptieren\nBenutze die {FF0000}Taste N{FEFEFE} um den Dienst zu betreten/verlassen", 0x008080FF, 327.1490,307.2458,999.1484, 5.0);

	//Federal Bureau of Investigation
	AddStaticPickup(19130, 1, -2204.4993,250.6758,35.3366, -1); //FBI Normaler Eingang
	CreateDynamic3DTextLabel("{FFFFFF}FBI\nBenutze '{FF0000}ENTER{FFFFFF}' zum betreten", 0x008080FF, -2204.4993,250.6758,35.3366, 5.0);
	AddStaticPickup(19130, 1, -2457.1377,503.8396,25.0943, -1); //FBI Normaler Ausgang
	CreateDynamic3DTextLabel("{FFFFFF}FBI\nBenutze '{FF0000}ENTER{FFFFFF}' zum verlassen", 0x008080FF, -2457.1377,503.8396,25.0943, 5.0);
	AddStaticPickup(1242, 1, -2469.2332,514.7144,25.0943, -1);//FBI Equip & Duty
	CreateDynamic3DTextLabel("{FEFEFE}Benutze die {FF0000}Taste N{FEFEFE} zum equiptieren\nBenutze die {FF0000}Taste N{FEFEFE} um den Dienst zu betreten/verlassen", 0x008080FF, -2469.2332,514.7144,25.0943, 5.0);
	AddStaticPickup(3096, 1, -2222.7119,265.6810,26.9155, -1); //FBI Repairpoint
	CreateDynamic3DTextLabel("{FF0000}Werkstatt\n{FFFFFF}Benutze '{FF0000}N{FFFFFF}'\num das Fahrzeug zu reparieren", 0x008080FF, -2222.7119,265.6810,26.9155, 10.0);

	//San Andreas Rettungdienst
	AddStaticPickup (19130,1,1650.2196,-1245.3818,15.4659,-1);//Los Santos Krankenhaus Eingang
    CreateDynamic3DTextLabel("{FFFFFF}Krankenhaus\nBenutze '{FF0000}ENTER{FFFFFF}' zum betreten", 0x008080FF, 1650.2196,-1245.3818,15.4659, 5.0);
   	AddStaticPickup (19130,1,1171.0063,-1323.0872,-0.8598,-1);//Los Santos Krankenhaus Ausgang
    CreateDynamic3DTextLabel("{FFFFFF}Benutze '{FF0000}ENTER{FFFFFF}' zum verlassen", 0x008080FF, 1171.0063,-1323.0872,-0.8598, 5.0);
   	AddStaticPickup (19130,1,1644.9175,-1230.3513,21.1381,-1);//Los Santos Krankenhaus Heli Eingang
    CreateDynamic3DTextLabel("{FFFFFF}Krankenhaus\nBenutze '{FF0000}ENTER{FFFFFF}' zum betreten", 0x008080FF, 1644.9175,-1230.3513,21.1381, 5.0);
   	AddStaticPickup (19130,1,1161.4039,-1316.7357,-0.8598,-1);//Los Santos Krankenhaus Heli Ausgang
    CreateDynamic3DTextLabel("{FFFFFF}Landeplatz\nBenutze '{FF0000}ENTER{FFFFFF}' zum verlassen", 0x008080FF, 1161.4039,-1316.7357,-0.8598, 5.0);
	AddStaticPickup(1242, 1, 1164.5529,-1335.2123,-0.8598, -1);//Krankenhaus Equip & Duty
	CreateDynamic3DTextLabel("{FEFEFE}Benutze die {FF0000}Taste N{FEFEFE} zum equiptieren\nBenutze die {FF0000}Taste N{FEFEFE} um den Dienst zu betreten/verlassen", 0x008080FF, 1164.5529,-1335.2123,-0.8598, 5.0);

	//San Andreas News 1
	AddStaticPickup (19130,1,648.4459,-1353.8932,13.5470,-1);//Los Santos San News Eingang
    CreateDynamic3DTextLabel("{FFFFFF}News Base\nBenutze '{FF0000}ENTER{FFFFFF}' zum betreten", 0x008080FF,648.4459,-1353.8932,13.5470, 5.0);
   	AddStaticPickup (19130,1,1411.0062,-10.9561,1006.7496,-1);//Los Santos San News Ausgang
    CreateDynamic3DTextLabel("{FFFFFF}Hauptstraße\n{FFFFFF}Benutze '{FF0000}ENTER{FFFFFF}' zum verlassen", 0x008080FF, 1411.0062,-10.9561,1006.7496, 5.0);
	AddStaticPickup (19130,1,733.4227,-1349.4966,13.5074,-1);//Los Santos San News Eingang
    CreateDynamic3DTextLabel("{FFFFFF}News Base\nBenutze '{FF0000}ENTER{FFFFFF}' zum betreten", 0x008080FF, 733.4227,-1349.4966,13.5074, 5.0);
   	AddStaticPickup (19130,1,1402.4045,-6.3101,1006.7496,-1);//Los Santos San Nes Ausgang
    CreateDynamic3DTextLabel("{FFFFFF}Hof\n{FFFFFF}Benutze '{FF0000}ENTER{FFFFFF}' zum verlassen", 0x008080FF, 1402.4045,-6.3101,1006.7496, 5.0);
   	AddStaticPickup(1242, 1, 1407.0212,-23.3379,1010.3594, -1);//San News Equip & Duty
	CreateDynamic3DTextLabel("{FEFEFE}Benutze die {FF0000}Taste N{FEFEFE} zum equiptieren\nBenutze die {FF0000}Taste N{FEFEFE} um den Dienst zu betreten/verlassen", 0x008080FF, 1407.0212,-23.3379,1010.3594, 5.0);

	//San News Lottoscheinausgabe
	AddStaticPickup (19130,1,648.5452,-1360.5887,13.5873,-1);//Los Santos Lottoscheinausgabe Eingang
    CreateDynamic3DTextLabel("{FFFFFF}Lotto\nBenutze '{FF0000}ENTER{FFFFFF}' zum betreten", 0x008080FF, 648.5452,-1360.5887,13.5873, 5.0);
   	AddStaticPickup (19130,1,834.1218,7.3493,1004.1870,-1);//Los Santos Lottoscheinausgabe Ausgang
    CreateDynamic3DTextLabel("{FFFFFF}Benutze '{FF0000}ENTER{FFFFFF}' zum verlassen", 0x008080FF, 834.1218,7.3493,1004.1870, 5.0);

    //International Contract Agency
   	AddStaticPickup (19130,1,1566.8313,23.2738,24.1641,-1);//International Contract Agency Eingang
    CreateDynamic3DTextLabel("{FFFFFF}Benutze '{FF0000}ENTER{FFFFFF}' zum betreten", 0x008080FF, 1566.8313,23.2738,24.1641, 5.0);
   	AddStaticPickup (19130,1,-2158.6436,642.9801,1052.3750,-1);//International Contract Agency Ausgang
    CreateDynamic3DTextLabel("{FFFFFF}Benutze '{FF0000}ENTER{FFFFFF}' zum verlassen", 0x008080FF, -2158.6436,642.9801,1052.3750, 5.0);

	//Hotdog Verkäufer
    AddStaticPickup(2769, 1, 1109.5526,-1606.4170,20.5347, -1);
	Create3DTextLabel("{FFFFFF}Guten Tag!\nWollen sie einen Hotdog für $ 25,-?\nBenutze '{FF0000}TASTE N{FFFFFF}' oder '{FF0000}/hotdogkaufen{FFFFFF}'", 0x008080FF, 843.5143,-1746.0594,13.5899, 10.0, 0, false);

	//CreateDynamic3DTextLabel(COLOR_HEX_YELLOW"Starterpack\n"COLOR_HEX_WHITE"Tippe /Starterpack", COLOR_WHITE, 839.6967,-1734.4006,13.5698, 8.0);
    //CreateDynamicPickup(1274, 1,  839.6967,-1734.4006,13.5698, 0);

    //Spezial - Missionen
   	ImportCarPickup = CreatePickup (1210,2,-2433.4509,2313.6296,4.9844,-1);//Importfahrzeug - Bayside
    CreateDynamic3DTextLabel("{FFFFFF}Spezial Mission:\n{FB944F}Importfahrzeug der Stunde", 0x008080FF, -2433.4509,2313.6296,4.9844, 10.0);
   	KurrierPickup[0] = CreatePickup (1210,2,777.7709,-1016.0993,26.3594,-1);//Kurrierdienst - Los Santos
    CreateDynamic3DTextLabel("{FFFFFF}Spezial Mission:\n{FB944F}Kurrierdienst", 0x008080FF, 777.7709,-1016.0993,26.3594, 10.0);
   	KurrierPickup[1] = CreatePickup (1210,2,-939.4828,1425.3187,30.4340,-1);//Kurrierdienst - Fort Carson
    CreateDynamic3DTextLabel("{FFFFFF}Spezial Mission:\n{FB944F}Kurrierdienst", 0x008080FF, -939.4828,1425.3187,30.4340, 10.0);
   	KurrierPickup[2] = CreatePickup (1210,2,2300.5251,1928.7410,10.8440,-1);//Kurrierdienst - Las Venturas
    CreateDynamic3DTextLabel("{FFFFFF}Spezial Mission:\n{FB944F}Kurrierdienst", 0x008080FF, 2300.5251,1928.7410,10.8440, 10.0);

    //Neon - Garage
   	AddStaticPickup (1274,1,1569.3154,-2154.8662,14.0352,-1);//Neon Punkt
    CreateDynamic3DTextLabel("{FF0000}Neon Shop\n{FFFFFF}Benutze die '{FF0000}Taste N{FFFFFF}'\num den Neon Shop zu öffnen", 0x008080FF, 1569.3154,-2154.8662,14.0352, 5.0);

    //Materialien System - Gang/Mafien
   	AddStaticPickup (1239,1,1083.0126,-1226.7549,15.8203,-1);//Materialien Punkt
    CreateDynamic3DTextLabel("{FF0000}Materialien\n{FFFFFF}Benutze '{FF0000}/mats{FFFFFF}'\num dir Materialien zu holen", 0x008080FF, 1083.0126,-1226.7549,15.8203, 5.0);
   	AddStaticPickup (1239,1,-1826.3789,42.1302,15.1228,-1);//Waffenteile Punkt
    CreateDynamic3DTextLabel("{FF0000}Materialien Changer\n{FFFFFF}Benutze '{FF0000}/waffenteile{FFFFFF}'\num die Materialien zu wechseln", 0x008080FF, -1826.3789,42.1302,15.1228, 5.0);

	for(new ltm=0; ltm<sizeof(LTMs); ltm++)
 	{
 	    AddStaticPickup(1274, 1, LTMs[ltm][0],LTMs[ltm][1],LTMs[ltm][2], -1);
 	    CreateDynamic3DTextLabel("{FFFFFF}Lottoschein {FF0000}120$\n{FFFFFF}Benutze '{FF0000}N' {FFFFFF}oder {FF0000}'/lotto [0-9] [0-9] [0-9]{FFFFFF}", 0x008080FF, LTMs[ltm][0],LTMs[ltm][1],LTMs[ltm][2], 10.0);
 	}

	//Gangs
	AddStaticPickup(19130, 1, 2495.2358,-1690.7219,14.7656, -1); //Grove Street Eingang
	CreateDynamic3DTextLabel("{FFFFFF}Grove Street Families\nBenutze '{FF0000}ENTER{FFFFFF}' zum betreten", 0x008080FF, 2495.2358,-1690.7219,14.7656, 10.0);
	AddStaticPickup(19130, 1, 1999.8800,-1114.5149,27.1250, -1); //Ballas Eingang
	CreateDynamic3DTextLabel("{FFFFFF}Rolling High Ballas\nBenutze '{FF0000}ENTER{FFFFFF}' zum betreten", 0x008080FF, 1999.8800,-1114.5149,27.1250, 10.0);
	AddStaticPickup(19130, 1, 2549.6614,-1032.2898,69.5789, -1); //Vagos Eingang
	CreateDynamic3DTextLabel("{FFFFFF}Los Santos Vagos\nBenutze '{FF0000}ENTER{FFFFFF}' zum betreten", 0x008080FF, 2549.6614,-1032.2898,69.5789, 10.0);
	AddStaticPickup(19130, 1, 2508.2561,-1998.5865,13.9025, -1); //Aztecas Eingang
	CreateDynamic3DTextLabel("{FFFFFF}Los Aztecas\nBenutze '{FF0000}ENTER{FFFFFF}' zum betreten", 0x008080FF, 2508.2561,-1998.5865,13.9025, 10.0);
	AddStaticPickup(19130, 1, -2462.7795,132.3849,35.1719, -1); //Rifa Eingang
	CreateDynamic3DTextLabel("{FFFFFF}San Fierro Rifa\nBenutze '{FF0000}ENTER{FFFFFF}' zum betreten", 0x008080FF, -2462.7795,132.3849,35.1719, 10.0);
	AddStaticPickup(19130, 1, 725.6343,-1439.8298,13.5318, -1); //Triads Eingang
	CreateDynamic3DTextLabel("{FFFFFF}Triaden\nBenutze '{FF0000}ENTER{FFFFFF}' zum betreten", 0x008080FF, 725.6343,-1439.8298,13.5318, 10.0);
	AddStaticPickup(19130, 1, 255.1670,-1366.6371,53.1094, -1); //Yakuza Eingang
	Create3DTextLabel("{FFFFFF}Yakuza\nBenutze '{FF0000}ENTER{FFFFFF}' zum betreten", 0x008080FF, 255.1670,-1366.6371,53.1094, 10.0, 0, false);
	AddStaticPickup(19130, 1, 1447.6503,362.0286,18.9134, -1); //Camorra
	CreateDynamic3DTextLabel("{FFFFFF}Camorra\nBenutze '{FF0000}ENTER{FFFFFF}' zum betreten", 0x008080FF, 1447.6503,362.0286,18.9134, 10.0);
	AddStaticPickup(19130, 1, 985.9162,2000.5089,11.4609, -1); //Italian Mafia
	CreateDynamic3DTextLabel("{FFFFFF}La Cosa Nostra\nBenutze '{FF0000}ENTER{FFFFFF}' zum betreten", 0x008080FF, 985.9162,2000.5089,11.4609, 10.0);
	AddStaticPickup(19130, 1, 300.3455,-1154.5532,81.3910, -1); //Russen Mafia
	CreateDynamic3DTextLabel("{FFFFFF}Russian Mafia\nBenutze '{FF0000}ENTER{FFFFFF}' zum betreten", 0x008080FF, 300.3455,-1154.5532,81.3910, 10.0);
	AddStaticPickup(19130, 1, 2495.9895,-1692.4834,1014.7422, -1); //Gangbase Ausgang
	CreateDynamic3DTextLabel("{FFFFFF}Gangbase\nBenutze '{FF0000}ENTER{FFFFFF}' zum verlassen", 0x008080FF, 2495.9895,-1692.4834,1014.7422, 10.0);
	//Autohaus - Los Santos
	AddStaticPickup(1274, 1, 1864.6090,-1598.8942,13.6107, -1);
	CreateDynamic3DTextLabel("{FFFFFF}Autohaus [ID:{FF0000}1{FFFFFF}]\nBenutze '{FF0000}N' {FFFFFF}oder {FF0000}'/autohaus{FFFFFF}' um dir\nein Fahrzeug zu kaufen", 0x008080FF, 1864.6090,-1598.8942,13.6107, 7.5);

	//Motorradhändler - Los Santos
	AddStaticPickup(1274, 1, 1811.1904,-1398.9595,13.6169, -1);
	CreateDynamic3DTextLabel("{FFFFFF}Motorradhändler [ID:{FF0000}2{FFFFFF}]\nBenutze '{FF0000}N' {FFFFFF}oder {FF0000}'/autohaus{FFFFFF}' um dir\nein Fahrzeug zu kaufen", 0x008080FF, 1811.1904,-1398.9595,13.6169, 7.5);

	//Autohaus - San Fierro
	AddStaticPickup(1274, 1, -1538.5326,1161.8965,7.1947, -1);
	CreateDynamic3DTextLabel("{FFFFFF}Autohaus [ID:{FF0000}3{FFFFFF}]\nBenutze '{FF0000}N' {FFFFFF}oder {FF0000}'/autohaus{FFFFFF}' um dir\nein Fahrzeug zu kaufen", 0x008080FF, -1538.5326,1161.8965,7.1947, 7.5);

	//Bootautohaus - Los Santos
	AddStaticPickup(1274, 1, 2938.4565,-2056.2478,3.5650, -1);
	CreateDynamic3DTextLabel("{FFFFFF}Boothändler [ID:{FF0000}5{FFFFFF}]\nBenutze '{FF0000}N' {FFFFFF}oder {FF0000}'/autohaus{FFFFFF}' um dir\nein Fahrzeug zu kaufen", 0x008080FF, 2938.4565,-2056.2478,3.5650, 7.5);


	//Flugzeug Autohaus - Los Santos
    AddStaticPickup(1274, 1, 595.3383,-1510.0638,15.1829, -1);
	CreateDynamic3DTextLabel("{FFFFFF}Flugzeug Autohaus [ID:{FF0000}4{FFFFFF}]\nBenutze '{FF0000}N' {FFFFFF}oder {FF0000}'/autohaus{FFFFFF}' um dir\nein Flugzeug zu kaufen", 0x008080FF, 595.3383,-1510.0638,15.1829, 7.5);


	//Schwarzmarkt
	AddStaticPickup(1239, 1, -1634.1162,-2241.6426,31.4766, -1);
	CreateDynamic3DTextLabel("{FFFFFF}Schwarzmarkt\nBenutze '{FF0000}TASTE N{FFFFFF}' oder '{FF0000}/schwarzmarkt{FFFFFF}'\num Emilio anzusprechen", 0x008080FF, -1634.1162,-2241.6426,31.4766, 10.0);


	//redv-reallife.de Reloaded - Banksystem
	AddStaticPickup(1274, 1, 1778.7935,-1703.7747,13.5609, -1); // Bank LS - Menu 1
	CreateDynamic3DTextLabel("{FFFFFF}Bankschalter: 1\nBenutze '{FF0000}N' {FFFFFF}oder {FF0000}'/bank{FFFFFF}'", 0x008080FF, 1778.7935,-1703.7747,13.5609, 10.0);
	AddStaticPickup(1274, 1, 1780.3076,-1703.8090,13.5629, -1); // Bank LS - Menu 2
	CreateDynamic3DTextLabel("{FFFFFF}Bankschalter: 2\nBenutze '{FF0000}N' {FFFFFF}oder {FF0000}'/bank{FFFFFF}'", 0x008080FF, 1780.3076,-1703.8090,13.5629, 10.0);
	AddStaticPickup(1274, 1, 1790.4467,-1710.6276,13.5489, -1); // Bank LS - Gesamtbetrag auszahlen
	CreateDynamic3DTextLabel("{FFFFFF}Bankschalter: 3\nBenutze '{FF0000}N' {FFFFFF}oder {FF0000}'/gesamtbetrag{FFFFFF}'", 0x008080FF, 1790.4467,-1710.6276,13.5489, 10.0);

	//24/7 | Tankstelle
 	AddStaticPickup(19130, 1, 6.091179,-29.271898,1003.549438, -1);
	CreateDynamic3DTextLabel("{FFFFFF}Benutze '{FF0000}ENTER{FFFFFF}' zum verlassen", 0x008080FF, 6.091179,-29.271898,1003.549438,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,-1,10,-1,100.0);

    //Ammunation
 	AddStaticPickup(19130, 1, 286.148986,-40.644397,1001.515625, -1);
	CreateDynamic3DTextLabel("{FFFFFF}Benutze '{FF0000}ENTER{FFFFFF}' zum verlassen", 0x008080FF, 286.148986,-40.644397,1001.515625,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,-1,1,-1,100.0);
	AddStaticPickup(1274, 1, 295.7924,-38.2544,1001.5156, -1);
	CreateDynamic3DTextLabel("{FFFFFF}Benutze '{FF0000}/buygun{FFFFFF}'\num dir eine Waffe zu kaufen", 0x008080FF, 295.7924,-38.2544,1001.5156,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,-1,1,-1,100.0);

   	//24/7
 	AddStaticPickup(19130, 1, -25.9209,-141.0923,1003.5469, -1);
	CreateDynamic3DTextLabel("{FFFFFF}Benutze '{FF0000}ENTER{FFFFFF}' zum verlassen", 0x008080FF, -25.9209,-141.0923,1003.5469,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,-1,16,-1,100.0);
	AddStaticPickup(1274, 1, -22.1672,-138.5988,1003.5469, -1);
	CreateDynamic3DTextLabel("{FFFFFF}Kasse\nBenutze '{FF0000}N' {FFFFFF}oder {FF0000}'/einkaufen{FFFFFF}'\num einzukaufen", 0x008080FF, -22.1672,-138.5988,1003.5469,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,-1,16,-1,100.0);

	//Trucker Job - Los Santos
	AddStaticPickup(1275, 1, 2132.3325,-2282.8867,20.6719, -1); //Duty
	CreateDynamic3DTextLabel("{FFFFFF}Benutze '{FF0000}N' {FFFFFF}oder {FF0000}'/jduty{FFFFFF}' um den Dienst zu starten", 0x008080FF, 2132.3325,-2282.8867,20.6719, 10.0);

	//Zugfahrer Job - Los Santos
	AddStaticPickup(1275, 1, 1747.0460,-1944.3030,13.5671, -1); //Duty
	CreateDynamic3DTextLabel("{FFFFFF}Benutze '{FF0000}N' {FFFFFF}oder {FF0000}'/jduty{FFFFFF}' um den Dienst zu starten", 0x008080FF, 1747.0460,-1944.3030,13.5671, 10.0);

	//Pizzabote Los Santos
	AddStaticPickup(19130, 1, 2104.8403,-1806.5245,13.5547, -1); //Pizzaria Eingang Icon
	CreateDynamic3DTextLabel("{FFFFFF}Benutze '{FF0000}Enter{FFFFFF}' um die Pizzaria zu betreten", 0x008080FF, 2104.8403,-1806.5245,13.5547, 10.0);
	AddStaticPickup(19130, 1, 372.3678,-133.3004,1001.4922, -1); //Pizzaria Ausgang Icon
	CreateDynamic3DTextLabel("{FFFFFF}Benutze '{FF0000}Enter{FFFFFF}' um die Pizzaria zu Verlassen", 0x008080FF, 372.3678,-133.3004,1001.4922, 10.0);
	AddStaticPickup(1582, 1, 379.7354,-116.4596,1001.4922, -1); //Pizzaria Pizza Icon
	CreateDynamic3DTextLabel("{FFFFFF}Benutze '{FF0000}N{FFFFFF}' oder '{FF0000}/pizza{FFFFFF}'\num Pizzen zu nehmen", 0x008080FF, 379.7354,-116.4596,1001.4922, 10.0);
	AddStaticPickup(1275, 1, 369.0709,-114.6389,1001.4995, -1); //Duty
	CreateDynamic3DTextLabel("{FFFFFF}Benutze '{FF0000}N' {FFFFFF}oder {FF0000}'/jduty{FFFFFF}' um den Dienst zu starten", 0x008080FF, 369.0709,-114.6389,1001.4995, 10.0);

	//Kehrmaschinenfahrer Job - Los Santos
	AddStaticPickup(1275, 1, 1378.4637,-1640.7590,13.5469, -1); //Duty
	CreateDynamic3DTextLabel("{FFFFFF}Benutze '{FF0000}N' {FFFFFF}oder {FF0000}'/jduty{FFFFFF}' um den Dienst zu starten", 0x008080FF, 1378.4637,-1640.7590,13.5469, 10.0);

	//Pilot Job - Los Santos
	AddStaticPickup(1275, 1, 1957.0295,-2183.6008,13.5469, -1); //Duty
	CreateDynamic3DTextLabel("{FFFFFF}Benutze '{FF0000}N' {FFFFFF}oder {FF0000}'/jduty{FFFFFF}' um den Dienst zu starten", 0x008080FF, 1957.0295,-2183.6008,13.5469, 10.0);

	//Busfahrer Job - Los Santos
	AddStaticPickup(1275, 1, 1523.1068,-2325.8340,13.5469, -1); //Duty
	CreateDynamic3DTextLabel("{FFFFFF}Benutze '{FF0000}N' {FFFFFF}oder {FF0000}'/jduty{FFFFFF}' um den Dienst zu starten", 0x008080FF, 1523.1068,-2325.8340,13.5469, 10.0);

	//Müllmann Job - Los Santos
	AddStaticPickup(1275, 1, 1734.5929,-2060.1526,13.5910, -1); //Duty
	CreateDynamic3DTextLabel("{FFFFFF}Benutze '{FF0000}N' {FFFFFF}oder {FF0000}'/jduty{FFFFFF}' um den Dienst zu starten", 0x008080FF, 1734.5929,-2060.1526,13.5910, 10.0);

	//Landwirt Job - Los Santos
	AddStaticPickup(1275, 1, -62.7901,76.2742,3.1172, -1); //Duty
	CreateDynamic3DTextLabel("{FFFFFF}Benutze '{FF0000}N' {FFFFFF}oder {FF0000}'/jduty{FFFFFF}' um den Dienst zu starten", 0x008080FF, -62.7901,76.2742,3.1172, 10.0);

	//Geldlieferant Job - Los Santos
	AddStaticPickup(1275, 1, 1789.3868,-1706.7506,13.5509, -1); //Duty
	CreateDynamic3DTextLabel("{FFFFFF}Benutze '{FF0000}N' {FFFFFF}oder {FF0000}'/jduty{FFFFFF}' um den Dienst zu starten", 0x008080FF, 1789.3868,-1706.7506,13.5509, 10.0);

	//Elektriker Job - Los Santos
	AddStaticPickup(1275, 1, 2147.0122,-1733.2238,13.5624, -1); //Duty
	CreateDynamic3DTextLabel("{FFFFFF}Benutze '{FF0000}N' {FFFFFF}oder {FF0000}'/jduty{FFFFFF}' um den Dienst zu starten", 0x008080FF, 2147.0122,-1733.2238,13.5624, 10.0);

	//Automatische Fahrschule Los Santos
	AddStaticPickup(19130, 1, 2114.9937,-1930.7943,13.3838, -1); //Eingang Automatische Fahrschule   2114.9937,-1930.7943,13.3838
	CreateDynamic3DTextLabel("{FFFFFF}Fahrschule\nBenutze '{FF0000}Enter{FFFFFF}'\num die Fahrschule zu betreten.", 0x008080FF, 2114.9937,-1930.7943,13.3838, 10.0);
	AddStaticPickup(19130, 1, 2118.8218,-3891.2322,819.6503, -1); //Ausgang Automatische Fahrschule
	CreateDynamic3DTextLabel("{FFFFFF}Benutze '{FF0000}Enter{FFFFFF}'\num die Fahrschule zu verlassen.", 0x008080FF, 2118.8218,-3891.2322,819.6503, 10.0);
	AddStaticPickup(1581, 1, 2109.6850, -3883.6213, 819.8867, -1); //Prüfung Icon
	CreateDynamic3DTextLabel("{FFFFFF}Benutze '{FF0000}/fahrschule{FFFFFF}' oder '{FF0000}TASTE N'", 0x008080FF, 2109.6850, -3883.6213, 819.8867, 20.0);

	//Bankrob Los Santos
	AddStaticPickup(1274, 1, 1773.3085,-1699.7356,13.5509, -1); //Bankrob Icon
	CreateDynamic3DTextLabel("{FFFFFF}Benutze '{FF0000}/bankrob{FFFFFF}' um die Bank auszurauben", 0x008080FF, 1773.3085,-1699.7356,13.5509, 10.0);

	//Fraktionskiste
	CreateDynamic3DTextLabel("{FFFFFF}Benutze '{FF0000}N' {FFFFFF}oder {FF0000}'/kiste{FFFFFF}' um Waffen zunehmen.", 0x008080FF, 2493.24243, -1707.50134, 1015.58276, 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,-1,3,-1,100.0);

	//BSN + Cluckin Bell Bestellung-Point
	AddStaticPickup(1274, 1, 377.0177,-67.6665,1001.5151, -1); //BSN Bestellung Icon
	CreateDynamic3DTextLabel("{FFFFFF}Benutze '{FF0000}N' {FFFFFF}oder {FF0000}'/bestellen{FFFFFF}'\num dir etwas Essen zu bestellen", 0x008080FF, 377.0177,-67.6665,1001.5151, 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,10,-1,5.0);
	AddStaticPickup(1274, 1, 369.4442,-6.2557,1001.8516, -1); //Cluckin Bell Bestellung Icon
	CreateDynamic3DTextLabel("{FFFFFF}Benutze '{FF0000}N' {FFFFFF}oder {FF0000}'/bestellen{FFFFFF}'\num dir etwas Essen zu bestellen", 0x008080FF, 377.0177,-67.6665,1001.5151, 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,-1,9,-1,5.0);
    AddStaticPickup(1274, 1, 1212.6414,-904.0792,42.9244, -1); //BSN Drive-In Icon
	CreateDynamic3DTextLabel("{FFFFFF}Benutze '{FF0000}/bestellen' \n{FFFFFF}um im Drive-In zu bestellen", 0x008080FF, 1212.6414,-904.0792,42.9244, 5.0);

	//Paintball - Los Santos
	AddStaticPickup(19130, 1, 1024.1505,-983.4423,42.6440, -1); //Eingang Paintballarena
	CreateDynamic3DTextLabel("{FFFFFF}Paintballarena\nBenutze '{FF0000}Enter{FFFFFF}'\num die Paintballarena zu betreten.\nEintritt: {FF0000}250$", 0x008080FF, 1024.1505,-983.4423,42.6440, 10.0);

	//Fallschirm - Los Santos
	FallschirmPickup = CreatePickup(1310,2,1544.4348,-1353.2225,329.4745); // Fallschirm Punkt
	AddStaticPickup(19130, 1, 1570.7537,-1337.1708,16.4844, -1); //Eingang Fallschirm springen
	CreateDynamic3DTextLabel("{FFFFFF}Fallschirm springen\nBenutze '{FF0000}Enter{FFFFFF}'\nzum betreten", 0x008080FF, 1570.7537,-1337.1708,16.4844, 10.0);
	AddStaticPickup(19130, 1, 1548.5597,-1364.1962,326.2183, -1); //Ausgang Fallschirm springen
	CreateDynamic3DTextLabel("{FFFFFF}Ausgang\nBenutze '{FF0000}Enter{FFFFFF}'\nzum verlassen", 0x008080FF, 1548.5597,-1364.1962,326.2183, 10.0);

	//Los Santos Zivispawn - Labels & Icons
	AddStaticPickup(1239, 1, 834.5435, -1750.6958, 13.0305, -1); //Rollerverleih
	CreateDynamic3DTextLabel("{FFFFFF}Rollerverleih\nBenutze '{FF0000}/roller{FFFFFF}'\num dir einen Roller zu leihen", 0x008080FF, 834.5435, -1750.6958, 13.0305, 10.0);

	//Rollerverleih Interglobal Television
    AddStaticPickup(1239, 1, 645.2800,-1345.7362,13.5469, -1); //Rollerverleih
	CreateDynamic3DTextLabel("{FFFFFF}Rollerverleih\nBenutze '{FF0000}/roller{FFFFFF}'\num dir einen Roller zu leihen", 0x008080FF, 645.2800,-1345.7362,13.5469, 10.0);

	//Mautstationen
	AddStaticPickup(1274, 1, 1730.1222,520.3935,28.2204, -1); //LV-LS
	CreateDynamic3DTextLabel("{FFFFFF}Mautstation\nBenutze die'{FF0000}TASTE N{FFFFFF}'\num die Maut zu bezahlen\nKosten: {FF0000}150$", 0x008080FF, 1730.1222,520.3935,28.2204, 10.0);
	AddStaticPickup(1274, 1, 1743.9443,515.8735,28.2149, -1); //LS-LV
	CreateDynamic3DTextLabel("{FFFFFF}Mautstation\nBenutze die'{FF0000}TASTE N{FFFFFF}'\num die Maut zu bezahlen\nKosten: {FF0000}150$", 0x008080FF, 1743.9443,515.8735,28.2149, 10.0);
	AddStaticPickup(1274, 1, 56.1354,-1525.3245,4.9989, -1); //LS-SF
	CreateDynamic3DTextLabel("{FFFFFF}Mautstation\nBenutze die'{FF0000}TASTE N{FFFFFF}'\num die Maut zu bezahlen\nKosten: {FF0000}150$", 0x008080FF, 56.1354,-1525.3245,4.9989, 10.0);
	AddStaticPickup(1274, 1, 49.5451,-1538.1730,5.1519, -1); //SF-LS
	CreateDynamic3DTextLabel("{FFFFFF}Mautstation\nBenutze die'{FF0000}TASTE N{FFFFFF}'\num die Maut zu bezahlen\nKosten: {FF0000}150$", 0x008080FF, 49.5451,-1538.1730,5.1519, 10.0);
	AddStaticPickup(1274, 1, 26.1980,-1338.1219,10.1589, -1); // SFTunnel - LSTunnel
	CreateDynamic3DTextLabel("{FFFFFF}Mautstation\nBenutze die'{FF0000}TASTE N{FFFFFF}'\num die Maut zu bezahlen\nKosten: {FF0000}150$", 0x008080FF, 26.1980,-1338.1219,10.1589, 10.0);
	AddStaticPickup(1274, 1, -1.1519,-1323.5649,11.2628, -1); // LSTunnel - SFTunnel
	CreateDynamic3DTextLabel("{FFFFFF}Mautstation\nBenutze die'{FF0000}TASTE N{FFFFFF}'\num die Maut zu bezahlen\nKosten: {FF0000}150$", 0x008080FF, -1.1519,-1323.5649,11.2628, 10.0);
	AddStaticPickup(1274, 1, 523.5012,469.5414,18.9297, -1); // LS - LV
	CreateDynamic3DTextLabel("{FFFFFF}Mautstation\nBenutze die'{FF0000}TASTE N{FFFFFF}'\num die Maut zu bezahlen\nKosten: {FF0000}150$", 0x008080FF, 523.5012,469.5414,18.9297, 10.0);
	AddStaticPickup(1274, 1, 518.9169,475.9107,18.9297, -1); // LV - LS
	CreateDynamic3DTextLabel("{FFFFFF}Mautstation\nBenutze die'{FF0000}TASTE N{FFFFFF}'\num die Maut zu bezahlen\nKosten: {FF0000}150$", 0x008080FF, 518.9169,475.9107,18.9297, 10.0);

	//Bomben System
	AddStaticPickup(1252, 1, 268.67346, 1883.53430, -30.26508, -1); //Bombe
	CreateDynamic3DTextLabel("{FFFFFF}Bombe\nBenutze die'{FF0000}TASTE N{FFFFFF}'\num eine Bombe zu stehlen", 0x008080FF, 268.67346, 1883.53430, -30.26508, 10.0);

	//Victim - Los Santos
	AddStaticPickup(19130, 1, 461.4087,-1500.8523,31.0597, -1); //Eingang
	CreateDynamic3DTextLabel("{FFFFFF}Victim\nBenutze '{FF0000}ENTER{FFFFFF}' zum betreten", 0x008080FF, 461.4087,-1500.8523,31.0597, 10.0);
	AddStaticPickup(19130, 1, 227.4834,-8.1822,1002.2109, -1); //Ausgang
	CreateDynamic3DTextLabel("{FFFFFF}Ausgang\nBenutze '{FF0000}ENTER{FFFFFF}' zum verlassen", 0x008080FF, 227.4834,-8.1822,1002.2109, 10.0);
 	AddStaticPickup(1275, 1, 206.3749,-8.0665,1001.2109, -1);//Kaufen Pickup
	CreateDynamic3DTextLabel("{FFFFFF}Klamotten\nBenutze '{FF0000}/klamotten{FFFFFF}'\num dir neue Kleidung zu kaufen", 0x008080FF, 206.3749,-8.0665,1001.2109, 5.0);

	//Obi Baumarkt - Los Santos
	CreateDynamic3DTextLabel("{FFFFFF}OBI Baumarkt\nBenutze '{FF0000}/baumarkt{FFFFFF}' {FFFFFF}' oder '{FF0000}TASTE N'{FFFFFF}\num einzukaufen",0x008080FF,2532.0051,-1519.2444,24.1094,5.0);
	AddStaticPickup(18635,1,2532.0051,-1519.2444,24.1094,0);
	//Gym - Los Santos
	AddStaticPickup(1274, 1, 756.8801,5.5222,1000.7000, -1); //Kauf Icon
	CreateDynamic3DTextLabel("{FFFFFF}Benutze '{FF0000}/kampfstyles{FFFFFF}' oder '{FF0000}TASTE N'", 0x008080FF, 756.8801,5.5222,1000.7000, 10.0);

 	//Gym - San Fierro
 	AddStaticPickup(19130, 1, -2270.2954,-155.9197,35.3203, -1); //Eingang
	CreateDynamic3DTextLabel("{FFFFFF}Gym\nBenutze '{FF0000}Enter{FFFFFF}'\num das Gym zu betreten.", 0x008080FF, -2270.2954,-155.9197,35.3203, 10.0);
	AddStaticPickup(19130, 1, 774.1077,-50.3713,1000.5859, -1); //Ausgang
	CreateDynamic3DTextLabel("{FFFFFF}Benutze '{FF0000}Enter{FFFFFF}'\num das Gym zu verlassen.", 0x008080FF, 774.1077,-50.3713,1000.5859, 10.0);
	AddStaticPickup(1274, 1, 768.1483,-37.2912,1000.6865, -1); //Kauf Icon
	CreateDynamic3DTextLabel("{FFFFFF}Benutze '{FF0000}/kampfstyles{FFFFFF}' oder '{FF0000}TASTE N'", 0x008080FF, 768.1483,-37.2912,1000.6865, 20.0);

 	//Gym - Las Venturas
 	AddStaticPickup(19130, 1, 1968.8300,2295.7092,16.4559, -1); //Eingang
	CreateDynamic3DTextLabel("{FFFFFF}Gym\nBenutze '{FF0000}Enter{FFFFFF}'\num das Gym zu betreten.", 0x008080FF, 1968.8300,2295.7092,16.4559, 10.0);
	AddStaticPickup(19130, 1, 773.8901,-78.5057,1000.6623, -1); //Ausgang
	CreateDynamic3DTextLabel("{FFFFFF}Benutze '{FF0000}Enter{FFFFFF}'\num das Gym zu verlassen.", 0x008080FF, 773.8901,-78.5057,1000.6623, 10.0);
	AddStaticPickup(1274, 1, 774.9591,-62.3417,1000.7184, -1); //Kauf Icon
	CreateDynamic3DTextLabel("{FFFFFF}Benutze '{FF0000}/kampfstyles{FFFFFF}' oder '{FF0000}TASTE N'", 0x008080FF, 774.9591,-62.3417,1000.7184, 20.0);

	//TextDraws - redv-reallife.de Reloaded
	PaybackCardTD[0] = TextDrawCreate(440.000000, 350.000000, "~r~");
	TextDrawBackgroundColour(PaybackCardTD[0], 255);
	TextDrawFont(PaybackCardTD[0], TEXT_DRAW_FONT_1);
	TextDrawLetterSize(PaybackCardTD[0], 0.500000, 7.000000);
	TextDrawColour(PaybackCardTD[0], -1);
	TextDrawSetOutline(PaybackCardTD[0], 0);
	TextDrawSetProportional(PaybackCardTD[0], true);
	TextDrawSetShadow(PaybackCardTD[0], 1);
	TextDrawUseBox(PaybackCardTD[0], true);
	TextDrawBoxColour(PaybackCardTD[0], -1);
	TextDrawTextSize(PaybackCardTD[0], 320.000000, 0.000000);
	TextDrawTextSize(PaybackCardTD[0], 320.000000, 0.000000);

	PaybackCardTD[1] = TextDrawCreate(439.000000, 355.000000, "~r~");
	TextDrawBackgroundColour(PaybackCardTD[1], 255);
	TextDrawFont(PaybackCardTD[1], TEXT_DRAW_FONT_1);
	TextDrawLetterSize(PaybackCardTD[1], 0.500000, 1.399999);
	TextDrawColour(PaybackCardTD[1], -1);
	TextDrawSetOutline(PaybackCardTD[1], 0);
	TextDrawSetProportional(PaybackCardTD[1], true);
	TextDrawSetShadow(PaybackCardTD[1], 1);
	TextDrawUseBox(PaybackCardTD[1], true);
	TextDrawBoxColour(PaybackCardTD[1], 255);
	TextDrawTextSize(PaybackCardTD[1], 321.000000, 0.000000);
	TextDrawTextSize(PaybackCardTD[1], 321.000000, 0.000000);

	PaybackCardTD[2] = TextDrawCreate(328.000000, 370.000000, "// /// / // /// / // ////");
	TextDrawBackgroundColour(PaybackCardTD[2], 255);
	TextDrawFont(PaybackCardTD[2], TEXT_DRAW_FONT_1);
	TextDrawLetterSize(PaybackCardTD[2], 0.079999, 1.299999);
	TextDrawColour(PaybackCardTD[2], 255);
	TextDrawSetOutline(PaybackCardTD[2], 0);
	TextDrawSetProportional(PaybackCardTD[2], true);
	TextDrawSetShadow(PaybackCardTD[2], 1);
	TextDrawSetShadow(PaybackCardTD[2], 1);

	PaybackCardTD[3] = TextDrawCreate(435.000000, 396.000000, "~b~");
	TextDrawBackgroundColour(PaybackCardTD[3], 255);
	TextDrawFont(PaybackCardTD[3], TEXT_DRAW_FONT_1);
	TextDrawLetterSize(PaybackCardTD[3], 0.500000, 1.500000);
	TextDrawColour(PaybackCardTD[3], -1);
	TextDrawSetOutline(PaybackCardTD[3], 0);
	TextDrawSetProportional(PaybackCardTD[3], true);
	TextDrawSetShadow(PaybackCardTD[3], 1);
	TextDrawUseBox(PaybackCardTD[3], true);
	TextDrawBoxColour(PaybackCardTD[3], 65535);
	TextDrawTextSize(PaybackCardTD[3], 391.000000, 0.000000);
	TextDrawTextSize(PaybackCardTD[3], 391.000000, 0.000000);

	PaybackCardTD[4] = TextDrawCreate(425.000000, 397.000000, "|~n~|");
	TextDrawBackgroundColour(PaybackCardTD[4], 255);
	TextDrawFont(PaybackCardTD[4], TEXT_DRAW_FONT_1);
	TextDrawLetterSize(PaybackCardTD[4], 0.470000, 0.799999);
	TextDrawColour(PaybackCardTD[4], -1);
	TextDrawSetOutline(PaybackCardTD[4], 0);
	TextDrawSetProportional(PaybackCardTD[4], true);
	TextDrawSetShadow(PaybackCardTD[4], 1);
	TextDrawSetShadow(PaybackCardTD[4], 1);

	PaybackCardTD[5] = TextDrawCreate(425.000000, 400.000000, "|");
	TextDrawBackgroundColour(PaybackCardTD[5], 255);
	TextDrawFont(PaybackCardTD[5], TEXT_DRAW_FONT_1);
	TextDrawLetterSize(PaybackCardTD[5], 0.460000, 0.899999);
	TextDrawColour(PaybackCardTD[5], -1);
	TextDrawSetOutline(PaybackCardTD[5], 0);
	TextDrawSetProportional(PaybackCardTD[5], true);
	TextDrawSetShadow(PaybackCardTD[5], 1);
	TextDrawSetShadow(PaybackCardTD[5], 1);

	PaybackCardTD[6] = TextDrawCreate(420.000000, 400.000000, "|");
	TextDrawBackgroundColour(PaybackCardTD[6], 255);
	TextDrawFont(PaybackCardTD[6], TEXT_DRAW_FONT_1);
	TextDrawLetterSize(PaybackCardTD[6], 0.460000, 0.899999);
	TextDrawColour(PaybackCardTD[6], -1);
	TextDrawSetOutline(PaybackCardTD[6], 0);
	TextDrawSetProportional(PaybackCardTD[6], true);
	TextDrawSetShadow(PaybackCardTD[6], 1);
	TextDrawSetShadow(PaybackCardTD[6], 1);

	PaybackCardTD[7] = TextDrawCreate(395.000000, 395.000000, "PAYBACK");
	TextDrawBackgroundColour(PaybackCardTD[7], 255);
	TextDrawFont(PaybackCardTD[7], TEXT_DRAW_FONT_1);
	TextDrawLetterSize(PaybackCardTD[7], 0.159999, 1.000000);
	TextDrawColour(PaybackCardTD[7], -1);
	TextDrawSetOutline(PaybackCardTD[7], 0);
	TextDrawSetProportional(PaybackCardTD[7], true);
	TextDrawSetShadow(PaybackCardTD[7], 1);
	TextDrawSetShadow(PaybackCardTD[7], 1);

	PaybackCardTD[9] = TextDrawCreate(328.000000, 391.000000, "Diese Karte ist Eigentum der redv-reallife.de~n~PAYBACK AG. Bei Fund der Karte~n~diese bitte an uns senden.");
	TextDrawBackgroundColour(PaybackCardTD[9], 255);
	TextDrawFont(PaybackCardTD[9], TEXT_DRAW_FONT_1);
	TextDrawLetterSize(PaybackCardTD[9], 0.100000, 0.699999);
	TextDrawColour(PaybackCardTD[9], 255);
	TextDrawSetOutline(PaybackCardTD[9], 0);
	TextDrawSetProportional(PaybackCardTD[9], true);
	TextDrawSetShadow(PaybackCardTD[9], 0);
	TextDrawSetShadow(PaybackCardTD[9], 0);

	PaybackCardTD[10] = TextDrawCreate(398.000000, 382.000000, "137 957 708 1642");
	TextDrawBackgroundColour(PaybackCardTD[10], 255);
	TextDrawFont(PaybackCardTD[10], TEXT_DRAW_FONT_1);
	TextDrawLetterSize(PaybackCardTD[10], 0.100000, 1.000000);
	TextDrawColour(PaybackCardTD[10], 255);
	TextDrawSetOutline(PaybackCardTD[10], 0);
	TextDrawSetProportional(PaybackCardTD[10], true);
	TextDrawSetShadow(PaybackCardTD[10], 0);
	TextDrawSetShadow(PaybackCardTD[10], 0);

	PaybackCardTD[11] = TextDrawCreate(323.000000, 348.000000, "redv-reallife.de PAYBACK AG - Haus der Administration, HDA 1, Los Santos");
	TextDrawBackgroundColour(PaybackCardTD[11], 255);
	TextDrawFont(PaybackCardTD[11], TEXT_DRAW_FONT_1);
	TextDrawLetterSize(PaybackCardTD[11], 0.080000, 0.599999);
	TextDrawColour(PaybackCardTD[11], 255);
	TextDrawSetOutline(PaybackCardTD[11], 0);
	TextDrawSetProportional(PaybackCardTD[11], true);
	TextDrawSetShadow(PaybackCardTD[11], 0);
	TextDrawSetShadow(PaybackCardTD[11], 0);

	AlsAdminImDienst = TextDrawCreate(235.000000, 101.000000, "");
	TextDrawBackgroundColour(AlsAdminImDienst, 255);
	TextDrawFont(AlsAdminImDienst, TEXT_DRAW_FONT_2);
	TextDrawLetterSize(AlsAdminImDienst, 0.400000, 2.000000);
	TextDrawColour(AlsAdminImDienst, -16776961);
	TextDrawSetOutline(AlsAdminImDienst, 0);
	TextDrawSetProportional(AlsAdminImDienst, true);
	TextDrawSetShadow(AlsAdminImDienst, 1);
	TextDrawSetShadow(AlsAdminImDienst, 1);

	DoubleEXPTD[0] = TextDrawCreate(60.000000, 429.000000, "! Double EXP Event !");
	TextDrawBackgroundColour(DoubleEXPTD[0], -65281);
	TextDrawFont(DoubleEXPTD[0], TEXT_DRAW_FONT_2);
	TextDrawLetterSize(DoubleEXPTD[0], 0.300000, 2.000000);
	TextDrawColour(DoubleEXPTD[0], -16711681);
	TextDrawSetOutline(DoubleEXPTD[0], 1);
	TextDrawSetProportional(DoubleEXPTD[0], true);
	TextDrawSetSelectable(DoubleEXPTD[0], false);

	DoubleEXPTD[1] = TextDrawCreate(420.000000, 429.000000, "! Double EXP Event !");
	TextDrawBackgroundColour(DoubleEXPTD[1], -65281);
	TextDrawFont(DoubleEXPTD[1], TEXT_DRAW_FONT_2);
	TextDrawLetterSize(DoubleEXPTD[1], 0.300000, 2.000000);
	TextDrawColour(DoubleEXPTD[1], -16711681);
	TextDrawSetOutline(DoubleEXPTD[1], 1);
	TextDrawSetProportional(DoubleEXPTD[1], true);
	TextDrawSetSelectable(DoubleEXPTD[1], false);

	FlyerDraw[0] = TextDrawCreate(419.000000, 100.000000, "~r~");
	TextDrawBackgroundColour(FlyerDraw[0], 255);
	TextDrawFont(FlyerDraw[0], TEXT_DRAW_FONT_1);
	TextDrawLetterSize(FlyerDraw[0], 0.500000, 30.000000);
	TextDrawColour(FlyerDraw[0], -1);
	TextDrawSetOutline(FlyerDraw[0], 0);
	TextDrawSetProportional(FlyerDraw[0],true);
	TextDrawSetShadow(FlyerDraw[0], 1);
	TextDrawUseBox(FlyerDraw[0], true);
	TextDrawBoxColour(FlyerDraw[0], -1);
	TextDrawTextSize(FlyerDraw[0], 230.000000, 10.000000);
	TextDrawSetSelectable(FlyerDraw[0], false);

	FlyerDraw[1] = TextDrawCreate(236.000000, 102.000000, "LOADSUK:loadsc4");
	TextDrawBackgroundColour(FlyerDraw[1], 255);
	TextDrawFont(FlyerDraw[1], TEXT_DRAW_FONT_SPRITE_DRAW);
	TextDrawLetterSize(FlyerDraw[1], 0.500000, 1.000000);
	TextDrawColour(FlyerDraw[1], -1);
	TextDrawSetOutline(FlyerDraw[1], 0);
	TextDrawSetProportional(FlyerDraw[1], true);
	TextDrawSetShadow(FlyerDraw[1], 1);
	TextDrawUseBox(FlyerDraw[1], true);
	TextDrawBoxColour(FlyerDraw[1], 255);
	TextDrawTextSize(FlyerDraw[1], 90.000000, 80.000000);
	TextDrawSetSelectable(FlyerDraw[1], false);

	FlyerDraw[2] = TextDrawCreate(330.000000, 119.000000, "Party?~n~Spass?~n~Arbeit?~n~Unterkunft?");
	TextDrawBackgroundColour(FlyerDraw[2], 255);
	TextDrawFont(FlyerDraw[2], TEXT_DRAW_FONT_1);
	TextDrawLetterSize(FlyerDraw[2], 0.400000, 1.000000);
	TextDrawColour(FlyerDraw[2], -1);
	TextDrawSetOutline(FlyerDraw[2], 1);
	TextDrawSetProportional(FlyerDraw[2], true);
	TextDrawSetSelectable(FlyerDraw[2], false);

	FlyerDraw[3] = TextDrawCreate(235.000000, 189.000000, "Wenn Sie der Meinung sind Ihr Leben waere~n~langweilig. Dann liegt das daran das Sie nicht in~n~San Andreas leben!");
	TextDrawBackgroundColour(FlyerDraw[3], 255);
	TextDrawFont(FlyerDraw[3], TEXT_DRAW_FONT_1);
	TextDrawLetterSize(FlyerDraw[3], 0.200000, 1.000000);
	TextDrawColour(FlyerDraw[3], -1);
	TextDrawSetOutline(FlyerDraw[3], 1);
	TextDrawSetProportional(FlyerDraw[3], true);
	TextDrawSetSelectable(FlyerDraw[3], false);

	FlyerDraw[4] = TextDrawCreate(235.000000, 229.000000, "Die 3 beliebtesten amerikanischen Staaten bieten ~n~Ihnen alles was Sie brauchen!~n~Los Santos, San Fierro, Las Venturas.");
	TextDrawBackgroundColour(FlyerDraw[4], 255);
	TextDrawFont(FlyerDraw[4], TEXT_DRAW_FONT_1);
	TextDrawLetterSize(FlyerDraw[4], 0.200000, 1.000000);
	TextDrawColour(FlyerDraw[4], -1);
	TextDrawSetOutline(FlyerDraw[4], 1);
	TextDrawSetProportional(FlyerDraw[4], true);
	TextDrawSetSelectable(FlyerDraw[4], false);

	FlyerDraw[5] = TextDrawCreate(235.000000, 269.000000, "Es ist gar nicht so schwer wie Sie es glauben!~n~Richten Sie Ihre Ziele ein und kommen Sie nach~n~San Andreas!");
	TextDrawBackgroundColour(FlyerDraw[5], 255);
	TextDrawFont(FlyerDraw[5], TEXT_DRAW_FONT_1);
	TextDrawLetterSize(FlyerDraw[5], 0.200000, 1.000000);
	TextDrawColour(FlyerDraw[5], -1);
	TextDrawSetOutline(FlyerDraw[5], 1);
	TextDrawSetProportional(FlyerDraw[5], true);
	TextDrawSetSelectable(FlyerDraw[5], false);

	FlyerDraw[6] = TextDrawCreate(370.000000, 320.000000, "LD_CHAT:thumbup");
	TextDrawBackgroundColour(FlyerDraw[6], 255);
	TextDrawFont(FlyerDraw[6], TEXT_DRAW_FONT_SPRITE_DRAW);
	TextDrawLetterSize(FlyerDraw[6], 0.500000, 1.000000);
	TextDrawColour(FlyerDraw[6], -1);
	TextDrawSetOutline(FlyerDraw[6], 0);
	TextDrawSetProportional(FlyerDraw[6], true);
	TextDrawSetShadow(FlyerDraw[6], 1);
	TextDrawUseBox(FlyerDraw[6], true);
	TextDrawBoxColour(FlyerDraw[6], 255);
	TextDrawTextSize(FlyerDraw[6], 30.000000, 30.000000);
	TextDrawSetSelectable(FlyerDraw[6], false);

	FlyerDraw[7] = TextDrawCreate(240.000000, 310.000000, "Jetzt mit JunkAir!");
	TextDrawBackgroundColour(FlyerDraw[7], 255);
	TextDrawFont(FlyerDraw[7], TEXT_DRAW_FONT_3);
	TextDrawLetterSize(FlyerDraw[7], 0.400000, 1.000000);
	TextDrawColour(FlyerDraw[7], -1);
	TextDrawSetOutline(FlyerDraw[7], 1);
	TextDrawSetProportional(FlyerDraw[7], true);
	TextDrawSetSelectable(FlyerDraw[7], false);

	FlyerDraw[8] = TextDrawCreate(240.000000, 330.000000, "nur ~r~57$ ~w~p.P!");
	TextDrawBackgroundColour(FlyerDraw[8], 255);
	TextDrawFont(FlyerDraw[8], TEXT_DRAW_FONT_3);
	TextDrawLetterSize(FlyerDraw[8], 0.400000, 1.000000);
	TextDrawColour(FlyerDraw[8], -1);
	TextDrawSetOutline(FlyerDraw[8], 1);
	TextDrawSetProportional(FlyerDraw[8], true);
	TextDrawSetSelectable(FlyerDraw[8], false);

	FlyerDraw[9] = TextDrawCreate(254.000000, 361.000000, "Flyer by redv-reallife.de Reloaded - Wir machen beeinDRUCKenden Druck!");
	TextDrawBackgroundColour(FlyerDraw[9], 255);
	TextDrawFont(FlyerDraw[9], TEXT_DRAW_FONT_1);
	TextDrawLetterSize(FlyerDraw[9], 0.130000, 1.000000);
	TextDrawColour(FlyerDraw[9], 255);
	TextDrawSetOutline(FlyerDraw[9], 0);
	TextDrawSetProportional(FlyerDraw[9], true);
	TextDrawSetShadow(FlyerDraw[9], 0);
	TextDrawSetSelectable(FlyerDraw[9], false);

	FlyerDraw[10] = TextDrawCreate(230.000000, 380.000000, ">> FERTIG GELESEN <<");
	TextDrawBackgroundColour(FlyerDraw[10], 255);
	TextDrawFont(FlyerDraw[10], TEXT_DRAW_FONT_1);
	TextDrawLetterSize(FlyerDraw[10], 0.500000, 1.000000);
	TextDrawColour(FlyerDraw[10], -1);
	TextDrawSetOutline(FlyerDraw[10], 0);
	TextDrawSetProportional(FlyerDraw[10], true);
	TextDrawSetShadow(FlyerDraw[10], 1);
	TextDrawSetSelectable(FlyerDraw[10], false);

	//Lottoschein
	LottoSchein[0] = TextDrawCreate(320.000000, 142.000000, "~n~");
	TextDrawAlignment(LottoSchein[0], TEXT_DRAW_ALIGN_CENTER);
	TextDrawBackgroundColour(LottoSchein[0], 255);
	TextDrawFont(LottoSchein[0], TEXT_DRAW_FONT_1);
	TextDrawLetterSize(LottoSchein[0], 0.500000, 23.000000);
	TextDrawColour(LottoSchein[0], -1);
	TextDrawSetOutline(LottoSchein[0], 0);
	TextDrawSetProportional(LottoSchein[0], true);
	TextDrawSetShadow(LottoSchein[0], 1);
	TextDrawUseBox(LottoSchein[0], true);
	TextDrawBoxColour(LottoSchein[0], -1);
	TextDrawTextSize(LottoSchein[0], 430.000000, 110.000000);

	LottoSchein[1] = TextDrawCreate(265.000000, 142.000000, "~n~");
	TextDrawAlignment(LottoSchein[1], TEXT_DRAW_ALIGN_CENTER);
	TextDrawBackgroundColour(LottoSchein[1], 255);
	TextDrawFont(LottoSchein[1], TEXT_DRAW_FONT_1);
	TextDrawLetterSize(LottoSchein[1], 0.500000, 23.000000);
	TextDrawColour(LottoSchein[1], -1);
	TextDrawSetOutline(LottoSchein[1], 0);
	TextDrawSetProportional(LottoSchein[1], true);
	TextDrawSetShadow(LottoSchein[1], 1);
	TextDrawUseBox(LottoSchein[1], true);
	TextDrawBoxColour(LottoSchein[1], -16776961);
	TextDrawTextSize(LottoSchein[1], 420.000000, 0.000000);

	LottoSchein[2] = TextDrawCreate(375.000000, 142.000000, "~n~");
	TextDrawAlignment(LottoSchein[2], TEXT_DRAW_ALIGN_CENTER);
	TextDrawBackgroundColour(LottoSchein[2], 255);
	TextDrawFont(LottoSchein[2], TEXT_DRAW_FONT_1);
	TextDrawLetterSize(LottoSchein[2], 0.500000, 23.000000);
	TextDrawColour(LottoSchein[2], -1);
	TextDrawSetOutline(LottoSchein[2], 0);
	TextDrawSetProportional(LottoSchein[2], true);
	TextDrawSetShadow(LottoSchein[2], 1);
	TextDrawUseBox(LottoSchein[2], true);
	TextDrawBoxColour(LottoSchein[2], -16776961);
	TextDrawTextSize(LottoSchein[2], 420.000000, 0.000000);

	LottoSchein[3] = TextDrawCreate(320.000000, 144.000000, "SPIELQUITTUNG~n~~n~~n~~n~LOTTO 3/9");
	TextDrawAlignment(LottoSchein[3], TEXT_DRAW_ALIGN_CENTER);
	TextDrawBackgroundColour(LottoSchein[3], 255);
	TextDrawFont(LottoSchein[3], TEXT_DRAW_FONT_2);
	TextDrawLetterSize(LottoSchein[3], 0.270000, 1.099999);
	TextDrawColour(LottoSchein[3], 255);
	TextDrawSetOutline(LottoSchein[3], 0);
	TextDrawSetProportional(LottoSchein[3], true);
	TextDrawSetShadow(LottoSchein[3], 0);


	LottoSchein[4] = TextDrawCreate(274.000000, 173.000000, "-----------------------------~n~~n~~n~~n~~n~~n~~n~------------------------------~n~~n~~n~~n~~n~------------------------------");
	TextDrawBackgroundColour(LottoSchein[4], 255);
	TextDrawFont(LottoSchein[4], TEXT_DRAW_FONT_0);
	TextDrawLetterSize(LottoSchein[4], 0.240000, 1.300000);
	TextDrawColour(LottoSchein[4], 255);
	TextDrawSetOutline(LottoSchein[4], 1);
	TextDrawSetProportional(LottoSchein[4], true);

	LottoSchein[5] = TextDrawCreate(273.000000, 269.000000, "Spieleinsatz einschliesslich~n~Bearbeitungsgebuer~n~~n~Umtausch ausgeschlossen~n~~n~~n~~t~~t~~t~~t~~t~ID: 01020445");
	TextDrawBackgroundColour(LottoSchein[5], 255);
	TextDrawFont(LottoSchein[5], TEXT_DRAW_FONT_1);
	TextDrawLetterSize(LottoSchein[5], 0.170000, 0.699999);
	TextDrawColour(LottoSchein[5], 255);
	TextDrawSetOutline(LottoSchein[5], 0);
	TextDrawSetProportional(LottoSchein[5], true);
	TextDrawSetShadow(LottoSchein[5], 0);

	LottoSchein[6] = TextDrawCreate(273.000000, 326.000000, "Spielteilnahme ab 12.~n~Gluecksspiel kann suechtig machen.~n~Infos unter san-news.ls");
	TextDrawBackgroundColour(LottoSchein[6], 255);
	TextDrawFont(LottoSchein[6], TEXT_DRAW_FONT_1);
	TextDrawLetterSize(LottoSchein[6], 0.170000, 0.699999);
	TextDrawColour(LottoSchein[6], 255);
	TextDrawSetOutline(LottoSchein[6], 0);
	TextDrawSetProportional(LottoSchein[6], true);
	TextDrawSetShadow(LottoSchein[6], 0);

	//LoginScreen
	LoginScreen[0] = TextDrawCreate(650.000000, 0.000000, "~r~");
	TextDrawBackgroundColour(LoginScreen[0], 255);
	TextDrawFont(LoginScreen[0], TEXT_DRAW_FONT_1);
	TextDrawLetterSize(LoginScreen[0], 0.500000, 11.000000);
	TextDrawColour(LoginScreen[0], -1);
	TextDrawSetOutline(LoginScreen[0], 0);
	TextDrawSetProportional(LoginScreen[0], true);
	TextDrawSetShadow(LoginScreen[0], 1);
	TextDrawUseBox(LoginScreen[0], true);
	TextDrawBoxColour(LoginScreen[0], 175);
	TextDrawTextSize(LoginScreen[0], -10.000000, 0.000000);
	TextDrawTextSize(LoginScreen[0], -10.000000, 0.000000);

	LoginScreen[1] = TextDrawCreate(650.000000, 330.000000, "~r~");
	TextDrawBackgroundColour(LoginScreen[1], 255);
	TextDrawFont(LoginScreen[1], TEXT_DRAW_FONT_1);
	TextDrawLetterSize(LoginScreen[1], 0.500000, 13.200000);
	TextDrawColour(LoginScreen[1], -1);
	TextDrawSetOutline(LoginScreen[1], 0);
	TextDrawSetProportional(LoginScreen[1], true);
	TextDrawSetShadow(LoginScreen[1], 1);
	TextDrawUseBox(LoginScreen[1], true);
	TextDrawBoxColour(LoginScreen[1], 175);
	TextDrawTextSize(LoginScreen[1], -10.000000, 0.000000);
	TextDrawTextSize(LoginScreen[1], -10.000000, 0.000000);

	LoginScreen[2] = TextDrawCreate(-30.000000, 100.000000, "LD_DUAL:thrustG");
	TextDrawBackgroundColour(LoginScreen[2], 0);
	TextDrawFont(LoginScreen[2], TEXT_DRAW_FONT_SPRITE_DRAW);
	TextDrawLetterSize(LoginScreen[2], 0.500000, 1.000000);
	TextDrawColour(LoginScreen[2], 376222719);
	TextDrawSetOutline(LoginScreen[2], 0);
	TextDrawSetProportional(LoginScreen[2], true);
	TextDrawSetShadow(LoginScreen[2], 1);
	TextDrawUseBox(LoginScreen[2], true);
	TextDrawBoxColour(LoginScreen[2], 376222719);
	TextDrawTextSize(LoginScreen[2], 750.000000, 4.000000);
	TextDrawTextSize(LoginScreen[2], 750.000000, 4.000000);

	LoginScreen[3] = TextDrawCreate(-30.000000, 327.000000, "LD_DUAL:thrustG");
	TextDrawBackgroundColour(LoginScreen[3], 0);
	TextDrawFont(LoginScreen[3], TEXT_DRAW_FONT_SPRITE_DRAW);
	TextDrawLetterSize(LoginScreen[3], 0.500000, 1.000000);
	TextDrawColour(LoginScreen[3], 376222719);
	TextDrawSetOutline(LoginScreen[3], 0);
	TextDrawSetProportional(LoginScreen[3], true);
	TextDrawSetShadow(LoginScreen[3], 1);
	TextDrawUseBox(LoginScreen[3], true);
	TextDrawBoxColour(LoginScreen[3], 376222719);
	TextDrawTextSize(LoginScreen[3], 750.000000, 4.000000);
	TextDrawTextSize(LoginScreen[3], 750.000000, 4.000000);

	LoginScreen[4] = TextDrawCreate(305.000000, 47.000000, "AK1_MODEL_PREVIEW");
	TextDrawBackgroundColour(LoginScreen[4], 0);
	TextDrawFont(LoginScreen[4], TEXT_DRAW_FONT_MODEL_PREVIEW);
	TextDrawLetterSize(LoginScreen[4], 0.500000, 1.000000);
	TextDrawColour(LoginScreen[4], -1);
	TextDrawSetOutline(LoginScreen[4], 0);
	TextDrawSetProportional(LoginScreen[4], true);
	TextDrawSetShadow(LoginScreen[4], 1);
	TextDrawUseBox(LoginScreen[4], true);
	TextDrawBoxColour(LoginScreen[4], 255);
	TextDrawTextSize(LoginScreen[4], 170.000000, 150.000000);
	TextDrawSetPreviewModel(LoginScreen[4], 355);
	TextDrawSetPreviewRot(LoginScreen[4], 0.000000, 320.000000, 1.000000, 3.000000);
	TextDrawSetPreviewRot(LoginScreen[4], 0.000000, 320.000000, 1.000000, 3.000000);

	LoginScreen[5] = TextDrawCreate(315.000000, 90.000000, "redv-reallife.de~n~~w~Reloaded");
	TextDrawAlignment(LoginScreen[5], TEXT_DRAW_ALIGN_CENTER);
	TextDrawBackgroundColour(LoginScreen[5], 255);
	TextDrawFont(LoginScreen[5], TEXT_DRAW_FONT_0);
	TextDrawLetterSize(LoginScreen[5], 1.000000, 2.000000);
	TextDrawColour(LoginScreen[5], 376222719);
	TextDrawSetOutline(LoginScreen[5], 1);
	TextDrawSetProportional(LoginScreen[5], true);
	TextDrawSetProportional(LoginScreen[5], true);

	//Statusleiste
	Statusleiste[0] = TextDrawCreate(645.000000, 428.000000, "~r~");
	TextDrawBackgroundColour(Statusleiste[0], 255);
	TextDrawFont(Statusleiste[0], TEXT_DRAW_FONT_1);
	TextDrawLetterSize(Statusleiste[0], 0.500000, 2.000000);
	TextDrawColour(Statusleiste[0], -1);
	TextDrawSetOutline(Statusleiste[0], 0);
	TextDrawSetProportional(Statusleiste[0], true);
	TextDrawSetShadow(Statusleiste[0], 1);
	TextDrawUseBox(Statusleiste[0], true);
	TextDrawBoxColour(Statusleiste[0], 16843133);
	TextDrawTextSize(Statusleiste[0], -10.000000, 0.000000);
	TextDrawSetSelectable(Statusleiste[0], false);

	Statusleiste[1] = TextDrawCreate(573.000000, 427.000000, "redv-reallife.de");
	TextDrawBackgroundColour(Statusleiste[1], 255);
	TextDrawFont(Statusleiste[1], TEXT_DRAW_FONT_0);
	TextDrawLetterSize(Statusleiste[1], 0.500000, 1.000000);
	TextDrawColour(Statusleiste[1], 0x166CB3FF);
	TextDrawSetOutline(Statusleiste[1], 0);
	TextDrawSetProportional(Statusleiste[1], true);
	TextDrawSetShadow(Statusleiste[1], 1);
	TextDrawSetSelectable(Statusleiste[1], false);

	Statusleiste[2] = TextDrawCreate(586.000000, 435.000000, "Reloaded");
	TextDrawBackgroundColour(Statusleiste[2], 255);
	TextDrawFont(Statusleiste[2], TEXT_DRAW_FONT_0);
	TextDrawLetterSize(Statusleiste[2], 0.500000, 1.000000);
	TextDrawColour(Statusleiste[2], 0x166CB3FF);
	TextDrawSetOutline(Statusleiste[2], 0);
	TextDrawSetProportional(Statusleiste[2], true);
	TextDrawSetShadow(Statusleiste[2], 1);
	TextDrawSetSelectable(Statusleiste[2], false);

	Statusleiste[3] = TextDrawCreate(-50.000000, 425.000000, "LD_DUAL:thrustG");
	TextDrawBackgroundColour(Statusleiste[3], 255);
	TextDrawFont(Statusleiste[3], TEXT_DRAW_FONT_SPRITE_DRAW);
	TextDrawLetterSize(Statusleiste[3], 0.500000, 1.000000);
	TextDrawColour(Statusleiste[3], 0x166CB3FF); //6750207
	TextDrawSetOutline(Statusleiste[3], 0);
	TextDrawSetProportional(Statusleiste[3], true);
	TextDrawSetShadow(Statusleiste[3], 1);
	TextDrawUseBox(Statusleiste[3], true);
	TextDrawBoxColour(Statusleiste[3], 0x166CB3FF); //65535
	TextDrawTextSize(Statusleiste[3], 790.000000, 9.000000);
	TextDrawSetSelectable(Statusleiste[3], false);

	StatusWerbung = TextDrawCreate(310.000000, 434.000000, "~g~Werbung: ~w~Keine - Benutze /ad um eine Werbung zu schalten.");
	TextDrawAlignment(StatusWerbung, TEXT_DRAW_ALIGN_CENTER);
	TextDrawBackgroundColour(StatusWerbung, 255);
	TextDrawFont(StatusWerbung, TEXT_DRAW_FONT_1);
	TextDrawLetterSize(StatusWerbung, 0.200000, 1.000000);
	TextDrawColour(StatusWerbung, -1);
	TextDrawSetOutline(StatusWerbung, 0);
	TextDrawSetProportional(StatusWerbung, true);
	TextDrawSetShadow(StatusWerbung, 1);
	TextDrawSetSelectable(StatusWerbung, false);

	StatusAFK = TextDrawCreate(185.000000, 101.000000, "Du bist AFK! Benutze '/back'");
	TextDrawBackgroundColour(StatusAFK, 255);
	TextDrawFont(StatusAFK, TEXT_DRAW_FONT_2);
	TextDrawLetterSize(StatusAFK, 0.400000, 2.000000);
	TextDrawColour(StatusAFK, -16776961);
	TextDrawSetOutline(StatusAFK, 0);
	TextDrawSetProportional(StatusAFK, true);
	TextDrawSetShadow(StatusAFK, 1);

	Time = TextDrawCreate(4.000000,434.000000, "--");
	TextDrawBackgroundColour(Time, 255);
	TextDrawFont(Time, TEXT_DRAW_FONT_0);
	TextDrawLetterSize(Time, 0.250000, 1.200000);
	TextDrawColour(Time, 0x166CB3FF);
	TextDrawSetOutline(Time, 0);
	TextDrawSetProportional(Time, true);
	TextDrawSetShadow(Time, 1);
	TextDrawSetSelectable(Time, false);


	EvidenceInit();
	//Tore & Schranken - redv-reallife.de Reloaded
    LSPDGarage = CreateDynamicObject(969,1593.3000500,-1638.0999800,12.5000000,0.0000000,0.0000000,180.0000000); //object(LSPD Tor)
    LSPDSchranke = CreateDynamicObject(968,1544.6999500,-1630.9000200,13.1000000,0.0000000,270.0000000,270.0000000); //object(barrierturn) (1)
    FBITor = CreateDynamicObject(2990, -2168.68530, 249.60730, 36.57600,   0.00000, 0.00000, 90.00000);
    RussenTor = CreateDynamicObject(988,321.191,-1187.818,75.783,0.000,0.000,38.177);
    NewsTor[0] = CreateDynamicObject(969, 781.79523, -1384.78162, 12.88760,   0.00000, 0.00000, 180.00000);
 	NewsTor[1] = CreateDynamicObject(969, 781.77570, -1330.23206, 12.70840,   0.00000, 0.00000, 179.60001);
	NewsStudioTor = CreateDynamicObject(5422, 671.36200, -1353.85547,1696.4069,   0.00000, 0.00000, 0.00000);
	BombenTor = CreateObject(971, 283.05493, 1868.84778, 7.75518,   0.00000, 0.00000, 269.82675);

	//ZOLL LS1:
	MautSchranke[0] = CreateDynamicObject(968, 50.20850, -1528.00586, 4.59290,   0.00000, 88.00000, 81.00000); // CLOSED FR RED COUNTY
	MautSchranke[1] = CreateDynamicObject(968, 55.64380, -1535.61462, 4.65890,   0.00000, -88.00000, 82.00000); // CLOSED FR LS

	//ZOLL LS2:
	MautSchranke[2] = CreateDynamicObject(968, 32.93180, -1338.09875, 9.97200,   0.00000, -89.50000, -51.00000); // CLOSED FR LS
	MautSchranke[3] = CreateDynamicObject(968, -9.03120, -1324.38770, 10.83550,   0.00000, 89.50000, -50.00000); // CLOSED FR RED COUNTY

	//ZOLL LS --> LV Brücke klein
	MautSchranke[4] = CreateDynamicObject(968, 518.43420, 470.30151, 18.66560,   0.00000, 90.00000, 35.00000); // CLOSED

	//ZOLL LS --> LV Brücke groß
	MautSchranke[5] = CreateDynamicObject(968, 1724.22595, 518.73871, 28.09300,   0.00000, 89.00000, -19.00000); // CLOSED FR LS
	MautSchranke[6] = CreateDynamicObject(968, 1749.94031, 517.41351, 27.70300,   0.00000, -89.80000, -19.00000); // CLOSED FR LV

    //MedicFahrstuhl = CreateDynamicObject(18755, 1180.35889, -1365.29614, 15.12730, 0.00000, 0.00000, -90.00000);//object(elevator) (1)
	//ATM-System
   	ATM_Init();
 	//Orangen Bäume - redv-reallife.de Reloaded
 	for(new orangenbaum=1; orangenbaum<sizeof(OrangenBaumInfo); orangenbaum++)
 	{
 	    CreateDynamic3DTextLabel("{FFFFFF}Orangen Baum\nBenutze '{FF0000}/pfluecken'", 0x008080FF, OrangenBaumInfo[orangenbaum][OBPos_X],OrangenBaumInfo[orangenbaum][OBPos_Y],OrangenBaumInfo[orangenbaum][OBPos_Z]+2.0000, 5.0);
 	}

 	Create3DTextLabel("{0077FF}Farmer Oli\n{FFFFFF}Hast du wieder Orangen für mich?\nBenutze {FF0000}/orangenverkaufen{FFFFFF}'", 0x008080FF, 301.2251, 1143.3342, 8.7459+1.0000, 10.0, 0, false);

 	//Pfandflaschen System
	for(new mt=0; mt<sizeof(Muelltonnen); mt++)
 	{
 	    Muelltonne[mt] = CreateDynamicObject(1332,Muelltonnen[mt][0],Muelltonnen[mt][1],Muelltonnen[mt][2],Muelltonnen[mt][3],Muelltonnen[mt][4],Muelltonnen[mt][5]);
 	    CreateDynamic3DTextLabel("{FFFFFF}Mülltonne\nBenutze '{FF0000}/durchsuchen{FFFFFF}'\num die Mülltonne zu durchsuchen", 0x008080FF, Muelltonnen[mt][0],Muelltonnen[mt][1],Muelltonnen[mt][2], 10.0);
 	}

 	//Eingänge + Ausgänge der Restaurants - redv-reallife.de Reloaded
	for(new id=0; id<sizeof(FastFoodInfo); id++)
 	{
 	    if(FastFoodInfo[id][fiTyp] == 1)//BSN
 	    {
 	    	CreateDynamic3DTextLabel("{FFFFFF}Burger Shot\nBenutze '{FF0000}Enter'{FFFFFF} zum betreten", 0x008080FF, FastFoodInfo[id][fEPos_X],FastFoodInfo[id][fEPos_Y],FastFoodInfo[id][fEPos_Z], 10.0);
 	    }
 	    else if(FastFoodInfo[id][fiTyp] == 2)//Cluckin Bell
 	    {
 	        CreateDynamic3DTextLabel("{FFFFFF}Cluckin Bell\nBenutze '{FF0000}Enter'{FFFFFF} zum betreten", 0x008080FF, FastFoodInfo[id][fEPos_X],FastFoodInfo[id][fEPos_Y],FastFoodInfo[id][fEPos_Z], 10.0);
 	    }
 	    AddStaticPickup(19130, 1, FastFoodInfo[id][fEPos_X],FastFoodInfo[id][fEPos_Y],FastFoodInfo[id][fEPos_Z], -1);
 	    AddStaticPickup(19130, 1, FastFoodInfo[id][fIPos_X],FastFoodInfo[id][fIPos_Y],FastFoodInfo[id][fIPos_Z], -1);
 	}
	//Lotto
	SetDynamicObjectMaterial(
	CreateDynamicObject(16000, 647.6967, -1357.7480, 20.5803, 0.0000, 0.0000, 89.7000)
	, 3, 16639, "a51_labs", "studiowall4_law", 0xFFFFFFFF);
	SetDynamicObjectMaterialText(
	CreateDynamicObject(7901, 648.0975, -1357.6785, 29.9418, 0.0000, 0.0000, -90.1999)
	,0, "Lotto 3/9", 130, "Arial", 130, 1, 0xFF840410, 0x0, 1);

	oamtbasemapschranke = CreateDynamicObject(968, 1106.0683, -1691.4707, 12.9108, 0.0000, 90.0000, 90.0000); //barrierturn

    CreateTuningGarage();
	return 1;
}

public OnGameModeExit()
{
	//ATMSystem
	SaveAllAtms();
	//Lumberjack System
	//Log_ScriptExit();
	//Race System
	SaveRaces();
	//FastFoodStood
	FastFoodStood_Exit();

	//MiningSystem
	//Minining_Exit();

	//DynamicRobbery
	DynamicRobberyExit();

	GameTextForAll("~r~"SERV_NAME"~w~startet neu",5000,4);
	SaveAll();
	mysql_close(sqlHandle);
	ServerRestartFolgt = 1;
	return 1;
}

public OnPlayerRequestClass(playerid, classid)
{
    AddPlayerClass(0,0,0,0,0,WEAPON_FIST,0,WEAPON_FIST,0,WEAPON_FIST,0);
	if(IsPlayerNPC(playerid))
	{
		new playername[64];
		GetPlayerName(playerid,playername,64);

		if(!strcmp(playername,"TrainDriverLV",true)) {
			SetSpawnInfo(playerid,69,255,1462.0745,2630.8787,10.8203,0.0,WEAPON_FIST,0,WEAPON_FIST,0,WEAPON_FIST,0);
		}
		else if(!strcmp(playername,"TrainDriverSF",true)) {
			SetSpawnInfo(playerid,69,255,-1942.7950,168.4164,27.0006,0.0,WEAPON_FIST,0,WEAPON_FIST,0,WEAPON_FIST,0);
		}
		else if(!strcmp(playername,"TrainDriverLS",true)) {
			SetSpawnInfo(playerid,69,255,1700.7551,-1953.6531,14.8756,0.0,WEAPON_FIST,0,WEAPON_FIST,0,WEAPON_FIST,0);
		}
		SetPVarInt(playerid, "LoggedIn", 1);
		return 1;
	}
	if(GetPVarInt(playerid,"LoggedIn") == 0)
	{
	    SetPlayerCameraPos(playerid, 1421.9761,-1632.8876,54.8930);
 	    SetPlayerCameraLookAt(playerid, 1523.3304,-1726.4100,13.3906);
		TogglePlayerControllable(playerid, false);
		//SpawnPlayerEx(playerid);
		SetTimerEx("SetConnect",100,false,"i",playerid);
	}

	//PlayerLocation
	PlayerLoc_OnPlayerRequestClass(playerid);
	return 1;
}

public SetConnect(playerid)
{
    if(IsPlayerNPC(playerid))return 1;
    new name[MAX_PLAYER_NAME];
	GetPlayerName(playerid, name, sizeof(name));
    new Camera = 1;
	//mysql_GetInt("accounts", "icpCamera", "Name", name);
 	TogglePlayerSpectating(playerid,true);
	SetTimerEx("CheckedAccount",5000,false,"i",playerid);

    if(Camera == 1)
    {
	    SetPVarInt(playerid,"CamFahrt",1);
	    KillTimer(CamFahrten[playerid]);
	    CamFahrten[playerid] = SetTimerEx("CameraFahrten",5000,true,"i",playerid);
	    InterpolateCameraPos(playerid, -2118.856201, 334.437530, 92.006568, -2138.267822, 191.594757, 72.065650, 10000);
		InterpolateCameraLookAt(playerid, -2122.397216, 331.727752, 94.268913, -2140.997314, 195.449249, 70.424758, 10000);
	}
	else
 	{
 	    SetPlayerCameraPos(playerid, 1421.9761,-1632.8876,54.8930);
 	    SetPlayerCameraLookAt(playerid, 1523.3304,-1726.4100,13.3906);
 	}
    return 1;
}

public CheckedAccount(playerid)
{
    /*new Camera = mysql_GetInt("accounts", "icpCamera", "Name", SpielerInfo[playerid][sName]);
    if(Camera < 1)
 	{
 	    SetPlayerCameraPos(playerid, 1421.9761,-1632.8876,54.8930);
 	    SetPlayerCameraLookAt(playerid, 1523.3304,-1726.4100,13.3906);
 	}*/
    new Beta = mysql_GetInt("config", "ValueInt", "Config", "Beta");

    if(Beta == 0)
    {
        beta_start:
		new query[128];
		mysql_format(sqlHandle, query, sizeof(query), "SELECT `Name` FROM `accounts` WHERE `Name` = '%e'", SpielerInfo[playerid][sName]);
		mysql_tquery(sqlHandle, query, "onCheckPlayerAccount", "i", playerid);
	}
	else
	{
 		if(mysql_CheckBeta(playerid) == 0)
		{
		    SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Dieser Account besitzt kein Beta Zugang.");
		    KickPlayer(playerid,"");
		}
		else
		{
		    new aktiviert = mysql_GetInt("beta", "Aktiviert", "Name", SpielerInfo[playerid][sName]);
		    if(aktiviert == 1)
		    {
			    SendClientMessage(playerid,COLOR_SUPER,"Dieser Account besitzt ein gültigen Beta Zugang.");
			    goto beta_start;
			}
			else if(aktiviert == 0)
			{
			    ShowPlayerDialog(playerid,DIALOG_BETA_KEY,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Beta Key","{FFFFFF}Bitte gib unten dein gültigen Beta Key an.","Weiter","Abbrechen");
			}
		}
	}
	return 1;
}

public OnPlayerConnect(playerid)
{
	if(IsPlayerNPC(playerid))
	{
		new botname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, botname, sizeof(botname));
		if(strcmp(botname, "Zivi_Winkler", true))
		{
			new Text3D:label = CreateDynamic3DTextLabel("Zivi_Winkler", COLOR_RED, 30.0, 40.0, 50.0, 40.0, playerid);
			Attach3DTextLabelToPlayer(label, playerid, 0.0, 0.0, 0.0);
			SetPVarInt(playerid,"LoggedIn",1);
			printf(">>>>> [BOT]Zivi_Winkler connected!");
			SpawnPlayer(playerid);
			return 1;
		}
		else if(!strcmp(botname,"TrainDriverLV",true)) {
			new Text3D:label = CreateDynamic3DTextLabel("Las Venturas Trainstation", COLOR_RED, 30.0, 40.0, 50.0, 40.0, playerid);
			Attach3DTextLabelToPlayer(label, playerid, 0.0, 0.0, 0.0);
			SetPVarInt(playerid,"LoggedIn",1);
        	SetSpawnInfo(playerid,69,255,1462.0745,2630.8787,10.8203,0.0,WEAPON_FIST,0,WEAPON_FIST,0,WEAPON_FIST,0);
			printf(">>>>> [BOT]TrainDriverLV connected!");
			SpawnPlayer(playerid);
			return 1;
		}
		else if(!strcmp(botname,"TrainDriverSF",true)) {
			new Text3D:label = CreateDynamic3DTextLabel("San Fierro Trainstation", COLOR_RED, 30.0, 40.0, 50.0, 40.0, playerid);
			Attach3DTextLabelToPlayer(label, playerid, 0.0, 0.0, 0.0);
			SetPVarInt(playerid,"LoggedIn",1);
			SetSpawnInfo(playerid,69,255,-1942.7950,168.4164,27.0006,0.0, WEAPON_FIST,0,WEAPON_FIST,0,WEAPON_FIST,0);
			printf(">>>>> [BOT]TrainDriverSF connected!");
			SpawnPlayer(playerid);
			return 1;
		}
		else if(!strcmp(botname,"TrainDriverLS",true)) {
			new Text3D:label = CreateDynamic3DTextLabel("Los Santos Trainstation", COLOR_RED, 30.0, 40.0, 50.0, 40.0, playerid);
			Attach3DTextLabelToPlayer(label, playerid, 0.0, 0.0, 0.0);
			SetPVarInt(playerid,"LoggedIn",1);
			SetSpawnInfo(playerid,69,255,1700.7551,-1953.6531,14.8756,0.0,WEAPON_FIST,0,WEAPON_FIST,0,WEAPON_FIST,0);
			printf(">>>>> [BOT]TrainDriverLS connected!");
			SpawnPlayer(playerid);
			return 1;
		}
		return 1;
	}

	DeletePVar(playerid, "RCON_TRYS");
	
	Streamer_ToggleIdleUpdate(playerid,1);

	GetPlayerName(playerid, SpielerInfo[playerid][sName], MAX_PLAYER_NAME);
 	//MapIcons by ShadowKev1999
	SetPlayerMapIconEx(0,836.9324,-1732.2356,13.5698,38,0,0,0); //spawn
	//ATM System
	ATM_PlayerConnect(playerid);
	//Lumberjack System
	//Log_PlayerConnect(playerid);
	//EnterExit System
	EnterExit_PlayerConnect(playerid);
	//MoneyDraw
	MoneyDraw_PlayerConnect(playerid);
	//InsuranceSystem
	Insurance_ConnectPlayer(playerid);
	//RaceSystem
	Race_PlayerConnect(playerid);
	//BeachBarSystem
	BeachBar_PlayerConnect(playerid);
	//MiningSystem
	//Minining_PlayerConnect(playerid);
	//AirdropSystem
	Airdrop_OnPlayerConnect(playerid);
	//FishingJob
	FisherJob_OnPlayerConnect(playerid);
	//MobilePhoneSystem
	MobilePhone_PlayerConnect(playerid);

	//FastFoodStood
	FastFoodStood_OnPlayerConnect(playerid);

	//PlayerLocation
	PlayerLoc_OnPlayerConnect(playerid);

	//MAPPINGS
	MappingsOnPlayerConnect(playerid);

	menuPlayerTextDrawsCount[playerid] = 0;
	playerMenu[playerid][E_PLAYER_MENU_ID][0] = EOS;
    new serverPort = GetConsoleVarAsInt("network.port");
	if(serverPort == 7778)
	{
	    SendClientMessage(playerid,COLOR_YELLOW,"Wichtige Informationen zum Testserver:");
	    SendClientMessage(playerid,COLOR_YELLOW,"Das Script erkennt automatisch ob es sich um den Testserver (Port 7778) handelt.");
	    SendClientMessage(playerid,COLOR_YELLOW,"Auf diesem Server ist die Zwischenspeicherung die alle 2 Stunden in Kraft tritt, deaktiviert.");
	    SendClientMessage(playerid,COLOR_YELLOW,"Dennoch verwenden beide Server die gleiche Datenbank. Bitte stelle also sicher keine");
	    SendClientMessage(playerid,COLOR_YELLOW,"sensiblen Daten zu ändern. Diese könnten ggf. im LIVE-Betrieb des Hauptservers verwendet werden.");
	}
    new query[264];
//    GetPlayerIp(playerid, SpielerInfo[playerid][sIPAdresse], 16);
//    format(query,sizeof(query),"http://proxy.mind-media.com/block/proxycheck.php?ip=%s",SpielerInfo[playerid][sIPAdresse]);
//    HTTP(playerid, HTTP_GET, query, "", "HttpProxyCheck");

//	mysql_format(sqlHandle, query, sizeof(query), "UPDATE `accounts` SET `ConnectIP`='%s' WHERE `Name`='%s'",SpielerInfo[playerid][sIPAdresse],SpielerInfo[playerid][sName]);
//	mysql_tquery(sqlHandle, query);

	// Zurerst den Loginscreen
	TextDrawShowForPlayer(playerid, LoginScreen[0]);
	TextDrawShowForPlayer(playerid, LoginScreen[1]);
	TextDrawShowForPlayer(playerid, LoginScreen[2]);
	TextDrawShowForPlayer(playerid, LoginScreen[3]);
	TextDrawShowForPlayer(playerid, LoginScreen[4]);
	TextDrawShowForPlayer(playerid, LoginScreen[5]);

    if(GlobalVars[DoubleEXP] == true)
	{
		TextDrawSetString(DoubleEXPTD[0], "! Double EXP Event !");
		TextDrawSetString(DoubleEXPTD[1], "! Double EXP Event !");
	    TextDrawShowForPlayer(playerid, DoubleEXPTD[0]);
	    TextDrawShowForPlayer(playerid, DoubleEXPTD[1]);
	}
	if(GlobalVars[EasterEvent] == true)
	{
	    TextDrawSetString(DoubleEXPTD[0], "! Oster-Event !");
	    TextDrawSetString(DoubleEXPTD[1], "! Oster-Event !");
 		TextDrawShowForPlayer(playerid, DoubleEXPTD[0]);
	    TextDrawShowForPlayer(playerid, DoubleEXPTD[1]);
	}
	if(GlobalVars[HalloweenEvent] == true)
	{
	    TextDrawSetString(DoubleEXPTD[0], "! HALLOWEEN !");
	    TextDrawSetString(DoubleEXPTD[1], "! HALLOWEEN !");
 		TextDrawShowForPlayer(playerid, DoubleEXPTD[0]);
	    TextDrawShowForPlayer(playerid, DoubleEXPTD[1]);
	}
	//DynamicRobbery
	DynamicRobberyConnect(playerid);
	//UI
	HelpDialog_OnPlayerConnect(playerid);
	//Casino
	Casino_OnPlayerConnect(playerid);
	//Fluglieferant
	AirTrafficking_OnPlayerConnect(playerid);

	new name[MAX_PLAYER_NAME];
	GetPlayerName(playerid, name, sizeof(name));
	if(!IsPlayerNPC(playerid))
	{
		format(query,sizeof(query),"%s hat den Server betreten.",name);
		SendICPMsg(query);
	}
	PlayerFireTimer[playerid][2] = -1;
	GlobalVars[AktuellClients]++;
	PlayAudioStreamForPlayer(playerid, ServerSounds[SOUND_SERVER_INTRO]);
	if(GlobalVars[AktuellClients] > GlobalVars[Rekord])
	{
		format(query,128,""SERV_NAME" hat einen neuen Rekord: %d Spieler online!",GlobalVars[AktuellClients]);
		SendICPMsg(query);
		GlobalVars[Rekord] = GlobalVars[AktuellClients];
		mysql_SetInt("allgemein", "Rekord", GlobalVars[Rekord], "ServerID", "1");
	}
 	if(ServerRestartFolgt > 0)
    {
        SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Der Server wird neugestartet. Bitte versuche es in ein paar Sekunden erneut.");
        KickPlayer(playerid,"");
    }
   	if(ServerLadenStatus > 0 && !IsPlayerNPC(playerid))
    {
        SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Der Server wird geladen. Bitte versuche es in ein paar Sekunden erneut.");
        KickPlayer(playerid,"");
    }
	TextDrawShowForPlayer(playerid, Statusleiste[0]);
	TextDrawShowForPlayer(playerid, Statusleiste[1]);
	TextDrawShowForPlayer(playerid, Statusleiste[2]);
	TextDrawShowForPlayer(playerid, Statusleiste[3]);
	TextDrawShowForPlayer(playerid, StatusWerbung);
	TextDrawShowForPlayer(playerid, Time);




	//Spectate Textdraw - by GangstaSunny
	SpectateTD[playerid] = CreatePlayerTextDraw(playerid, 320.000000, 310.000000, "~y~Spieler: ~w~GangstaSunny (id: 12) ~n~~y~Bargeld: ~w~324293$ ~n~~y~Bank: ~w~37927349$");
	PlayerTextDrawAlignment(playerid, SpectateTD[playerid], TEXT_DRAW_ALIGN_CENTER);
	PlayerTextDrawBackgroundColour(playerid, SpectateTD[playerid], 255);
	PlayerTextDrawFont(playerid, SpectateTD[playerid], TEXT_DRAW_FONT_1);
	PlayerTextDrawLetterSize(playerid, SpectateTD[playerid], 0.300000, 1.000000);
	PlayerTextDrawColour(playerid, SpectateTD[playerid], -1);
	PlayerTextDrawSetOutline(playerid, SpectateTD[playerid], 0);
	PlayerTextDrawSetProportional(playerid, SpectateTD[playerid], true);
	PlayerTextDrawSetShadow(playerid, SpectateTD[playerid], 1);
	PlayerTextDrawUseBox(playerid, SpectateTD[playerid], true);
	PlayerTextDrawBoxColour(playerid, SpectateTD[playerid], 100);
	PlayerTextDrawTextSize(playerid, SpectateTD[playerid], 180.000000, 160.000000);
	PlayerTextDrawSetSelectable(playerid, SpectateTD[playerid], false);

	//Dashcam Textdraw - by GangstaSunny
	DashcamTD[playerid][0] = CreatePlayerTextDraw(playerid, 475.000000, 353.000000, "~r~");
	PlayerTextDrawBackgroundColour(playerid, DashcamTD[playerid][0], 255);
	PlayerTextDrawFont(playerid, DashcamTD[playerid][0], TEXT_DRAW_FONT_1);
	PlayerTextDrawLetterSize(playerid, DashcamTD[playerid][0], 0.500000, 7.299999);
	PlayerTextDrawColour(playerid, DashcamTD[playerid][0], -1);
	PlayerTextDrawSetOutline(playerid, DashcamTD[playerid][0], 0);
	PlayerTextDrawSetProportional(playerid, DashcamTD[playerid][0], true);
	PlayerTextDrawSetShadow(playerid, DashcamTD[playerid][0], 1);
	PlayerTextDrawUseBox(playerid, DashcamTD[playerid][0], true);
	PlayerTextDrawBoxColour(playerid, DashcamTD[playerid][0], 100);
	PlayerTextDrawTextSize(playerid, DashcamTD[playerid][0], 340.000000, 0.000000);
	PlayerTextDrawSetSelectable(playerid, DashcamTD[playerid][0], false);

	DashcamTD[playerid][1] = CreatePlayerTextDraw(playerid, 346.000000, 355.000000, "Model: -");
	PlayerTextDrawBackgroundColour(playerid, DashcamTD[playerid][1], 255);
	PlayerTextDrawFont(playerid, DashcamTD[playerid][1], TEXT_DRAW_FONT_2);
	PlayerTextDrawLetterSize(playerid, DashcamTD[playerid][1], 0.200000, 1.000000);
	PlayerTextDrawColour(playerid, DashcamTD[playerid][1], -1);
	PlayerTextDrawSetOutline(playerid, DashcamTD[playerid][1], 0);
	PlayerTextDrawSetProportional(playerid, DashcamTD[playerid][1], true);
	PlayerTextDrawSetShadow(playerid, DashcamTD[playerid][1], 1);
	PlayerTextDrawSetSelectable(playerid, DashcamTD[playerid][1], false);

	DashcamTD[playerid][2] = CreatePlayerTextDraw(playerid, 346.000000, 365.000000, "Zustand: -");
	PlayerTextDrawBackgroundColour(playerid, DashcamTD[playerid][2], 255);
	PlayerTextDrawFont(playerid, DashcamTD[playerid][2], TEXT_DRAW_FONT_2);
	PlayerTextDrawLetterSize(playerid, DashcamTD[playerid][2], 0.200000, 1.000000);
	PlayerTextDrawColour(playerid, DashcamTD[playerid][2], -1);
	PlayerTextDrawSetOutline(playerid, DashcamTD[playerid][2], 0);
	PlayerTextDrawSetProportional(playerid, DashcamTD[playerid][2], true);
	PlayerTextDrawSetShadow(playerid, DashcamTD[playerid][2], 1);
	PlayerTextDrawSetSelectable(playerid, DashcamTD[playerid][2], false);

	DashcamTD[playerid][3] = CreatePlayerTextDraw(playerid, 405.000000, 381.000000, "KM/H: -");
	PlayerTextDrawAlignment(playerid, DashcamTD[playerid][3], TEXT_DRAW_ALIGN_CENTER);
	PlayerTextDrawBackgroundColour(playerid, DashcamTD[playerid][3], 255);
	PlayerTextDrawFont(playerid, DashcamTD[playerid][3], TEXT_DRAW_FONT_2);
	PlayerTextDrawLetterSize(playerid, DashcamTD[playerid][3], 0.300000, 2.000000);
	PlayerTextDrawColour(playerid, DashcamTD[playerid][3], -1);
	PlayerTextDrawSetOutline(playerid, DashcamTD[playerid][3], 0);
	PlayerTextDrawSetProportional(playerid, DashcamTD[playerid][3], true);
	PlayerTextDrawSetShadow(playerid, DashcamTD[playerid][3], 1);
	PlayerTextDrawSetSelectable(playerid, DashcamTD[playerid][3], false);

	DashcamTD[playerid][4] = CreatePlayerTextDraw(playerid, 346.000000, 405.000000, "S.A.P.D Dashcam - Y/18 . Ver. 1802/01");
	PlayerTextDrawBackgroundColour(playerid, DashcamTD[playerid][4], 255);
	PlayerTextDrawFont(playerid, DashcamTD[playerid][4], TEXT_DRAW_FONT_2);
	PlayerTextDrawLetterSize(playerid, DashcamTD[playerid][4], 0.159999, 1.000000);
	PlayerTextDrawColour(playerid, DashcamTD[playerid][4], -1);
	PlayerTextDrawSetOutline(playerid, DashcamTD[playerid][4], 0);
	PlayerTextDrawSetProportional(playerid, DashcamTD[playerid][4], true);
	PlayerTextDrawSetShadow(playerid, DashcamTD[playerid][4], 1);
	PlayerTextDrawSetSelectable(playerid, DashcamTD[playerid][4], false);

	//Payback Textdraw - by GangstaSunny
	PaybackKarte[playerid] = CreatePlayerTextDraw(playerid, 400.000000, 373.000000, "GangstaSunny");
	PlayerTextDrawAlignment(playerid, PaybackKarte[playerid], TEXT_DRAW_ALIGN_CENTER);
	PlayerTextDrawBackgroundColour(playerid, PaybackKarte[playerid], 255);
	PlayerTextDrawFont(playerid, PaybackKarte[playerid], TEXT_DRAW_FONT_1);
	PlayerTextDrawLetterSize(playerid, PaybackKarte[playerid], 0.200000, 1.000000);
	PlayerTextDrawColour(playerid, PaybackKarte[playerid], 255);
	PlayerTextDrawSetOutline(playerid, PaybackKarte[playerid], 0);
	PlayerTextDrawSetProportional(playerid, PaybackKarte[playerid], true);
	PlayerTextDrawSetShadow(playerid, PaybackKarte[playerid], 0);
	PlayerTextDrawSetString(playerid, PaybackKarte[playerid], SpielerInfo[playerid][sName]);

	//Plus Minus Textdraw - by GangstaSunny
	PlusMinusTD[playerid] = CreatePlayerTextDraw(playerid, 477.000000, 401.000000, "~r~-20000$");
	PlayerTextDrawAlignment(playerid, PlusMinusTD[playerid], TEXT_DRAW_ALIGN_RIGHT);
	PlayerTextDrawBackgroundColour(playerid, PlusMinusTD[playerid], 255);
	PlayerTextDrawFont(playerid, PlusMinusTD[playerid], TEXT_DRAW_FONT_1);
	PlayerTextDrawLetterSize(playerid, PlusMinusTD[playerid], 0.800000, 2.000000);
	PlayerTextDrawColour(playerid, PlusMinusTD[playerid], -1);
	PlayerTextDrawSetOutline(playerid, PlusMinusTD[playerid], 0);
	PlayerTextDrawSetProportional(playerid, PlusMinusTD[playerid], true);
	PlayerTextDrawSetShadow(playerid, PlusMinusTD[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, PlusMinusTD[playerid], false);

	//Lotto Textdraw by TottyTurtle
	PLottoSchein[playerid] = CreatePlayerTextDraw(playerid,273.000000, 214.000000, "Losnummer~n~00 - 00 - 00~n~~n~Betrag:~t~120$");
	PlayerTextDrawBackgroundColour(playerid,PLottoSchein[playerid], 255);
	PlayerTextDrawFont(playerid,PLottoSchein[playerid], TEXT_DRAW_FONT_2);
	PlayerTextDrawLetterSize(playerid,PLottoSchein[playerid], 0.250000, 0.899999);
	PlayerTextDrawColour(playerid,PLottoSchein[playerid], 255);
	PlayerTextDrawSetOutline(playerid,PLottoSchein[playerid], 0);
	PlayerTextDrawSetProportional(playerid,PLottoSchein[playerid], true);
	PlayerTextDrawSetShadow(playerid,PLottoSchein[playerid], 0);

	//Dice TextDraw by Tobi_DeKey
	DiceDraw[playerid][0] = CreatePlayerTextDraw(playerid,410.000000, 180.000000, "~r~");
	PlayerTextDrawBackgroundColour(playerid,DiceDraw[playerid][0], 255);
	PlayerTextDrawFont(playerid,DiceDraw[playerid][0], TEXT_DRAW_FONT_1);
	PlayerTextDrawLetterSize(playerid,DiceDraw[playerid][0], 0.500000, 8.300000);
	PlayerTextDrawColour(playerid,DiceDraw[playerid][0], -1);
	PlayerTextDrawSetOutline(playerid,DiceDraw[playerid][0], 0);
	PlayerTextDrawSetProportional(playerid,DiceDraw[playerid][0], true);
	PlayerTextDrawSetShadow(playerid,DiceDraw[playerid][0], 1);
	PlayerTextDrawUseBox(playerid,DiceDraw[playerid][0], true);
	PlayerTextDrawBoxColour(playerid,DiceDraw[playerid][0], 102);
	PlayerTextDrawTextSize(playerid,DiceDraw[playerid][0], 243.000000, 1.000000);
	PlayerTextDrawSetSelectable(playerid,DiceDraw[playerid][0], false);

	DiceDraw[playerid][1] = CreatePlayerTextDraw(playerid,369.000000, 185.000000, "Spieler 2");
	PlayerTextDrawAlignment(playerid,DiceDraw[playerid][1], TEXT_DRAW_ALIGN_CENTER);
	PlayerTextDrawBackgroundColour(playerid,DiceDraw[playerid][1], 255);
	PlayerTextDrawFont(playerid,DiceDraw[playerid][1], TEXT_DRAW_FONT_2);
	PlayerTextDrawLetterSize(playerid,DiceDraw[playerid][1], 0.160000, 1.200000);
	PlayerTextDrawColour(playerid,DiceDraw[playerid][1], -1);
	PlayerTextDrawSetOutline(playerid,DiceDraw[playerid][1], 0);
	PlayerTextDrawSetProportional(playerid,DiceDraw[playerid][1], true);
	PlayerTextDrawSetShadow(playerid,DiceDraw[playerid][1], 1);
	PlayerTextDrawSetSelectable(playerid,DiceDraw[playerid][1], false);

	DiceDraw[playerid][2] = CreatePlayerTextDraw(playerid,403.000000, 201.000000, "~r~");
	PlayerTextDrawBackgroundColour(playerid,DiceDraw[playerid][2], 255);
	PlayerTextDrawFont(playerid,DiceDraw[playerid][2], TEXT_DRAW_FONT_1);
	PlayerTextDrawLetterSize(playerid,DiceDraw[playerid][2], 0.500000, -0.300000);
	PlayerTextDrawColour(playerid,DiceDraw[playerid][2], -1);
	PlayerTextDrawSetOutline(playerid,DiceDraw[playerid][2], 0);
	PlayerTextDrawSetProportional(playerid,DiceDraw[playerid][2], true);
	PlayerTextDrawSetShadow(playerid,DiceDraw[playerid][2], 1);
	PlayerTextDrawUseBox(playerid,DiceDraw[playerid][2], true);
	PlayerTextDrawBoxColour(playerid,DiceDraw[playerid][2], -1);
	PlayerTextDrawTextSize(playerid,DiceDraw[playerid][2], 250.000000, 1.000000);
	PlayerTextDrawSetSelectable(playerid,DiceDraw[playerid][2], false);

	DiceDraw[playerid][3] = CreatePlayerTextDraw(playerid,314.000000, 172.000000, "VS");
	PlayerTextDrawBackgroundColour(playerid,DiceDraw[playerid][3], 255);
	PlayerTextDrawFont(playerid,DiceDraw[playerid][3], TEXT_DRAW_FONT_2);
	PlayerTextDrawLetterSize(playerid,DiceDraw[playerid][3], 0.350000, 3.599998);
	PlayerTextDrawColour(playerid,DiceDraw[playerid][3], -1);
	PlayerTextDrawSetOutline(playerid,DiceDraw[playerid][3], 1);
	PlayerTextDrawSetProportional(playerid,DiceDraw[playerid][3], true);
	PlayerTextDrawSetSelectable(playerid,DiceDraw[playerid][3], false);

	DiceDraw[playerid][4] = CreatePlayerTextDraw(playerid,354.000000, 236.000000, "~r~");
	PlayerTextDrawBackgroundColour(playerid,DiceDraw[playerid][4], 255);
	PlayerTextDrawFont(playerid,DiceDraw[playerid][4], TEXT_DRAW_FONT_1);
	PlayerTextDrawLetterSize(playerid,DiceDraw[playerid][4], 0.500000, 1.000000);
	PlayerTextDrawColour(playerid,DiceDraw[playerid][4], -1);
	PlayerTextDrawSetOutline(playerid,DiceDraw[playerid][4], 0);
	PlayerTextDrawSetProportional(playerid,DiceDraw[playerid][4], true);
	PlayerTextDrawSetShadow(playerid,DiceDraw[playerid][4], 1);
	PlayerTextDrawUseBox(playerid,DiceDraw[playerid][4], true);
	PlayerTextDrawBoxColour(playerid,DiceDraw[playerid][4], 865730389);
	PlayerTextDrawTextSize(playerid,DiceDraw[playerid][4], 294.000000, 0.000000);
	PlayerTextDrawSetSelectable(playerid,DiceDraw[playerid][4], false);

	DiceDraw[playerid][5] = CreatePlayerTextDraw(playerid,305.000000, 235.000000, "Setzen");
	PlayerTextDrawBackgroundColour(playerid,DiceDraw[playerid][5], 255);
	PlayerTextDrawFont(playerid,DiceDraw[playerid][5], TEXT_DRAW_FONT_2);
	PlayerTextDrawLetterSize(playerid,DiceDraw[playerid][5], 0.200000, 1.000000);
	PlayerTextDrawColour(playerid,DiceDraw[playerid][5], -1);
	PlayerTextDrawSetOutline(playerid,DiceDraw[playerid][5], 0);
	PlayerTextDrawSetProportional(playerid,DiceDraw[playerid][5], true);
	PlayerTextDrawSetShadow(playerid, DiceDraw[playerid][5], 1);

	DiceDraw[playerid][6] = CreatePlayerTextDraw(playerid,279.000000, 185.000000, "Spieler 1");
	PlayerTextDrawAlignment(playerid,DiceDraw[playerid][6], TEXT_DRAW_ALIGN_CENTER);
	PlayerTextDrawBackgroundColour(playerid,DiceDraw[playerid][6], 255);
	PlayerTextDrawFont(playerid,DiceDraw[playerid][6], TEXT_DRAW_FONT_2);
	PlayerTextDrawLetterSize(playerid,DiceDraw[playerid][6], 0.160000, 1.200000);
	PlayerTextDrawColour(playerid,DiceDraw[playerid][6], -1);
	PlayerTextDrawSetOutline(playerid,DiceDraw[playerid][6], 0);
	PlayerTextDrawSetProportional(playerid,DiceDraw[playerid][6], true);
	PlayerTextDrawSetShadow(playerid,DiceDraw[playerid][6], 1);
	PlayerTextDrawSetSelectable(playerid,DiceDraw[playerid][6], false);

	DiceDraw[playerid][7] = CreatePlayerTextDraw(playerid,323.000000, 209.000000, "$0");
	PlayerTextDrawAlignment(playerid,DiceDraw[playerid][7], TEXT_DRAW_ALIGN_CENTER);
	PlayerTextDrawBackgroundColour(playerid,DiceDraw[playerid][7], 255);
	PlayerTextDrawFont(playerid,DiceDraw[playerid][7], TEXT_DRAW_FONT_2);
	PlayerTextDrawLetterSize(playerid,DiceDraw[playerid][7], 0.280000, 1.999999);
	PlayerTextDrawColour(playerid,DiceDraw[playerid][7], -1);
	PlayerTextDrawSetOutline(playerid,DiceDraw[playerid][7], 1);
	PlayerTextDrawSetProportional(playerid,DiceDraw[playerid][7], true);
	PlayerTextDrawSetSelectable(playerid,DiceDraw[playerid][7], false);

	DiceDraw[playerid][8] = CreatePlayerTextDraw(playerid,362.000000, 215.000000, "~r~");
	PlayerTextDrawBackgroundColour(playerid,DiceDraw[playerid][8], 255);
	PlayerTextDrawFont(playerid,DiceDraw[playerid][8], TEXT_DRAW_FONT_1);
	PlayerTextDrawLetterSize(playerid,DiceDraw[playerid][8], 0.490000, 1.000000);
	PlayerTextDrawColour(playerid,DiceDraw[playerid][8], -1);
	PlayerTextDrawSetOutline(playerid,DiceDraw[playerid][8], 0);
	PlayerTextDrawSetProportional(playerid,DiceDraw[playerid][8], true);
	PlayerTextDrawSetShadow(playerid,DiceDraw[playerid][8], 1);
	PlayerTextDrawUseBox(playerid,DiceDraw[playerid][8], true);
	PlayerTextDrawBoxColour(playerid,DiceDraw[playerid][8], 865730389);
	PlayerTextDrawTextSize(playerid,DiceDraw[playerid][8], 347.000000, 0.000000);

	DiceDraw[playerid][9] = CreatePlayerTextDraw(playerid,350.000000, 214.000000, "+");
	PlayerTextDrawBackgroundColour(playerid,DiceDraw[playerid][9], 255);
	PlayerTextDrawFont(playerid,DiceDraw[playerid][9], TEXT_DRAW_FONT_2);
	PlayerTextDrawLetterSize(playerid,DiceDraw[playerid][9], 0.200000, 1.000000);
	PlayerTextDrawColour(playerid,DiceDraw[playerid][9], -1);
	PlayerTextDrawSetOutline(playerid,DiceDraw[playerid][9], 0);
	PlayerTextDrawSetProportional(playerid,DiceDraw[playerid][9], true);
	PlayerTextDrawSetShadow(playerid, DiceDraw[playerid][9], 1);

	DiceDraw[playerid][10] = CreatePlayerTextDraw(playerid,286.000000, 215.000000, "~r~");
	PlayerTextDrawBackgroundColour(playerid,DiceDraw[playerid][10], 255);
	PlayerTextDrawFont(playerid,DiceDraw[playerid][10], TEXT_DRAW_FONT_1);
	PlayerTextDrawLetterSize(playerid,DiceDraw[playerid][10], 0.490000, 1.000000);
	PlayerTextDrawColour(playerid,DiceDraw[playerid][10], -1);
	PlayerTextDrawSetOutline(playerid,DiceDraw[playerid][10], 0);
	PlayerTextDrawSetProportional(playerid,DiceDraw[playerid][10], true);
	PlayerTextDrawSetShadow(playerid,DiceDraw[playerid][10], 1);
	PlayerTextDrawUseBox(playerid,DiceDraw[playerid][10], true);
	PlayerTextDrawBoxColour(playerid,DiceDraw[playerid][10], 865730389);
	PlayerTextDrawTextSize(playerid,DiceDraw[playerid][10], 295.000000, 0.000000);

	DiceDraw[playerid][11] = CreatePlayerTextDraw(playerid,288.000000, 214.000000, "-");
	PlayerTextDrawBackgroundColour(playerid,DiceDraw[playerid][11], 255);
	PlayerTextDrawFont(playerid,DiceDraw[playerid][11], TEXT_DRAW_FONT_2);
	PlayerTextDrawLetterSize(playerid,DiceDraw[playerid][11], 0.200000, 1.000000);
	PlayerTextDrawColour(playerid,DiceDraw[playerid][11], -1);
	PlayerTextDrawSetOutline(playerid,DiceDraw[playerid][11], 0);
	PlayerTextDrawSetProportional(playerid,DiceDraw[playerid][11], true);
	PlayerTextDrawSetShadow(playerid, DiceDraw[playerid][11], 1);

	//Achievement TextDraw by GangstaSunny
	AchievementDraw[playerid][0] = CreatePlayerTextDraw(playerid, 610.000000, 150.000000, "~r~");
	PlayerTextDrawBackgroundColour(playerid, AchievementDraw[playerid][0], 255);
	PlayerTextDrawFont(playerid, AchievementDraw[playerid][0], TEXT_DRAW_FONT_1);
	PlayerTextDrawLetterSize(playerid, AchievementDraw[playerid][0], 0.500000, 1.000000);
	PlayerTextDrawColour(playerid, AchievementDraw[playerid][0], -1);
	PlayerTextDrawSetOutline(playerid, AchievementDraw[playerid][0], 0);
	PlayerTextDrawSetProportional(playerid, AchievementDraw[playerid][0], true);
	PlayerTextDrawSetShadow(playerid, AchievementDraw[playerid][0], 1);
	PlayerTextDrawUseBox(playerid, AchievementDraw[playerid][0], true);
	PlayerTextDrawBoxColour(playerid, AchievementDraw[playerid][0], 255);
	PlayerTextDrawTextSize(playerid, AchievementDraw[playerid][0], 460.000000, 0.000000);
	PlayerTextDrawSetSelectable(playerid, AchievementDraw[playerid][0], false);

	AchievementDraw[playerid][1] = CreatePlayerTextDraw(playerid, 610.000000, 160.000000, "~r~");
	PlayerTextDrawBackgroundColour(playerid, AchievementDraw[playerid][1], 255);
	PlayerTextDrawFont(playerid, AchievementDraw[playerid][1], TEXT_DRAW_FONT_1);
	PlayerTextDrawLetterSize(playerid, AchievementDraw[playerid][1], 0.500000, 6.000000);
	PlayerTextDrawColour(playerid, AchievementDraw[playerid][1], -1);
	PlayerTextDrawSetOutline(playerid, AchievementDraw[playerid][1], 0);
	PlayerTextDrawSetProportional(playerid, AchievementDraw[playerid][1], true);
	PlayerTextDrawSetShadow(playerid, AchievementDraw[playerid][1], 1);
	PlayerTextDrawUseBox(playerid, AchievementDraw[playerid][1], true);
	PlayerTextDrawBoxColour(playerid, AchievementDraw[playerid][1], 100);
	PlayerTextDrawTextSize(playerid, AchievementDraw[playerid][1], 460.000000, 0.000000);
	PlayerTextDrawSetSelectable(playerid, AchievementDraw[playerid][1], false);

	AchievementDraw[playerid][2] = CreatePlayerTextDraw(playerid, 464.000000, 149.000000, "LD_CHAT:thumbup");
	PlayerTextDrawBackgroundColour(playerid, AchievementDraw[playerid][2], 0);
	PlayerTextDrawFont(playerid, AchievementDraw[playerid][2], TEXT_DRAW_FONT_SPRITE_DRAW);
	PlayerTextDrawLetterSize(playerid, AchievementDraw[playerid][2], 0.500000, 1.000000);
	PlayerTextDrawColour(playerid, AchievementDraw[playerid][2], -1);
	PlayerTextDrawSetOutline(playerid, AchievementDraw[playerid][2], 0);
	PlayerTextDrawSetProportional(playerid, AchievementDraw[playerid][2], true);
	PlayerTextDrawSetShadow(playerid, AchievementDraw[playerid][2], 1);
	PlayerTextDrawUseBox(playerid, AchievementDraw[playerid][2], true);
	PlayerTextDrawBoxColour(playerid, AchievementDraw[playerid][2], 255);
	PlayerTextDrawTextSize(playerid, AchievementDraw[playerid][2], 10.000000, 10.000000);
	PlayerTextDrawSetSelectable(playerid, AchievementDraw[playerid][2], false);

	AchievementDraw[playerid][3] = CreatePlayerTextDraw(playerid, 476.000000, 149.000000, "Achievement / Mission abgeschlossen");
	PlayerTextDrawBackgroundColour(playerid, AchievementDraw[playerid][3], 255);
	PlayerTextDrawFont(playerid, AchievementDraw[playerid][3], TEXT_DRAW_FONT_1);
	PlayerTextDrawLetterSize(playerid, AchievementDraw[playerid][3], 0.200000, 1.000000);
	PlayerTextDrawColour(playerid, AchievementDraw[playerid][3], -1);
	PlayerTextDrawSetOutline(playerid, AchievementDraw[playerid][3], 0);
	PlayerTextDrawSetProportional(playerid, AchievementDraw[playerid][3], true);
	PlayerTextDrawSetShadow(playerid, AchievementDraw[playerid][3], 1);
	PlayerTextDrawSetSelectable(playerid, AchievementDraw[playerid][3], false);

	AchievementDraw[playerid][4] = CreatePlayerTextDraw(playerid, 534.000000, 172.000000, "Erlange einen Killing-Spree im Paintball");
	PlayerTextDrawAlignment(playerid, AchievementDraw[playerid][4], TEXT_DRAW_ALIGN_CENTER);
	PlayerTextDrawBackgroundColour(playerid, AchievementDraw[playerid][4], 255);
	PlayerTextDrawFont(playerid, AchievementDraw[playerid][4], TEXT_DRAW_FONT_1);
	PlayerTextDrawLetterSize(playerid, AchievementDraw[playerid][4], 0.200000, 1.000000);
	PlayerTextDrawColour(playerid, AchievementDraw[playerid][4], -10197761);
	PlayerTextDrawSetOutline(playerid, AchievementDraw[playerid][4], 0);
	PlayerTextDrawSetProportional(playerid, AchievementDraw[playerid][4], true);
	PlayerTextDrawSetShadow(playerid, AchievementDraw[playerid][4], 1);
	PlayerTextDrawSetSelectable(playerid, AchievementDraw[playerid][4], false);

	AchievementDraw[playerid][5] = CreatePlayerTextDraw(playerid, 534.000000, 192.000000, "+ 70000 EXP");
	PlayerTextDrawAlignment(playerid, AchievementDraw[playerid][5], TEXT_DRAW_ALIGN_CENTER);
	PlayerTextDrawBackgroundColour(playerid, AchievementDraw[playerid][5], 255);
	PlayerTextDrawFont(playerid, AchievementDraw[playerid][5], TEXT_DRAW_FONT_1);
	PlayerTextDrawLetterSize(playerid, AchievementDraw[playerid][5], 0.200000, 1.000000);
	PlayerTextDrawColour(playerid, AchievementDraw[playerid][5], -10197761);
	PlayerTextDrawSetOutline(playerid, AchievementDraw[playerid][5], 0);
	PlayerTextDrawSetProportional(playerid, AchievementDraw[playerid][5], true);
	PlayerTextDrawSetShadow(playerid, AchievementDraw[playerid][5], 1);
	PlayerTextDrawSetSelectable(playerid, AchievementDraw[playerid][5], false);


	//Stats Textdraw by GangstaStunny
	StatsDraw[playerid][0] = CreatePlayerTextDraw(playerid, 499.000000, 110.000000, "~r~");
	PlayerTextDrawBackgroundColour(playerid, StatsDraw[playerid][0], 255);
	PlayerTextDrawFont(playerid, StatsDraw[playerid][0], TEXT_DRAW_FONT_1);
	PlayerTextDrawLetterSize(playerid, StatsDraw[playerid][0], 0.500000, 26.400005);
	PlayerTextDrawColour(playerid, StatsDraw[playerid][0], -1);
	PlayerTextDrawSetOutline(playerid, StatsDraw[playerid][0], 0);
	PlayerTextDrawSetProportional(playerid, StatsDraw[playerid][0], true);
	PlayerTextDrawSetShadow(playerid, StatsDraw[playerid][0], 1);
	PlayerTextDrawUseBox(playerid, StatsDraw[playerid][0], true);
	PlayerTextDrawBoxColour(playerid, StatsDraw[playerid][0], 100);
	PlayerTextDrawTextSize(playerid, StatsDraw[playerid][0], 120.000000, 0.000000);
	PlayerTextDrawSetSelectable(playerid, StatsDraw[playerid][0], false);

	StatsDraw[playerid][1] = CreatePlayerTextDraw(playerid, 413.000000, 89.000000, "~r~");
	PlayerTextDrawBackgroundColour(playerid, StatsDraw[playerid][1], 255);
	PlayerTextDrawFont(playerid, StatsDraw[playerid][1], TEXT_DRAW_FONT_1);
	PlayerTextDrawLetterSize(playerid, StatsDraw[playerid][1], 0.500000, 2.000000);
	PlayerTextDrawColour(playerid, StatsDraw[playerid][1], -1);
	PlayerTextDrawSetOutline(playerid, StatsDraw[playerid][1], 0);
	PlayerTextDrawSetProportional(playerid, StatsDraw[playerid][1], true);
	PlayerTextDrawSetShadow(playerid, StatsDraw[playerid][1], 1);
	PlayerTextDrawUseBox(playerid, StatsDraw[playerid][1], true);
	PlayerTextDrawBoxColour(playerid, StatsDraw[playerid][1], 100);
	PlayerTextDrawTextSize(playerid, StatsDraw[playerid][1], 200.000000, 0.000000);
	PlayerTextDrawSetSelectable(playerid, StatsDraw[playerid][1], false);

	StatsDraw[playerid][2] = CreatePlayerTextDraw(playerid, 410.000000, 110.000000, "~r~");
	PlayerTextDrawBackgroundColour(playerid, StatsDraw[playerid][2], 255);
	PlayerTextDrawFont(playerid, StatsDraw[playerid][2], TEXT_DRAW_FONT_1);
	PlayerTextDrawLetterSize(playerid, StatsDraw[playerid][2], 0.500000, -0.300000);
	PlayerTextDrawColour(playerid, StatsDraw[playerid][2], -1);
	PlayerTextDrawSetOutline(playerid, StatsDraw[playerid][2], 0);
	PlayerTextDrawSetProportional(playerid, StatsDraw[playerid][2], true);
	PlayerTextDrawSetShadow(playerid, StatsDraw[playerid][2], 1);
	PlayerTextDrawUseBox(playerid, StatsDraw[playerid][2], true);
	PlayerTextDrawBoxColour(playerid, StatsDraw[playerid][2], -853137665);
	PlayerTextDrawTextSize(playerid, StatsDraw[playerid][2], 203.000000, 0.000000);
	PlayerTextDrawSetSelectable(playerid, StatsDraw[playerid][2], false);

	StatsDraw[playerid][3] = CreatePlayerTextDraw(playerid, 304.000000, 94.000000, "GangstaSunny");
	PlayerTextDrawAlignment(playerid, StatsDraw[playerid][3], TEXT_DRAW_ALIGN_CENTER);
	PlayerTextDrawBackgroundColour(playerid, StatsDraw[playerid][3], 255);
	PlayerTextDrawFont(playerid, StatsDraw[playerid][3], TEXT_DRAW_FONT_0);
	PlayerTextDrawLetterSize(playerid, StatsDraw[playerid][3], 0.500000, 1.000000);
	PlayerTextDrawColour(playerid, StatsDraw[playerid][3], -1);
	PlayerTextDrawSetOutline(playerid, StatsDraw[playerid][3], 0);
	PlayerTextDrawSetProportional(playerid, StatsDraw[playerid][3], true);
	PlayerTextDrawSetShadow(playerid, StatsDraw[playerid][3], 1);
	PlayerTextDrawSetSelectable(playerid, StatsDraw[playerid][3], false);

	StatsDraw[playerid][4] = CreatePlayerTextDraw(playerid, 120.000000, 120.000000, "SkinID");
	PlayerTextDrawBackgroundColour(playerid, StatsDraw[playerid][4], 0);
	PlayerTextDrawFont(playerid, StatsDraw[playerid][4], TEXT_DRAW_FONT_MODEL_PREVIEW);
	PlayerTextDrawLetterSize(playerid, StatsDraw[playerid][4], 0.500000, 1.000000);
	PlayerTextDrawColour(playerid, StatsDraw[playerid][4], -1);
	PlayerTextDrawSetOutline(playerid, StatsDraw[playerid][4], 0);
	PlayerTextDrawSetProportional(playerid, StatsDraw[playerid][4], true);
	PlayerTextDrawSetShadow(playerid, StatsDraw[playerid][4], 1);
	PlayerTextDrawUseBox(playerid, StatsDraw[playerid][4], true);
	PlayerTextDrawBoxColour(playerid, StatsDraw[playerid][4], 255);
	PlayerTextDrawTextSize(playerid, StatsDraw[playerid][4], 90.000000, 80.000000);
	PlayerTextDrawSetPreviewModel(playerid, StatsDraw[playerid][4], 255);
	PlayerTextDrawSetPreviewRot(playerid, StatsDraw[playerid][4], 0.000000, 0.000000, 0.000000, 1.000000);
	PlayerTextDrawSetSelectable(playerid, StatsDraw[playerid][4], false);

	StatsDraw[playerid][5] = CreatePlayerTextDraw(playerid, 204.000000, 120.000000, "Fortschritt");
	PlayerTextDrawBackgroundColour(playerid, StatsDraw[playerid][5], 255);
	PlayerTextDrawFont(playerid, StatsDraw[playerid][5], TEXT_DRAW_FONT_0);
	PlayerTextDrawLetterSize(playerid, StatsDraw[playerid][5], 0.400000, 1.200000);
	PlayerTextDrawColour(playerid, StatsDraw[playerid][5], -853137665);
	PlayerTextDrawSetOutline(playerid, StatsDraw[playerid][5], 0);
	PlayerTextDrawSetProportional(playerid, StatsDraw[playerid][5], true);
	PlayerTextDrawSetShadow(playerid, StatsDraw[playerid][5], 1);
	PlayerTextDrawSetSelectable(playerid, StatsDraw[playerid][5], false);

	StatsDraw[playerid][6] = CreatePlayerTextDraw(playerid, 204.000000, 134.000000, "Level: 10~n~EXP: 1337/14000~n~Noch ~g~45 Minuten~w~ bis zum Payday~n~Paintball: 238 Kills - 12 Tode");
	PlayerTextDrawBackgroundColour(playerid, StatsDraw[playerid][6], 255);
	PlayerTextDrawFont(playerid, StatsDraw[playerid][6], TEXT_DRAW_FONT_2);
	PlayerTextDrawLetterSize(playerid, StatsDraw[playerid][6], 0.170000, 1.000000);
	PlayerTextDrawColour(playerid, StatsDraw[playerid][6], -1);
	PlayerTextDrawSetOutline(playerid, StatsDraw[playerid][6], 0);
	PlayerTextDrawSetProportional(playerid, StatsDraw[playerid][6], true);
	PlayerTextDrawSetShadow(playerid, StatsDraw[playerid][6], 1);
	PlayerTextDrawSetSelectable(playerid, StatsDraw[playerid][6], false);

	StatsDraw[playerid][7] = CreatePlayerTextDraw(playerid, 204.000000, 180.000000, "Fraktion und Nebenjob");
	PlayerTextDrawBackgroundColour(playerid, StatsDraw[playerid][7], 255);
	PlayerTextDrawFont(playerid, StatsDraw[playerid][7], TEXT_DRAW_FONT_0);
	PlayerTextDrawLetterSize(playerid, StatsDraw[playerid][7], 0.400000, 1.200000);
	PlayerTextDrawColour(playerid, StatsDraw[playerid][7], -853137665);
	PlayerTextDrawSetOutline(playerid, StatsDraw[playerid][7], 0);
	PlayerTextDrawSetProportional(playerid, StatsDraw[playerid][7], true);
	PlayerTextDrawSetShadow(playerid, StatsDraw[playerid][7], 1);
	PlayerTextDrawSetSelectable(playerid, StatsDraw[playerid][7], false);

	StatsDraw[playerid][8] = CreatePlayerTextDraw(playerid, 204.000000, 194.000000, "Fraktion: San Andreas Government Department~n~Rang: Secret Serivce Mitglied~n~Gehalt: ~g~4500$");
	PlayerTextDrawBackgroundColour(playerid, StatsDraw[playerid][8], 255);
	PlayerTextDrawFont(playerid, StatsDraw[playerid][8], TEXT_DRAW_FONT_2);
	PlayerTextDrawLetterSize(playerid, StatsDraw[playerid][8], 0.170000, 1.000000);
	PlayerTextDrawColour(playerid, StatsDraw[playerid][8], -1);
	PlayerTextDrawSetOutline(playerid, StatsDraw[playerid][8], 0);
	PlayerTextDrawSetProportional(playerid, StatsDraw[playerid][8], true);
	PlayerTextDrawSetShadow(playerid, StatsDraw[playerid][8], 1);
	PlayerTextDrawSetSelectable(playerid, StatsDraw[playerid][8], false);

	StatsDraw[playerid][9] = CreatePlayerTextDraw(playerid, 204.000000, 224.000000, "Nebenjob: Trucker~n~Scheck: ~g~11000$");
	PlayerTextDrawBackgroundColour(playerid, StatsDraw[playerid][9], 255);
	PlayerTextDrawFont(playerid, StatsDraw[playerid][9], TEXT_DRAW_FONT_2);
	PlayerTextDrawLetterSize(playerid, StatsDraw[playerid][9], 0.170000, 1.000000);
	PlayerTextDrawColour(playerid, StatsDraw[playerid][9], -1);
	PlayerTextDrawSetOutline(playerid, StatsDraw[playerid][9], 0);
	PlayerTextDrawSetProportional(playerid, StatsDraw[playerid][9], true);
	PlayerTextDrawSetShadow(playerid, StatsDraw[playerid][9], 1);
	PlayerTextDrawSetSelectable(playerid, StatsDraw[playerid][9], false);

	StatsDraw[playerid][10] = CreatePlayerTextDraw(playerid, 204.000000, 250.000000, "Allgemeine Informationen");
	PlayerTextDrawBackgroundColour(playerid, StatsDraw[playerid][10], 255);
	PlayerTextDrawFont(playerid, StatsDraw[playerid][10], TEXT_DRAW_FONT_0);
	PlayerTextDrawLetterSize(playerid, StatsDraw[playerid][10], 0.400000, 1.200000);
	PlayerTextDrawColour(playerid, StatsDraw[playerid][10], -853137665);
	PlayerTextDrawSetOutline(playerid, StatsDraw[playerid][10], 0);
	PlayerTextDrawSetProportional(playerid, StatsDraw[playerid][10], true);
	PlayerTextDrawSetShadow(playerid, StatsDraw[playerid][10], 1);
	PlayerTextDrawSetSelectable(playerid, StatsDraw[playerid][10], false);

	StatsDraw[playerid][11] = CreatePlayerTextDraw(playerid, 204.000000, 264.000000, "Verwarnungen: 0~n~Fraktionssperre: ~g~Nein~w~~n~Kongressmitglied: Ja~n~Senator: Nein");
	PlayerTextDrawBackgroundColour(playerid, StatsDraw[playerid][11], 255);
	PlayerTextDrawFont(playerid, StatsDraw[playerid][11], TEXT_DRAW_FONT_2);
	PlayerTextDrawLetterSize(playerid, StatsDraw[playerid][11], 0.170000, 1.000000);
	PlayerTextDrawColour(playerid, StatsDraw[playerid][11], -1);
	PlayerTextDrawSetOutline(playerid, StatsDraw[playerid][11], 0);
	PlayerTextDrawSetProportional(playerid, StatsDraw[playerid][11], true);
	PlayerTextDrawSetShadow(playerid, StatsDraw[playerid][11], 1);
	PlayerTextDrawSetSelectable(playerid, StatsDraw[playerid][11], false);

	StatsDraw[playerid][12] = CreatePlayerTextDraw(playerid, 410.000000, 178.000000, "~r~");
	PlayerTextDrawBackgroundColour(playerid, StatsDraw[playerid][12], 255);
	PlayerTextDrawFont(playerid, StatsDraw[playerid][12], TEXT_DRAW_FONT_1);
	PlayerTextDrawLetterSize(playerid, StatsDraw[playerid][12], 0.500000, -0.300000);
	PlayerTextDrawColour(playerid, StatsDraw[playerid][12], -1);
	PlayerTextDrawSetOutline(playerid, StatsDraw[playerid][12], 0);
	PlayerTextDrawSetProportional(playerid, StatsDraw[playerid][12], true);
	PlayerTextDrawSetShadow(playerid, StatsDraw[playerid][12], 1);
	PlayerTextDrawUseBox(playerid, StatsDraw[playerid][12], true);
	PlayerTextDrawBoxColour(playerid, StatsDraw[playerid][12], -853137665);
	PlayerTextDrawTextSize(playerid, StatsDraw[playerid][12], 203.000000, 0.000000);
	PlayerTextDrawSetSelectable(playerid, StatsDraw[playerid][12], false);

	StatsDraw[playerid][13] = CreatePlayerTextDraw(playerid, 410.000000, 249.000000, "~r~");
	PlayerTextDrawBackgroundColour(playerid, StatsDraw[playerid][13], 255);
	PlayerTextDrawFont(playerid, StatsDraw[playerid][13], TEXT_DRAW_FONT_1);
	PlayerTextDrawLetterSize(playerid, StatsDraw[playerid][13], 0.500000, -0.300000);
	PlayerTextDrawColour(playerid, StatsDraw[playerid][13], -1);
	PlayerTextDrawSetOutline(playerid, StatsDraw[playerid][13], 0);
	PlayerTextDrawSetProportional(playerid, StatsDraw[playerid][13], true);
	PlayerTextDrawSetShadow(playerid, StatsDraw[playerid][13], 1);
	PlayerTextDrawUseBox(playerid, StatsDraw[playerid][13], true);
	PlayerTextDrawBoxColour(playerid, StatsDraw[playerid][13], -853137665);
	PlayerTextDrawTextSize(playerid, StatsDraw[playerid][13], 203.000000, 0.000000);
	PlayerTextDrawSetSelectable(playerid, StatsDraw[playerid][13], false);

	StatsDraw[playerid][14] = CreatePlayerTextDraw(playerid, 410.000000, 307.000000, "~r~");
	PlayerTextDrawBackgroundColour(playerid, StatsDraw[playerid][14], 255);
	PlayerTextDrawFont(playerid, StatsDraw[playerid][14], TEXT_DRAW_FONT_1);
	PlayerTextDrawLetterSize(playerid, StatsDraw[playerid][14], 0.500000, -0.300000);
	PlayerTextDrawColour(playerid, StatsDraw[playerid][14], -1);
	PlayerTextDrawSetOutline(playerid, StatsDraw[playerid][14], 0);
	PlayerTextDrawSetProportional(playerid, StatsDraw[playerid][14], true);
	PlayerTextDrawSetShadow(playerid, StatsDraw[playerid][14], 1);
	PlayerTextDrawUseBox(playerid, StatsDraw[playerid][14], true);
	PlayerTextDrawBoxColour(playerid, StatsDraw[playerid][14], -853137665);
	PlayerTextDrawTextSize(playerid, StatsDraw[playerid][14], 203.000000, 0.000000);
	PlayerTextDrawSetSelectable(playerid, StatsDraw[playerid][14], false);

	StatsDraw[playerid][15] = CreatePlayerTextDraw(playerid, 307.000000, 310.000000, "Du bist in der Gruppe ~g~Alle meine Entchen~n~~w~Du bist ~r~Projektleitung");
	PlayerTextDrawAlignment(playerid, StatsDraw[playerid][15], TEXT_DRAW_ALIGN_CENTER);
	PlayerTextDrawBackgroundColour(playerid, StatsDraw[playerid][15], 255);
	PlayerTextDrawFont(playerid, StatsDraw[playerid][15], TEXT_DRAW_FONT_2);
	PlayerTextDrawLetterSize(playerid, StatsDraw[playerid][15], 0.170000, 1.000000);
	PlayerTextDrawColour(playerid, StatsDraw[playerid][15], -1);
	PlayerTextDrawSetOutline(playerid, StatsDraw[playerid][15], 0);
	PlayerTextDrawSetProportional(playerid, StatsDraw[playerid][15], true);
	PlayerTextDrawSetShadow(playerid, StatsDraw[playerid][15], 1);
	PlayerTextDrawSetSelectable(playerid, StatsDraw[playerid][15], false);

	StatsDraw[playerid][16] = CreatePlayerTextDraw(playerid, 307.000000, 337.000000, "redv-reallife.de Reloaded.de");
	PlayerTextDrawAlignment(playerid, StatsDraw[playerid][16], TEXT_DRAW_ALIGN_CENTER);
	PlayerTextDrawBackgroundColour(playerid, StatsDraw[playerid][16], 255);
	PlayerTextDrawFont(playerid, StatsDraw[playerid][16], TEXT_DRAW_FONT_0);
	PlayerTextDrawLetterSize(playerid, StatsDraw[playerid][16], 0.500000, 1.000000);
	PlayerTextDrawColour(playerid, StatsDraw[playerid][16], -1);
	PlayerTextDrawSetOutline(playerid, StatsDraw[playerid][16], 0);
	PlayerTextDrawSetProportional(playerid, StatsDraw[playerid][16], true);
	PlayerTextDrawSetShadow(playerid, StatsDraw[playerid][16], 1);
	PlayerTextDrawSetSelectable(playerid, StatsDraw[playerid][16], false);

	StatsDraw[playerid][17] = CreatePlayerTextDraw(playerid, 410.000000, 120.000000, "SkinID Job");
	PlayerTextDrawBackgroundColour(playerid, StatsDraw[playerid][17], 0);
	PlayerTextDrawFont(playerid, StatsDraw[playerid][17], TEXT_DRAW_FONT_MODEL_PREVIEW);
	PlayerTextDrawLetterSize(playerid, StatsDraw[playerid][17], 0.500000, 1.000000);
	PlayerTextDrawColour(playerid, StatsDraw[playerid][17], -1);
	PlayerTextDrawSetOutline(playerid, StatsDraw[playerid][17], 0);
	PlayerTextDrawSetProportional(playerid, StatsDraw[playerid][17], true);
	PlayerTextDrawSetShadow(playerid, StatsDraw[playerid][17], 1);
	PlayerTextDrawUseBox(playerid, StatsDraw[playerid][17], true);
	PlayerTextDrawBoxColour(playerid, StatsDraw[playerid][17], 255);
	PlayerTextDrawTextSize(playerid, StatsDraw[playerid][17], 90.000000, 80.000000);
	PlayerTextDrawSetPreviewModel(playerid, StatsDraw[playerid][17], 26);
	PlayerTextDrawSetPreviewRot(playerid, StatsDraw[playerid][17], 0.000000, 0.000000, 0.000000, 1.000000);
	PlayerTextDrawSetSelectable(playerid, StatsDraw[playerid][17], false);

 	//Robbar Textdraw
    RobBar[playerid][0] = CreatePlayerTextDraw(playerid,211.000000, 390.000000, "~r~");
	PlayerTextDrawBackgroundColour(playerid,RobBar[playerid][0], 255);
	PlayerTextDrawFont(playerid,RobBar[playerid][0], TEXT_DRAW_FONT_1);
	PlayerTextDrawLetterSize(playerid,RobBar[playerid][0], 0.670000, 1.900000);
	PlayerTextDrawColour(playerid,RobBar[playerid][0], -1);
	PlayerTextDrawSetOutline(playerid,RobBar[playerid][0], 0);
	PlayerTextDrawSetProportional(playerid,RobBar[playerid][0], true);
	PlayerTextDrawSetShadow(playerid,RobBar[playerid][0], 1);
	PlayerTextDrawUseBox(playerid,RobBar[playerid][0], true);
	PlayerTextDrawBoxColour(playerid,RobBar[playerid][0], 16843108);
	PlayerTextDrawTextSize(playerid,RobBar[playerid][0], 409.000000, -1.000000);
	PlayerTextDrawSetSelectable(playerid,RobBar[playerid][0], false);

	RobBar[playerid][1] = CreatePlayerTextDraw(playerid,211.000000, 390.000000, "~r~");
	PlayerTextDrawBackgroundColour(playerid,RobBar[playerid][1], 255);
	PlayerTextDrawFont(playerid,RobBar[playerid][1], TEXT_DRAW_FONT_1);
	PlayerTextDrawLetterSize(playerid,RobBar[playerid][1], 0.670000, 1.900000);
	PlayerTextDrawColour(playerid,RobBar[playerid][1], 65381);
	PlayerTextDrawSetOutline(playerid,RobBar[playerid][1], 0);
	PlayerTextDrawSetProportional(playerid,RobBar[playerid][1], true);
	PlayerTextDrawSetShadow(playerid,RobBar[playerid][1], 1);
	PlayerTextDrawUseBox(playerid,RobBar[playerid][1], true);
	PlayerTextDrawBoxColour(playerid,RobBar[playerid][1], 8585061);
	PlayerTextDrawTextSize(playerid,RobBar[playerid][1], 409.000000, -1.000000);
	PlayerTextDrawSetSelectable(playerid,RobBar[playerid][1], false);

	RobBar[playerid][2] = CreatePlayerTextDraw(playerid,311.000000, 392.000000, "Raub in Prozess");
	PlayerTextDrawAlignment(playerid,RobBar[playerid][2], TEXT_DRAW_ALIGN_CENTER);
	PlayerTextDrawBackgroundColour(playerid,RobBar[playerid][2], 255);
	PlayerTextDrawFont(playerid,RobBar[playerid][2], TEXT_DRAW_FONT_3);
	PlayerTextDrawLetterSize(playerid,RobBar[playerid][2], 0.539999, 1.500000);
	PlayerTextDrawColour(playerid,RobBar[playerid][2], -1);
	PlayerTextDrawSetOutline(playerid,RobBar[playerid][2], 1);
	PlayerTextDrawSetProportional(playerid,RobBar[playerid][2], true);
	PlayerTextDrawSetSelectable(playerid,RobBar[playerid][2], false);

	//Bankrob Textdraw
	BankraubTD[playerid][0] = CreatePlayerTextDraw(playerid,609.000000, 240.000000, "~r~");
	PlayerTextDrawBackgroundColour(playerid,BankraubTD[playerid][0], 255);
	PlayerTextDrawFont(playerid,BankraubTD[playerid][0], TEXT_DRAW_FONT_1);
	PlayerTextDrawLetterSize(playerid,BankraubTD[playerid][0], 0.500000, 5.000000);
	PlayerTextDrawColour(playerid,BankraubTD[playerid][0], -1);
	PlayerTextDrawSetOutline(playerid,BankraubTD[playerid][0], 0);
	PlayerTextDrawSetProportional(playerid,BankraubTD[playerid][0], true);
	PlayerTextDrawSetShadow(playerid,BankraubTD[playerid][0], 1);
	PlayerTextDrawUseBox(playerid,BankraubTD[playerid][0], true);
	PlayerTextDrawBoxColour(playerid,BankraubTD[playerid][0], 16843133);
	PlayerTextDrawTextSize(playerid,BankraubTD[playerid][0], 493.000000, 0.000000);
	PlayerTextDrawSetSelectable(playerid,BankraubTD[playerid][0], false);

	BankraubTD[playerid][1] = CreatePlayerTextDraw(playerid,490.000000, 230.000000, "LD_CHAT:badchat");
	PlayerTextDrawBackgroundColour(playerid,BankraubTD[playerid][1], 255);
	PlayerTextDrawFont(playerid,BankraubTD[playerid][1], TEXT_DRAW_FONT_SPRITE_DRAW);
	PlayerTextDrawLetterSize(playerid,BankraubTD[playerid][1], 0.500000, 1.000000);
	PlayerTextDrawColour(playerid,BankraubTD[playerid][1], -1);
	PlayerTextDrawSetOutline(playerid,BankraubTD[playerid][1], 0);
	PlayerTextDrawSetProportional(playerid,BankraubTD[playerid][1], true);
	PlayerTextDrawSetShadow(playerid,BankraubTD[playerid][1], 1);
	PlayerTextDrawUseBox(playerid,BankraubTD[playerid][1], true);
	PlayerTextDrawBoxColour(playerid,BankraubTD[playerid][1], 255);
	PlayerTextDrawTextSize(playerid,BankraubTD[playerid][1], 20.000000, 20.000000);
	PlayerTextDrawSetSelectable(playerid,BankraubTD[playerid][1], false);

	BankraubTD[playerid][2] = CreatePlayerTextDraw(playerid,510.000000, 237.000000, "ld_shtr:cbarm");
	PlayerTextDrawBackgroundColour(playerid,BankraubTD[playerid][2], 255);
	PlayerTextDrawFont(playerid,BankraubTD[playerid][2], TEXT_DRAW_FONT_SPRITE_DRAW);
	PlayerTextDrawLetterSize(playerid,BankraubTD[playerid][2], 0.500000, 1.000000);
	PlayerTextDrawColour(playerid,BankraubTD[playerid][2], -1);
	PlayerTextDrawSetOutline(playerid,BankraubTD[playerid][2], 0);
	PlayerTextDrawSetProportional(playerid,BankraubTD[playerid][2], true);
	PlayerTextDrawSetShadow(playerid,BankraubTD[playerid][2], 1);
	PlayerTextDrawUseBox(playerid,BankraubTD[playerid][2], true);
	PlayerTextDrawBoxColour(playerid,BankraubTD[playerid][2], 255);
	PlayerTextDrawTextSize(playerid,BankraubTD[playerid][2], 98.000000, 10.000000);
	PlayerTextDrawSetSelectable(playerid,BankraubTD[playerid][2], false);

	BankraubTD[playerid][3] = CreatePlayerTextDraw(playerid,550.000000, 250.000000, "~w~ GELD IM VAN: ~b~ 13000$");
	PlayerTextDrawAlignment(playerid,BankraubTD[playerid][3], TEXT_DRAW_ALIGN_CENTER);
	PlayerTextDrawBackgroundColour(playerid,BankraubTD[playerid][3], 255);
	PlayerTextDrawFont(playerid,BankraubTD[playerid][3], TEXT_DRAW_FONT_2);
	PlayerTextDrawLetterSize(playerid,BankraubTD[playerid][3], 0.200000, 1.000000);
	PlayerTextDrawColour(playerid,BankraubTD[playerid][3], -1);
	PlayerTextDrawSetOutline(playerid,BankraubTD[playerid][3], 0);
	PlayerTextDrawSetProportional(playerid,BankraubTD[playerid][3], true);
	PlayerTextDrawSetShadow(playerid,BankraubTD[playerid][3], 1);
	PlayerTextDrawSetSelectable(playerid,BankraubTD[playerid][3], false);

	BankraubTD[playerid][4] = CreatePlayerTextDraw(playerid,550.000000, 260.000000, "~w~ GELDBEUTEL IN DER BANK: ~b~ 5");
	PlayerTextDrawAlignment(playerid,BankraubTD[playerid][4], TEXT_DRAW_ALIGN_CENTER);
	PlayerTextDrawBackgroundColour(playerid,BankraubTD[playerid][4], 255);
	PlayerTextDrawFont(playerid,BankraubTD[playerid][4], TEXT_DRAW_FONT_2);
	PlayerTextDrawLetterSize(playerid,BankraubTD[playerid][4], 0.159999, 1.000000);
	PlayerTextDrawColour(playerid,BankraubTD[playerid][4], -1);
	PlayerTextDrawSetOutline(playerid,BankraubTD[playerid][4], 0);
	PlayerTextDrawSetProportional(playerid,BankraubTD[playerid][4], true);
	PlayerTextDrawSetShadow(playerid,BankraubTD[playerid][4], 1);
	PlayerTextDrawSetSelectable(playerid,BankraubTD[playerid][4], false);

	BankraubTD[playerid][5] = CreatePlayerTextDraw(playerid,550.000000, 272.000000, "~w~ NOCH ~b~ 16 Sekunden ~w~ BIS ZUM NEUEN GELDBEUTEL");
	PlayerTextDrawAlignment(playerid,BankraubTD[playerid][5], TEXT_DRAW_ALIGN_CENTER);
	PlayerTextDrawBackgroundColour(playerid,BankraubTD[playerid][5], 255);
	PlayerTextDrawFont(playerid,BankraubTD[playerid][5], TEXT_DRAW_FONT_2);
	PlayerTextDrawLetterSize(playerid,BankraubTD[playerid][5], 0.100000, 1.000000);
	PlayerTextDrawColour(playerid,BankraubTD[playerid][5], -1);
	PlayerTextDrawSetOutline(playerid,BankraubTD[playerid][5], 0);
	PlayerTextDrawSetProportional(playerid,BankraubTD[playerid][5], true);
	PlayerTextDrawSetShadow(playerid,BankraubTD[playerid][5], 1);
	PlayerTextDrawSetSelectable(playerid,BankraubTD[playerid][5], false);

    //Ingame Control Panel
    ICPBox[playerid] = CreatePlayerTextDraw(playerid, 510.000000, 110.000000, "~r~");
	PlayerTextDrawBackgroundColour(playerid, ICPBox[playerid], 255);
	PlayerTextDrawFont(playerid, ICPBox[playerid], TEXT_DRAW_FONT_1);
	PlayerTextDrawLetterSize(playerid, ICPBox[playerid], 0.500000, 22.000000);
	PlayerTextDrawColour(playerid, ICPBox[playerid], -1);
	PlayerTextDrawSetOutline(playerid, ICPBox[playerid], 0);
	PlayerTextDrawSetProportional(playerid, ICPBox[playerid], true);
	PlayerTextDrawSetShadow(playerid, ICPBox[playerid], 1);
	PlayerTextDrawUseBox(playerid, ICPBox[playerid], true);
	PlayerTextDrawBoxColour(playerid, ICPBox[playerid], 16843108);
	PlayerTextDrawTextSize(playerid, ICPBox[playerid], 120.000000, 0.000000);

	ICPTitel[playerid] = CreatePlayerTextDraw(playerid, 240.000000, 118.000000, "Ingame Control Panel");
	PlayerTextDrawBackgroundColour(playerid, ICPTitel[playerid], 255);
	PlayerTextDrawFont(playerid, ICPTitel[playerid], TEXT_DRAW_FONT_0);
	PlayerTextDrawLetterSize(playerid, ICPTitel[playerid], 0.600000, 2.000000);
	PlayerTextDrawColour(playerid, ICPTitel[playerid], -23449857);
	PlayerTextDrawSetOutline(playerid, ICPTitel[playerid], 0);
	PlayerTextDrawSetProportional(playerid, ICPTitel[playerid], true);
	PlayerTextDrawSetShadow(playerid, ICPTitel[playerid], 1);

    ICPMessage[playerid] = CreatePlayerTextDraw(playerid, 130.000000, 140.000000, "~r~Allgemeine Nachrichten~n~~w~Zeigt zum Beispiel an ob ein Spieler gemutet, gestellt oder verwarnt wurde.");
	PlayerTextDrawBackgroundColour(playerid, ICPMessage[playerid], 255);
	PlayerTextDrawFont(playerid, ICPMessage[playerid], TEXT_DRAW_FONT_1);
	PlayerTextDrawLetterSize(playerid, ICPMessage[playerid], 0.200000, 1.000000);
	PlayerTextDrawColour(playerid, ICPMessage[playerid], -1);
	PlayerTextDrawSetOutline(playerid, ICPMessage[playerid], 0);
	PlayerTextDrawSetProportional(playerid, ICPMessage[playerid], true);
	PlayerTextDrawSetShadow(playerid, ICPMessage[playerid], 1);

	ICPMessageEdit[playerid] = CreatePlayerTextDraw(playerid, 426.000000, 149.000000, "~g~] Aktiviert");
	PlayerTextDrawBackgroundColour(playerid, ICPMessageEdit[playerid], 255);
	PlayerTextDrawFont(playerid, ICPMessageEdit[playerid], TEXT_DRAW_FONT_2);
	PlayerTextDrawLetterSize(playerid, ICPMessageEdit[playerid], 0.200000, 1.000000);
	PlayerTextDrawColour(playerid, ICPMessageEdit[playerid], -1);
	PlayerTextDrawSetOutline(playerid, ICPMessageEdit[playerid], 0);
	PlayerTextDrawSetProportional(playerid, ICPMessageEdit[playerid], true);
	PlayerTextDrawSetShadow(playerid, ICPMessageEdit[playerid], 1);

	ICPHitsound[playerid] = CreatePlayerTextDraw(playerid, 130.000000, 164.000000, "~r~Hitsound~n~~w~Sobald du getroffen wirst, oder du jemanden triffst bekommst du einen Ton.");
	PlayerTextDrawBackgroundColour(playerid, ICPHitsound[playerid], 255);
	PlayerTextDrawFont(playerid, ICPHitsound[playerid], TEXT_DRAW_FONT_1);
	PlayerTextDrawLetterSize(playerid, ICPHitsound[playerid], 0.200000, 1.000000);
	PlayerTextDrawColour(playerid, ICPHitsound[playerid], -1);
	PlayerTextDrawSetOutline(playerid, ICPHitsound[playerid], 0);
	PlayerTextDrawSetProportional(playerid, ICPHitsound[playerid], true);
	PlayerTextDrawSetShadow(playerid, ICPHitsound[playerid], 1);

	ICPHitsoundEdit[playerid] = CreatePlayerTextDraw(playerid, 426.000000, 172.000000, "~r~] Deaktiviert");
	PlayerTextDrawBackgroundColour(playerid, ICPHitsoundEdit[playerid], 255);
	PlayerTextDrawFont(playerid, ICPHitsoundEdit[playerid], TEXT_DRAW_FONT_2);
	PlayerTextDrawLetterSize(playerid, ICPHitsoundEdit[playerid], 0.200000, 1.000000);
	PlayerTextDrawColour(playerid, ICPHitsoundEdit[playerid], -1);
	PlayerTextDrawSetOutline(playerid, ICPHitsoundEdit[playerid], 0);
	PlayerTextDrawSetProportional(playerid, ICPHitsoundEdit[playerid], true);
	PlayerTextDrawSetShadow(playerid, ICPHitsoundEdit[playerid], 1);

	ICPSave[playerid] = CreatePlayerTextDraw(playerid, 270.000000, 295.000000, "Speichern & Verlassen");
	PlayerTextDrawBackgroundColour(playerid, ICPSave[playerid], 255);
	PlayerTextDrawFont(playerid, ICPSave[playerid], TEXT_DRAW_FONT_1);
	PlayerTextDrawLetterSize(playerid, ICPSave[playerid], 0.300000, 1.000000);
	PlayerTextDrawColour(playerid, ICPSave[playerid], -1);
	PlayerTextDrawSetOutline(playerid, ICPSave[playerid], 0);
	PlayerTextDrawSetProportional(playerid, ICPSave[playerid], true);
	PlayerTextDrawSetShadow(playerid, ICPSave[playerid], 1);

	ICPOChat[playerid] = CreatePlayerTextDraw(playerid, 130.000000, 188.000000, "~r~Out of Character Chat~n~~w~Du bekommst alle Nachrichten aus dem OOC beziehungsweise O-Chat.");
	PlayerTextDrawBackgroundColour(playerid, ICPOChat[playerid], 255);
	PlayerTextDrawFont(playerid, ICPOChat[playerid], TEXT_DRAW_FONT_1);
	PlayerTextDrawLetterSize(playerid, ICPOChat[playerid], 0.200000, 1.000000);
	PlayerTextDrawColour(playerid, ICPOChat[playerid], -1);
	PlayerTextDrawSetOutline(playerid, ICPOChat[playerid], 0);
	PlayerTextDrawSetProportional(playerid, ICPOChat[playerid], true);
	PlayerTextDrawSetShadow(playerid, ICPOChat[playerid], 1);

	ICPOChatEdit[playerid] = CreatePlayerTextDraw(playerid, 426.000000, 195.000000, "~g~] Aktiviert");
	PlayerTextDrawBackgroundColour(playerid, ICPOChatEdit[playerid], 255);
	PlayerTextDrawFont(playerid, ICPOChatEdit[playerid], TEXT_DRAW_FONT_2);
	PlayerTextDrawLetterSize(playerid, ICPOChatEdit[playerid], 0.200000, 1.000000);
	PlayerTextDrawColour(playerid, ICPOChatEdit[playerid], -1);
	PlayerTextDrawSetOutline(playerid, ICPOChatEdit[playerid], 0);
	PlayerTextDrawSetProportional(playerid, ICPOChatEdit[playerid], true);
	PlayerTextDrawSetShadow(playerid, ICPOChatEdit[playerid], 1);

	ICPCamera[playerid] = CreatePlayerTextDraw(playerid, 130.000000, 212.000000, "~r~Kamerafahrten~n~~w~Schwenkende Kamera durch San Andreas beim Login.");
	PlayerTextDrawBackgroundColour(playerid, ICPCamera[playerid], 255);
	PlayerTextDrawFont(playerid, ICPCamera[playerid], TEXT_DRAW_FONT_1);
	PlayerTextDrawLetterSize(playerid, ICPCamera[playerid], 0.200000, 1.000000);
	PlayerTextDrawColour(playerid, ICPCamera[playerid], -1);
	PlayerTextDrawSetOutline(playerid, ICPCamera[playerid], 0);
	PlayerTextDrawSetProportional(playerid, ICPCamera[playerid], true);
	PlayerTextDrawSetShadow(playerid, ICPCamera[playerid], 1);

	ICPCameraEdit[playerid] = CreatePlayerTextDraw(playerid, 426.000000, 218.000000, "~r~] Deaktiviert");
	PlayerTextDrawBackgroundColour(playerid, ICPCameraEdit[playerid], 255);
	PlayerTextDrawFont(playerid, ICPCameraEdit[playerid], TEXT_DRAW_FONT_2);
	PlayerTextDrawLetterSize(playerid, ICPCameraEdit[playerid], 0.200000, 1.000000);
	PlayerTextDrawColour(playerid, ICPCameraEdit[playerid], -1);
	PlayerTextDrawSetOutline(playerid, ICPCameraEdit[playerid], 0);
	PlayerTextDrawSetProportional(playerid, ICPCameraEdit[playerid], true);
	PlayerTextDrawSetShadow(playerid, ICPCameraEdit[playerid], 1);

	ICPHandy[playerid] = CreatePlayerTextDraw(playerid, 130.000000, 236.000000, "~r~Handy Status~n~~w~Keine nervigen Anrufe oder SMS mehr. Zu dem ist keine Ortung mehr moeglich.");
	PlayerTextDrawBackgroundColour(playerid, ICPHandy[playerid], 255);
	PlayerTextDrawFont(playerid, ICPHandy[playerid], TEXT_DRAW_FONT_1);
	PlayerTextDrawLetterSize(playerid, ICPHandy[playerid], 0.200000, 1.000000);
	PlayerTextDrawColour(playerid, ICPHandy[playerid], -1);
	PlayerTextDrawSetOutline(playerid, ICPHandy[playerid], 0);
	PlayerTextDrawSetProportional(playerid, ICPHandy[playerid], true);
	PlayerTextDrawSetShadow(playerid, ICPHandy[playerid], 1);

	ICPHandyEdit[playerid] = CreatePlayerTextDraw(playerid, 426.000000, 241.000000, "~r~] Ausgeschaltet");
	PlayerTextDrawBackgroundColour(playerid, ICPHandyEdit[playerid], 255);
	PlayerTextDrawFont(playerid, ICPHandyEdit[playerid], TEXT_DRAW_FONT_2);
	PlayerTextDrawLetterSize(playerid, ICPHandyEdit[playerid], 0.200000, 1.000000);
	PlayerTextDrawColour(playerid, ICPHandyEdit[playerid], -1);
	PlayerTextDrawSetOutline(playerid, ICPHandyEdit[playerid], 0);
	PlayerTextDrawSetProportional(playerid, ICPHandyEdit[playerid], true);
	PlayerTextDrawSetShadow(playerid, ICPHandyEdit[playerid], 1);

	ICPBlinker[playerid] = CreatePlayerTextDraw(playerid, 130.000000, 260.000000, "~r~Tastenbelegung~n~~w~Belege einige Funktionen mit Tasten deiner Wahl.");
	PlayerTextDrawBackgroundColour(playerid, ICPBlinker[playerid], 255);
	PlayerTextDrawFont(playerid, ICPBlinker[playerid], TEXT_DRAW_FONT_1);
	PlayerTextDrawLetterSize(playerid, ICPBlinker[playerid], 0.200000, 1.000000);
	PlayerTextDrawColour(playerid, ICPBlinker[playerid], -1);
	PlayerTextDrawSetOutline(playerid, ICPBlinker[playerid], 0);
	PlayerTextDrawSetProportional(playerid, ICPBlinker[playerid], true);
	PlayerTextDrawSetShadow(playerid, ICPBlinker[playerid], 1);

	ICPBlinkerEdit[playerid] = CreatePlayerTextDraw(playerid, 426.000000, 264.000000, "~y~] Einstellung");
	PlayerTextDrawBackgroundColour(playerid, ICPBlinkerEdit[playerid], 255);
	PlayerTextDrawFont(playerid, ICPBlinkerEdit[playerid], TEXT_DRAW_FONT_2);
	PlayerTextDrawLetterSize(playerid, ICPBlinkerEdit[playerid], 0.200000, 1.000000);
	PlayerTextDrawColour(playerid, ICPBlinkerEdit[playerid], -1);
	PlayerTextDrawSetOutline(playerid, ICPBlinkerEdit[playerid], 0);
	PlayerTextDrawSetProportional(playerid, ICPBlinkerEdit[playerid], true);
	PlayerTextDrawSetShadow(playerid, ICPBlinkerEdit[playerid], 1);

	//Freeze Button
	Freeze[playerid] = CreatePlayerTextDraw(playerid, 0, 0, " ");

	//EXP Informationen & Levelup - by GangstaSunny
	EXPInfo[playerid] = CreatePlayerTextDraw(playerid, 320.000000, 424.000000, "EXP: 7013 / 12300");
	PlayerTextDrawAlignment(playerid, EXPInfo[playerid], TEXT_DRAW_ALIGN_CENTER);
	PlayerTextDrawBackgroundColour(playerid, EXPInfo[playerid], 255);
	PlayerTextDrawFont(playerid, EXPInfo[playerid], TEXT_DRAW_FONT_2);
	PlayerTextDrawLetterSize(playerid, EXPInfo[playerid], 0.250000, 0.799999);
	PlayerTextDrawColour(playerid, EXPInfo[playerid], -1);
	PlayerTextDrawSetOutline(playerid, EXPInfo[playerid], 0);
	PlayerTextDrawSetProportional(playerid, EXPInfo[playerid], true);
	PlayerTextDrawSetShadow(playerid, EXPInfo[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, EXPInfo[playerid], false);

	LevelUP[playerid] = CreatePlayerTextDraw(playerid, 320.000000, 410.000000, ">> LEVEL UP <<");
	PlayerTextDrawAlignment(playerid, LevelUP[playerid], TEXT_DRAW_ALIGN_CENTER);
	PlayerTextDrawBackgroundColour(playerid, LevelUP[playerid], 255);
	PlayerTextDrawFont(playerid, LevelUP[playerid], TEXT_DRAW_FONT_3);
	PlayerTextDrawLetterSize(playerid, LevelUP[playerid], 0.500000, 1.000000);
	PlayerTextDrawColour(playerid, LevelUP[playerid], 16711935);
	PlayerTextDrawSetOutline(playerid, LevelUP[playerid], 1);
	PlayerTextDrawSetProportional(playerid, LevelUP[playerid], true);
	PlayerTextDrawSetSelectable(playerid, LevelUP[playerid], false);

	//No-Dm-Zone Textdraw - byGangstaSunny
	NoDMZoneTextdraw = TextDrawCreate(177.000000, 404.000000, "NO-DM-ZONE");
	TextDrawAlignment(NoDMZoneTextdraw, TEXT_DRAW_ALIGN_CENTER);
	TextDrawBackgroundColour(NoDMZoneTextdraw, 200);
	TextDrawFont(NoDMZoneTextdraw, TEXT_DRAW_FONT_1);
	TextDrawLetterSize(NoDMZoneTextdraw, 0.310000, 1.300000);
	TextDrawColour(NoDMZoneTextdraw, -16776961);
	TextDrawSetOutline(NoDMZoneTextdraw, 1);
	TextDrawSetProportional(NoDMZoneTextdraw, true);
	TextDrawSetProportional(NoDMZoneTextdraw, true);

	//Tacho by GangstaSunny
	Tacho[playerid][0] = CreatePlayerTextDraw(playerid, 630.000000, 353.000000, "~r~");
	PlayerTextDrawBackgroundColour(playerid, Tacho[playerid][0], 255);
	PlayerTextDrawFont(playerid, Tacho[playerid][0], TEXT_DRAW_FONT_1);
	PlayerTextDrawLetterSize(playerid, Tacho[playerid][0], 0.500000, 7.299999);
	PlayerTextDrawColour(playerid, Tacho[playerid][0], -1);
	PlayerTextDrawSetOutline(playerid, Tacho[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid, Tacho[playerid][0], true);
	PlayerTextDrawUseBox(playerid, Tacho[playerid][0], true);
	PlayerTextDrawBoxColour(playerid, Tacho[playerid][0], 85);
	PlayerTextDrawTextSize(playerid, Tacho[playerid][0], 480.000000, 0.000000);
	PlayerTextDrawSetSelectable(playerid, Tacho[playerid][0], false);

	Tacho[playerid][1] = CreatePlayerTextDraw(playerid, 479.000000, 332.000000, "400");
	PlayerTextDrawBackgroundColour(playerid, Tacho[playerid][1], 0);
	PlayerTextDrawFont(playerid, Tacho[playerid][1], TEXT_DRAW_FONT_MODEL_PREVIEW);
	PlayerTextDrawLetterSize(playerid, Tacho[playerid][1], 0.500000, 1.000000);
	PlayerTextDrawColour(playerid, Tacho[playerid][1], -1);
	PlayerTextDrawSetOutline(playerid, Tacho[playerid][1], 0);
	PlayerTextDrawSetProportional(playerid, Tacho[playerid][1], true);
	PlayerTextDrawSetShadow(playerid, Tacho[playerid][1], 1);
	PlayerTextDrawUseBox(playerid, Tacho[playerid][1], true);
	PlayerTextDrawBoxColour(playerid, Tacho[playerid][1], -2004318055);
	PlayerTextDrawTextSize(playerid, Tacho[playerid][1], 80.000000, 70.000000);
	PlayerTextDrawSetPreviewModel(playerid, Tacho[playerid][1], 560);
	PlayerTextDrawSetPreviewRot(playerid, Tacho[playerid][1], -16.000000, 0.000000, -55.000000, 1.000000);
	PlayerTextDrawSetSelectable(playerid, Tacho[playerid][1], false);

	Tacho[playerid][2] = CreatePlayerTextDraw(playerid, 625.000000, 364.000000, "~r~");
	PlayerTextDrawBackgroundColour(playerid, Tacho[playerid][2], 255);
	PlayerTextDrawFont(playerid, Tacho[playerid][2], TEXT_DRAW_FONT_1);
	PlayerTextDrawLetterSize(playerid, Tacho[playerid][2], 0.500000, 0.699999);
	PlayerTextDrawColour(playerid, Tacho[playerid][2], -1);
	PlayerTextDrawSetOutline(playerid, Tacho[playerid][2], 0);
	PlayerTextDrawSetProportional(playerid, Tacho[playerid][2], true);
	PlayerTextDrawSetShadow(playerid, Tacho[playerid][2], 1);
	PlayerTextDrawUseBox(playerid, Tacho[playerid][2], true);
	PlayerTextDrawBoxColour(playerid, Tacho[playerid][2], -5636067);
	PlayerTextDrawTextSize(playerid, Tacho[playerid][2], 553.000000, 0.000000);
	PlayerTextDrawSetSelectable(playerid, Tacho[playerid][2], false);

	Tacho[playerid][3] = CreatePlayerTextDraw(playerid, 589.000000, 362.000000, "Kraftstoff 78%");
	PlayerTextDrawAlignment(playerid, Tacho[playerid][3], TEXT_DRAW_ALIGN_CENTER);
	PlayerTextDrawBackgroundColour(playerid, Tacho[playerid][3], 255);
	PlayerTextDrawFont(playerid, Tacho[playerid][3], TEXT_DRAW_FONT_2);
	PlayerTextDrawLetterSize(playerid, Tacho[playerid][3], 0.159999, 1.000000);
	PlayerTextDrawColour(playerid, Tacho[playerid][3], -1);
	PlayerTextDrawSetOutline(playerid, Tacho[playerid][3], 0);
	PlayerTextDrawSetProportional(playerid, Tacho[playerid][3], true);
	PlayerTextDrawSetShadow(playerid, Tacho[playerid][3], 1);
	PlayerTextDrawSetSelectable(playerid, Tacho[playerid][3], false);

	Tacho[playerid][4] = CreatePlayerTextDraw(playerid, 625.000000, 384.000000, "~r~");
	PlayerTextDrawBackgroundColour(playerid, Tacho[playerid][4], 255);
	PlayerTextDrawFont(playerid, Tacho[playerid][4], TEXT_DRAW_FONT_1);
	PlayerTextDrawLetterSize(playerid, Tacho[playerid][4], 0.500000, 0.699999);
	PlayerTextDrawColour(playerid, Tacho[playerid][4], -1);
	PlayerTextDrawSetOutline(playerid, Tacho[playerid][4], 0);
	PlayerTextDrawSetProportional(playerid, Tacho[playerid][4], true);
	PlayerTextDrawSetShadow(playerid, Tacho[playerid][4], 1);
	PlayerTextDrawUseBox(playerid, Tacho[playerid][4], true);
	PlayerTextDrawBoxColour(playerid, Tacho[playerid][4], -5636067);
	PlayerTextDrawTextSize(playerid, Tacho[playerid][4], 553.000000, -3.000000);
	PlayerTextDrawSetSelectable(playerid, Tacho[playerid][4], false);

	Tacho[playerid][5] = CreatePlayerTextDraw(playerid, 589.000000, 382.000000, "Schaden 100%");
	PlayerTextDrawAlignment(playerid, Tacho[playerid][5], TEXT_DRAW_ALIGN_CENTER);
	PlayerTextDrawBackgroundColour(playerid, Tacho[playerid][5], 255);
	PlayerTextDrawFont(playerid, Tacho[playerid][5], TEXT_DRAW_FONT_2);
	PlayerTextDrawLetterSize(playerid, Tacho[playerid][5], 0.159999, 1.000000);
	PlayerTextDrawColour(playerid, Tacho[playerid][5], -1);
	PlayerTextDrawSetOutline(playerid, Tacho[playerid][5], 0);
	PlayerTextDrawSetProportional(playerid, Tacho[playerid][5], true);
	PlayerTextDrawSetShadow(playerid, Tacho[playerid][5], 1);
	PlayerTextDrawSetSelectable(playerid, Tacho[playerid][5], false);

	Tacho[playerid][6] = CreatePlayerTextDraw(playerid, 518.000000, 382.000000, "~y~121");
	PlayerTextDrawAlignment(playerid, Tacho[playerid][6], TEXT_DRAW_ALIGN_CENTER);
	PlayerTextDrawBackgroundColour(playerid, Tacho[playerid][6], 255);
	PlayerTextDrawFont(playerid, Tacho[playerid][6], TEXT_DRAW_FONT_2);
	PlayerTextDrawLetterSize(playerid, Tacho[playerid][6], 0.560000, 2.000000);
	PlayerTextDrawColour(playerid, Tacho[playerid][6], -1);
	PlayerTextDrawSetOutline(playerid, Tacho[playerid][6], 0);
	PlayerTextDrawSetProportional(playerid, Tacho[playerid][6], true);
	PlayerTextDrawSetShadow(playerid, Tacho[playerid][6], 1);
	PlayerTextDrawSetSelectable(playerid, Tacho[playerid][6], false);

	Tacho[playerid][7] = CreatePlayerTextDraw(playerid, 518.000000, 398.000000, "KM/H");
	PlayerTextDrawAlignment(playerid, Tacho[playerid][7], TEXT_DRAW_ALIGN_CENTER);
	PlayerTextDrawBackgroundColour(playerid, Tacho[playerid][7], 255);
	PlayerTextDrawFont(playerid, Tacho[playerid][7], TEXT_DRAW_FONT_2);
	PlayerTextDrawLetterSize(playerid, Tacho[playerid][7], 0.260000, 1.200000);
	PlayerTextDrawColour(playerid, Tacho[playerid][7], -1);
	PlayerTextDrawSetOutline(playerid, Tacho[playerid][7], 0);
	PlayerTextDrawSetProportional(playerid, Tacho[playerid][7], true);
	PlayerTextDrawSetShadow(playerid, Tacho[playerid][7], 1);
	PlayerTextDrawSetSelectable(playerid, Tacho[playerid][7], false);

	Tacho[playerid][8] = CreatePlayerTextDraw(playerid, 625.000000, 404.000000, "~r~");
	PlayerTextDrawBackgroundColour(playerid, Tacho[playerid][8], 255);
	PlayerTextDrawFont(playerid, Tacho[playerid][8], TEXT_DRAW_FONT_1);
	PlayerTextDrawLetterSize(playerid, Tacho[playerid][8], 0.500000, 0.699999);
	PlayerTextDrawColour(playerid, Tacho[playerid][8], -1);
	PlayerTextDrawSetOutline(playerid, Tacho[playerid][8], 0);
	PlayerTextDrawSetProportional(playerid, Tacho[playerid][8], true);
	PlayerTextDrawSetShadow(playerid, Tacho[playerid][8], 1);
	PlayerTextDrawUseBox(playerid, Tacho[playerid][8], true);
	PlayerTextDrawBoxColour(playerid, Tacho[playerid][8], -5636067);
	PlayerTextDrawTextSize(playerid, Tacho[playerid][8], 553.000000, 0.000000);
	PlayerTextDrawSetSelectable(playerid, Tacho[playerid][8], false);

	Tacho[playerid][9] = CreatePlayerTextDraw(playerid, 589.000000, 402.000000, "7.329 Kilometer");
	PlayerTextDrawAlignment(playerid, Tacho[playerid][9], TEXT_DRAW_ALIGN_CENTER);
	PlayerTextDrawBackgroundColour(playerid, Tacho[playerid][9], 255);
	PlayerTextDrawFont(playerid, Tacho[playerid][9], TEXT_DRAW_FONT_2);
	PlayerTextDrawLetterSize(playerid, Tacho[playerid][9], 0.159999, 1.000000);
	PlayerTextDrawColour(playerid, Tacho[playerid][9], -1);
	PlayerTextDrawSetOutline(playerid, Tacho[playerid][9], 0);
	PlayerTextDrawSetProportional(playerid, Tacho[playerid][9], true);
	PlayerTextDrawSetShadow(playerid, Tacho[playerid][9], 1);
	PlayerTextDrawSetSelectable(playerid, Tacho[playerid][9], false);

	Tacho[playerid][10] = CreatePlayerTextDraw(playerid, 508.000000, 411.000000, "LD_NONE:ship2");
	PlayerTextDrawAlignment(playerid, Tacho[playerid][10], TEXT_DRAW_ALIGN_CENTER);
	PlayerTextDrawBackgroundColour(playerid, Tacho[playerid][10], 255);
	PlayerTextDrawFont(playerid, Tacho[playerid][10], TEXT_DRAW_FONT_SPRITE_DRAW);
	PlayerTextDrawLetterSize(playerid, Tacho[playerid][10], 0.170000, 0.899999);
	PlayerTextDrawColour(playerid, Tacho[playerid][10], -1);
	PlayerTextDrawSetOutline(playerid, Tacho[playerid][10], 0);
	PlayerTextDrawSetProportional(playerid, Tacho[playerid][10], true);
	PlayerTextDrawSetShadow(playerid, Tacho[playerid][10], 1);
	PlayerTextDrawUseBox(playerid, Tacho[playerid][10], true);
	PlayerTextDrawBoxColour(playerid, Tacho[playerid][10], 255);
	PlayerTextDrawTextSize(playerid, Tacho[playerid][10], 8.000000, 6.000000);
	PlayerTextDrawSetSelectable(playerid, Tacho[playerid][10], false);

	Tacho[playerid][11] = CreatePlayerTextDraw(playerid, 519.000000, 411.000000, "LD_NONE:ship3");
	PlayerTextDrawAlignment(playerid, Tacho[playerid][11], TEXT_DRAW_ALIGN_CENTER);
	PlayerTextDrawBackgroundColour(playerid, Tacho[playerid][11], 255);
	PlayerTextDrawFont(playerid, Tacho[playerid][11], TEXT_DRAW_FONT_SPRITE_DRAW);
	PlayerTextDrawLetterSize(playerid, Tacho[playerid][11], 0.170000, 0.899999);
	PlayerTextDrawColour(playerid, Tacho[playerid][11], -1);
	PlayerTextDrawSetOutline(playerid, Tacho[playerid][11], 0);
	PlayerTextDrawSetProportional(playerid, Tacho[playerid][11], true);
	PlayerTextDrawSetShadow(playerid, Tacho[playerid][11], 1);
	PlayerTextDrawUseBox(playerid, Tacho[playerid][11], true);
	PlayerTextDrawBoxColour(playerid, Tacho[playerid][11], 255);
	PlayerTextDrawTextSize(playerid, Tacho[playerid][11], 8.000000, 6.000000);
	PlayerTextDrawSetSelectable(playerid, Tacho[playerid][11], false);

	Tacho[playerid][12] = CreatePlayerTextDraw(playerid,530.000000, 411.000000, "LD_NONE:ship");
	PlayerTextDrawBackgroundColour(playerid,Tacho[playerid][12], 255);
	PlayerTextDrawFont(playerid,Tacho[playerid][12], TEXT_DRAW_FONT_SPRITE_DRAW);
	PlayerTextDrawLetterSize(playerid,Tacho[playerid][12], 0.500000, 1.000000);
	PlayerTextDrawColour(playerid,Tacho[playerid][12], -1);
	PlayerTextDrawSetOutline(playerid,Tacho[playerid][12], 0);
	PlayerTextDrawSetProportional(playerid,Tacho[playerid][12], true);
	PlayerTextDrawSetShadow(playerid,Tacho[playerid][12], 1);
	PlayerTextDrawUseBox(playerid,Tacho[playerid][12], true);
	PlayerTextDrawBoxColour(playerid,Tacho[playerid][12], 255);
	PlayerTextDrawTextSize(playerid,Tacho[playerid][12], 7.000000, 6.000000);
	PlayerTextDrawSetSelectable(playerid,Tacho[playerid][12], false);

	//Countdown Textdraw - by Tobi_DeKey
	CountdownDraw[playerid][0] = CreatePlayerTextDraw(playerid,502.000000, 297.000000, "ld_grav:timer");
	PlayerTextDrawBackgroundColour(playerid,CountdownDraw[playerid][0], 255);
	PlayerTextDrawFont(playerid,CountdownDraw[playerid][0], TEXT_DRAW_FONT_SPRITE_DRAW);
	PlayerTextDrawLetterSize(playerid,CountdownDraw[playerid][0], 0.500000, 1.000000);
	PlayerTextDrawColour(playerid,CountdownDraw[playerid][0], -1);
	PlayerTextDrawSetOutline(playerid,CountdownDraw[playerid][0], 0);
	PlayerTextDrawSetProportional(playerid,CountdownDraw[playerid][0], true);
	PlayerTextDrawSetShadow(playerid,CountdownDraw[playerid][0], 1);
	PlayerTextDrawUseBox(playerid,CountdownDraw[playerid][0], true);
	PlayerTextDrawBoxColour(playerid,CountdownDraw[playerid][0], 255);
	PlayerTextDrawTextSize(playerid,CountdownDraw[playerid][0], 19.000000, 14.000000);
	PlayerTextDrawSetSelectable(playerid,CountdownDraw[playerid][0], false);

	CountdownDraw[playerid][1] = CreatePlayerTextDraw(playerid,606.000000, 296.000000, "~r~");
	PlayerTextDrawBackgroundColour(playerid,CountdownDraw[playerid][1], 255);
	PlayerTextDrawFont(playerid,CountdownDraw[playerid][1], TEXT_DRAW_FONT_1);
	PlayerTextDrawLetterSize(playerid,CountdownDraw[playerid][1], 0.469999, 4.099997);
	PlayerTextDrawColour(playerid,CountdownDraw[playerid][1], -1);
	PlayerTextDrawSetOutline(playerid,CountdownDraw[playerid][1], 0);
	PlayerTextDrawSetProportional(playerid,CountdownDraw[playerid][1], true);
	PlayerTextDrawSetShadow(playerid,CountdownDraw[playerid][1], 1);
	PlayerTextDrawUseBox(playerid,CountdownDraw[playerid][1], true);
	PlayerTextDrawBoxColour(playerid,CountdownDraw[playerid][1], 112);
	PlayerTextDrawTextSize(playerid,CountdownDraw[playerid][1], 498.000000, 0.000000);
	PlayerTextDrawSetSelectable(playerid,CountdownDraw[playerid][1], false);

	CountdownDraw[playerid][2] = CreatePlayerTextDraw(playerid,550.000000, 299.000000, "HEADLINE");
	PlayerTextDrawAlignment(playerid,CountdownDraw[playerid][2], TEXT_DRAW_ALIGN_CENTER);
	PlayerTextDrawBackgroundColour(playerid,CountdownDraw[playerid][2], 255);
	PlayerTextDrawFont(playerid,CountdownDraw[playerid][2], TEXT_DRAW_FONT_1);
	PlayerTextDrawLetterSize(playerid,CountdownDraw[playerid][2], 0.259999, 1.100000);
	PlayerTextDrawColour(playerid,CountdownDraw[playerid][2], -1);
	PlayerTextDrawSetOutline(playerid,CountdownDraw[playerid][2], 0);
	PlayerTextDrawSetProportional(playerid,CountdownDraw[playerid][2], true);
	PlayerTextDrawSetShadow(playerid,CountdownDraw[playerid][2], 1);
	PlayerTextDrawSetSelectable(playerid,CountdownDraw[playerid][2], false);

	CountdownDraw[playerid][3] = CreatePlayerTextDraw(playerid,550.000000, 314.000000, "60 Sekunden");
	PlayerTextDrawAlignment(playerid,CountdownDraw[playerid][3], TEXT_DRAW_ALIGN_CENTER);
	PlayerTextDrawBackgroundColour(playerid,CountdownDraw[playerid][3], 255);
	PlayerTextDrawFont(playerid,CountdownDraw[playerid][3], TEXT_DRAW_FONT_1);
	PlayerTextDrawLetterSize(playerid,CountdownDraw[playerid][3], 0.259999, 1.100000);
	PlayerTextDrawColour(playerid,CountdownDraw[playerid][3], -1);
	PlayerTextDrawSetOutline(playerid,CountdownDraw[playerid][3], 0);
	PlayerTextDrawSetProportional(playerid,CountdownDraw[playerid][3], true);
	PlayerTextDrawSetShadow(playerid,CountdownDraw[playerid][3], 1);
	PlayerTextDrawSetSelectable(playerid,CountdownDraw[playerid][3], false);

	//LoadingScreen Textdraw - by Tobi_DeKey
	LoadingScreen[playerid][0] = CreatePlayerTextDraw(playerid,-4.000000, -1.000000, "~r~");
	PlayerTextDrawBackgroundColour(playerid,LoadingScreen[playerid][0], 255);
	PlayerTextDrawFont(playerid,LoadingScreen[playerid][0], TEXT_DRAW_FONT_1);
	PlayerTextDrawLetterSize(playerid,LoadingScreen[playerid][0], 0.500000, 47.200008);
	PlayerTextDrawColour(playerid,LoadingScreen[playerid][0], -1);
	PlayerTextDrawSetOutline(playerid,LoadingScreen[playerid][0], 0);
	PlayerTextDrawSetProportional(playerid,LoadingScreen[playerid][0], true);
	PlayerTextDrawSetShadow(playerid,LoadingScreen[playerid][0], 1);
	PlayerTextDrawUseBox(playerid,LoadingScreen[playerid][0], true);
	PlayerTextDrawBoxColour(playerid,LoadingScreen[playerid][0], 255);
	PlayerTextDrawTextSize(playerid,LoadingScreen[playerid][0], 643.000000, 0.000000);
	PlayerTextDrawSetSelectable(playerid,LoadingScreen[playerid][0], false);

	LoadingScreen[playerid][1] = CreatePlayerTextDraw(playerid,261.000000, 206.000000, "Szene wird geladen...");
	PlayerTextDrawBackgroundColour(playerid,LoadingScreen[playerid][1], 255);
	PlayerTextDrawFont(playerid,LoadingScreen[playerid][1], TEXT_DRAW_FONT_1);
	PlayerTextDrawLetterSize(playerid,LoadingScreen[playerid][1], 0.289999, 2.200000);
	PlayerTextDrawColour(playerid,LoadingScreen[playerid][1], -1);
	PlayerTextDrawSetOutline(playerid,LoadingScreen[playerid][1], 0);
	PlayerTextDrawSetProportional(playerid,LoadingScreen[playerid][1], true);
	PlayerTextDrawSetShadow(playerid,LoadingScreen[playerid][1], 9);
	PlayerTextDrawSetSelectable(playerid,LoadingScreen[playerid][1], false);

	//Wantedtextraw by GangstaSunny
	WantedDraw[playerid] = CreatePlayerTextDraw(playerid,547.000000, 26.000000, "12 ]");
	PlayerTextDrawBackgroundColour(playerid,WantedDraw[playerid], 255);
	PlayerTextDrawFont(playerid,WantedDraw[playerid], TEXT_DRAW_FONT_2);
	PlayerTextDrawLetterSize(playerid,WantedDraw[playerid], 0.500000, 1.000000);
	PlayerTextDrawColour(playerid,WantedDraw[playerid], 0xFFB400FF);
	PlayerTextDrawSetOutline(playerid,WantedDraw[playerid], 0);
	PlayerTextDrawSetProportional(playerid,WantedDraw[playerid], true);
	PlayerTextDrawSetShadow(playerid,WantedDraw[playerid], 1);
	PlayerTextDrawSetSelectable(playerid,WantedDraw[playerid], false);

	//TankenTextdraws by GangstaSunny
	TankenDraw[playerid][0] = CreatePlayerTextDraw(playerid,320.000000, 343.000000, "~r~");
	PlayerTextDrawBackgroundColour(playerid,TankenDraw[playerid][0], 255);
	PlayerTextDrawFont(playerid,TankenDraw[playerid][0], TEXT_DRAW_FONT_1);
	PlayerTextDrawLetterSize(playerid,TankenDraw[playerid][0], 0.400000, 5.000000);
	PlayerTextDrawColour(playerid,TankenDraw[playerid][0], -1);
	PlayerTextDrawSetOutline(playerid,TankenDraw[playerid][0], 0);
	PlayerTextDrawSetProportional(playerid,TankenDraw[playerid][0], true);
	PlayerTextDrawSetShadow(playerid,TankenDraw[playerid][0], 1);
	PlayerTextDrawUseBox(playerid,TankenDraw[playerid][0], true);
	PlayerTextDrawBoxColour(playerid,TankenDraw[playerid][0], 16843133);
	PlayerTextDrawTextSize(playerid,TankenDraw[playerid][0], 140.000000, 0.000000);
	PlayerTextDrawSetSelectable(playerid,TankenDraw[playerid][0], false);

	TankenDraw[playerid][1] = CreatePlayerTextDraw(playerid,149.000000, 336.000000, "Tankstelle");
	PlayerTextDrawBackgroundColour(playerid,TankenDraw[playerid][1], 255);
	PlayerTextDrawFont(playerid,TankenDraw[playerid][1], TEXT_DRAW_FONT_0);
	PlayerTextDrawLetterSize(playerid,TankenDraw[playerid][1], 0.800000, 1.000000);
	PlayerTextDrawColour(playerid,TankenDraw[playerid][1], -1);
	PlayerTextDrawSetOutline(playerid,TankenDraw[playerid][1], 1);
	PlayerTextDrawSetProportional(playerid,TankenDraw[playerid][1], true);
	PlayerTextDrawSetSelectable(playerid,TankenDraw[playerid][1], false);

	TankenDraw[playerid][2] = CreatePlayerTextDraw(playerid,199.000000, 346.000000, "Aktuelle Liter: ~r~20L");
	PlayerTextDrawAlignment(playerid,TankenDraw[playerid][2], TEXT_DRAW_ALIGN_CENTER);
	PlayerTextDrawBackgroundColour(playerid,TankenDraw[playerid][2], 255);
	PlayerTextDrawFont(playerid,TankenDraw[playerid][2], TEXT_DRAW_FONT_2);
	PlayerTextDrawLetterSize(playerid,TankenDraw[playerid][2], 0.200000, 1.000000);
	PlayerTextDrawColour(playerid,TankenDraw[playerid][2], -1);
	PlayerTextDrawSetOutline(playerid,TankenDraw[playerid][2], 0);
	PlayerTextDrawSetProportional(playerid,TankenDraw[playerid][2], true);
	PlayerTextDrawSetShadow(playerid,TankenDraw[playerid][2], 1);
	PlayerTextDrawSetSelectable(playerid,TankenDraw[playerid][2], false);

	TankenDraw[playerid][3] = CreatePlayerTextDraw(playerid,199.000000, 356.000000, "Aktueller Preis: ~r~2000$");
	PlayerTextDrawAlignment(playerid,TankenDraw[playerid][3], TEXT_DRAW_ALIGN_CENTER);
	PlayerTextDrawBackgroundColour(playerid,TankenDraw[playerid][3], 255);
	PlayerTextDrawFont(playerid,TankenDraw[playerid][3], TEXT_DRAW_FONT_2);
	PlayerTextDrawLetterSize(playerid,TankenDraw[playerid][3], 0.159999, 1.000000);
	PlayerTextDrawColour(playerid,TankenDraw[playerid][3], -1);
	PlayerTextDrawSetOutline(playerid,TankenDraw[playerid][3], 0);
	PlayerTextDrawSetProportional(playerid,TankenDraw[playerid][3], true);
	PlayerTextDrawSetShadow(playerid,TankenDraw[playerid][3], 1);
	PlayerTextDrawSetSelectable(playerid,TankenDraw[playerid][3], false);

	TankenDraw[playerid][4] = CreatePlayerTextDraw(playerid,200.000000, 376.000000, "Preis pro Liter: ~r~6$");
	PlayerTextDrawAlignment(playerid,TankenDraw[playerid][4], TEXT_DRAW_ALIGN_CENTER);
	PlayerTextDrawBackgroundColour(playerid,TankenDraw[playerid][4], 255);
	PlayerTextDrawFont(playerid,TankenDraw[playerid][4], TEXT_DRAW_FONT_2);
	PlayerTextDrawLetterSize(playerid,TankenDraw[playerid][4], 0.159999, 1.000000);
	PlayerTextDrawColour(playerid,TankenDraw[playerid][4], -1);
	PlayerTextDrawSetOutline(playerid,TankenDraw[playerid][4], 0);
	PlayerTextDrawSetProportional(playerid,TankenDraw[playerid][4], true);
	PlayerTextDrawSetShadow(playerid,TankenDraw[playerid][4], 1);
	PlayerTextDrawSetSelectable(playerid,TankenDraw[playerid][4], false);

	TankenDraw[playerid][5] = CreatePlayerTextDraw(playerid,281.000000, 351.000000, "BETANKEN");
	PlayerTextDrawAlignment(playerid,TankenDraw[playerid][5], TEXT_DRAW_ALIGN_CENTER);
	PlayerTextDrawBackgroundColour(playerid,TankenDraw[playerid][5], 255);
	PlayerTextDrawFont(playerid,TankenDraw[playerid][5], TEXT_DRAW_FONT_2);
	PlayerTextDrawLetterSize(playerid,TankenDraw[playerid][5], 0.259999, 1.000000);
	PlayerTextDrawColour(playerid,TankenDraw[playerid][5], -1);
	PlayerTextDrawSetOutline(playerid,TankenDraw[playerid][5], 0);
	PlayerTextDrawSetProportional(playerid,TankenDraw[playerid][5], true);
	PlayerTextDrawSetShadow(playerid,TankenDraw[playerid][5], 1);
	PlayerTextDrawSetSelectable(playerid,TankenDraw[playerid][5], true);

	TankenDraw[playerid][6] = CreatePlayerTextDraw(playerid,281.000000, 371.000000, "BEENDEN");
	PlayerTextDrawAlignment(playerid,TankenDraw[playerid][6], TEXT_DRAW_ALIGN_CENTER);
	PlayerTextDrawBackgroundColour(playerid,TankenDraw[playerid][6], 255);
	PlayerTextDrawFont(playerid,TankenDraw[playerid][6], TEXT_DRAW_FONT_2);
	PlayerTextDrawLetterSize(playerid,TankenDraw[playerid][6], 0.259999, 1.000000);
	PlayerTextDrawColour(playerid,TankenDraw[playerid][6], -1);
	PlayerTextDrawSetOutline(playerid,TankenDraw[playerid][6], 0);
	PlayerTextDrawSetProportional(playerid,TankenDraw[playerid][6], true);
	PlayerTextDrawSetShadow(playerid,TankenDraw[playerid][6], 1);
	PlayerTextDrawSetSelectable(playerid,TankenDraw[playerid][6], true);
	DestroyVars(playerid);
	CreatePayDayTextdraw(playerid);
	return 1;
}

public OnPlayerDisconnect(playerid, reason)
{
    KillTimer(LoseHealthTimer[playerid]);
    KillTimer(DashcamTimer[playerid]);
    KillTimer(FischTimer[playerid]);
    KillTimer(WaitToFindTimer[playerid]);
    DeletePVar(playerid,"SchwarzmarktHackGemacht");
	//EasterEvent
	if(GlobalVars[EasterEvent] == true)
	{
		Easter_OnPlayerDisconnect(playerid);
	}
    if(GetPVarInt(playerid,"AdminDuty") > 0)
    {
        DestroyDynamic3DTextLabel(AdmDutyLabel[playerid]);
    	DeletePVar(playerid,"AdminDuty");
	}
	//JobCore System
	Job_OnPlayerDisconnect(playerid);
	//Lumberjack System
	//Log_PlayerDisconnect(playerid);
	//FisherJob system
	FisherJob_PlayerDisconnect(playerid);
	//MoneyDraw System
	MoneyDraw_PlayerDisconnect(playerid);
	//MiningSystem
	//Mining_PlayerDisconnect(playerid);
	//MobilePhoneSystem
	MobilePhone_PlayerDisconnect(playerid);
	//PlayerLocation
	PlayerLoc_OnPlayerDisconnect(playerid);
	//DynamicRobbery
	DynamicRobberyDisconnect(playerid);
	//Casino
	Casino_OnPlayerDisconnect(playerid);
	//Fluglieferant
	AirTrafficking_OnPlayerDisconnect(playerid);

    if(GetPVarInt(playerid,"FSchein") != 0 && GetPVarInt(playerid,"NotKickFahrschulDesyncs") < 1 && GetPVarInt(playerid,"HatFahrschulCar") == 1)
    {
		if(schulung[playerid] != 0)
		{
		    new fahrzeug = GetPVarInt(playerid,"FahrschulCar");
			schulung[playerid] = 0;
			FahrschulCar[fahrzeug] = 0;
			DestroyDynamic3DTextLabel(FahrzeugInfo[fahrzeug][fLabel]);
			FahrzeugInfo[fahrzeug][fLabel] = Text3D:INVALID_3DTEXT_ID;
			DeleteVehicle(fahrzeug);
		}
    }

    if(GetPVarInt(playerid,"TelefoniertMit") > 0 || GetPVarInt(playerid,"RuftGeradeAn") > 0)
    {
        new pID = 0;
        if(GetPVarInt(playerid,"TelefoniertMit") > 0){pID = GetPVarInt(playerid,"TelefoniertMit");}
        else if(GetPVarInt(playerid,"RuftGeradeAn") > 0){pID = GetPVarInt(playerid,"RuftGeradeAn");}
		SendClientMessage(playerid,COLOR_YELLOW,"[Handy]: {FFFFFF}Aufgelegt.");
		SendClientMessage(GetPVarInt(playerid,"TelefoniertMit"),COLOR_YELLOW,"[Handy]: {FFFFFF}Aufgelegt.");
	    DeletePVar(playerid,"RuftGeradeAn");
		DeletePVar(playerid,"WirdAngerufen");
		DeletePVar(playerid,"TelefoniertMit");
		DeletePVar(playerid,"WirdAngerufen");
		DeletePVar(pID,"RuftGeradeAn");
		DeletePVar(pID,"WirdAngerufen");
		DeletePVar(pID,"TelefoniertMit");
		DeletePVar(pID,"WirdAngerufen");
		KillTimer(AnrufenTimer[playerid]); KillTimer(AnrufenTimer[pID]);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
		SetPlayerSpecialAction(pID, SPECIAL_ACTION_STOPUSECELLPHONE);
	}

	new string[264], query[128];
	mysql_format(sqlHandle, query,sizeof(query),"UPDATE `accounts` SET `Online`='0' WHERE `Name`='%s'", SpielerInfo[playerid][sName]);
	mysql_tquery(sqlHandle, query);

	SaveAccount(playerid);
    SavePrivatCar(playerid);
    DestroyPayDayTextdraw(playerid);
    SavePlayerWeapons(playerid);
    if(!IsPlayerNPC(playerid) && GetPVarInt(playerid,"LoggedIn") == 1)
	{
	 	switch(reason)
	    {
	        case 0: format(string,sizeof string,"%s %s hat den Server verlassen. (Timeout)",AdminName(playerid),SpielerInfo[playerid][sName]);
	        case 1: format(string,sizeof string,"%s %s hat den Server verlassen. (Verlassen)",AdminName(playerid),SpielerInfo[playerid][sName]);
	        case 2: format(string,sizeof string,"%s %s hat den Server verlassen. (Kick/Ban)",AdminName(playerid),SpielerInfo[playerid][sName]);
	    }
	    SendICPMsg(string);

		mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO `accplaytime` (`Name`, `PlayedTime`) VALUES ('%s', '%d')", SpielerInfo[playerid][sName],SpielerInfo[playerid][sPlayedTimeToday]);
	    mysql_tquery(sqlHandle, query);
	}
    DestroyVars(playerid);
    GlobalVars[AktuellClients]--;
	return 1;
}

public OnPlayerSpawn(playerid)
{
	if(!IsPlayerNPC(playerid)) SetPlayerSkin(playerid,mysql_GetInt("accounts", "SkinID", "Name", SpielerInfo[playerid][sName]));
	ShowPlayerTutorial(playerid);
	if(IsPlayerNPC(playerid))
	{
		new botname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, botname, sizeof(botname));
		if(!strcmp(botname, "Zivi_Winkler", true))
		{
            SetPlayerSkin(playerid,60);
			printf(">>>>> [NPC]Zivi_Winkler spawned.");
			SetPVarInt(playerid, "LoggedIn", 1);
            return 1;
		}
		else if(!strcmp(botname,"TrainDriverLV",true)) {
			PutPlayerInVehicle(playerid, TrainLasVenturas, 0);
			SetPlayerColor(playerid,0xFFFFFFFF);
			printf(">>>>> [NPC]TrainDriverLV spawned.");
			SetPVarInt(playerid, "LoggedIn", 1);
			return 1;
		}
		else if(!strcmp(botname,"TrainDriverSF",true)) {
			PutPlayerInVehicle(playerid, TrainSanFierro, 0);
			SetPlayerColor(playerid,0xFFFFFFFF);
			printf(">>>>> [NPC]TrainDriverSF spawned.");
			SetPVarInt(playerid, "LoggedIn", 1);
			return 1;
		}
		else if(!strcmp(botname,"TrainDriverLS",true)) {
			PutPlayerInVehicle(playerid, TrainLosSantos, 0);
			SetPlayerColor(playerid,0xFFFFFFFF);
			printf(">>>>> [NPC]TrainDriverLS spawned.");
			SetPVarInt(playerid, "LoggedIn", 1);
			return 1;
		}
		return 1;
  	}
	if(GetPVarInt(playerid,"LoggedIn") == 0)
	{
	    SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du wurdest vom Server gekickt. Grund: Bitte logge dich vor dem Spawnen ein.");
	    KickPlayer(playerid,"");
	    return 1;
	}
	
	Streamer_Update(playerid);

	//SNOWMODE
	if(GlobalVars[WinterMode]) {
		if(!Winter_GetSnowflakeStatus(playerid)) Winter_SetSnowflakeStatus(playerid, true);
		if(!Winter_GetSnowObjStatus(playerid)) Winter_ShowSnowObjects(playerid, true);
		if(!!Winter_GetColdBreathStatus(playerid)) Winter_SetColdBreathStatus(playerid, true);
	} else {
		if(Winter_GetSnowflakeStatus(playerid)) Winter_SetSnowflakeStatus(playerid, false);
		if(Winter_GetSnowObjStatus(playerid)) Winter_ShowSnowObjects(playerid, false);
		if(!Winter_GetColdBreathStatus(playerid)) Winter_SetColdBreathStatus(playerid, false);
	}

	//No-DM Zone
	for(new zone=0; zone<sizeof(NoDMZoneInfo); zone++)
 	{
 	    GangZoneShowForPlayer(playerid, NoDMZoneInfo[zone][ndzID], 0xFF000075);
 	}
    if(SpielerInfo[playerid][sVictimBrille] > 0)
	{
	    if(IsPlayerAttachedObjectSlotUsed(playerid, ATTACH_INDEX_BRILLE)){RemovePlayerAttachedObject(playerid, ATTACH_INDEX_BRILLE);}
	    if(SpielerInfo[playerid][sVictimBrilleF] == 1)
		{
		    SetPlayerAttachedObject(playerid, ATTACH_INDEX_BRILLE, 19025, 2, SpielerInfo[playerid][sVictimBrilleOffX], SpielerInfo[playerid][sVictimBrilleOffY], SpielerInfo[playerid][sVictimBrilleOffZ], SpielerInfo[playerid][sVictimBrilleRotX], SpielerInfo[playerid][sVictimBrilleRotY], SpielerInfo[playerid][sVictimBrilleRotZ], SpielerInfo[playerid][sVictimBrilleScaX], SpielerInfo[playerid][sVictimBrilleScaY], SpielerInfo[playerid][sVictimBrilleScaZ], 0xFFFFFFFF, 0xFFFFFFFF);
		}
	    else if(SpielerInfo[playerid][sVictimBrilleF] == 2)
		{
		    SetPlayerAttachedObject(playerid, ATTACH_INDEX_BRILLE, 19025, 2, SpielerInfo[playerid][sVictimBrilleOffX], SpielerInfo[playerid][sVictimBrilleOffY], SpielerInfo[playerid][sVictimBrilleOffZ], SpielerInfo[playerid][sVictimBrilleRotX], SpielerInfo[playerid][sVictimBrilleRotY], SpielerInfo[playerid][sVictimBrilleRotZ], SpielerInfo[playerid][sVictimBrilleScaX], SpielerInfo[playerid][sVictimBrilleScaY], SpielerInfo[playerid][sVictimBrilleScaZ], 0xFF0A0A0A, 0xFFFFFFFF);
		}
        else if(SpielerInfo[playerid][sVictimBrilleF] == 3)
		{
		    SetPlayerAttachedObject(playerid, ATTACH_INDEX_BRILLE, 19025, 2, SpielerInfo[playerid][sVictimBrilleOffX], SpielerInfo[playerid][sVictimBrilleOffY], SpielerInfo[playerid][sVictimBrilleOffZ], SpielerInfo[playerid][sVictimBrilleRotX], SpielerInfo[playerid][sVictimBrilleRotY], SpielerInfo[playerid][sVictimBrilleRotZ], SpielerInfo[playerid][sVictimBrilleScaX], SpielerInfo[playerid][sVictimBrilleScaY], SpielerInfo[playerid][sVictimBrilleScaZ], 0xFF00FE00, 0xFFFFFFFF);
		}
	    else if(SpielerInfo[playerid][sVictimBrilleF] == 4)
		{
		    SetPlayerAttachedObject(playerid, ATTACH_INDEX_BRILLE, 19025, 2, SpielerInfo[playerid][sVictimBrilleOffX], SpielerInfo[playerid][sVictimBrilleOffY], SpielerInfo[playerid][sVictimBrilleOffZ], SpielerInfo[playerid][sVictimBrilleRotX], SpielerInfo[playerid][sVictimBrilleRotY], SpielerInfo[playerid][sVictimBrilleRotZ], SpielerInfo[playerid][sVictimBrilleScaX], SpielerInfo[playerid][sVictimBrilleScaY], SpielerInfo[playerid][sVictimBrilleScaZ], 0xFF0000FF, 0xFFFFFFFF);
		}
	    else if(SpielerInfo[playerid][sVictimBrilleF] == 5)
		{
		    SetPlayerAttachedObject(playerid, ATTACH_INDEX_BRILLE, 19025, 2, SpielerInfo[playerid][sVictimBrilleOffX], SpielerInfo[playerid][sVictimBrilleOffY], SpielerInfo[playerid][sVictimBrilleOffZ], SpielerInfo[playerid][sVictimBrilleRotX], SpielerInfo[playerid][sVictimBrilleRotY], SpielerInfo[playerid][sVictimBrilleRotZ], SpielerInfo[playerid][sVictimBrilleScaX], SpielerInfo[playerid][sVictimBrilleScaY], SpielerInfo[playerid][sVictimBrilleScaZ], 0xFFFE0000, 0xFFFFFFFF);
		}
	}
	if(SpielerInfo[playerid][sVictimCap] > 0)
	{
	    if(IsPlayerAttachedObjectSlotUsed(playerid, ATTACH_INDEX_CAP)){RemovePlayerAttachedObject(playerid, ATTACH_INDEX_CAP);}
	    if(SpielerInfo[playerid][sVictimCapF] == 1)
		{
	    	SetPlayerAttachedObject(playerid, ATTACH_INDEX_CAP, 18929, 2, SpielerInfo[playerid][sVictimCapOffX], SpielerInfo[playerid][sVictimCapOffY], SpielerInfo[playerid][sVictimCapOffZ], SpielerInfo[playerid][sVictimCapRotX], SpielerInfo[playerid][sVictimCapRotY], SpielerInfo[playerid][sVictimCapRotZ],
			SpielerInfo[playerid][sVictimCapScaX], SpielerInfo[playerid][sVictimCapScaY], SpielerInfo[playerid][sVictimCapScaZ], 0xFFFFFFFF, 0xFFFFFFFF);
		}
	    else if(SpielerInfo[playerid][sVictimCapF] == 2)
		{
		    SetPlayerAttachedObject(playerid, ATTACH_INDEX_CAP, 18929, 2, SpielerInfo[playerid][sVictimCapOffX], SpielerInfo[playerid][sVictimCapOffY], SpielerInfo[playerid][sVictimCapOffZ], SpielerInfo[playerid][sVictimCapRotX], SpielerInfo[playerid][sVictimCapRotY], SpielerInfo[playerid][sVictimCapRotZ],
			SpielerInfo[playerid][sVictimCapScaX], SpielerInfo[playerid][sVictimCapScaY], SpielerInfo[playerid][sVictimCapScaZ], 0xFF0A0A0A, 0xFFFFFFFF);
		}
        else if(SpielerInfo[playerid][sVictimCapF] == 3)
		{
		    SetPlayerAttachedObject(playerid, ATTACH_INDEX_CAP, 18929, 2, SpielerInfo[playerid][sVictimCapOffX], SpielerInfo[playerid][sVictimCapOffY], SpielerInfo[playerid][sVictimCapOffZ], SpielerInfo[playerid][sVictimCapRotX], SpielerInfo[playerid][sVictimCapRotY], SpielerInfo[playerid][sVictimCapRotZ],
			SpielerInfo[playerid][sVictimCapScaX], SpielerInfo[playerid][sVictimCapScaY], SpielerInfo[playerid][sVictimCapScaZ], 0xFF00FE00, 0xFFFFFFFF);
		}
	    else if(SpielerInfo[playerid][sVictimCapF] == 4)
		{
		    SetPlayerAttachedObject(playerid, ATTACH_INDEX_CAP, 18929, 2, SpielerInfo[playerid][sVictimCapOffX], SpielerInfo[playerid][sVictimCapOffY], SpielerInfo[playerid][sVictimCapOffZ], SpielerInfo[playerid][sVictimCapRotX], SpielerInfo[playerid][sVictimCapRotY], SpielerInfo[playerid][sVictimCapRotZ],
			SpielerInfo[playerid][sVictimCapScaX], SpielerInfo[playerid][sVictimCapScaY], SpielerInfo[playerid][sVictimCapScaZ], 0xFF0000FF, 0xFFFFFFFF);
		}
	    else if(SpielerInfo[playerid][sVictimCapF] == 5)
		{
		    SetPlayerAttachedObject(playerid, ATTACH_INDEX_CAP, 18929, 2, SpielerInfo[playerid][sVictimCapOffX], SpielerInfo[playerid][sVictimCapOffY], SpielerInfo[playerid][sVictimCapOffZ], SpielerInfo[playerid][sVictimCapRotX], SpielerInfo[playerid][sVictimCapRotY], SpielerInfo[playerid][sVictimCapRotZ],
			SpielerInfo[playerid][sVictimCapScaX], SpielerInfo[playerid][sVictimCapScaY], SpielerInfo[playerid][sVictimCapScaZ], 0xFFFE0000, 0xFFFFFFFF);
		}
	}
	if(SpielerInfo[playerid][sVictimBandana] > 0)
	{
	    if(IsPlayerAttachedObjectSlotUsed(playerid, ATTACH_INDEX_BANDANA)){RemovePlayerAttachedObject(playerid, ATTACH_INDEX_BANDANA);}
	    if(SpielerInfo[playerid][sVictimBandanaF] == 1)
		{
	    	SetPlayerAttachedObject(playerid, ATTACH_INDEX_BANDANA, 18919, 2, SpielerInfo[playerid][sVictimBandanaOffX], SpielerInfo[playerid][sVictimBandanaOffY], SpielerInfo[playerid][sVictimBandanaOffZ], SpielerInfo[playerid][sVictimBandanaRotX], SpielerInfo[playerid][sVictimBandanaRotY], SpielerInfo[playerid][sVictimBandanaRotZ],
			SpielerInfo[playerid][sVictimBandanaScaX], SpielerInfo[playerid][sVictimBandanaScaY], SpielerInfo[playerid][sVictimBandanaScaZ], 0xFFFFFFFF, 0xFFFFFFFF);
		}
	    else if(SpielerInfo[playerid][sVictimBandanaF] == 2)
		{
		    SetPlayerAttachedObject(playerid, ATTACH_INDEX_BANDANA, 18919, 2, SpielerInfo[playerid][sVictimBandanaOffX], SpielerInfo[playerid][sVictimBandanaOffY], SpielerInfo[playerid][sVictimBandanaOffZ], SpielerInfo[playerid][sVictimBandanaRotX], SpielerInfo[playerid][sVictimBandanaRotY], SpielerInfo[playerid][sVictimBandanaRotZ],
			SpielerInfo[playerid][sVictimBandanaScaX], SpielerInfo[playerid][sVictimBandanaScaY], SpielerInfo[playerid][sVictimBandanaScaZ], 0xFF0A0A0A, 0xFFFFFFFF);
		}
        else if(SpielerInfo[playerid][sVictimBandanaF] == 3)
		{
		    SetPlayerAttachedObject(playerid, ATTACH_INDEX_BANDANA, 18919, 2, SpielerInfo[playerid][sVictimBandanaOffX], SpielerInfo[playerid][sVictimBandanaOffY], SpielerInfo[playerid][sVictimBandanaOffZ], SpielerInfo[playerid][sVictimBandanaRotX], SpielerInfo[playerid][sVictimBandanaRotY], SpielerInfo[playerid][sVictimBandanaRotZ],
			SpielerInfo[playerid][sVictimBandanaScaX], SpielerInfo[playerid][sVictimBandanaScaY], SpielerInfo[playerid][sVictimBandanaScaZ], 0xFF00FE00, 0xFFFFFFFF);
		}
	    else if(SpielerInfo[playerid][sVictimBandanaF] == 4)
		{
		    SetPlayerAttachedObject(playerid, ATTACH_INDEX_BANDANA, 18919, 2, SpielerInfo[playerid][sVictimBandanaOffX], SpielerInfo[playerid][sVictimBandanaOffY], SpielerInfo[playerid][sVictimBandanaOffZ], SpielerInfo[playerid][sVictimBandanaRotX], SpielerInfo[playerid][sVictimBandanaRotY], SpielerInfo[playerid][sVictimBandanaRotZ],
			SpielerInfo[playerid][sVictimBandanaScaX], SpielerInfo[playerid][sVictimBandanaScaY], SpielerInfo[playerid][sVictimBandanaScaZ], 0xFF0000FF, 0xFFFFFFFF);
		}
	    else if(SpielerInfo[playerid][sVictimBandanaF] == 5)
		{
		    SetPlayerAttachedObject(playerid, ATTACH_INDEX_BANDANA, 18919, 2, SpielerInfo[playerid][sVictimBandanaOffX], SpielerInfo[playerid][sVictimBandanaOffY], SpielerInfo[playerid][sVictimBandanaOffZ], SpielerInfo[playerid][sVictimBandanaRotX], SpielerInfo[playerid][sVictimBandanaRotY], SpielerInfo[playerid][sVictimBandanaRotZ],
			SpielerInfo[playerid][sVictimBandanaScaX], SpielerInfo[playerid][sVictimBandanaScaY], SpielerInfo[playerid][sVictimBandanaScaZ], 0xFFFE0000, 0xFFFFFFFF);
		}
	}

	//Anti Cheat - Variablen
	AnticheatInfo[playerid][sSetHealth] = true;
 	AnticheatInfo[playerid][sHealth] = 100;
	AnticheatInfo[playerid][sSetArmour] = true;
 	AnticheatInfo[playerid][sArmour] = 0;
 	UpdatePayDayTextdraw(playerid);
    PlayerTextDrawShow(playerid,SpielerInfo[playerid][ptPayDay]);
    //PreloadAnimationLibrary(playerid);
	//ClearAnimations(playerid);
	//PlayerLocation
	PlayerLoc_OnPlayerSpawn(playerid);
    //Gangfightsystem
    UpdateGangZones(playerid);
	if(SpielerInfo[playerid][sFraktion] >= 9 && SpielerInfo[playerid][sFraktion] < 19){StartGangfight(playerid);}

	if(SpielerInfo[playerid][sPrisonCP] > 0)
	{
	    SetPlayerSkin(playerid,mysql_GetInt("accounts", "SkinID", "Name", SpielerInfo[playerid][sName]));
	 	SetPlayerPos(playerid,1359.3730,2132.4219,11.0156);
	    SetPlayerFacingAngle(playerid,87.9827);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,playerid);

		SetPlayerCheckpointEx(playerid,1354.3055,2123.5054,11.0156,2.5);
	    return 1;
	}
	if(SpielerInfo[playerid][sPrison] > 0)
	{
	    SetPlayerSkin(playerid,mysql_GetInt("accounts", "SkinID", "Name", SpielerInfo[playerid][sName]));

	 	SetPlayerPos(playerid,302.3349,304.6149,999.1484);
	    SetPlayerFacingAngle(playerid,358.4268);
		SetPlayerInterior(playerid,4);
		SetPlayerVirtualWorld(playerid,500);

		KillTimer(PrisonTimer[playerid]);
		PrisonTimer[playerid] = SetTimerEx("TimeToPrison",60000,true,"i",playerid);
	    return 1;
	}
	if(SpielerInfo[playerid][sKnast] > 1)
	{
	    SpielerInfo[playerid][sDrogen] = 0;
	    SpielerInfo[playerid][sMaterialien] = 0;
        SetPlayerSkin(playerid,mysql_GetInt("accounts", "KnastSkin", "Name", SpielerInfo[playerid][sName]));
	    if(SpielerInfo[playerid][sZelle] == 1)
	    {
	        KillTimer(KnastTimer[playerid]);
		    KnastTimer[playerid] = SetTimerEx("TimeToKnast",60000,true,"i",playerid);
			new rand = random(4);
			if(rand == 0)//LSPD Zelle 1
			{
			    TogglePlayerControllable(playerid, false);
		        SetPlayerPos(playerid,354.0668,1804.2802,2241.5850);
			    SetPlayerFacingAngle(playerid, 90.9907);
			    SetPlayerInterior(playerid,0);
			    SetCameraBehindPlayer(playerid);
			    SetTimerEx("Unfreeze",3000,false,"i",playerid);
			}
			else if(rand == 1)//LSPD Zelle 2
			{
			    TogglePlayerControllable(playerid, false);
		        SetPlayerPos(playerid,354.0668,1804.2802,2241.5850);
			    SetPlayerFacingAngle(playerid, 90.9907);
			    SetPlayerInterior(playerid,0);
			    SetCameraBehindPlayer(playerid);
			    SetTimerEx("Unfreeze",3000,false,"i",playerid);
			}
			else if(rand == 2)//LSPD Zelle 3
			{
			    TogglePlayerControllable(playerid, false);
		        SetPlayerPos(playerid,354.0668,1804.2802,2241.5850);
			    SetPlayerFacingAngle(playerid, 90.9907);
			    SetPlayerInterior(playerid,0);
			    SetCameraBehindPlayer(playerid);
			    SetTimerEx("Unfreeze",3000,false,"i",playerid);
			}
			else if(rand == 3)//LSPD Zelle 4
			{
			    TogglePlayerControllable(playerid, false);
		        SetPlayerPos(playerid,354.0668,1804.2802,2241.5850);
			    SetPlayerFacingAngle(playerid, 90.9907);
			    SetPlayerInterior(playerid,0);
			    SetCameraBehindPlayer(playerid);
			    SetTimerEx("Unfreeze",3000,false,"i",playerid);
			}
			return 1;
		}
		else if(SpielerInfo[playerid][sZelle] == 2)
	    {
	        KillTimer(KnastTimer[playerid]);
		    KnastTimer[playerid] = SetTimerEx("TimeToKnast",60000,true,"i",playerid);
			new rand = random(4);
			if(rand == 0)//SFPD Zelle 1
			{
	   			SetPlayerPos(playerid,227.3958,110.5813,999.0156);
			    SetPlayerFacingAngle(playerid, 1.2726);
			    SetPlayerInterior(playerid,10);
			    SetCameraBehindPlayer(playerid);
			}
			else if(rand == 1)//SFPD Zelle 2
			{
	   			SetPlayerPos(playerid,223.5220,110.3741,999.0156);
			    SetPlayerFacingAngle(playerid, 357.1993);
			    SetPlayerInterior(playerid,10);
			    SetCameraBehindPlayer(playerid);
			}
			else if(rand == 2)//SFPD Zelle 3
			{
	   			SetPlayerPos(playerid,219.6080,110.3946,999.0156);
			    SetPlayerFacingAngle(playerid, 359.7059);
			    SetPlayerInterior(playerid,10);
			    SetCameraBehindPlayer(playerid);
			}
			else if(rand == 3)//SFPD Zelle 4
			{
	   			SetPlayerPos(playerid,215.5116,110.2950,999.0156);
			    SetPlayerFacingAngle(playerid, 357.8259);
			    SetPlayerInterior(playerid,10);
			    SetCameraBehindPlayer(playerid);
			}
		}
		else if(SpielerInfo[playerid][sZelle] == 3)
	    {
	        KillTimer(KnastTimer[playerid]);
			KnastTimer[playerid] = SetTimerEx("TimeToKnast",60000,true,"i",playerid);
			new rand = random(3);
			if(rand == 0)//LVPD Zelle 1
			{
	   			SetPlayerPos(playerid,197.4640,174.8574,1003.0234);
			    SetPlayerFacingAngle(playerid, 1.3199);
			    SetPlayerInterior(playerid,3);
			    SetCameraBehindPlayer(playerid);
			}
			else if(rand == 1)//LVPD Zelle 2
			{
	   			SetPlayerPos(playerid,193.0342,175.1850,1003.0234);
			    SetPlayerFacingAngle(playerid, 358.4999);
			    SetPlayerInterior(playerid,3);
			    SetCameraBehindPlayer(playerid);
			}
			else if(rand == 2)//LVPD Zelle 3
			{
  				SetPlayerPos(playerid,198.7635,161.6028,1003.0300);
		    	SetPlayerFacingAngle(playerid, 177.6814);
		    	SetPlayerInterior(playerid,3);
		    	SetCameraBehindPlayer(playerid);
			}
		}
		return 1;
	}
 	if(SpielerInfo[playerid][sKrankenhaus] == 1)
	{
	    ClearChat(playerid,10);
		SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Dr.Maylay{FFFFFF} sagt: Wir haben dich schwer verletzt auf dem Boden gefunden.");
		SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Dr.Maylay{FFFFFF} sagt: Wir werden alles geben, damit du wieder Gesund wirst.");
		SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Du bist für insgesamt 10 Sekunden im Krankenhaus.");
		SetPlayerPos(playerid,1157.0767,-1333.8702,-0.8598);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,0);
		TogglePlayerControllable(playerid, false);
		InterpolateCameraPos(playerid, 1218.753417, -1390.132690, 27.705785, 1213.214477, -1286.707763, 21.138881, 60000);
		InterpolateCameraLookAt(playerid, 1215.090942, -1387.057373, 26.246854, 1209.218261, -1289.590820, 20.291431, 60000);
		KillTimer(KrankenhausTimer[playerid]);
		KrankenhausTimer[playerid] = SetTimerEx("Krankenhaus",10000,false,"i",playerid);
		return 1;
	}
	else if(SpielerInfo[playerid][sWiederbeleben] == 1)
	{
	    if(MedicDuty > 0)
	    {
   			if(SpielerInfo[playerid][sFraktion] >= 9 && SpielerInfo[playerid][sFraktion] != 19) //PD
			{
				new skinid[3], string[25];
				format(skinid,sizeof(skinid),"%d",SpielerInfo[playerid][sFraktion]);
				format(string,sizeof(string),"Rang%d",SpielerInfo[playerid][sRank]);
				SetPlayerSkin(playerid,mysql_GetInt("skinordnung", string, "frakid", skinid));
			}
			else if(SpielerInfo[playerid][sFraktion] < 9 || SpielerInfo[playerid][sFraktion] == 19)//Zivilist oder Hitman
	  		{
	  		    SetPlayerSkin(playerid,mysql_GetInt("accounts", "SkinID", "Name", SpielerInfo[playerid][sName]));
			}
	        SetPlayerHealth(playerid,100);
  			SendClientMessage(playerid, COLOR_RED, "Du hast dein Bewusstsein verloren. Warte auf den Notarzt.");
			TogglePlayerControllable(playerid, false);
			ApplyAnimationEx(playerid,"PED","KO_skid_front",4.1,false,false,false,true,0);
			SetPlayerPos(playerid, Tot_X[playerid], Tot_Y[playerid], Tot_Z[playerid]);
			SetPlayerInterior(playerid, Tot_Int[playerid]);
			SetPlayerVirtualWorld(playerid, Tot_World[playerid]);
			ApplyAnimationEx(playerid,"PED","KO_skid_front",4.1,false,true,true,true,0);
			SetPlayerCameraPos(playerid, Tot_X[playerid], Tot_Y[playerid], Tot_Z[playerid]+5);
			SetPlayerCameraLookAt(playerid, Tot_X[playerid], Tot_Y[playerid], Tot_Z[playerid]);
			KillTimer(FallPlayerTimer[playerid]);
			FallPlayerTimer[playerid] = SetTimerEx("FallPlayer", 5000, false, "d", playerid);
			KillTimer(DeadTimer[playerid]);
			DeadTimer[playerid] = SetTimerEx("DeadCountdown", 120000, false, "d", playerid);
	    }
	    else
	    {
	        SpielerInfo[playerid][sKrankenhaus] = 1;
    	    ClearChat(playerid,10);
			SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Dr.Maylay{FFFFFF} sagt: Wir haben dich schwer verletzt auf dem Boden gefunden.");
			SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Dr.Maylay{FFFFFF} sagt: Wir werden alles geben, damit du wieder Gesund wirst.");
			SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Du bist für insgesamt 10 Sekunden im Krankenhaus.");
			SetPlayerPos(playerid,1157.0767,-1333.8702,-0.8598);
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid,0);
			TogglePlayerControllable(playerid, false);
			InterpolateCameraPos(playerid, 1218.753417, -1390.132690, 27.705785, 1213.214477, -1286.707763, 21.138881, 60000);
			InterpolateCameraLookAt(playerid, 1215.090942, -1387.057373, 26.246854, 1209.218261, -1289.590820, 20.291431, 60000);
			KillTimer(KrankenhausTimer[playerid]);
			KrankenhausTimer[playerid] = SetTimerEx("Krankenhaus",10000,false,"i",playerid);
		}
		return 1;
	}
	else if(GetPVarInt(playerid,"Paintball") >= 1)
	{
	    GivePlayerMoneyEx(playerid,100);
 		if(SpielerInfo[playerid][sFraktion] >= 9 && SpielerInfo[playerid][sFraktion] != 19)//Gang
		{
			new skinid[3], string[25];
			format(skinid,sizeof(skinid),"%d",SpielerInfo[playerid][sFraktion]);
			format(string,sizeof(string),"Rang%d",SpielerInfo[playerid][sRank]);
			SetPlayerSkin(playerid,mysql_GetInt("skinordnung", string, "frakid", skinid));
		}
		else if(SpielerInfo[playerid][sFraktion] < 9 || SpielerInfo[playerid][sFraktion] == 19)//Zivilist oder Hitman
  		{
  		    SetPlayerSkin(playerid,mysql_GetInt("accounts", "SkinID", "Name", SpielerInfo[playerid][sName]));
		}
		if(GetPVarInt(playerid,"Paintball") == 1){
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid,WEAPON:24,200);
		SetPlayerArmour(playerid,0);
		SetPlayerHealth(playerid,100);
		SetPlayerInterior(playerid,1);
	    SetPlayerVirtualWorld(playerid,1);
		SetPlayerWeather(playerid, 2);}
   		else if(GetPVarInt(playerid,"Paintball") == 2){
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid,WEAPON:24,200);
		GivePlayerWeapon(playerid,WEAPON:25,200);
		SetPlayerArmour(playerid,0);
		SetPlayerHealth(playerid,100);
		SetPlayerInterior(playerid,1);
	    SetPlayerVirtualWorld(playerid,2);
		SetPlayerWeather(playerid, 2);}
   		else if(GetPVarInt(playerid,"Paintball") == 3){
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid,WEAPON:24,200);
		SetPlayerArmour(playerid,0);
  		SetPlayerHealth(playerid,100);
		SetPlayerInterior(playerid,1);
	    SetPlayerVirtualWorld(playerid,3);
		SetPlayerWeather(playerid, 2);}
   		else if(GetPVarInt(playerid,"Paintball") == 4){
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid,WEAPON:24,200);
		SetPlayerArmour(playerid,0);
  		SetPlayerHealth(playerid,100);
		SetPlayerInterior(playerid,1);
	    SetPlayerVirtualWorld(playerid,4);
		SetPlayerWeather(playerid, 2);}
   		else if(GetPVarInt(playerid,"Paintball") == 5){
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid,WEAPON_DEAGLE,200);
		SetPlayerArmour(playerid,0);
  		SetPlayerHealth(playerid,100);
		SetPlayerInterior(playerid,1);
	    SetPlayerVirtualWorld(playerid,5);
		SetPlayerWeather(playerid, 2);}

		new rand = random(8);
		if(rand == 0)//Position 1
		{
			SetPlayerPos(playerid,2169.461181,1618.798339,999.976562);
		}
		else if(rand == 1)//Position 2
		{
		    SetPlayerPos(playerid,2175.5515,1577.9655,999.9684);
		    SetPlayerFacingAngle(playerid,356.6723);
		}
		else if(rand == 2)//Position 3
		{
			SetPlayerPos(playerid,2190.0120,1577.5569,999.9658);
		    SetPlayerFacingAngle(playerid,54.3028);
		}
		else if(rand == 3)//Position 4
		{
			SetPlayerPos(playerid,2205.3918,1580.6798,999.9794);
		    SetPlayerFacingAngle(playerid,353.1789);
		}
		else if(rand == 4)//Position 5
		{
		    SetPlayerPos(playerid,2208.2175,1552.1301,1007.2906);
		    SetPlayerFacingAngle(playerid,268.2413);
		}
		else if(rand == 5)//Position 6
		{
		    SetPlayerPos(playerid,2229.6868,1597.1917,999.9677);
		    SetPlayerFacingAngle(playerid,98.4130);
		}
		else if(rand == 6)//Position 7
		{
		    SetPlayerPos(playerid,2218.3252,1613.9906,999.9827);
		    SetPlayerFacingAngle(playerid,356.2654);
		}
		else if(rand == 7)//Position 8
		{
		    SetPlayerPos(playerid,2204.7673,1609.1569,999.9720);
		    SetPlayerFacingAngle(playerid,358.4588);
		}
		return 1;
	}
    else if(SpielerInfo[playerid][sSpawn] < 1)
	{
		if(SpielerInfo[playerid][sFraktion] == 0)
		{
			//zivie spawn hier zu ändern
			SetPlayerPos(playerid,831.2141,-1731.7974,13.5752);
			SetPlayerFacingAngle(playerid,277.4237);
		}
	 	else if(SpielerInfo[playerid][sFraktion] >= 9 && SpielerInfo[playerid][sFraktion] != 19 && FrakInfo[SpielerInfo[playerid][sFraktion]][fiSkinordnung] > 0)//Gang
		{
			new skinid[3], string[25];
			format(skinid,sizeof(skinid),"%d",SpielerInfo[playerid][sFraktion]);
			format(string,sizeof(string),"Rang%d",SpielerInfo[playerid][sRank]);
			SetPlayerSkin(playerid,mysql_GetInt("skinordnung", string, "frakid", skinid));
		}
		else if(SpielerInfo[playerid][sFraktion] == 19)//Hitman
  		{
			GivePlayerWeapon(playerid,WEAPON:24,100);
			GivePlayerWeapon(playerid,WEAPON:4,1);
			GivePlayerWeapon(playerid,WEAPON:34,50);
			GivePlayerWeapon(playerid,WEAPON:29,500);
			GivePlayerWeapon(playerid,WEAPON:30,500);
  		    SetPlayerSkin(playerid,mysql_GetInt("accounts", "SkinID", "Name", SpielerInfo[playerid][sName]));
		}
	   	if(SpielerInfo[playerid][sStadt] == 1)//LS Zivispawn
	 	{
			SetPlayerPos(playerid,831.2141,-1731.7974,13.5752);
			SetPlayerFacingAngle(playerid,277.4237);
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid,0);
			SetCameraBehindPlayer(playerid);
			if(FrakInfo[SpielerInfo[playerid][sFraktion]][fiSkinordnung] < 1){SetPlayerSkin(playerid,mysql_GetInt("accounts", "SkinID", "Name", SpielerInfo[playerid][sName]));}
  		}
   	/*	else if(SpielerInfo[playerid][sStadt] == 2)//SF Zivispawn
	 	{
			SetPlayerPos(playerid,1685.5690,-2333.1963,13.5469);
			SetPlayerFacingAngle(playerid,358.3455);
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid,0);
			SetCameraBehindPlayer(playerid);
			if(FrakInfo[SpielerInfo[playerid][sFraktion]][fiSkinordnung] < 1){SetPlayerSkin(playerid,mysql_GetInt("accounts", "SkinID", "Name", SpielerInfo[playerid][sName]));}
		}
		else if(SpielerInfo[playerid][sStadt] == 3)//LV Zivispawn
	 	{
			SetPlayerPos(playerid,1685.5690,-2333.1963,13.5469);
			SetPlayerFacingAngle(playerid,358.3455);
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid,0);
			SetCameraBehindPlayer(playerid);
            if(FrakInfo[SpielerInfo[playerid][sFraktion]][fiSkinordnung] < 1){SetPlayerSkin(playerid,mysql_GetInt("accounts", "SkinID", "Name", SpielerInfo[playerid][sName]));}
		}
		return 1;*/
	}
	else if(SpielerInfo[playerid][sSpawn] == 1)//Fraktion
	{
	    if(GetPVarInt(playerid,"CopDuty") == 1)
		{
		    DeletePVar(playerid,"CopDuty");
		    CopDuty--;
   			ResetPlayerWeapons(playerid);
	        SetPlayerArmour(playerid,0);
	        SetPlayerColor(playerid,COLOR_WHITE);
	        SetPlayerColor(playerid, GetPlayerColor(playerid) & 0xFFFFFF00);
			KillTimer(PDEquiptTimer[playerid]);
			DeletePVar(playerid,"PDEquipt");
		}
  		if(GetPVarInt(playerid,"FBIDuty") == 1)
		{
		    DeletePVar(playerid,"FBIDuty");
		    FBIDuty--;
   			ResetPlayerWeapons(playerid);
	        SetPlayerArmour(playerid,0);
	        SetPlayerColor(playerid,COLOR_WHITE);
	        SetPlayerColor(playerid, GetPlayerColor(playerid) & 0xFFFFFF00);
			KillTimer(PDEquiptTimer[playerid]);
			DeletePVar(playerid,"PDEquipt");
		}
 		if(GetPVarInt(playerid,"MedicDuty") == 1)
		{
			DeletePVar(playerid,"MedicDuty");
			MedicDuty--;
   			ResetPlayerWeapons(playerid);
	        SetPlayerArmour(playerid,0);
	        SetPlayerColor(playerid,COLOR_WHITE);
	        SetPlayerColor(playerid, GetPlayerColor(playerid) & 0xFFFFFF00);
		}
		if(GetPVarInt(playerid,"FeuerwehrDuty") == 1)
		{
			DeletePVar(playerid,"FeuerwehrDuty");
			FeuerwehrDuty--;
   			ResetPlayerWeapons(playerid);
	        SetPlayerArmour(playerid,0);
	        SetPlayerColor(playerid,COLOR_WHITE);
	        SetPlayerColor(playerid, GetPlayerColor(playerid) & 0xFFFFFF00);
		}
		if(GetPVarInt(playerid,"OAmtDuty") == 1)
		{
		    OAmtDuty--;
			DeletePVar(playerid,"OAmtDuty");
   			ResetPlayerWeapons(playerid);
	        SetPlayerArmour(playerid,0);
	        SetPlayerColor(playerid,COLOR_WHITE);
	        SetPlayerColor(playerid, GetPlayerColor(playerid) & 0xFFFFFF00);
		}
		if(GetPVarInt(playerid,"SanNewsDuty") == 1)
		{
			DeletePVar(playerid,"SanNewsDuty");
			SanNewsDuty--;
   			ResetPlayerWeapons(playerid);
	        SetPlayerArmour(playerid,0);
	        SetPlayerColor(playerid,COLOR_WHITE);
	        SetPlayerColor(playerid, GetPlayerColor(playerid) & 0xFFFFFF00);
		}
		if(SpielerInfo[playerid][sFraktion] == 1)//San Andreas Government Department [Regierung]
   		{
   		    SetTimerEx("Unfreeze",3000,false,"i",playerid);
   		    TogglePlayerControllable(playerid, false);
   		    SetPlayerSkin(playerid,mysql_GetInt("accounts", "SkinID", "Name", SpielerInfo[playerid][sName]));
			SetPlayerPos(playerid, 1123.5126, -2036.7113, 69.8870);
			SetPlayerFacingAngle(playerid, 88.9580);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid,0);
			SetCameraBehindPlayer(playerid);
		}
	 	else if(SpielerInfo[playerid][sFraktion] == 2)//San Andreas Police Department
   		{
   		    TogglePlayerControllable(playerid, false);
   		    SetPlayerPos(playerid,1500.1927,-1674.4917,28.3956);
   		    SetPlayerFacingAngle(playerid,268.5943);
   		    SetPlayerCameraPos(playerid,1510.4510,-1674.7996,28.3956);
   		    SetPlayerCameraLookAt(playerid,1510.4510,-1674.7996,28.3956,CAMERA_CUT);
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerSkin(playerid,mysql_GetInt("accounts", "SkinID", "Name", SpielerInfo[playerid][sName]));
   		    ShowPlayerDialog(playerid,DIALOG_BASE_AUSWAHL,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Base Auswahl","Los Santos\nSan Fierro\nLas Venturas\nDillimore","Auswählen","");
		}
	 	else if(SpielerInfo[playerid][sFraktion] == 5)//SA Rettungsdienst
   		{
   		    SetPlayerSkin(playerid,mysql_GetInt("accounts", "SkinID", "Name", SpielerInfo[playerid][sName]));
			SetPlayerPos(playerid,1164.8658,-1334.5321,-1.5000);
			SetPlayerFacingAngle(playerid, 358.7958);
			SetPlayerInterior(playerid,0);
			SetCameraBehindPlayer(playerid);
			LoadObjectsForPlayer(playerid);
		}
 		else if(SpielerInfo[playerid][sFraktion] == 6)//Federal Bureau of Investigation
   		{
   		    SetTimerEx("Unfreeze",3000,false,"i",playerid);
   		    TogglePlayerControllable(playerid, false);
   		    SetPlayerSkin(playerid,mysql_GetInt("accounts", "SkinID", "Name", SpielerInfo[playerid][sName]));
			SetPlayerPos(playerid,-2467.6692,518.4586,25.0943);
			SetPlayerFacingAngle(playerid, 178.5482);
			SetPlayerInterior(playerid,0);
			SetCameraBehindPlayer(playerid);
		}
		else if(SpielerInfo[playerid][sFraktion] == 7)//Ordnungsamt OAmt
   		{
			SetPlayerSkin(playerid,mysql_GetInt("accounts", "SkinID", "Name", SpielerInfo[playerid][sName]));
	        SetPlayerPos(playerid,1055.0511,-1695.7314,13.2615);
		    SetPlayerFacingAngle(playerid, 2.9038);
		    SetPlayerInterior(playerid,0);
		    SetPlayerVirtualWorld(playerid,0);
		    SetCameraBehindPlayer(playerid);
   		}
	 	else if(SpielerInfo[playerid][sFraktion] == 8)//San News
   		{
			SetPlayerSkin(playerid,mysql_GetInt("accounts", "SkinID", "Name", SpielerInfo[playerid][sName]));
	        SetPlayerPos(playerid,1407.0212,-23.3379,1010.3594);
		    SetPlayerFacingAngle(playerid, 359.5124);
		    SetPlayerInterior(playerid,0);
		    SetPlayerVirtualWorld(playerid,0);
		    SetCameraBehindPlayer(playerid);
   		}
		else if(SpielerInfo[playerid][sFraktion] >= 9 && SpielerInfo[playerid][sFraktion] < 19)//Gang
  		{
  		    if(FrakInfo[SpielerInfo[playerid][sFraktion]][fiSkinordnung] > 0)
  		    {
				new skinid[3], string[25];
				format(skinid,sizeof(skinid),"%d",SpielerInfo[playerid][sFraktion]);
				format(string,sizeof(string),"Rang%d",SpielerInfo[playerid][sRank]);
				SetPlayerSkin(playerid,mysql_GetInt("skinordnung", string, "frakid", skinid));
			}
			else SetPlayerSkin(playerid,mysql_GetInt("accounts", "SkinID", "Name", SpielerInfo[playerid][sName]));
            SetPlayerPos(playerid,2496.0493,-1709.2268,1014.7422);
		    SetPlayerFacingAngle(playerid, 359.7148);
		    SetPlayerInterior(playerid,3);
		    SetCameraBehindPlayer(playerid);
		    SetPlayerVirtualWorld(playerid, SpielerInfo[playerid][sFraktion]);
		}
		else if(SpielerInfo[playerid][sFraktion] == 19)//International Contract Agency
  		{
 			GivePlayerWeapon(playerid,WEAPON:24,100);
			GivePlayerWeapon(playerid,WEAPON:4,1);
			GivePlayerWeapon(playerid,WEAPON:34,50);
			GivePlayerWeapon(playerid,WEAPON:29,500);
			GivePlayerWeapon(playerid,WEAPON:30,500);
  		    SetPlayerSkin(playerid,mysql_GetInt("accounts", "SkinID", "Name", SpielerInfo[playerid][sName]));
            SetPlayerPos(playerid,-2158.6267,642.4954,1052.3750);
		    SetPlayerFacingAngle(playerid, 179.2799);
		    SetPlayerInterior(playerid,1);
		    SetCameraBehindPlayer(playerid);
		    SetPlayerVirtualWorld(playerid, 1);
		}
		return 1;
	}
	else if(SpielerInfo[playerid][sSpawn] == 2)//PrivatHaus
	{
	    if(SpielerInfo[playerid][sFraktion] >= 9 && SpielerInfo[playerid][sFraktion] < 19)//Gang
		{
			new skinid[3], string[25];
			format(skinid,sizeof(skinid),"%d",SpielerInfo[playerid][sFraktion]);
			format(string,sizeof(string),"Rang%d",SpielerInfo[playerid][sRank]);
			SetPlayerSkin(playerid,mysql_GetInt("skinordnung", string, "frakid", skinid));
		}
		else if(SpielerInfo[playerid][sFraktion] == 19)//International Contract Agency
  		{
  		    GivePlayerWeapon(playerid,WEAPON:24,100);
			GivePlayerWeapon(playerid,WEAPON:4,1);
			GivePlayerWeapon(playerid,WEAPON:34,50);
  		    SetPlayerSkin(playerid,mysql_GetInt("accounts", "SkinID", "Name", SpielerInfo[playerid][sName]));
  		}
		else if(SpielerInfo[playerid][sFraktion] < 9)//Zivilist
  		{
  		    SetPlayerSkin(playerid,mysql_GetInt("accounts", "SkinID", "Name", SpielerInfo[playerid][sName]));
		}
		new hs = GetHausID(playerid);
		SetPlayerPos(playerid,HausInfo[hs][hsIPos_X],HausInfo[hs][hsIPos_Y],HausInfo[hs][hsIPos_Z]);
		SetPlayerInterior(playerid,HausInfo[hs][hsInterior]);
		SetPlayerVirtualWorld(playerid,hs);
		SetCameraBehindPlayer(playerid);
		SetPVarInt(playerid,"HausID",hs);
		SetPVarInt(playerid,"InHaus",1);
	}
	else if(SpielerInfo[playerid][sSpawn] == 3)//GruppenHaus
	{
	    if(SpielerInfo[playerid][sFraktion] >= 9 && SpielerInfo[playerid][sFraktion] < 19)//Gang
		{
			new skinid[3], string[25];
			format(skinid,sizeof(skinid),"%d",SpielerInfo[playerid][sFraktion]);
			format(string,sizeof(string),"Rang%d",SpielerInfo[playerid][sRank]);
			SetPlayerSkin(playerid,mysql_GetInt("skinordnung", string, "frakid", skinid));
		}
		else if(SpielerInfo[playerid][sFraktion] == 19)//International Contract Agency
  		{
  		    GivePlayerWeapon(playerid,WEAPON:24,100);
			GivePlayerWeapon(playerid,WEAPON:4,1);
			GivePlayerWeapon(playerid,WEAPON:34,50);
  		    SetPlayerSkin(playerid,mysql_GetInt("accounts", "SkinID", "Name", SpielerInfo[playerid][sName]));
  		}
		else if(SpielerInfo[playerid][sFraktion] < 9)//Zivilist
  		{
  		    SetPlayerSkin(playerid,mysql_GetInt("accounts", "SkinID", "Name", SpielerInfo[playerid][sName]));
		}
		new hs = GetHausID(playerid);
		SetPlayerPos(playerid,HausInfo[hs][hsIPos_X],HausInfo[hs][hsIPos_Y],HausInfo[hs][hsIPos_Z]);
		SetPlayerInterior(playerid,HausInfo[hs][hsInterior]);
		SetPlayerVirtualWorld(playerid,hs);
		SetCameraBehindPlayer(playerid);
		SetPVarInt(playerid,"HausID",hs);
		SetPVarInt(playerid,"InHaus",1);
	}
	return 1;
}

public OnPlayerDeath(playerid, killerid, reason)
{
    if(GetPVarInt(playerid,"SWATDuty") > 0)
    {
        SetPlayerName(playerid,SwatDutyName[playerid]);
        DeletePVar(playerid,"SWATDuty");
    }

	DeletePVar(playerid,"AntiIntFlucht");
	DeletePVar(playerid,"PDEquipt");
 	KillTimer(PDEquiptTimer[playerid]);
    new string[264];
    if(SpielerInfo[playerid][sPrison] > 0)return 1;
    if(SpielerInfo[playerid][sPrisonCP] > 0)return 1;

	//Lumberjack System
	//Log_PlayerDeath(playerid);
	//Raceing System
	Race_PlayerDeath(playerid);
	//PlayerLocation
	PlayerLoc_OnPlayerDeath(playerid);
	//DynamicRobbery
	DynamicRobberyDeath(playerid, killerid);
	//Casino
	Casino_OnPlayerDeath(playerid);
	//Fluglieferant
	AirTrafficking_OnPlayerDeath(playerid);

    if(GetPVarInt(playerid,"Paintball") < 1)
    {
        new Float:Position[3];
        GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
	}
    if(killerid != INVALID_PLAYER_ID && playerid != INVALID_PLAYER_ID)
    {
        if(IsJobDuty(playerid)){format(string,sizeof(string),"%s wurde von %s mit %s [Reason: %d] getötet. [JobAktiv]",SpielerInfo[playerid][sName],SpielerInfo[killerid][sName],WaffenName(reason),reason);}
		else format(string,sizeof(string),"%s wurde von %s mit %s [Reason: %d] getötet.",SpielerInfo[playerid][sName],SpielerInfo[killerid][sName],WaffenName(reason),reason);
		CreateServerLogEntry("KILL_LOG", string);
		SendClientMessage(playerid,COLOR_YELLOW,"[Info]: {FFFFFF}Du wurdest getötet.");
		SendClientMessage(killerid,COLOR_YELLOW,"[Info]: {FFFFFF}Du hast jemanden getötet.");
    }

    if(GetPlayerMoneyEx(playerid) > 25000 && GetPVarInt(playerid,"Paintball") < 1)
    {
        new lostthatmoney = floatround(GetPlayerMoneyEx(playerid) * 2 / 100);
        format(string,sizeof(string),"[Info]: {FFFFFF}Du bist mit mehr als 25.000$ gestorben und verlierst deshalb 2 Prozent ($%d) davon.",lostthatmoney);
        SendClientMessage(playerid,COLOR_RED,string);
    }

    //Anti Cheat - Variablen
	AnticheatInfo[playerid][sSetHealth] = true;
	AnticheatInfo[playerid][sHealth] = 100;
	AnticheatInfo[playerid][sSetArmour] = true;
 	AnticheatInfo[playerid][sArmour] = 0;

    if(IsPlayerInAnyVehicle(killerid) && reason == 50 && killerid != INVALID_PLAYER_ID)
	{
 		SendClientMessage(killerid,COLOR_WHITE," ");
 		SendClientMessage(killerid,COLOR_RED,"ANTI-CHEAT: Das System hat dich vom Server gekickt! Grund: Rotorn");
 		format(string,128,"%s %s wurde vom ANTI-CHEAT gekickt. Grund: Rotorn",AdminName(playerid),SpielerInfo[playerid][sName]);
 		KickPlayer(killerid,string);
 		return 1;
	}
	if(killerid != INVALID_PLAYER_ID && !IsPlayerNPC(killerid) && !IsPlayerNPC(playerid) && GetPlayerScore(killerid) < 2 && GetPVarInt(killerid,"AttackNotwehr") != playerid && GetPVarInt(killerid,"Paintball") == 0)
	{
		format(string,128,"%s wurde vom Server als störend empfunden. Grund: DM als Neuling",SpielerInfo[killerid][sName]);
		//SendClientMessageToAll(COLOR_RED,string);

		SendAdminMessage(COLOR_RED,string);
		//CreateServerLogEntry("BAN_LOG", string);
		//BanPlayer(killerid,"System","DM als Neuling");
		return 1;
	}
	if(!IsPlayerNPC(killerid) && !IsPlayerNPC(playerid) && GetPlayerScore(killerid) >= 2 && GetPlayerScore(playerid) < 2 && GetPVarInt(killerid,"AttackNotwehr") != playerid && GetPVarInt(killerid,"Paintball") == 0)
	{
		format(string,128,"%s wurde vom System gekickt. Grund: DM auf Neulinge",SpielerInfo[killerid][sName]);
		SendClientMessageToAll(COLOR_RED,string);
		CreateServerLogEntry("KICK_LOG", string);
		KickPlayer(killerid,string);
		return 1;
	}
    if(GetPVarInt(killerid,"Paintball") >= 1)
    {
        if(GetPVarInt(killerid,"Paintball") < 3){
        SpielerInfo[killerid][sPBKills]++;
        SpielerInfo[playerid][sPBTode]++;}
        SetPlayerHealth(killerid,100);
        PaintBallCount[killerid]++;
        PaintBallSpree[killerid]++;
        PaintBallSpree[playerid] = 0;
		foreach(new i : Player)
		{
			if(GetPVarInt(i,"Paintball") == 0)continue;
			if(GetPVarInt(i,"Paintball") != GetPVarInt(playerid,"Paintball"))continue;
			if(GetPlayerVirtualWorld(i) != GetPlayerVirtualWorld(playerid))continue;
 			format(string,sizeof(string),"%s hat %s erledigt und seit betreten %d Kills gemacht.",SpielerInfo[killerid][sName],SpielerInfo[playerid][sName],PaintBallCount[killerid]);
        	SendClientMessage(i,COLOR_YELLOW,string);
        	if(PaintBallSpree[killerid] == 5)
        	{
        	    if(SpielerInfo[killerid][sAchivPB] < 1)
				{
					ShowAchievement(killerid,"Erlange einen Killing-Spree im Paintball","+ 500 EXP");
					GivePlayerEXP(killerid,500);
					SpielerInfo[killerid][sAchivPB] = 1;
				}
        	    format(string,sizeof(string),"[Nice!]: %s ist mit 5 Kills in einem Killing-Spree!",SpielerInfo[killerid][sName]);
        		SendClientMessage(i,COLOR_RED,string);
        	}
        	else if(PaintBallSpree[killerid] == 10)
        	{
        	    format(string,sizeof(string),"[OMG WTF!]: %s ist mit 10 Kills in einem Killing-Spree!",SpielerInfo[killerid][sName]);
        		SendClientMessage(i,COLOR_RED,string);
        	}
        	if(PaintBallSpree[killerid] == 15)
        	{
        	    format(string,sizeof(string),"[GÖTTLICHES AIM!]: %s ist mit 15 Kills in einem Killing-Spree!",SpielerInfo[killerid][sName]);
        		SendClientMessage(i,COLOR_RED,string);
        	}
		}
    }
    if(SpielerInfo[playerid][sContract] == 1 && SpielerInfo[killerid][sFraktion] == 19)
    {
        new str[144], Auftrag[24], var[64], Preis;
		GameTextForPlayer(killerid,"~g~> HITMAN KILL <",3000,4);
		GameTextForPlayer(playerid,"~r~> HITMAN AUFTRAG <",3000,4);
		PlayAudioStreamForPlayer(playerid,"https://"SERV_WURL"/sounds/hitman.mp3");
		PlayAudioStreamForPlayer(killerid,"https://"SERV_WURL"/sounds/hitman.mp3");
		SendClientMessage(playerid,COLOR_RED,"[Hitman-Contract]: {FFFFFF}Ein Hitman hat dich aufgrund eines Auftrags ausgeschaltet.");
		SpielerInfo[playerid][sContract] = 0;

     	mysql_format(sqlHandle, string, sizeof(string),"SELECT * FROM `contracts` WHERE `Contract` = '%s'", SpielerInfo[playerid][sName]);
   	 	new Cache:result = mysql_query(sqlHandle, string);
		cache_get_value_name(0, "Preis",var); Preis = strval(var);
		cache_get_value_name(0, "Name",Auftrag);
		format(str, sizeof(str), "%s %s hat den Auftrag von %s erfolgreich ausgeführt.", RangName(killerid), SpielerInfo[killerid][sName], Auftrag);
	    cache_delete(result);
  		foreach(new i : Player)
		{
		    if(strcmp(SpielerInfo[i][sName], Auftrag, true, 10) == 0)
		    {
		        SendClientMessage(i,COLOR_INFO,"[Hitman-Auftrag]: {FFFFFF}Die Hitmans haben deinen Auftrag erledigt.");
		    }
		    if(SpielerInfo[i][sFraktion] != 19)continue;
		    SendClientMessage(i,COLOR_INFO,str);
		}
		new Geld = Preis/2;
		FrakInfo[19][fiFrakKasse] += Geld;
		GivePlayerMoneyEx(killerid,Geld);
		mysql_format(sqlHandle, string, sizeof(string), "DELETE FROM `contracts` WHERE `Contract` = '%s'", SpielerInfo[playerid][sName]);
		mysql_tquery(sqlHandle, string);
    }
	if(SpielerInfo[playerid][sFraktion] >= 9 && SpielerInfo[playerid][sFraktion] < 19)
	{
	    new Zone = IsPlayerInGangZoneEx(killerid);
	    if(Zone >= 0)
		{
	        if(GangZoneInfo[Zone][gzFightTime] > 0)
	        {
	            format(string,sizeof(string),"%s hat %s erledigt. +1 Kill für %s!",SpielerInfo[killerid][sName],SpielerInfo[playerid][sName],FrakName(SpielerInfo[killerid][sFraktion]));
	            if(SpielerInfo[killerid][sFraktion] == GangZoneInfo[Zone][gzOwner] && SpielerInfo[playerid][sFraktion] == GangZoneInfo[Zone][gzAttacker])
	            {
	                new anzeige[8];
	                SetPVarInt(playerid,"TodGFZone",1);
	                GangZoneInfo[Zone][gzOwnerPunkte]++;
	                format(anzeige,sizeof(anzeige),"%d KILLS",GangZoneInfo[Zone][gzOwnerPunkte]);
	                foreach(new i : Player)
					{
						if(SpielerInfo[i][sFraktion] == GangZoneInfo[Zone][gzOwner] || SpielerInfo[i][sFraktion] == GangZoneInfo[Zone][gzAttacker])
						{
							PlayerTextDrawSetString(i, Gangfight[i][4], anzeige);
						    SendClientMessage(i,COLOR_GANGFIGHT,string);
						}
					}
					GameTextForPlayer(killerid,"~g~> GANGFIGHTKILL <",3000,4);
					GameTextForPlayer(playerid,"~r~> GANGFIGHTTOD <",3000,4);
	            }
	            else if(SpielerInfo[playerid][sFraktion] == GangZoneInfo[Zone][gzOwner] && SpielerInfo[killerid][sFraktion] == GangZoneInfo[Zone][gzAttacker])
	            {
	                new anzeige[8];
	                SetPVarInt(playerid,"TodGFZone",1);
	                GangZoneInfo[Zone][gzAttackerPunkte]++;
	                format(anzeige,sizeof(anzeige),"%d KILLS",GangZoneInfo[Zone][gzAttackerPunkte]);
	                foreach(new i : Player)
					{
						if(SpielerInfo[i][sFraktion] == GangZoneInfo[Zone][gzOwner] || SpielerInfo[i][sFraktion] == GangZoneInfo[Zone][gzAttacker])
						{
						    PlayerTextDrawSetString(i, Gangfight[i][5], anzeige);
						    SendClientMessage(i,COLOR_GANGFIGHT,string);
						}
					}
					GameTextForPlayer(killerid,"~g~> GANGFIGHTKILL <",3000,4);
					GameTextForPlayer(playerid,"~r~> GANGFIGHTTOD <",3000,4);
	            }
	        }
	    }
	    if(FrakInfo[SpielerInfo[killerid][sFraktion]][fiWarGegner] > 0)
	    {
			if(GetPVarInt(killerid,"Paintball") == 0)
  			{
				if(FrakInfo[SpielerInfo[killerid][sFraktion]][fiWarGegner] == SpielerInfo[playerid][sFraktion])
				{
				    new string2[200];
				    FrakInfo[SpielerInfo[killerid][sFraktion]][fiWarPoints]++;
					if(FrakInfo[SpielerInfo[killerid][sFraktion]][fiWarPoints] >= 50)
					{
					    FrakInfo[SpielerInfo[killerid][sFraktion]][fiGangpunkte] += 10;
					    new killedstr[128], killedstr2[128];
					    format(killedstr,sizeof(killedstr),"[GANGWAR] Euer Mitglied %s hat %s erledigt! (>FINALER KILL<)",SpielerInfo[killerid][sName],SpielerInfo[playerid][sName]);
					    format(killedstr2,sizeof(killedstr2),"[GANGWAR] Euer Gegner %s hat %s erledigt! (>FINALER TOD<)",SpielerInfo[killerid][sName],SpielerInfo[playerid][sName]);
					    format(string,sizeof(string),"[GANGWAR] Die Fraktion '%s' hat das Gangwar gegen '%s' mit '%d' zu '%d' Kills gewonnen! +10 Gangpunkte!",FrakName(SpielerInfo[killerid][sFraktion]),FrakName(SpielerInfo[playerid][sFraktion]),FrakInfo[SpielerInfo[killerid][sFraktion]][fiWarPoints],FrakInfo[SpielerInfo[playerid][sFraktion]][fiWarPoints]);
						SendICPMsg(string);
						format(string,sizeof(string),"[GANGWAR] Ihr seit besser als die Fraktion '%s'! Ihr habt sie im Krieg besiegt!",FrakName(SpielerInfo[playerid][sFraktion]));
						format(string2,sizeof(string2),"[GANGWAR] Die Fraktion '%s' ist besser als Ihr! Sie hat euch im Krieg besiegt!",FrakName(SpielerInfo[killerid][sFraktion]));
						foreach(new i : Player)
						{
						    if(SpielerInfo[i][sFraktion] == SpielerInfo[playerid][sFraktion])
						    {
						        SendClientMessage(i,COLOR_WHITE," ");
						        SendClientMessage(i,COLOR_GANGFIGHT,string2);
						        SendClientMessage(i,COLOR_RED,killedstr2);
						        SendClientMessage(i,COLOR_WHITE," ");
						    }
						    else if(SpielerInfo[i][sFraktion] == SpielerInfo[killerid][sFraktion])
						    {
						        SendClientMessage(i,COLOR_WHITE," ");
						        SendClientMessage(i,COLOR_GANGFIGHT,string);
						        SendClientMessage(i,COLOR_SUPER,killedstr);
						        SendClientMessage(i,COLOR_WHITE," ");
						    }
						}
						GameTextForPlayer(killerid,"~g~> FINALER GANGWARKILL <",3000,4);
						GameTextForPlayer(playerid,"~r~> FINALER GANGWARTOD <",3000,4);
					    FrakInfo[SpielerInfo[killerid][sFraktion]][fiWarPoints] = 0;
					    FrakInfo[SpielerInfo[playerid][sFraktion]][fiWarPoints] = 0;
					    FrakInfo[SpielerInfo[playerid][sFraktion]][fiWarGegner] = 0;
					    FrakInfo[SpielerInfo[killerid][sFraktion]][fiWarGegner] = 0;
					}
					else
					{
					    format(string,sizeof(string),"[GANGWAR] Euer Mitglied %s hat %s erledigt!",SpielerInfo[killerid][sName],SpielerInfo[playerid][sName]);
					    format(string2,sizeof(string2),"[GANGWAR] Euer Gegner %s hat %s erledigt!",SpielerInfo[killerid][sName],SpielerInfo[playerid][sName]);
					    foreach(new i : Player)
						{
						    if(SpielerInfo[i][sFraktion] == SpielerInfo[playerid][sFraktion])
						    {
						        SendClientMessage(i,COLOR_GANGFIGHT,string2);
						    }
						    else if(SpielerInfo[i][sFraktion] == SpielerInfo[killerid][sFraktion])
						    {
						        SendClientMessage(i,COLOR_GANGFIGHT,string);
						    }
						}
					    GameTextForPlayer(killerid,"~g~> GANGWARKILL <",3000,4);
						GameTextForPlayer(playerid,"~r~> GANGWARTOD <",3000,4);
					}
				}
			}
	    }
	}
	if(GetPlayerWantedLevelEx(playerid) >= 1 && SpielerInfo[killerid][sFraktion] == 2 && GetPVarInt(killerid,"CopDuty") == 1 ||
	GetPlayerWantedLevelEx(playerid) >= 1 && SpielerInfo[killerid][sFraktion] == 6 && GetPVarInt(killerid,"FBIDuty") == 1)
	{
	    if(GetPVarInt(playerid,"Bankrob") == 1)
		{
			format(string,164,"%s %s hat den gesuchten Bankräuber %s neutralisiert.",RangName(killerid),SpielerInfo[killerid][sName],SpielerInfo[playerid][sName]);
			SendICPMsg(string);
            SpielerInfo[playerid][sZelle] = 1;
   			new Geld = GetPlayerWantedLevelEx(playerid)*350;
   			SetPVarInt(playerid,"NoPAYBACK",1);
   			GivePlayerMoneyEx(playerid,-Geld);
   			GivePlayerEXP(killerid,50);
		    FrakInfo[SpielerInfo[killerid][sFraktion]][fiFrakKasse] += Geld;
		    FrakInfo[SpielerInfo[killerid][sFraktion]][fiFrakGVerbrecher]++;
		    new Zeit = GetPlayerWantedLevelEx(playerid)*1;
	        SpielerInfo[playerid][sKnast] = Zeit;
	        SetPlayerWantedLevelEx(playerid,0);
       		SetPlayerHealth(playerid,100);

			PlayerTextDrawHide(playerid, BankraubTD[playerid][0]);
			PlayerTextDrawHide(playerid, BankraubTD[playerid][1]);
			PlayerTextDrawHide(playerid, BankraubTD[playerid][2]);
			PlayerTextDrawHide(playerid, BankraubTD[playerid][3]);
			PlayerTextDrawHide(playerid, BankraubTD[playerid][4]);
			PlayerTextDrawHide(playerid, BankraubTD[playerid][5]);
	    	BankRobAmLaufen = 0;
	    	DeleteVehicle(BankRobVan);
	    	BankRobVan = INVALID_VEHICLE_ID;
	    	BankRobGeldSackSpawned[1] = 0;
	    	KillTimer(PlayerBankRobTimer[playerid]);
	    	SpawnPlayerEx(playerid);
			for(new sackid=0; sackid<sizeof(GeldSack); sackid++)
 			{
 		    	DestroyDynamicObject(BankRobGeldSack[sackid]);
 		    	DestroyDynamic3DTextLabel(BankRobGeldSackLabel[sackid]);
 		    	BankRobGeldSackLabel[sackid] = Text3D:INVALID_3DTEXT_ID;
 			}
 			return 1;
		}
		else
		{
			format(string,164,"%s %s hat den gesuchten Verbrecher %s neutralisiert.",RangName(killerid),SpielerInfo[killerid][sName],SpielerInfo[playerid][sName]);
			SendICPMsg(string);
            SpielerInfo[playerid][sZelle] = 1;
		    new Zeit, Geld = GetPlayerWantedLevelEx(playerid)*350;
		    SetPVarInt(playerid,"NoPAYBACK",1);
		    GivePlayerMoneyEx(playerid,-Geld);
		    GivePlayerEXP(killerid,5);
		    FrakInfo[SpielerInfo[playerid][sFraktion]][fiFrakKasse] += Geld;
		    FrakInfo[SpielerInfo[playerid][sFraktion]][fiFrakGVerbrecher]++;
		    Zeit = GetPlayerWantedLevelEx(playerid)*1;
	        SpielerInfo[playerid][sKnast] = Zeit;
	        SetPlayerWantedLevelEx(playerid,0);
         	SetPlayerHealth(playerid,100);
			SpawnPlayerEx(playerid);
			return 1;
		}
	}
	if(SpielerInfo[playerid][sKnast] <= 0 && GetPVarInt(playerid,"Paintball") == 0 && GetPVarInt(playerid,"TodGFZone") != 1)
	{
		if(MedicDuty == 0)
		{
			SpielerInfo[playerid][sKrankenhaus] = 1;
			GetPlayerPos(playerid, Tot_X[playerid], Tot_Y[playerid], Tot_Z[playerid]);
			Tot_Int[playerid] = GetPlayerInterior(playerid);
			Tot_World[playerid] = GetPlayerVirtualWorld(playerid);
		}
		else if(MedicDuty > 0)//Sanitäter Online
		{
		    if(GetPVarInt(playerid,"AdminDuty") > 0)return 1;
	    	SpielerInfo[playerid][sWiederbeleben] = 1;
		    GetPlayerPos(playerid, Tot_X[playerid], Tot_Y[playerid], Tot_Z[playerid]);
			Tot_Int[playerid] = GetPlayerInterior(playerid);
			Tot_World[playerid] = GetPlayerVirtualWorld(playerid);
			foreach(new i : Player)
			{
			    if(GetPVarInt(i,"MedicDuty") > 0)
			    {
			        SendClientMessage(i,COLOR_RED,"[Info]: {FFFFFF}ZENTRALE: Eine weitere Person ist schwerverletzt. Alle verfügbaren Einheiten werden gebeten sich umgehend");
			        SendClientMessage(i,COLOR_RED,"[Info]: {FFFFFF}ZENTRALE: zur Person zu begeben. Alle Schwerverletzten sind unter '/totliste' zu finden.");
			    }
			}
		}
	}
	ResetPlayerDuty(playerid);
 	DeletePVar(playerid,"Rathaus");
	return 1;
}

public OnVehicleSpawn(vehicleid)
{
	//LumberjackSystem
	//Log_VehicleSpawn(vehicleid);
	//MiningSystem
	//Mining_VehicleSpawn(vehicleid);

	if(FahrzeugInfo[vehicleid][fLabel] != Text3D:INVALID_3DTEXT_ID)
	{
		DestroyDynamic3DTextLabel(FahrzeugInfo[vehicleid][fLabel]);
		FahrzeugInfo[vehicleid][fLabel] = Text3D:INVALID_3DTEXT_ID;
		AddOther(vehicleid);
	}
	if(FahrzeugInfo[vehicleid][fNeonColor] != 0 && FahrzeugInfo[vehicleid][fNeonStatus] == false)
	{
		FahrzeugInfo[vehicleid][fNeonStatus] = true;
		FahrzeugInfo[vehicleid][fNeonObj][0] = CreateDynamicObject(FahrzeugInfo[vehicleid][fNeonColor],0,0,0,0,0,0);
		FahrzeugInfo[vehicleid][fNeonObj][1] = CreateDynamicObject(FahrzeugInfo[vehicleid][fNeonColor],0,0,0,0,0,0);
		AttachDynamicObjectToVehicle(FahrzeugInfo[vehicleid][fNeonObj][0], vehicleid, -0.8, 0.0, -0.60, 0.0, 0.0, 0.0);
		AttachDynamicObjectToVehicle(FahrzeugInfo[vehicleid][fNeonObj][1], vehicleid, 0.8, 0.0, -0.60, 0.0, 0.0, 0.0);
	}
    if(FahrzeugInfo[vehicleid][fNebenjob] > 0)
    {
	    DOOR[vehicleid] = false;
		GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(vehicleid, false, false, false, false, false, false, false);
		FahrzeugInfo[vehicleid][fTank] = VehicleData[GetVehicleModel(vehicleid)-400][vehLiter];
	}
	else if(FahrzeugInfo[vehicleid][fFraktion] > 0)
	{
	    //DOOR[vehicleid] = true;
	    //GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
		//SetVehicleParamsEx(vehicleid, false, false, false, true, false, false, false);
	}
	else if(FahrzeugInfo[vehicleid][fGruppe] > 0)
	{
	    DOOR[vehicleid] = true;
		GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(vehicleid, false, false, false, true, false, false, false);
	}
	else if(FahrzeugInfo[vehicleid][fFahrschule] > 0)
	{
	    DOOR[vehicleid] = false;
		GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(vehicleid, false, false, false, false, false, false, false);
		FahrzeugInfo[vehicleid][fTank] = VehicleData[GetVehicleModel(vehicleid)-400][vehLiter];
	}
	else if(FahrzeugInfo[vehicleid][fAutohaus] > 0)
	{
	    DOOR[vehicleid] = true;
		GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(vehicleid, false, false, false, true, false, false, false);
	}
	else if(strlen(FahrzeugInfo[vehicleid][fBesitzer]) > 0)
	{
 		//DOOR[vehicleid] = true;
		//GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
		//SetVehicleParamsEx(vehicleid, false, false, false, true, false, false, false);
	}
	if(FahrzeugInfo[vehicleid][fSireneBool] == true)
	{
		DestroyDynamicObject(FahrzeugInfo[vehicleid][fSirene][0]);
		DestroyDynamicObject(FahrzeugInfo[vehicleid][fSirene][1]);
		DestroyDynamicObject(FahrzeugInfo[vehicleid][fSirene][2]);
		DestroyDynamicObject(FahrzeugInfo[vehicleid][fSirene][3]);
		DestroyDynamicObject(FahrzeugInfo[vehicleid][fSirene][4]);
		FahrzeugInfo[vehicleid][fSirene][0] = -1;
		FahrzeugInfo[vehicleid][fSirene][1] = -1;
		FahrzeugInfo[vehicleid][fSirene][2] = -1;
		FahrzeugInfo[vehicleid][fSirene][3] = -1;
		FahrzeugInfo[vehicleid][fSirene][4] = -1;
		FahrzeugInfo[vehicleid][fSireneBool] = false;
	}
	Motor[vehicleid] = false;
	Licht[vehicleid] = false;
	Motorhaube[vehicleid] = false;
	Kofferraum[vehicleid] = false;
	Radio[vehicleid] = false;

	AddTuning(vehicleid);
	return 1;
}

public OnVehicleDeath(vehicleid, killerid)
{
	//LumberjackSystem
	//Log_VehicleDeath(vehicleid);
	if(vehicleid == WaffenTransporter)
	{
	    foreach(new i : Player)
		{
			if(SpielerInfo[i][sFraktion] > 8)
			{
			    SendClientMessage(i,COLOR_GANGFIGHT,"[Info]: {FFFFFF}[MATS-TRANSPORT]: Der Transporter für die Materialien wurde zerstört!");
			    SendClientMessage(i,COLOR_GANGFIGHT,"[Info]: {FFFFFF}[MATS-TRANSPORT]: Er spawnt in 30 Minuten wieder an einer zufälligen Position.");
			}
		}
		WaffenTransporter = INVALID_VEHICLE_ID;
		KillTimer(WaffenTransportTimer);
		WaffenTransportTimer = SetTimer("SpawnWaffenTransporter", 1800000, true);
		DestroyVehicle(vehicleid);
	}
	if(FahrzeugInfo[vehicleid][fNebenjobDuty] != 0)
	{
	    if(killerid != INVALID_PLAYER_ID)
	    {
	    	new string[128];
	    	format(string,sizeof(string),"[Info]: {FFFFFF}Dein Jobfahrzeug wurde gerade von %s zerstört.",SpielerInfo[killerid][sName]);
	    	SendClientMessage(FahrzeugInfo[vehicleid][fNebenjobDuty], COLOR_INFO, string);
	    	SendClientMessage(FahrzeugInfo[vehicleid][fNebenjobDuty], COLOR_INFO, "[Info]: Drücke 'F8' und sichere einen Screenshot falls du dich beschweren möchtest.");
		}
	    FahrzeugInfo[vehicleid][fNebenjobDuty] = 0;
	}
	if(FahrzeugInfo[vehicleid][fLabel] != Text3D:INVALID_3DTEXT_ID)
	{
		DestroyDynamic3DTextLabel(FahrzeugInfo[vehicleid][fLabel]);
		FahrzeugInfo[vehicleid][fLabel] = Text3D:INVALID_3DTEXT_ID;
	}
	if(FahrzeugInfo[vehicleid][fSupmobil3DText] != Text3D:INVALID_3DTEXT_ID)
	{
		DestroyDynamic3DTextLabel(FahrzeugInfo[vehicleid][fSupmobil3DText]);
		FahrzeugInfo[vehicleid][fSupmobil3DText] = Text3D:INVALID_3DTEXT_ID;
	}
	if(FahrzeugInfo[vehicleid][fSupMobilObj][0] != INVALID_OBJECT_ID)
	{
		for(new supobjects; supobjects < 4; supobjects++)
		{
		    DestroyDynamicObject(FahrzeugInfo[vehicleid][fSupMobilObj][supobjects]);
		    FahrzeugInfo[vehicleid][fSupMobilObj][supobjects] = INVALID_OBJECT_ID;
		}
	}
	if(FahrzeugInfo[vehicleid][fBankrob] != 0)
	{
		PlayerTextDrawHide(BankAttacker, BankraubTD[BankAttacker][0]);
		PlayerTextDrawHide(BankAttacker, BankraubTD[BankAttacker][1]);
		PlayerTextDrawHide(BankAttacker, BankraubTD[BankAttacker][2]);
		PlayerTextDrawHide(BankAttacker, BankraubTD[BankAttacker][3]);
		PlayerTextDrawHide(BankAttacker, BankraubTD[BankAttacker][4]);
		PlayerTextDrawHide(BankAttacker, BankraubTD[BankAttacker][5]);
    	BankRobAmLaufen = 0;
    	DeleteVehicle(BankRobVan);
    	BankRobVan = INVALID_VEHICLE_ID;
    	KillTimer(PlayerBankRobTimer[BankAttacker]);
		for(new sackid=0; sackid<sizeof(GeldSack); sackid++)
		{
	    	DestroyDynamicObject(BankRobGeldSack[sackid]);
	    	Delete3DTextLabel(BankRobGeldSackLabel[sackid]);
	    	BankRobGeldSackLabel[sackid] = Text3D:INVALID_3DTEXT_ID;
		}
		SendClientMessage(BankAttacker,COLOR_RED,"[Info]: {FFFFFF}Bankrob fehlgeschlagen, da der Bankrobvan zerstört wurde.");
		BankAttacker = -1;
	}
	if(FahrzeugInfo[vehicleid][fImportCar] != 0)
	{
 		KillTimer(ImportCarTimer);
	    Importfahrzeug = false;
		SetTimer("_ImportCarTimer",3600000,false);
		DeleteVehicle(ImportCar);
		ImportCar = 0;
		SendClientMessageToAll(COLOR_ORANGE,"Das Importfahrzeug wurde zerstört. Mission fehlgeschlagen.");
	}
	if(FahrzeugInfo[vehicleid][fKurrierCar] != 0)
	{
	    new kurrierid = GetPVarInt(FahrzeugInfo[vehicleid][fKurrierCar],"KurrierID");
	    kurrierid--;
	    SpielerInfo[FahrzeugInfo[vehicleid][fKurrierCar]][sKurrier] = 1;
		SendClientMessage(FahrzeugInfo[vehicleid][fKurrierCar],COLOR_ORANGE,"Das Kurrierfahrzeug wurde zerstört. Mission fehlgeschlagen.");
		SetPlayerPos(FahrzeugInfo[vehicleid][fKurrierCar],777.7709,-1016.0993,26.3594);
		KillTimer(KurrierCarTimer[kurrierid]);
	    Kurrierfahrzeug[kurrierid] = false;
		DeleteVehicle(KurrierCar[kurrierid]);
		KurrierCar[kurrierid] = 0;
	}
	if(FahrzeugInfo[vehicleid][fSireneBool] == true)
	{
		DestroyDynamicObject(FahrzeugInfo[vehicleid][fSirene][0]);
		DestroyDynamicObject(FahrzeugInfo[vehicleid][fSirene][1]);
		DestroyDynamicObject(FahrzeugInfo[vehicleid][fSirene][2]);
		DestroyDynamicObject(FahrzeugInfo[vehicleid][fSirene][3]);
		DestroyDynamicObject(FahrzeugInfo[vehicleid][fSirene][4]);
		FahrzeugInfo[vehicleid][fSirene][0] = INVALID_OBJECT_ID;
		FahrzeugInfo[vehicleid][fSirene][1] = INVALID_OBJECT_ID;
		FahrzeugInfo[vehicleid][fSirene][2] = INVALID_OBJECT_ID;
		FahrzeugInfo[vehicleid][fSirene][3] = INVALID_OBJECT_ID;
		FahrzeugInfo[vehicleid][fSirene][4] = INVALID_OBJECT_ID;
		FahrzeugInfo[vehicleid][fSireneBool] = false;
	}
	//IndicatorSystem
	//Indicator_OnVehicleDeath(vehicleid);
	RemoveTuning(vehicleid);
	return 1;
}

public OnPlayerText(playerid, text[])
{
    if(Afk[playerid] == 1)
    {
        SendClientMessage(playerid, COLOR_RED, "[Info]: {FFFFFF}Du bist Abwesend gemeldet. Benutze '/back'.");
        return 0;
 	}
    if(SpielerInfo[playerid][sMuted] > 0)
    {
        new string[144];
        format(string,144,"[Info]: {FFFFFF}Du bist noch für %d Minute(n) gemutet.",SpielerInfo[playerid][sMuted]);
        SendClientMessage(playerid,COLOR_RED,string);
        return 0;
    }
    if(SpielerInfo[playerid][sWiederbeleben] == 1)
    {
        SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du liegst schwer verletzt auf dem Boden...");
        return 0;
    }
    if(SpielerInfo[playerid][sKrankenhaus] == 1)
    {
        SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du liegst schwer verletzt im Krankenhaus...");
        return 0;
    }
    for(new i=0;i<sizeof(Badword);i++)
    {
    	if(strfind(text,Badword[i],true) != -1)
    	{
    	    new bwgstring[144];
    	    SetPVarInt(playerid,"UsingBadword", GetPVarInt(playerid,"UsingBadword") +1);
			SpielerInfo[playerid][sBadword] += 1;
			if(SpielerInfo[playerid][sBadword] == 9)
			{
			    new string[144];
		        format(string,144,"Das System hat %s verwarnt. Grund: 9x Badword benutzt",SpielerInfo[playerid][sName]);
				SendAdminMessage(COLOR_RED,string);
				CreateServerLogEntry("WARN_LOG", string);
				format(string,144,"Das System hat dich verwarnt. Grund: 9x Badword benutzt");
				WarnPlayer(playerid,"System","9x Badword benutzt");
				SpielerInfo[playerid][sBadword] = 0;
			}
    	    if(GetPVarInt(playerid,"UsingBadword") < 3)
    	    {
			    format(bwgstring,sizeof(bwgstring),"Du hast das Badword '%s' genutzt. Du erhälst Verwarnung %d/3!", Badword[i], GetPVarInt(playerid,"UsingBadword"));
			    SendClientMessage(playerid,COLOR_RED,bwgstring);
			    return 0;
			}
			else if(GetPVarInt(playerid,"UsingBadword") == 3)
    	    {
			    SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Das System hat dich vom Server gekickt!");
			    SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast zum 3ten mal ein Badword benutzt. Reiß dich in Zukunft zusammen.");
				format(bwgstring,sizeof(bwgstring),"%s wurde vom System gekickt. Grund: 3x Badword",SpielerInfo[playerid][sName]);
				KickPlayer(playerid,bwgstring);
			    return 0;
			}
    	}
	}
 	new textgstring[144];
	if(isNewsLive(playerid))
	{
		format(textgstring,sizeof(textgstring),"Live %s: %s",SpielerInfo[playerid][sName],text);
		SendClientMessageToAll(COLOR_LIGHTGREEN,textgstring);
	}
	else if(GetPVarInt(playerid,"TelefoniertMit") > 0)
	{
	    if(GetPVarInt(playerid,"CopMaske") == 1){format(textgstring,sizeof(textgstring),"[Handy] Unbekannter sagt: %s",text);}
  		else if(GetPVarInt(playerid,"FraktionsMaske") == 1){format(textgstring,sizeof(textgstring),"[Handy] Unbekannter sagt: %s",text);}
  		else if(GetPVarInt(playerid,"GruppenMaske") == 1){format(textgstring,sizeof(textgstring),"[Handy] Unbekannter sagt: %s",text);}
		else {format(textgstring,sizeof(textgstring),"[Handy] %s sagt: %s",SpielerInfo[playerid][sName],text);}
		SetPlayerChatBubble(playerid, text, 0xE10000FF, 10.0, 5000);
		ProxDetector(20.0, playerid, textgstring, 0xFFFFFFFF,0xFFFFFFFF,0xE0E0E0FE,0xE0E0E0FE,0xE0E0E0FE);
		if(GetDistanceBetweenPlayersEx(playerid, GetPVarInt(playerid,"TelefoniertMit")) > 20)
		{
		    SendClientMessage(GetPVarInt(playerid,"TelefoniertMit"),COLOR_YELLOW,textgstring);
		}
	}
	else
	{
  		if(GetPVarInt(playerid,"CopMaske") == 1){format(textgstring,sizeof(textgstring),"Unbekannter sagt: %s",text);}
  		else if(GetPVarInt(playerid,"FraktionsMaske") == 1){format(textgstring,sizeof(textgstring),"Unbekannter sagt: %s",text);}
  		else if(GetPVarInt(playerid,"GruppenMaske") == 1){format(textgstring,sizeof(textgstring),"Unbekannter sagt: %s",text);}
		else
		{
			if(SpielerInfo[playerid][sVIP] < 1){format(textgstring,sizeof(textgstring),"%s sagt: %s",SpielerInfo[playerid][sName],text);}
			else format(textgstring,sizeof(textgstring),"{FF8C00}VIP{FFFFFF} %s sagt: %s",SpielerInfo[playerid][sName],text);
		}
		SetPlayerChatBubble(playerid, text, 0xE10000FF, 10.0, 5000);
		ProxDetector(20.0, playerid, textgstring, 0xFFFFFFFF,0xFFFFFFFF,0xE0E0E0FE,0xE0E0E0FE,0xE0E0E0FE);
	}
	return 0;
}

// ==================== << Tuning >>
// ==================== << Tuning >>
// ==================== << San-News >>

public OnPlayerCommandPerformed(playerid, cmd[], params[], result, flags)
{
	if (result == -1)
	{
    	new string[128];
		format(string,sizeof(string),"[INFO]: {FFFFFF}Dieser Befehl '/%s ' ist uns nicht bekannt. Schaue unter '/help' nach.",cmd);
		SendClientMessage(playerid,COLOR_RED, string);
    	return 0;
  	}
	if(Afk[playerid])
	{
		SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Du bist abwesend gemeldet. Benutze '/back'.");
		return 0;
	} 

	new commandlog[128];
	format(commandlog,sizeof(commandlog),"%s hat den Befehl '/%s %s' benutzt.", SpielerInfo[playerid][sName], cmd, params);
    CreateServerLogEntry("BEFEHL_LOG", commandlog);
  	return 1;
}

CMD:ktanken(playerid, params[])
{
	if(!IsPlayerInAnyVehicle(playerid))return SendClientMessage(playerid,COLOR_GREY,"[Info]: Du musst dafür im Fahrzeug sitzen.");
 	if(SpielerInfo[playerid][sKanister] < 10)return SendClientMessage(playerid,COLOR_GREY,"[Info]: Du hast keinen Kanister mit Sprit bei dir.");
  	new veh = GetPlayerVehicleID(playerid);
   	new Float:zuvoll = FahrzeugInfo[veh][fTank] +10.00;
    if(zuvoll > VehicleData[GetVehicleModel(GetPlayerVehicleID(playerid))-400][vehLiter])return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Dein Tank kann zurzeit keine 10 Liter mehr fassen.");
    FahrzeugInfo[veh][fTank] = FahrzeugInfo[veh][fTank]+10.00;
    SendClientMessage(playerid,COLOR_GREY,"[Info]: Fahrzeug befüllt. Es kann einen Kilometer dauern bis die Anzeige sich aktualisiert.");
    SpielerInfo[playerid][sKanister] = 0;
    return 1;
}
CMD:tanken(playerid, params[])
{
	new veh = GetPlayerVehicleID(playerid), PLAYER_STATE:State=GetPlayerState(playerid);
	if(!AnTankstelle(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist an keiner Tankstelle.");
 	if(!IsPlayerInAnyVehicle(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du sitzt in keinem Fahrzeug.");
  	if(State!=PLAYER_STATE_DRIVER)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist nicht der Fahrer dieses Fahrzeugs.");
   	if(Motor[veh] == true)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Der Motor muss beim Tanken ausgeschaltet werden.");
    SetPVarInt(playerid,"Tanken",1);
	ShowPlayerDialog(playerid,DIALOG_TANK_AUSWAHL,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Tanksystem","Benzin\nDiesel\nKerosin","Weiter","Abbrechen");
	return 1;
}
CMD:geldkoffer(playerid, params[])
{
	if(SpielerInfo[playerid][sNebenjob] != 10)return NichtBerechtigt
 	if(GetPVarInt(playerid,"GeldlieferantDuty") == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist nicht im Dienst.");
  	if(GetPVarInt(playerid,"GeldkofferInHand") != 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast bereits einen Geldkoffer in der Hand.");
   	if(GetPVarInt(playerid,"GeldtransporterGeld") == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}In deinem Geldtransporter befindet sich kein Geld.");
   	new Float:x, Float:y, Float:z, i = GetPVarInt(playerid,"GeldtransporterID"), string[364];
	GetXYInFrontOfVehicle(i,x,y,z,-2.02);
 	if(IsPlayerInRangeOfPoint(playerid,2.0,x,y,z))
  	{
   		if(FahrzeugInfo[i][fJobFahrer] != playerid)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Der Geldtransporter gehört nicht dir.");
		format(string,sizeof(string),"{FFFFFF}Geldtransporter Kapazität: ${FF0000}%d{FFFFFF}/$10.000\n\n{FFFFFF}Wie viel Geld möchtest du in den Koffer tun ? (MAX. $3.000)",GetPVarInt(playerid,"GeldtransporterGeld"));
		ShowPlayerDialog(playerid,DIALOG_GELDKOFFER_HOLEN,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Geldlieferant",string,"auffuellen","Abbrechen");
  		return 1;
    }
   	else SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du befindest dich nicht am Kofferraum deines Geldtransporters.");
   	return 1;
}

CMD:muell(playerid,params[])
{
	if(!LottoFind)return 1;
	if(!IsPlayerInRangeOfPoint(playerid,2.0,827.2465,11.5067,1004.8573)&&IsPlayerInRangeOfPoint(playerid,2.0,824.8449,7.8176,1004.8573)&&IsPlayerInRangeOfPoint(playerid,2.0,833.9316,10.7185,1004.1797))
	{
	    return 1;
	}
	LottoFind = false;
	new rand = random(9);
	if(rand>0)
	{
	    return 1;
	}
	new diff = SpielerInfo[playerid][sLotto][0] + SpielerInfo[playerid][sLotto][1] + SpielerInfo[playerid][sLotto][2];
    if(diff!=0)return 1;

	new Lotto[3];
    Lotto[0] = random(9);
	Lotto1_start:
	Lotto[1] = random(9);
    if(Lotto[0] == Lotto[1])goto Lotto1_start;
	Lotto2_start:
 	Lotto[2]= random(9);
    if(Lotto[0] == Lotto[2])goto Lotto2_start;
    if(Lotto[1] == Lotto[2])goto Lotto2_start;

    SpielerInfo[playerid][sLotto][0] = Lotto[0];SpielerInfo[playerid][sLotto][1] = Lotto[1];SpielerInfo[playerid][sLotto][2] = Lotto[2];
	SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Du hast einen Lottoschein gefunden.");
    showlottoschein(playerid);
    return 1;
}
CMD:lottoschein(playerid,params[])
{
    new diff = SpielerInfo[playerid][sLotto][0] + SpielerInfo[playerid][sLotto][1] + SpielerInfo[playerid][sLotto][2];
    if(diff==0)return SendClientMessage(playerid,COLOR_YELLOW,"Du besitzt keinen Lottoschein");
	if(GetPVarInt(playerid,"Lottoschein"))
	{
	    hidelottoschein(playerid);
	}
	else
	{
	    showlottoschein(playerid);
	}
	return 1;
}
CMD:lotto(playerid,params[])
{
	new Lotto[3];
    if(sscanf(params,"ddd",Lotto[0],Lotto[1],Lotto[2]))return SendClientMessage(playerid,COLOR_YELLOW,"Benutze: {FFFFFF}/lotto [0-9] [0-9] [0-9] | Preis: 120$");
	buylottoschein(playerid,Lotto[0],Lotto[1],Lotto[2]);
	return 1;
}

CMD:hotdogkaufen(playerid)
{
    if(!IsPlayerInRangeOfPoint(playerid,5.0,843.5143,-1746.0594,13.5899))return SendClientMessage(playerid, COLOR_RED, "Du bist nicht am Zivispawn beim Hotdogstand.");
    if(GetPlayerMoneyEx(playerid) < 25)return SendClientMessage(playerid, COLOR_RED, "Du benötigst 25$ um ein Hotdog zu essen.");

    new Float:x, Float:y, Float:z;
    GetPlayerPos(playerid, x,y,z);
    new Float:health;
    new string[128];
    GetPlayerHealth(playerid, health);
    if(GetPVarInt(playerid,!"dmg_sperre") > gettime())
    {
        return SendClientMessage(playerid,COLOR_RED,"Da du Schaden genommen hast, kannst du erst nach 5 Sekunden deine Hotdog genießen.");
    }
    else if(health < 100.0 && health > 1.0)
    {
        if(GetPVarInt(playerid,"CopMaske") == 1 && GetPVarInt(playerid,"GruppenMaske") == 1 && GetPVarInt(playerid,"FraktionsMaske") == 1)
        {
	        health = health >= 90.0 ? 100.0 : health + 10.0;
	        SetPlayerHealth(playerid, health);
	        KillTimer(DrogenTimer[playerid]);
	        DrogenTimer[playerid] = SetTimerEx("Drogen_Clear", 30000, false, "i", playerid);
	        GivePlayerMoneyEx(playerid,-25);
			SendClientMessage(playerid,COLOR_RED,"Du hast für 25$ einen Hotdog gekauft");
	        format(string, sizeof(string), "* Maskierter hat sich einen Hotdog gekauft.");
	        SendRoundMessage(x,y,z, COLOR_NME, string);
	  		ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, false, false, false, false, 0);//Essen
        }
        else
        {
	        health = health >= 90.0 ? 100.0 : health + 10.0;
	        SetPlayerHealth(playerid, health);
	        KillTimer(DrogenTimer[playerid]);
	        DrogenTimer[playerid] = SetTimerEx("Drogen_Clear", 30000, false, "i", playerid);
	        GivePlayerMoneyEx(playerid,-25);
	        SendClientMessage(playerid,COLOR_RED,"Du hast für 25$ einen Hotdog gekauft");
	        format(string, sizeof(string), "* %s hat sich einen Hotdog gekauft.", SpielerInfo[playerid][sName]);
	        SendRoundMessage(x,y,z, COLOR_NME, string);
	  		ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, false, false, false, false, 0);//Essen
		}
    }
    else
    {
        SendClientMessage(playerid, COLOR_RED, "Du kannst keinen Hotdog essen.(Leben zu hoch oder zu niedrig)");
        return 1;
    }
    return 1;
}

CMD:autohaus(playerid, params[])
{
	new autohausdialog[340], merker2;
 	if(IsPlayerInRangeOfPoint(playerid,4.0,1864.6090,-1598.8942,13.6107))
	{
		for(new i = 1;i<MAX_VEHICLES;i++)
  		{
    		if(!IsValidVehicle(i) || FahrzeugInfo[i][fDatabaseID] == 0)continue;
      		if(FahrzeugInfo[i][fAutohaus] != 1)continue;
      		format(autohausdialog,sizeof(autohausdialog),"%s\n%s",autohausdialog,FahrzeugName[FahrzeugInfo[i][fModelID]-400]);
        	autohauscarmodelid[playerid][merker2] = FahrzeugInfo[i][fModelID];
         	autohauscarid[playerid][merker2] = i;
          	merker2++;
		}
		SetPVarInt(playerid,"Autohaus",1);
  		ShowPlayerDialog(playerid,DIALOG_AUTOHAUS,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Autohaus",autohausdialog,"Weiter","Abbrechen");
    	return 1;
	}
	else if(IsPlayerInRangeOfPoint(playerid,4.0,1811.1904,-1398.9595,13.6169))
	{
		for(new i = 1;i<MAX_VEHICLES;i++)
  		{
    		if(!IsValidVehicle(i) || FahrzeugInfo[i][fDatabaseID] == 0)continue;
      		if(FahrzeugInfo[i][fAutohaus] != 2)continue;
        	format(autohausdialog,sizeof(autohausdialog),"%s\n%s",autohausdialog,FahrzeugName[FahrzeugInfo[i][fModelID]-400]);
         	autohauscarmodelid[playerid][merker2] = FahrzeugInfo[i][fModelID];
          	autohauscarid[playerid][merker2] = i;
           	merker2++;
		}
		SetPVarInt(playerid,"Autohaus",2);
  		ShowPlayerDialog(playerid,DIALOG_AUTOHAUS,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Motorradhändler",autohausdialog,"Weiter","Abbrechen");
    	return 1;
	}
	else if(IsPlayerInRangeOfPoint(playerid,4.0,-1538.5326,1161.8965,7.1947))
	{
		for(new i = 1;i<MAX_VEHICLES;i++)
		{
  			if(!IsValidVehicle(i) || FahrzeugInfo[i][fDatabaseID] == 0)continue;
     		if(FahrzeugInfo[i][fAutohaus] != 3)continue;
       		format(autohausdialog,sizeof(autohausdialog),"%s\n%s",autohausdialog,FahrzeugName[FahrzeugInfo[i][fModelID]-400]);
         	autohauscarmodelid[playerid][merker2] = FahrzeugInfo[i][fModelID];
          	autohauscarid[playerid][merker2] = i;
           	merker2++;
		}
		SetPVarInt(playerid,"Autohaus",3);
  		ShowPlayerDialog(playerid,DIALOG_AUTOHAUS,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Autohaus",autohausdialog,"Weiter","Abbrechen");
    	return 1;
	}
	else if(IsPlayerInRangeOfPoint(playerid,4.0,595.3383,-1510.0638,15.1829))
	{
		for(new i = 1;i<MAX_VEHICLES;i++)
  		{
    		if(!IsValidVehicle(i) || FahrzeugInfo[i][fDatabaseID] == 0)continue;
      		if(FahrzeugInfo[i][fAutohaus] != 4)continue;
		  	format(autohausdialog,sizeof(autohausdialog),"%s\n%s",autohausdialog,FahrzeugName[FahrzeugInfo[i][fModelID]-400]);
  			autohauscarmodelid[playerid][merker2] = FahrzeugInfo[i][fModelID];
  			autohauscarid[playerid][merker2] = i;
     		merker2++;
		}
		SetPVarInt(playerid,"Autohaus",4);
		ShowPlayerDialog(playerid,DIALOG_AUTOHAUS,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Flugzeug Autohaus",autohausdialog,"Weiter","Abbrechen");
  		return 1;
	}
	else if(IsPlayerInRangeOfPoint(playerid,4.0, 2938.4565,-2056.2478,3.5650))
	{
		for(new i = 1;i<MAX_VEHICLES;i++)
  		{
    		if(!IsValidVehicle(i) || FahrzeugInfo[i][fDatabaseID] == 0)continue;
      		if(FahrzeugInfo[i][fAutohaus] != 5)continue;
		  	format(autohausdialog,sizeof(autohausdialog),"%s\n%s",autohausdialog,FahrzeugName[FahrzeugInfo[i][fModelID]-400]);
  			autohauscarmodelid[playerid][merker2] = FahrzeugInfo[i][fModelID];
  			autohauscarid[playerid][merker2] = i;
     		merker2++;
		}
		SetPVarInt(playerid,"Autohaus",5);
		ShowPlayerDialog(playerid,DIALOG_AUTOHAUS,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Boote Autohaus",autohausdialog,"Weiter","Abbrechen");
  		return 1;
	}
	else SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du befindest dich in keinem Autohaus/Motorradhändler/Boothändler.");
	return 1;
}
CMD:pfcp(playerid, params[])
{
	if(ProbefahrtCar[playerid] != INVALID_VEHICLE_ID)
 	{
  		if(GetPVarInt(playerid,"Autohaus") == 1)//Autohaus - Los Santos
  		{
    		SetPlayerCheckpointEx(playerid,1945.9243,-1569.7150,13.5977,4.0);
      		SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}INFO: Der Checkpoint zum beenden der Probefahrt wurde auf der Karte markiert.");
        	return 1;
		}
		else if(GetPVarInt(playerid,"Autohaus") == 2)//Motorradhändler - Los Santos
		{
			SetPlayerCheckpointEx(playerid,1845.0406,-1397.4750,13.3906,4.0);
   			SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}INFO: Der Checkpoint zum beenden der Probefahrt wurde auf der Karte markiert.");
      		return 1;
		}
		else if(GetPVarInt(playerid,"Autohaus") == 3)//Autohaus - San Fierro
		{
			SetPlayerCheckpointEx(playerid,-1581.5812,1166.5559,6.7440,4.0);
   			SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}INFO: Der Checkpoint zum beenden der Probefahrt wurde auf der Karte markiert.");
      		return 1;
		}
		else if(GetPVarInt(playerid,"Autohaus") == 4)//Flugzeughändler - Los Santos
		{
			SetPlayerCheckpointEx(playerid,1882.7588,-2440.4363,13.5547,4.0);
   			SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}INFO: Der Checkpoint zum beenden der Probefahrt wurde auf der Karte markiert.");
      		return 1;
		}
		else if(GetPVarInt(playerid,"Autohaus") == 5)//Bootshändler - Los Santos
		{
			SetPlayerCheckpointEx(playerid,2951.4438,-1995.4794,-0.2203,4.0);
   			SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}INFO: Der Checkpoint zum beenden der Probefahrt wurde auf der Karte markiert.");
      		return 1;
		}
  	}
   	else SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du fährst derzeit kein Probefahrzeug.");
	return 1;
}

CMD:aufheben(playerid, params[])
{
	if(!AmGeldSack(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist an keinem Geldsack.");
	if(GetPVarInt(playerid,"HatGeldsack") == 1)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du kannst immer nur einen Geldsack tragen.");
	new sackid = GetGeldSack(playerid), string[124];
	if(BankRobGeldSack[sackid] == 0)return 1;
	if(SpielerInfo[playerid][sFraktion] != SpielerInfo[BankAttacker][sFraktion])return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Nur Mitglieder der Gang des Bankräubers kann den Geldsack aufheben.");
	new Float:x,Float:y,Float:z;
	GetVehiclePos(BankRobVan,x,y,z);
	SetPVarInt(playerid,"HatGeldsack",1);
	SetPVarInt(playerid,"Geldsack",sackid);
	BankRobGeldSackSpawned[0]--;
 	DestroyDynamicObject(BankRobGeldSack[sackid]);
    BankRobGeldSack[sackid] = 0;
 	DestroyDynamic3DTextLabel(BankRobGeldSackLabel[sackid]);
  	BankRobGeldSackLabel[sackid] = Text3D:INVALID_3DTEXT_ID;
	SetPlayerAttachedObject(playerid,ATTACH_INDEX_GELDSACK,1550,1,0.070999,-0.285000,0.016999,3.200000,84.000015,0.699999,0.913000,0.907999,0.778000);
	SetPlayerCheckpointEx(playerid,x,y,z,5.0);
	format(string,sizeof(string),"~w~ GELDBEUTEL IN DER BANK: ~b~ %d",BankRobGeldSackSpawned[0]);
 	PlayerTextDrawSetString(BankAttacker, BankraubTD[BankAttacker][4], string);
	return 1;
}

CMD:bank(playerid, params[])
{
	if(IsPlayerInRangeOfPoint(playerid,5.0,1778.7935,-1703.7747,13.5609) || IsPlayerInRangeOfPoint(playerid,5.0,1780.3076,-1703.8090,13.5629))
	{
 		if(BankRobAmLaufen > 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Die Bank wird zurzeit überfallen, die Angestellten können nicht arbeiten.");
   		if(SpielerInfo[playerid][sPerso] == 0)return ShowPlayerDialog(playerid,9992,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","{FFFFFF}Du besitzt derzeit noch kein Bankkonto. Du benötigst allerdings einen Personalausweis\nzur Personenidentifikation um dir ein Bankkonto anlegen zu können.","Weiter","");
		if(SpielerInfo[playerid][sBankPin] == 0)return ShowPlayerDialog(playerid,DIALOG_BANKKONTO_ERSTELLEN,DIALOG_STYLE_PASSWORD,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","{FFFFFF}Du besitzt derzeit noch kein Bankkonto. Damit Du deine Finanzen in Zukunft lagern und auch besser\nverwalten kannst, musst Du dir ein Konto anlegen. Gebe dazu einen 4-Stelligen gewünschten Zahlen-PIN ein.","Weiter","Abbrechen");
		ShowPlayerDialog(playerid,DIALOG_BANKLOGIN,DIALOG_STYLE_PASSWORD,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","{FFFFFF}Bitte gebe deinen PIN für dein Konto an um fortzufahren.","Weiter","Zurück");
		SetPVarInt(playerid,"Bankschalter",1);
		return 1;
 	}
 	else SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist an keinem Bankschalter.");
 	return 1;
}

CMD:hotdog(playerid, params[])
{
	if(!IsPlayerInRangeOfPoint(playerid,3.0,2546.9290,-8484.1396,13.8301))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist nicht an der Ölfabrik.");
 	if(SpielerInfo[playerid][sNebenjob] == 16)
  	{
   		SetPlayerHealth(playerid,100);
     	SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Du hast dir einen saftigen Hotdog gegönnt (kostenlos für Langstreckenfahrer).");
   	}
    else
    {
    	SetPlayerHealth(playerid,100);
     	GivePlayerMoneyEx(playerid,-50);
      	SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Du hast dir einen saftigen Hotdog gegönnt (-50$).");
    }
    return 1;
}
CMD:buerger(playerid, params[])
{
	if(!IsPlayerInRangeOfPoint(playerid,3.0,2437.7014,-5924.0571,13.8430))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist nicht am Langstreckenfahrer Rasthof.");
 	if(SpielerInfo[playerid][sNebenjob] == 16)
  	{
   		SetPlayerHealth(playerid,100);
     	SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Du hast dir einen saftigen Bürger gegönnt (kostenlos für Langstreckenfahrer).");
   	}
    else
    {
    	SetPlayerHealth(playerid,100);
     	GivePlayerMoneyEx(playerid,-50);
      	SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Du hast dir einen saftigen Bürger gegönnt (-50$).");
    }
   	return 1;
}
CMD:hacken(playerid, params[])
{
	if(IsPlayerInRangeOfPoint(playerid,0.7,345.47363, 1827.52173, 2241.95728) || IsPlayerInRangeOfPoint(playerid,0.7,347.63062, 1827.36877, 2241.95728))
 	{
  		if(PDInnenHacking > 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Die Tür ist verriegelt und kann zurzeit nicht gehackt werden.");
    	if(SpielerInfo[playerid][sFraktion] == 2 || SpielerInfo[playerid][sFraktion] == 6)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast eine Schlüssel-Karte. Benutze die 'N' Taste.");
		SetTimerEx("PDInnenHackingT", 120000, false, "i", playerid);
		PDInnenHacking = 1;
		SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Du versuchst die Tür zu hacken. Bleibe hier oder der Hack schlägt fehl (2 Minuten).");
		SendCopMessage(COLOR_BLUE,"[Zentrale]: {FFFFFF}An alle Einheiten. Das Intranet meldet einen Hackversuch der Zellentür.");
		SendCopMessage(COLOR_BLUE,"[Zentrale]: {FFFFFF}Begeben Sie sich sofort zum LSPD und sichern Sie die Situation.");
		return 1;
	}
 	else SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du befindest dich nicht im PD an der Innentür.");
  	return 1;
}
CMD:tuningmelden(playerid, params[])
{
	new tmpcar = GetPlayerVehicleID(playerid);
	if(GetPVarInt(playerid,"MeldetTuning") > 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du meldest bereits dein Tuning an. Warte einen Moment.");
 	if(!IsPlayerInRangeOfPoint(playerid, 5.0, 1075.3168,-1666.5822,12.8669))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist nicht bei der Tuning-Anmeldung am Ordnungsamt.");
	if(!IsPlayerInAnyVehicle(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du sitzt in keinem Fahrzeug.");
	if(IsAFahrrad(tmpcar))return 1;
	if(FahrzeugInfo[tmpcar][fDatabaseID] < 1 || FahrzeugInfo[tmpcar][fNebenjob] > 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Für dieses Fahrzeug kann kein Tuning angemeldet werden.");
 	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist nicht der Fahrer des Fahrzeuges.");
	if(FahrzeugInfo[tmpcar][fFraktion] > 0 && FahrzeugInfo[tmpcar][fFraktion] != SpielerInfo[playerid][sFraktion])return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist nicht befugt Tuning für dieses Fahrzeug anzumelden.");
	if(FahrzeugInfo[tmpcar][fGruppe] > 0 && FahrzeugInfo[tmpcar][fGruppe] != SpielerInfo[playerid][sGruppe])return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist nicht befugt Tuning für dieses Fahrzeug anzumelden.");
	if(FahrzeugInfo[tmpcar][fBesitzerID] > 0 && FahrzeugInfo[tmpcar][fBesitzerID] != playerid)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist nicht befugt Tuning für dieses Fahrzeug anzumelden.");
	if(FahrzeugInfo[tmpcar][fTuningGemeldet] > 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Für dieses Fahrzeug wurde bereits Tuning angemeldet.");
	if(GetPlayerMoneyEx(playerid) < 5000)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir (5000$).");
	if(Motor[tmpcar] == true)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Der Motor muss abgeschaltet sein damit das Tuning angemeldet werden kann.");
	TogglePlayerControllable(playerid, false);
	SetPVarInt(playerid,"MeldetTuning",1);
	SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Aktualisiere Ordnungsamt-Datenbank...");
	SetTimerEx("TuningAnmelden", 4000, false, "ii", playerid, tmpcar);
	return 1;
}
CMD:atmlist(playerid, params[])
{
	if(SpielerInfo[playerid][sNebenjob] != 10)return NichtBerechtigt
 	if(GetPVarInt(playerid,"GeldlieferantDuty") == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist nicht im Dienst.");
  	new atmdialog[2048], count = 0;
  	for(new atm=1; atm<MAX_ATMS; atm++)
	{
		if(!ATMInfo[atm][atmCreated]) continue;
		playerAtmDialogHelper[playerid][count] = atm;
 		count++;
		format(atmdialog,sizeof atmdialog,"%s\n%d. Bankautomat | Kapazität: {FF0000}$%d {FFFFFF}/ $10.000 | Betriebszustand: %s",atmdialog,atm,ATMInfo[atm][atmGeld],ATMZustand(atm));
	}
	if(!count) return SendClientMessage(playerid, COLOR_ERRORTEXT, "Es befinden sich derzeit keine ATMs in San Andreas.");
	ShowPlayerDialog(playerid,DIALOG_BANKAUTOMATEN,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Bankautomaten",atmdialog,"Orten","Beenden");
	return 1;
}
CMD:eb(playerid, params[])
{
	if(SpielerInfo[playerid][sAdmin] < 1)
 	{
		if(IsPlayerInAnyVehicle(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du kannst die Eventbox nicht aus einem Fahrzeug heraus öffnen.");
		if(AnEventbox(playerid) < 1)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du befindest dich an keiner Eventbox.");
		new mf = AnEventbox(playerid);
		new string[128];
		if(EventboxInfo[mf][ebGift] == 1)//Repairkit
		{
  			format(string,sizeof(string),"["SERV_STAG"-Eventbox] %s hat eine Eventbox gefunden und 5 Repairkits erhalten!",SpielerInfo[playerid][sName]);
	    	SendClientMessageToAll(COLOR_SUPER,string);
		    SpielerInfo[playerid][sRepairkit] += 5;
		}
		else if(EventboxInfo[mf][ebGift] == 2)//Feuerzeug
		{
  			format(string,sizeof(string),"["SERV_STAG"-Eventbox] %s hat eine Eventbox gefunden und 15 Feuerzeuge erhalten!",SpielerInfo[playerid][sName]);
	    	SendClientMessageToAll(COLOR_SUPER,string);
		    SpielerInfo[playerid][sFeuerzeug] += 15;
		}
		else if(EventboxInfo[mf][ebGift] == 3)//Armour und HP
		{
  			format(string,sizeof(string),"["SERV_STAG"-Eventbox] %s hat eine Eventbox gefunden und volle Weste und 120 HP erhalten!",SpielerInfo[playerid][sName]);
	    	SendClientMessageToAll(COLOR_SUPER,string);
		    SetPlayerArmour(playerid,100.0);
		    SetPlayerHealthEx(playerid,120.0);
		}
		else if(EventboxInfo[mf][ebGift] == 4)//Drogen
		{
  			format(string,sizeof(string),"["SERV_STAG"-Eventbox] %s hat eine Eventbox gefunden und 26g Drogen erhalten!",SpielerInfo[playerid][sName]);
	    	SendClientMessageToAll(COLOR_SUPER,string);
		    SpielerInfo[playerid][sDrogen] += 26;
		}
		else if(EventboxInfo[mf][ebGift] == 5)//Dollar
		{
  			format(string,sizeof(string),"["SERV_STAG"-Eventbox] %s hat eine Eventbox gefunden und 16.000$ erhalten!",SpielerInfo[playerid][sName]);
	    	SendClientMessageToAll(COLOR_SUPER,string);
		    GivePlayerMoneyEx(playerid,16000);
		}
		else if(EventboxInfo[mf][ebGift] == 6)//EXP
		{
  			format(string,sizeof(string),"["SERV_STAG"-Eventbox] %s hat eine Eventbox gefunden und 4.000 EXP erhalten!",SpielerInfo[playerid][sName]);
	    	SendClientMessageToAll(COLOR_SUPER,string);
		    GivePlayerEXP(playerid,4000);
		}
		else if(EventboxInfo[mf][ebGift] == 7)//VIP
		{
  			format(string,sizeof(string),"!! > ["SERV_STAG"-Eventbox] %s hat eine Eventbox gefunden und 30 Tage VIP erhalten! < !!",SpielerInfo[playerid][sName]);
   			SendClientMessageToAll(COLOR_SUPER,string);
		    GiveVIP(SpielerInfo[playerid][sName],30,"Eventbox");
    		SpielerInfo[playerid][sVIP] = 1;
    		if(SpielerInfo[playerid][sAchivVIP] < 1)
      		{
        		SpielerInfo[playerid][sAchivVIP] = 1;
				ShowAchievement(playerid,"Werde VIP Mitglied","+ 2250 EXP");
				GivePlayerEXP(playerid,2250);
    		}
		}
  		mysql_format(sqlHandle, string, sizeof(string), "DELETE FROM `eventboxen` WHERE `ID` = '%i' ", mf);
		mysql_tquery(sqlHandle, string);

		DestroyDynamic3DTextLabel(EventboxInfo[mf][ebText]);
		EventboxInfo[mf][ebText] = Text3D:INVALID_3DTEXT_ID;

		DestroyDynamicObject(EventboxInfo[mf][ebObject]);
		EventboxInfo[mf][ebObject] = INVALID_OBJECT_ID;

		EventboxInfo[mf][ebErstellt] = false;
		return 1;
	}
	else SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Teammitglieder sind von der Teilnahme an diesem Userevent ausgeschlossen.");
	return 1;
}
CMD:schwarzmarkt(playerid, params[])
{
	if(IsPlayerInRangeOfPoint(playerid,1.5,-1634.1162,-2241.6426,31.4766))
 	{
		if(GetPVarInt(playerid,"Schwarzmarkt") == 0)
  		{
    		SetPVarInt(playerid,"Schwarzmarkt",1);
	 		ClearChat(playerid,10);
			InterpolateCameraPos(playerid, -1636.717651, -2246.770507, 33.609264, -1637.316650, -2240.642822, 33.192844, 3000);
			InterpolateCameraLookAt(playerid, -1631.886962, -2246.285156, 32.413921, -1632.561279, -2241.475341, 31.891593, 3000);
			TogglePlayerControllable(playerid, false);
			SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Emilio{FFFFFF} sagt: Willkommen im Schwarzmarkt. Was kann ich für dich tun Bruder?");
   			ShowMenuForPlayer(Schwarzmarkt,playerid);
			return 1;
		}
	}
	else SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist nicht im Schwarzmarkt.");
	return 1;
}

CMD:spawnme(playerid, params[])
{
	if(GetPVarInt(playerid,"IamFreshLeader") == 1)
 	{
  		DeletePVar(playerid,"IamFreshLeader");
    	SpawnPlayerEx(playerid);
     	SendClientMessage(playerid,COLOR_YELLOW,"Du hast dich gespawnt. Viel Glück mit deiner neuen Fraktion!");
      	return 1;
    }
    else SendClientMessage(playerid,COLOR_GREY,"[Info]: Du kannst dich nur dann spawnen lassen, wenn du kürzlich als Leader ernannt wurdest.");
    return 1;
}

CMD:carlock(playerid, params[])
{
	new Float:x,Float:y,Float:z, merker = true;
	for(new i = 1;i<MAX_VEHICLES;i++)
	{
 		if(!IsValidVehicle(i))continue;
		if(GetPlayerVirtualWorld(playerid) != GetVehicleVirtualWorld(i)) continue;
		GetVehiclePos(i,x,y,z);
		if(IsPlayerInRangeOfPoint(playerid,3.0,x,y,z))
		{
  			if(FahrzeugInfo[i][fBesitzerID] != playerid && SpielerInfo[playerid][sZweitKey] != FahrzeugInfo[i][fDatabaseID])return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt keine Schlüssel für dieses Fahrzeug.");
  			if(DOOR[i] == false)
			{
   				GetVehicleParamsEx(i,engine,lights,alarm,doors,bonnet,boot,objective);
			    if(Licht[i] == false)
			    {
			    	SetVehicleParamsEx(i,engine,true,alarm,doors,bonnet,boot,objective);
    				SetTimerEx("LockLicht",1000,false,"i",i);
				}
				SetVehicleParamsEx(i,engine,lights,alarm,true,bonnet,boot,objective);
    			DOOR[i] = true;
			    if(IsAHelikopter(i)){GameTextForPlayer(playerid,"~w~Helikopter~n~~r~abgeschlossen",2000,6);}
			    else GameTextForPlayer(playerid,"~w~Fahrzeug~n~~r~abgeschlossen",2000,6);
			    merker = false;
			    foreach(new id : Player)
				{
					if(GetPlayerVirtualWorld(id) != GetVehicleVirtualWorld(i)) continue;
					if(!IsPlayerInRangeOfPoint(id,12.0,x,y,z)) continue;
					
					PlayerPlaySound(id, 1147, 0.0, 0.0, 0.0);
					
					if(GetPlayerVehicleID(id) == i)
	    			{
        				PlayerTextDrawShow(i, Tacho[id][12]);
				    }
				}
				return 1;
			}
			else if(DOOR[i] == true)
			{
   				GetVehicleParamsEx(i,engine,lights,alarm,doors,bonnet,boot,objective);
			    if(Licht[i] == false)
			    {
			    	SetVehicleParamsEx(i,engine,true,alarm,doors,bonnet,boot,objective);
    				SetTimerEx("LockLicht",1000,false,"i",i);
				}
				SetVehicleParamsEx(i,engine,lights,alarm,false,bonnet,boot,objective);
    			DOOR[i] = false;
			    if(IsAHelikopter(i)){GameTextForPlayer(playerid,"~w~Helikopter~n~~g~aufgeschlossen",2000,6);}
			    else GameTextForPlayer(playerid,"~w~Fahrzeug~n~~g~aufgeschlossen",2000,6);
			    merker = false;
			    foreach(new id : Player)
				{
					if(IsPlayerInRangeOfPoint(id,12.0,x,y,z))
					{
						PlayerPlaySound(id, 1147, 0.0, 0.0, 0.0);
					}
					if(GetPlayerVehicleID(id) == i)
	    			{
        				PlayerTextDrawHide(i, Tacho[id][12]);
				    }
				}
    			return 1;
			}
		}
	}
	if(merker)
	{
		SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist nicht in der Nähe eines Fahrzeugs.");
 	}
	return 1;
}
CMD:kennung(playerid, params[])
{
	if(SpielerInfo[playerid][sFraktion] == 2 || SpielerInfo[playerid][sFraktion] == 6)
 	{
  		new tmpcarxx = GetPlayerVehicleID(playerid);
    	if(FahrzeugInfo[tmpcarxx][fModelID] != 596 && FahrzeugInfo[tmpcarxx][fModelID] != 597)return SendClientMessage(playerid,COLOR_RED,"[Info]: Du sitzt in keinem Streifenwagen.");
     	new string[128];
      	format(string,sizeof(string),"[Info]: {FFFFFF}Dieser Streifenwagen hat die Kennung 'PD %d'.",FahrzeugInfo[tmpcarxx][fDatabaseID]);
       	SendClientMessage(playerid,COLOR_INFO,string);
       	return 1;
    }
    else NichtBerechtigt
    return 1;
}

CMD:parken(playerid, params[])
{
	if(!IsPlayerInAnyVehicle(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du sitzt in keinem Fahrzeug.");
	new vehicleid = GetPlayerVehicleID(playerid), Float:Position[4];
	if(FahrzeugInfo[vehicleid][fBesitzerID] != playerid)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du kannst das Fahrzeug nicht umparken.");
	GetVehiclePos(vehicleid,Position[0],Position[1],Position[2]);
	GetVehicleZAngle(vehicleid,Position[3]);
	new newvehicleid = CreateVehicle(FahrzeugInfo[vehicleid][fModelID],Position[0],Position[1],Position[2],Position[3],FahrzeugInfo[vehicleid][fColor][0],FahrzeugInfo[vehicleid][fColor][1],-1);
 	SetVehicleNumberPlate(newvehicleid,FahrzeugInfo[vehicleid][fKennzeichen]);
	if(FahrzeugInfo[vehicleid][fNeonStatus] == true)
	{
		FahrzeugInfo[newvehicleid][fNeonColor] = FahrzeugInfo[vehicleid][fNeonColor];
		FahrzeugInfo[vehicleid][fNeonColor] = 0;

		DestroyDynamicObject(FahrzeugInfo[vehicleid][fNeonObj][0]);
  		DestroyDynamicObject(FahrzeugInfo[vehicleid][fNeonObj][1]);
    	FahrzeugInfo[vehicleid][fNeonObj][0] = INVALID_OBJECT_ID;
	    FahrzeugInfo[vehicleid][fNeonObj][1] = INVALID_OBJECT_ID;
	    FahrzeugInfo[vehicleid][fNeonStatus] = false;

		FahrzeugInfo[newvehicleid][fNeonStatus] = true;
		FahrzeugInfo[newvehicleid][fNeonObj][0] = CreateDynamicObject(FahrzeugInfo[newvehicleid][fNeonColor],0,0,0,0,0,0);
		FahrzeugInfo[newvehicleid][fNeonObj][1] = CreateDynamicObject(FahrzeugInfo[newvehicleid][fNeonColor],0,0,0,0,0,0);
		AttachDynamicObjectToVehicle(FahrzeugInfo[newvehicleid][fNeonObj][0], newvehicleid, -0.8, 0.0, -0.60, 0.0, 0.0, 0.0);
		AttachDynamicObjectToVehicle(FahrzeugInfo[newvehicleid][fNeonObj][1], newvehicleid, 0.8, 0.0, -0.60, 0.0, 0.0, 0.0);
	}
	FahrzeugInfo[newvehicleid][fDatabaseID] = FahrzeugInfo[vehicleid][fDatabaseID];
	FahrzeugInfo[newvehicleid][fErstellt] = FahrzeugInfo[vehicleid][fErstellt];
	FahrzeugInfo[newvehicleid][fModelID] = FahrzeugInfo[vehicleid][fModelID];
	FahrzeugInfo[newvehicleid][fPosition][0] = Position[0];
	FahrzeugInfo[newvehicleid][fPosition][1] = Position[1];
	FahrzeugInfo[newvehicleid][fPosition][2] = Position[2];
	FahrzeugInfo[newvehicleid][fPosition][3] = Position[3];
	FahrzeugInfo[newvehicleid][fColor][0] = FahrzeugInfo[vehicleid][fColor][0];
	FahrzeugInfo[newvehicleid][fColor][1] = FahrzeugInfo[vehicleid][fColor][1];
	FahrzeugInfo[newvehicleid][fPaintjob] = FahrzeugInfo[vehicleid][fPaintjob];
	FahrzeugInfo[newvehicleid][fBesitzerID] = FahrzeugInfo[vehicleid][fBesitzerID];
	format(FahrzeugInfo[newvehicleid][fBesitzer], MAX_PLAYER_NAME, SpielerInfo[playerid][sName]);
	format(FahrzeugInfo[newvehicleid][fKennzeichen], 10, FahrzeugInfo[vehicleid][fKennzeichen]);
	FahrzeugInfo[newvehicleid][fAbgeschleppt] = FahrzeugInfo[vehicleid][fAbgeschleppt];
	FahrzeugInfo[newvehicleid][fParkkralle] = FahrzeugInfo[vehicleid][fParkkralle];
	FahrzeugInfo[newvehicleid][fKilometer] = FahrzeugInfo[vehicleid][fKilometer];
	FahrzeugInfo[newvehicleid][fTank] = FahrzeugInfo[vehicleid][fTank];
	FahrzeugInfo[newvehicleid][fRang] = FahrzeugInfo[vehicleid][fRang];
	for(new i=0;i<14;i++){ FahrzeugInfo[newvehicleid][fTuning][i] = FahrzeugInfo[vehicleid][fTuning][i]; }
	FahrzeugInfo[newvehicleid][fFraktion] = FahrzeugInfo[vehicleid][fFraktion];
	FahrzeugInfo[newvehicleid][fGruppe] = FahrzeugInfo[vehicleid][fGruppe];
	FahrzeugInfo[newvehicleid][fAutohaus] = FahrzeugInfo[vehicleid][fAutohaus];
	FahrzeugInfo[newvehicleid][fNebenjob] = FahrzeugInfo[vehicleid][fNebenjob];
	FahrzeugInfo[newvehicleid][fGarage] = FahrzeugInfo[vehicleid][fGarage];
	FahrzeugInfo[newvehicleid][fGPark] = FahrzeugInfo[vehicleid][fGPark];
	FahrzeugInfo[newvehicleid][fFahrschule] = FahrzeugInfo[vehicleid][fFahrschule];
	FahrzeugInfo[newvehicleid][fSupmobil] = FahrzeugInfo[vehicleid][fSupmobil];
	FahrzeugInfo[newvehicleid][fZiviroller] = FahrzeugInfo[vehicleid][fZiviroller];
	FahrzeugInfo[newvehicleid][fImportCar] = FahrzeugInfo[vehicleid][fImportCar];
	FahrzeugInfo[newvehicleid][fKurrierCar] = FahrzeugInfo[vehicleid][fKurrierCar];
	FahrzeugInfo[newvehicleid][fPreis] = FahrzeugInfo[vehicleid][fPreis];
	FahrzeugInfo[newvehicleid][fLabel] = FahrzeugInfo[vehicleid][fLabel];
	FahrzeugInfo[newvehicleid][fBesitzerID] = FahrzeugInfo[vehicleid][fBesitzerID];
	FahrzeugInfo[newvehicleid][fPizzaObjekt] = FahrzeugInfo[vehicleid][fPizzaObjekt];
	FahrzeugInfo[newvehicleid][fkGeld] = FahrzeugInfo[vehicleid][fkGeld];
	FahrzeugInfo[newvehicleid][fkDrogen] = FahrzeugInfo[vehicleid][fkDrogen];
	FahrzeugInfo[newvehicleid][fJobEXP] = FahrzeugInfo[vehicleid][fJobEXP];
	new Float:vehHealth;
	GetVehicleHealth(vehicleid,vehHealth);
	SetVehicleHealth(vehicleid,vehHealth);
	DeleteVehicle(vehicleid);
	AddTuning(newvehicleid);
	PutPlayerInVehicle(playerid,newvehicleid,0);
	GetVehicleParamsEx(newvehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(newvehicleid, false, false, false, true, false, false, false);
	Motor[newvehicleid] = false;
	Licht[newvehicleid] = false;
	Motorhaube[newvehicleid] = false;
	Kofferraum[newvehicleid] = false;
	DOOR[newvehicleid] = true;
	SendClientMessage(playerid,COLOR_SUPER,"Das Fahrzeug wurde erfolgreich umgeparkt.");
	return 1;
}
CMD:gesamtbetrag(playerid, params[])
{
	if(!IsPlayerInRangeOfPoint(playerid,3.0,1790.4467,-1710.6276,13.5489))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du befindest dich nicht am Bankschalter Nummer 3.");
	if(SpielerInfo[playerid][sRank] < 6 && SpielerInfo[playerid][sTankstelle] < 1 && SpielerInfo[playerid][sAmmunation] < 1 && SpielerInfo[playerid][sStore] < 1)return NichtBerechtigt
	ShowPlayerDialog(playerid,DIALOG_BANK_TRANS_GESAMT,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem - Gesamttransfer","Fraktionskonto\nGeschäftskonto","Weiter","Abbrechen");
	return 1;
}
CMD:kofferraum(playerid, params[])
{
	if(IsPlayerInAnyVehicle(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Im Fahrzeug nicht möglich.");
 	new merker = true, Float:Position[4], tmpcar = GetPlayerVehicleID(playerid);
	for(new i=1; i<MAX_VEHICLES; i++)
 	{
 		if(!IsValidVehicle(i))continue;
  		if(FahrzeugInfo[i][fDatabaseID] == 0)continue;
		GetXYInFrontOfVehicle(i,Position[0],Position[1],Position[2],-2.02);
  		if(IsPlayerInRangeOfPoint(playerid,3.0,Position[0],Position[1],Position[2]))
    	{
     		if(DOOR[i] == true)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Das Fahrzeug ist abgeschlossen.");
			if(FahrzeugInfo[i][fBesitzerID] == playerid ||  SpielerInfo[playerid][sZweitKey] == FahrzeugInfo[tmpcar][fDatabaseID] || FahrzeugInfo[i][fFraktion] == SpielerInfo[playerid][sFraktion] || FahrzeugInfo[i][fGruppe] == SpielerInfo[playerid][sGruppe])
			{
				if(IsAFahrrad(i))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Fahrräder besitzen kein Kofferraum.");
 				if(IsAMotorrad(i))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Zweiräder besitzen kein Kofferraum.");
  				if(IsABoot(i))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Boote besitzen kein Kofferraum.");
  				if(IsAHelikopter(i))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Helikopters kein keine Kofferraum.");
	  			if(IsAFlugzeug(i))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Flugzeuge besitzen kein Kofferraum.");
	  			if(IsALKW(i))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Trucks besitzen kein Kofferraum.");
  				SetPVarInt(playerid,"FahrzeugID",i);
				ShowPlayerDialog(playerid,DIALOG_KOFFERRAUM,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Kofferraum","Geld\nWaffen\nDrogen\nMaterialien","Weiter","Schließen");
				GetVehicleParamsEx(i, engine, lights, alarm, doors, bonnet, boot, objective);
 				SetVehicleParamsEx(i, engine, lights, alarm, doors, bonnet, true, objective);
  				Kofferraum[i] = true;
  				merker = false;
  				return 1;
			}
			else SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt keine Schlüssel für dieses Fahrzeug.");
			return 1;
		}
	}
	if(merker)
	{
 		SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du befindest dich an keinem Kofferraum.");
   		return 1;
	}
	return 1;
}
CMD:bankrob(playerid, params[])
{
	if(!IsPlayerInRangeOfPoint(playerid,5.0,1773.0109,-1699.5596,13.5509))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du befindest dich nicht in der Bank am Tresor.");
 	if(SpielerInfo[playerid][sFraktion] < 9)return NichtBerechtigt
  	if(CopDuty != 0 || FBIDuty != 0)
   	{
    	if(Bankrob == 1 || BankRobVan != INVALID_VEHICLE_ID)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Die Bank kann zurzeit nicht überfallen werden.");
		SetTimer("BankrobTimer",3600000,false);
		KillTimer(PlayerBankRobTimer[playerid]);
		PlayerBankRobTimer[playerid] = SetTimerEx("PlayerBankrob",1000,true,"i",playerid);
  		Bankrob = 1;
    	BankRobAmLaufen = 1;
     	SetPVarInt(playerid,"Bankrob",1);
      	BankAttacker = playerid;
       	SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du raubst die Bank aus! Warte bis das erste Geld eingepackt wurde.");
		SetPlayerPos(playerid,1771.5452,-1700.5923,13.5509);
  		SetPlayerFacingAngle(playerid,87.7365);
    	PlayerTextDrawShow(playerid, BankraubTD[playerid][0]);
	   	PlayerTextDrawShow(playerid, BankraubTD[playerid][1]);
	    PlayerTextDrawShow(playerid, BankraubTD[playerid][2]);
	    PlayerTextDrawShow(playerid, BankraubTD[playerid][3]);
	    PlayerTextDrawSetString(playerid, BankraubTD[playerid][3], "~w~ GELD IM VAN: ~b~ 0$");
	    PlayerTextDrawShow(playerid, BankraubTD[playerid][4]);
	    PlayerTextDrawSetString(playerid, BankraubTD[playerid][4], "~w~ GELDBEUTEL IN DER BANK: ~b~ 0");
	    PlayerTextDrawShow(playerid, BankraubTD[playerid][5]);
	    PlayerTextDrawSetString(playerid, BankraubTD[playerid][5], "~w~ NOCH ~b~ 60 Sekunden ~w~ BIS ZUM NEUEN GELDBEUTEL");
	    PlayerBankRobSec[playerid] = 60;
	    new string[264];
    	SetPlayerWantedLevelEx(playerid, GetPlayerWantedLevelEx(playerid) +6);
    	SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Die Überwachungskamera hat dich bemerkt und die Bilder an die Polizei weitergegeben.");
    	SendCopMessage(COLOR_BLUE,"ZENTRALE: AN ALLE EINHEITEN !! DIE BANK IN LOS SANTOS MELDET EINEN BANKÜBERFALL.");
    	format(string,sizeof(string),"ZENTRALE: Der Bankräuber wurde identifiziert. Verbrecher %s",SpielerInfo[playerid][sName]);
		SendCopMessage(COLOR_BLUE,string);
//		FCNPC_ApplyAnimation(BotBank[0], "ped", "cower", 3.0, 1, 0, 0, 0, 0);
//		FCNPC_ApplyAnimation(BotBank[1], "ped", "cower", 3.0, 1, 0, 0, 0, 0);
  		return 1;
	}
	else SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Es muss min. 1 Beamter im Dienst sein.");
	return 1;
}
CMD:aufbrechen(playerid, params[])
{
	if(SpielerInfo[playerid][sFraktion] != 2 && SpielerInfo[playerid][sFraktion] != 6)return NichtBerechtigt
 	if(GetPVarInt(playerid,"CopDuty") < 1 && GetPVarInt(playerid,"FBIDuty") < 1)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist nicht im Dienst.");
	if(PoliceAufbrechenUsed == true)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Gang und Mafian-Basen können nur alle 30 Sekunden (versucht) aufgebrochen (zu) werden.");
	if(IsPlayerInRangeOfPoint(playerid, 3.0, 2495.2358,-1690.7219,14.7656))//Grove Street Eingang
 	{
		if(FrakInfo[9][fiBaseZugang] > 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Die Tür der Base steht bereits offen. Kein Grund für Gewalt.");
  		new string[128];
    	new rand = random(2);//0 oder 1 - 50% Chance
     	if(rand == 1)
      	{
       		if(GetPVarInt(playerid,"CopMaske") < 1){format(string,sizeof(string),"* %s %s sammelt seine Kräfte und tritt die Tür ein.",RangName(playerid),SpielerInfo[playerid][sName]);}
         	else format(string,sizeof(string),"* Unbekannter sammelt seine Kräfte und tritt die Tür ein.");
			FrakInfo[9][fiBaseZugang] = 1;
   		}
     	else if(rand == 0)
      	{
       		if(GetPVarInt(playerid,"CopMaske") < 1){format(string,sizeof(string),"* %s %s scheitert an dem Versuch die Tür einzutreten.",RangName(playerid),SpielerInfo[playerid][sName]);}
         	else format(string,sizeof(string),"* Unbekannter scheitert an dem Versuch die Tür einzutreten.");
       	}
        ProxDetector(12, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        foreach(new i : Player)
		{
  			if(SpielerInfo[i][sFraktion] == 9)
   			{
      			SendClientMessage(i,COLOR_GANGFIGHT,"[Info]: {FFFFFF}Es wird versucht die Tür eurer Base aufzutreten!");
		    }
		}
		PoliceAufbrechenUsed = true;
		SetTimer("PoliceAufbrechen",30000,false);
  	}
	else if(IsPlayerInRangeOfPoint(playerid, 3.0, 1999.8800,-1114.5149,27.1250))//Ballas Eingang
	{
 		if(FrakInfo[10][fiBaseZugang] > 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Die Tür der Base steht bereits offen. Kein Grund für Gewalt.");
   		new string[128];
	    new rand = random(2);//0 oder 1 - 50% Chance
     	if(rand == 1)
      	{
       		if(GetPVarInt(playerid,"CopMaske") < 1){format(string,sizeof(string),"* %s %s sammelt seine Kräfte und tritt die Tür ein.",RangName(playerid),SpielerInfo[playerid][sName]);}
         	else format(string,sizeof(string),"* Unbekannter sammelt seine Kräfte und tritt die Tür ein.");
			FrakInfo[10][fiBaseZugang] = 1;
   		}
     	else if(rand == 0)
      	{
       		if(GetPVarInt(playerid,"CopMaske") < 1){format(string,sizeof(string),"* %s %s scheitert an dem Versuch die Tür einzutreten.",RangName(playerid),SpielerInfo[playerid][sName]);}
         	else format(string,sizeof(string),"* Unbekannter scheitert an dem Versuch die Tür einzutreten.");
       	}
        ProxDetector(12, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        foreach(new i : Player)
		{
			if(SpielerInfo[i][sFraktion] == 10)
   			{
      			SendClientMessage(i,COLOR_GANGFIGHT,"[Info]: {FFFFFF}Es wird versucht die Tür eurer Base aufzutreten!");
	    	}
		}
		PoliceAufbrechenUsed = true;
		SetTimer("PoliceAufbrechen",30000,false);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 3.0, 2549.6614,-1032.2898,69.5789))//Vagos Eingang
	{
 		if(FrakInfo[11][fiBaseZugang] > 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Die Tür der Base steht bereits offen. Kein Grund für Gewalt.");
   		new string[128];
	    new rand = random(2);//0 oder 1 - 50% Chance
     	if(rand == 1)
      	{
       		if(GetPVarInt(playerid,"CopMaske") < 1){format(string,sizeof(string),"* %s %s sammelt seine Kräfte und tritt die Tür ein.",RangName(playerid),SpielerInfo[playerid][sName]);}
         	else format(string,sizeof(string),"* Unbekannter sammelt seine Kräfte und tritt die Tür ein.");
			FrakInfo[11][fiBaseZugang] = 1;
   		}
     	else if(rand == 0)
      	{
       		if(GetPVarInt(playerid,"CopMaske") < 1){format(string,sizeof(string),"* %s %s scheitert an dem Versuch die Tür einzutreten.",RangName(playerid),SpielerInfo[playerid][sName]);}
         	else format(string,sizeof(string),"* Unbekannter scheitert an dem Versuch die Tür einzutreten.");
       	}
       	ProxDetector(12, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        foreach(new i : Player)
		{
  			if(SpielerInfo[i][sFraktion] == 11)
	    	{
      			SendClientMessage(i,COLOR_GANGFIGHT,"[Info]: {FFFFFF}Es wird versucht die Tür eurer Base aufzutreten!");
		    }
		}
		PoliceAufbrechenUsed = true;
		SetTimer("PoliceAufbrechen",30000,false);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 3.0, 2508.2561,-1998.5865,13.9025))//Aztecas Eingang
	{
 		if(FrakInfo[12][fiBaseZugang] > 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Die Tür der Base steht bereits offen. Kein Grund für Gewalt.");
   		new rand = random(2);//0 oder 1 - 50% Chance
    	new string[128];
     	if(rand == 1)
      	{
       		if(GetPVarInt(playerid,"CopMaske") < 1){format(string,sizeof(string),"* %s %s sammelt seine Kräfte und tritt die Tür ein.",RangName(playerid),SpielerInfo[playerid][sName]);}
         	else format(string,sizeof(string),"* Unbekannter sammelt seine Kräfte und tritt die Tür ein.");
			FrakInfo[12][fiBaseZugang] = 1;
   		}
     	else if(rand == 0)
      	{
       		if(GetPVarInt(playerid,"CopMaske") < 1){format(string,sizeof(string),"* %s %s scheitert an dem Versuch die Tür einzutreten.",RangName(playerid),SpielerInfo[playerid][sName]);}
         	else format(string,sizeof(string),"* Unbekannter scheitert an dem Versuch die Tür einzutreten.");
       	}
        ProxDetector(12, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        foreach(new i : Player)
		{
  			if(SpielerInfo[i][sFraktion] == 12)
	    	{
      			SendClientMessage(i,COLOR_GANGFIGHT,"[Info]: {FFFFFF}Es wird versucht die Tür eurer Base aufzutreten!");
		    }
		}
		PoliceAufbrechenUsed = true;
		SetTimer("PoliceAufbrechen",30000,false);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 3.0, -2462.7795,132.3849,35.1719))//Rifa Eingang
	{
 		if(FrakInfo[13][fiBaseZugang] > 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Die Tür der Base steht bereits offen. Kein Grund für Gewalt.");
   		new rand = random(2);//0 oder 1 - 50% Chance
	    new string[128];
     	if(rand == 1)
      	{
       		if(GetPVarInt(playerid,"CopMaske") < 1){format(string,sizeof(string),"* %s %s sammelt seine Kräfte und tritt die Tür ein.",RangName(playerid),SpielerInfo[playerid][sName]);}
         	else format(string,sizeof(string),"* Unbekannter sammelt seine Kräfte und tritt die Tür ein.");
			FrakInfo[13][fiBaseZugang] = 1;
   		}
     	else if(rand == 0)
      	{
       		if(GetPVarInt(playerid,"CopMaske") < 1){format(string,sizeof(string),"* %s %s scheitert an dem Versuch die Tür einzutreten.",RangName(playerid),SpielerInfo[playerid][sName]);}
         	else format(string,sizeof(string),"* Unbekannter scheitert an dem Versuch die Tür einzutreten.");
       	}
        ProxDetector(12, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        foreach(new i : Player)
		{
  			if(SpielerInfo[i][sFraktion] == 13)
   			{
      			SendClientMessage(i,COLOR_GANGFIGHT,"[Info]: {FFFFFF}Es wird versucht die Tür eurer Base aufzutreten!");
		    }
		}
		PoliceAufbrechenUsed = true;
		SetTimer("PoliceAufbrechen",30000,false);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 5.0, 725.6343,-1439.8298,13.5318))//Triads Eingang
	{
 		if(FrakInfo[14][fiBaseZugang] > 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Die Tür der Base steht bereits offen. Kein Grund für Gewalt.");
   		new rand = random(2);//0 oder 1 - 50% Chance
	    new string[128];
     	if(rand == 1)
      	{
       		if(GetPVarInt(playerid,"CopMaske") < 1){format(string,sizeof(string),"* %s %s sammelt seine Kräfte und tritt die Tür ein.",RangName(playerid),SpielerInfo[playerid][sName]);}
         	else format(string,sizeof(string),"* Unbekannter sammelt seine Kräfte und tritt die Tür ein.");
			FrakInfo[14][fiBaseZugang] = 1;
   		}
     	else if(rand == 0)
      	{
       		if(GetPVarInt(playerid,"CopMaske") < 1){format(string,sizeof(string),"* %s %s scheitert an dem Versuch die Tür einzutreten.",RangName(playerid),SpielerInfo[playerid][sName]);}
         	else format(string,sizeof(string),"* Unbekannter scheitert an dem Versuch die Tür einzutreten.");
       	}
        ProxDetector(12, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        foreach(new i : Player)
		{
  			if(SpielerInfo[i][sFraktion] == 14)
   			{
      			SendClientMessage(i,COLOR_GANGFIGHT,"[Info]: {FFFFFF}Es wird versucht die Tür eurer Base aufzutreten!");
	    	}
		}
		PoliceAufbrechenUsed = true;
		SetTimer("PoliceAufbrechen",30000,false);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 3.0, 255.1670,-1366.6371,53.1094))//Yakuza Eingang
	{
 		if(FrakInfo[15][fiBaseZugang] > 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Die Tür der Base steht bereits offen. Kein Grund für Gewalt.");
   		new rand = random(2);//0 oder 1 - 50% Chance
	    new string[128];
     	if(rand == 1)
      	{
       		if(GetPVarInt(playerid,"CopMaske") < 1){format(string,sizeof(string),"* %s %s sammelt seine Kräfte und tritt die Tür ein.",RangName(playerid),SpielerInfo[playerid][sName]);}
         	else format(string,sizeof(string),"* Unbekannter sammelt seine Kräfte und tritt die Tür ein.");
			FrakInfo[15][fiBaseZugang] = 1;
   		}
     	else if(rand == 0)
      	{
       		if(GetPVarInt(playerid,"CopMaske") < 1){format(string,sizeof(string),"* %s %s scheitert an dem Versuch die Tür einzutreten.",RangName(playerid),SpielerInfo[playerid][sName]);}
         	else format(string,sizeof(string),"* Unbekannter scheitert an dem Versuch die Tür einzutreten.");
       	}
       	ProxDetector(12, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        foreach(new i : Player)
		{
  			if(SpielerInfo[i][sFraktion] == 15)
	    	{
      			SendClientMessage(i,COLOR_GANGFIGHT,"[Info]: {FFFFFF}Es wird versucht die Tür eurer Base aufzutreten!");
		    }
		}
		PoliceAufbrechenUsed = true;
		SetTimer("PoliceAufbrechen",30000,false);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 3.0, 1447.6503,362.0286,18.9134))//Camorra Eingang
 	{
  		if(FrakInfo[16][fiBaseZugang] > 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Die Tür der Base steht bereits offen. Kein Grund für Gewalt.");
    	new rand = random(2);//0 oder 1 - 50% Chance
	    new string[128];
     	if(rand == 1)
      	{
       		if(GetPVarInt(playerid,"CopMaske") < 1){format(string,sizeof(string),"* %s %s sammelt seine Kräfte und tritt die Tür ein.",RangName(playerid),SpielerInfo[playerid][sName]);}
         	else format(string,sizeof(string),"* Unbekannter sammelt seine Kräfte und tritt die Tür ein.");
			FrakInfo[16][fiBaseZugang] = 1;
  		}
    	else if(rand == 0)
     	{
      		if(GetPVarInt(playerid,"CopMaske") < 1){format(string,sizeof(string),"* %s %s scheitert an dem Versuch die Tür einzutreten.",RangName(playerid),SpielerInfo[playerid][sName]);}
        	else format(string,sizeof(string),"* Unbekannter scheitert an dem Versuch die Tür einzutreten.");
        }
        ProxDetector(12, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        foreach(new i : Player)
		{
  			if(SpielerInfo[i][sFraktion] == 16)
	    	{
      			SendClientMessage(i,COLOR_GANGFIGHT,"[Info]: {FFFFFF}Es wird versucht die Tür eurer Base aufzutreten!");
		    }
		}
		PoliceAufbrechenUsed = true;
		SetTimer("PoliceAufbrechen",30000,false);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 3.0, 985.9162,2000.5089,11.4609))//Italian Mafia Eingang
	{
 		if(FrakInfo[17][fiBaseZugang] > 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Die Tür der Base steht bereits offen. Kein Grund für Gewalt.");
   		new rand = random(2);//0 oder 1 - 50% Chance
	    new string[128];
     	if(rand == 1)
      	{
       		if(GetPVarInt(playerid,"CopMaske") < 1){format(string,sizeof(string),"* %s %s sammelt seine Kräfte und tritt die Tür ein.",RangName(playerid),SpielerInfo[playerid][sName]);}
         	else format(string,sizeof(string),"* Unbekannter sammelt seine Kräfte und tritt die Tür ein.");
			FrakInfo[17][fiBaseZugang] = 1;
   		}
     	else if(rand == 0)
      	{
       		if(GetPVarInt(playerid,"CopMaske") < 1){format(string,sizeof(string),"* %s %s scheitert an dem Versuch die Tür einzutreten.",RangName(playerid),SpielerInfo[playerid][sName]);}
         	else format(string,sizeof(string),"* Unbekannter scheitert an dem Versuch die Tür einzutreten.");
      	}
       	ProxDetector(12, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        foreach(new i : Player)
		{
  			if(SpielerInfo[i][sFraktion] == 17)
	    	{
      			SendClientMessage(i,COLOR_GANGFIGHT,"[Info]: {FFFFFF}Es wird versucht die Tür eurer Base aufzutreten!");
	    	}
		}
		PoliceAufbrechenUsed = true;
		SetTimer("PoliceAufbrechen",30000,false);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 3.0, 302.3475,-1154.6626,81.3429))//Russian Mafia Eingang
	{
 		if(FrakInfo[18][fiBaseZugang] > 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Die Tür der Base steht bereits offen. Kein Grund für Gewalt.");
   		new rand = random(3);//0 oder 1 - 50% Chance
	    new string[128];
     	if(rand == 1)
      	{
       		if(GetPVarInt(playerid,"CopMaske") < 1){format(string,sizeof(string),"* %s %s sammelt seine Kräfte und tritt die Tür ein.",RangName(playerid),SpielerInfo[playerid][sName]);}
         	else format(string,sizeof(string),"* Unbekannter sammelt seine Kräfte und tritt die Tür ein.");
			FrakInfo[18][fiBaseZugang] = 1;
		}
  		else if(rand == 0)
    	{
     		if(GetPVarInt(playerid,"CopMaske") < 1){format(string,sizeof(string),"* %s %s scheitert an dem Versuch die Tür einzutreten.",RangName(playerid),SpielerInfo[playerid][sName]);}
       		else format(string,sizeof(string),"* Unbekannter scheitert an dem Versuch die Tür einzutreten.");
       	}
       	ProxDetector(12, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        foreach(new i : Player)
		{
  			if(SpielerInfo[i][sFraktion] == 18)
   			{
      			SendClientMessage(i,COLOR_GANGFIGHT,"[Info]: {FFFFFF}Es wird versucht die Tür eurer Base aufzutreten!");
		    }
		}
		PoliceAufbrechenUsed = true;
		SetTimer("PoliceAufbrechen",30000,false);
	}
	return 1;
}
CMD:stadthalle(playerid, params[])
{
	if(IsPlayerInRangeOfPoint(playerid,5.0, 918.7917,-1463.4541,2754.3389))
	//if(IsPlayerAtPickupByType(playerid,3.0,918.7917,-1463.4541,2754.3389))
 	{
		if(GetPVarInt(playerid,"Rathaus") == 0)
  		{
    		SetPVarInt(playerid,"Rathaus",1);
	 		ClearChat(playerid,10);
			InterpolateCameraPos(playerid, 918.579284, -1472.245483, 2757.426025, 918.766784, -1465.135498, 2755.373779, 1000);
			InterpolateCameraLookAt(playerid, 918.580932, -1467.522460, 2755.785156, 918.875610, -1460.239501, 2754.365234, 1000);
			TogglePlayerControllable(playerid, false);
			if(SpielerInfo[playerid][sPerso] == 0)
			{
  				SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Willkommen im Rathaus von Los Santos. Wie ich sehe bist Du neu hier.");
		    	SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Um dich überall ausweisen zu können, benötigst Du einen Personalausweis.");
			    SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Ich werde dir nun einen Personalausweis erstellen. Dieser Kostet: {FF0000}50${FFFFFF}.");
			    if(SpielerInfo[playerid][sTutorial] == 4)
			    {
       				SendClientMessage(playerid,COLOR_YELLOW,"[Tutorial]: {FFFFFF}Michelle fertigt deinen Personalausweis an, warte einen Moment...");
			        SendClientMessage(playerid,COLOR_YELLOW,"[Tutorial]: {FFFFFF}In der Zeit könntest du dir schonmal deine Einstellungen unter '/icp' zurecht rücken.");
			        SpielerInfo[playerid][sTutorial] = 5;
			        ShowPlayerTutorial(playerid);
			    }
				if(GetPlayerMoneyEx(playerid) < 50)
				{
    				SetTimerEx("Personalausweis", 10000, false, "i", playerid);
					SetPVarInt(playerid,"Warten",1);
				}
				else
				{
    				SetTimerEx("Personalausweis", 10000, false, "i", playerid);
				}
			}
			if(SpielerInfo[playerid][sPerso] == 1)
			{
				SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Willkommen im Rathaus von Los Santos. Was kann ich für dich tun?");
    			ShowPlayerMenu(playerid, RATHAUS_MENU, "Stadthalle", "Stadthalle Los Santos");
			    AddPlayerMenuItem(playerid, "Nebenjobs", "Alle unsere geliebten und grossartigen Nebenjobs.");
			    AddPlayerMenuItem(playerid, "Ausweise", "Verschiedene Ausweise fuer deine Reise.");
			    AddPlayerMenuItem(playerid, "Versicherungen", "Verschiedene Versicherungen.");
			    AddPlayerMenuItem(playerid, "Verlassen", "");
				return 1;
			}
		}
	}
	else SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist nicht in der Stadthalle an der Rezeption.");
	return 1;
}

CMD:auffuellen(playerid, params[])
{
	new veh = GetPlayerVehicleID(playerid);
 	if(SpielerInfo[playerid][sNebenjob] == 1)
  	{
   		if(!IsPlayerInAnyVehicle(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du sitzt in keinem Fahrzeug.");
	    if(GetPVarInt(playerid,"TruckerDuty") == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist nicht im Dienst.");
		if(!AnTankstelle(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist an keiner Tankstelle.");
		if(GetPVarInt(playerid,"TStelleBetanken") == 1)return 1;
  		if(GetVehicleModel(veh) != 515)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du sitzt in keinem Roadtrain.");
  		if(!IsTrailerAttachedToVehicle(veh))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast keinen Anhänger angekuppelt.");
    	if(GetVehicleTrailer(veh) != SpielerLKWTrailer[playerid])return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Das ist nicht dein Anhänger.");
	    if(Motor[veh] == true)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Der Motor muss beim auffuellen ausgeschaltet werden.");
	    if(GetPVarInt(playerid,"TrailerKapazität") == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}In deinem Anhänger befindet sich kein Treibstoff mehr. Bringe den Anhänger zum roten Marker.");
		new tsid = GetNearTankstelleID(playerid);
		if(GetPVarInt(playerid,"TrailerBetanken") == 1)//Benzin
  		{
    		if(TankstellenInfo[tsid][tsIsFillingB] == 1)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Diesel Tankstelle wird gerade schon mit Benzin aufgefüllt. Bitte warte einen Moment.");
      		if(TankstellenInfo[tsid][tsBenzinLiter] == 10000)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Diese Tankstelle benötigt kein Benzin.");
			TogglePlayerControllable(playerid, false);
			PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
			SetTimerEx("TrailerBetanken",20000,false,"i",playerid);
			GameTextForPlayer(playerid, "Die Tankstelle wird aufgefuellt~n~~n~~r~Bitte warten...", 20000, 5);
			TankstellenInfo[tsid][tsIsFillingB] = 1;
			SetPVarInt(playerid,"TStelleBetanken",1);
   		}
	    else if(GetPVarInt(playerid,"TrailerBetanken") == 2)//Diesel
	 	{
   			if(TankstellenInfo[tsid][tsIsFillingD] == 1)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Diesel Tankstelle wird gerade schon mit Diesel aufgefüllt. Bitte warte einen Moment.");
      		if(TankstellenInfo[tsid][tsDieselLiter] == 10000)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Diese Tankstelle benötigt kein Diesel.");
			TogglePlayerControllable(playerid, false);
			PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
			SetTimerEx("TrailerBetanken",20000,false,"i",playerid);
			GameTextForPlayer(playerid, "Die Tankstelle wird aufgefuellt~n~~n~~r~Bitte warten...", 20000, 5);
			TankstellenInfo[tsid][tsIsFillingD] = 1;
			SetPVarInt(playerid,"TStelleBetanken",1);
	 	}
	 	else if(GetPVarInt(playerid,"TrailerBetanken") == 3)//Kerosin
	 	{
   			if(TankstellenInfo[tsid][tsIsFillingK] == 1)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Diesel Tankstelle wird gerade schon mit Kerosin aufgefüllt. Bitte warte einen Moment.");
      		if(TankstellenInfo[tsid][tsKerosinLiter] == 10000)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Diese Tankstelle benötigt kein Kerosin.");
			TogglePlayerControllable(playerid, false);
			PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
			SetTimerEx("TrailerBetanken",20000,false,"i",playerid);
			GameTextForPlayer(playerid, "Die Tankstelle wird aufgefuellt~n~~n~~r~Bitte warten...", 20000, 5);
			TankstellenInfo[tsid][tsIsFillingK] = 1;
			SetPVarInt(playerid,"TStelleBetanken",1);
	 	}
	 	return 1;
	}
	else if(SpielerInfo[playerid][sNebenjob] == 10)
 	{
  		if(GetPVarInt(playerid,"GeldlieferantDuty") == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist nicht im Dienst.");
    	if(IsPlayerInAnyVehicle(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Im Fahrzeug nicht möglich.");
   		if(GetPVarInt(playerid,"GeldlieferantArbeitet") == 1 && GetPVarInt(playerid,"GeldlieferantAbholung") == 1)
		{
  			SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Begib dich zum roten Marker, um deinen Geldtransporter zu beladen.");
	    	SetPlayerCheckpointEx(playerid,1623.6760,-1894.1190,13.6745,5.0);
		    return 1;
		}
		if(GetPVarInt(playerid,"GeldkofferInHand") == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Benutze '/geldkoffer' um, das Geld hinten aus dem Geldtransporter herraus zu holen.");
		if(!AmATM(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du befindest dich an keinem Bankautomaten.");
		if(GetPVarInt(playerid,"ATMFillVorgang") != 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du befüllst gerade ein Bankautomat.");
		new atmid = ATMID(playerid), string[364];
		SetPVarInt(playerid,"ATMID",atmid);
		format(string,sizeof(string),"{FFFFFF}Bankautomat aktueller Stand: ${FF0000}%d{FFFFFF}/$10.000\n\n{FFFFFF}Mit wie viel Geld möchtest du diesen Bankautomat füllen?",ATMInfo[atmid][atmGeld]);
		ShowPlayerDialog(playerid,DIALOG_FILL_ATM,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Geldlieferant",string,"auffuellen","Abbrechen");
  	}
	else NichtBerechtigt
	return 1;
}
CMD:beliefern(playerid, params[])
{
	if(SpielerInfo[playerid][sNebenjob] != 1)return NichtBerechtigt
	if(GetPVarInt(playerid,"TruckerDuty") == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist nicht im Dienst.");
	if(GetPVarInt(playerid,"TruckerAngebot") != 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Beende erst deine Route, um eine neue zu beginnen.");
	if(!IsPlayerInAnyVehicle(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du sitzt in keinem Fahrzeug.");
	if(GetPlayerVehicleSeat(playerid) != 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist nicht der Fahrer dieses Fahrzeugs.");
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 515)
	{
		ShowPlayerDialog(playerid,DIALOG_TRUCKER_LIEFERUNG,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Lieferauswahl","Kraftstoffe (Tankstelle)\nWaren (24/7)\nWaren (Ammunation)","Bestätigen","Abbrechen");
	}
	else SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du sitzt in keinem Roadtrain.");
	return 1;
}
CMD:tankstelleninfo(playerid, params[])
{
	new vehicleid = GetPlayerVehicleID(playerid);
	if(SpielerInfo[playerid][sNebenjob] != 1)return NichtBerechtigt
	if(GetPVarInt(playerid,"TruckerDuty") == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist nicht im Dienst.");
	if(GetVehicleModel(vehicleid) == 515)
	{
 		new tstelledialog[800], merker = true;
		for(new tsid = 1;tsid<MAX_TSTELLEN;tsid++)
  		{
    		if(TankstellenInfo[tsid][tsErstellt] == false)continue;
      		if(TankstellenInfo[tsid][tsBenzinLiter] < 10000 || TankstellenInfo[tsid][tsDieselLiter] < 10000 || TankstellenInfo[tsid][tsKerosinLiter] < 10000)
        	{
         		if(tsid < 6)
           		{
             		format(tstelledialog,sizeof(tstelledialog),"%s\n{FFFFFF}Tankstelle: {007DFF}%d{FFFFFF} | Benzin: {007DFF}%d{FFFFFF}L/10000L | Diesel: {007DFF}%d{FFFFFF}L/10000L | Kerosin: {007DFF}%d{FFFFFF}L/10000L",tstelledialog,tsid,TankstellenInfo[tsid][tsBenzinLiter],TankstellenInfo[tsid][tsDieselLiter],TankstellenInfo[tsid][tsKerosinLiter]);
					merker = false;
				}
			}
		}
		if(merker)
		{
  			SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Im moment benötigt keine Tankstelle Treibstoff.");
	    	return 1;
		}
		else
		{
 			ShowPlayerDialog(playerid,DIALOG_TANKSTELLENINFO,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Tankstelleninfo",tstelledialog,"Seite 2","Abbrechen");
    		return 1;
		}
	}
	else SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du sitzt in keinem Tanker. (Roter LKW)");
	return 1;
}
CMD:kanister(playerid, params[])
{
	if(!AnTankstelle(playerid))return SendClientMessage(playerid,COLOR_GREY,"[Info]: Du bist an keiner Tankstelle.");
 	if(SpielerInfo[playerid][sKanister] > 0)return SendClientMessage(playerid,COLOR_GREY,"[Info]: Du hast schon einen Kanister mit Sprit.");
  	if(IsPlayerInAnyVehicle(playerid))return SendClientMessage(playerid,COLOR_GREY,"[Info]: Steige aus um den Kanister befüllen zu können.");
   	SetPVarInt(playerid,"WillKanister",1);
    ShowPlayerDialog(playerid,DIALOG_TANK_AUSWAHL,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Tanksystem","Benzin\nDiesel\nKerosin","Weiter","Abbrechen");
    return 1;
}
CMD:connection(playerid, params[])
{
	new stats[400+1];
 	GetPlayerNetworkStats(playerid, stats, sizeof(stats));
  	ShowPlayerDialog(playerid,9982,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Verbindungsübersicht",stats,"OK","");
   	return 1;
}

CMD:buygun(playerid, params[])
{
	if(GetPlayerInterior(playerid) != 1)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du befindest dich nicht im Ammunation.");
 	if(!IsPlayerInRangeOfPoint(playerid,3.0,295.7924,-38.2544,1001.5156))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du befindest dich nicht an der Kasse.");
	if(SpielerInfo[playerid][sWeaponLic] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Um dir hier Waffen kaufen zu können, benötigst du einen Waffenschein.");

	if(SpielerInfo[playerid][sWeaponLic] == 1){ShowPlayerDialog(playerid,DIALOG_BUYGUN,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Waffenladen","{FFFFFF}Rüstung (Polizei){00AF00}\nSchlagring\nMesser\nBaseballschläger{BC0000}\nDesert Eagle\nMP5\nAK-47\nM4\nSniper\n{00FE00}Fallschirm","Kaufen","Verlassen");}
 	if(SpielerInfo[playerid][sWeaponLic] == 2){ShowPlayerDialog(playerid,DIALOG_BUYGUN,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Waffenladen","{FFFFFF}Rüstung (Polizei){00AF00}\nSchlagring\nMesser\nBaseballschläger\nDesert Eagle{BC0000}\nMP5\nAK-47\nM4\nSniper\n{00FE00}Fallschirm","Kaufen","Verlassen");}
  	if(SpielerInfo[playerid][sWeaponLic] == 3){ShowPlayerDialog(playerid,DIALOG_BUYGUN,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Waffenladen","{FFFFFF}Rüstung (Polizei){00AF00}\nSchlagring\nMesser\nBaseballschläger\nDesert Eagle\nMP5\nAK-47\nM4{BC0000}\nSniper\n{00FE00}Fallschirm","Kaufen","Verlassen");}
   	if(SpielerInfo[playerid][sWeaponLic] == 4){ShowPlayerDialog(playerid,DIALOG_BUYGUN,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Waffenladen","{FFFFFF}Rüstung (Polizei){00AF00}\nSchlagring\nMesser\nBaseballschläger\nDesert Eagle\nMP5\nAK-47\nM4\nSniper\nFallschirm","Kaufen","Verlassen");}
	return 1;
}
CMD:guninfo(playerid, params[])
{
	if(SpielerInfo[playerid][sNebenjob] != 13)return NichtBerechtigt
 	SendClientMessage(playerid,COLOR_GREY,"[Info]: Bei der Desert Eagle werden 30 Schuss vergeben und 235 Materialien benötigt.");
  	SendClientMessage(playerid,COLOR_GREY,"[Info]: Bei der MP5 werden 200 Schuss vergeben und 525 Materialien benötigt.");
   	SendClientMessage(playerid,COLOR_GREY,"[Info]: Bei der Shotgun werden 45 Schuss vergeben und 700 Materialien benötigt.");
    SendClientMessage(playerid,COLOR_GREY,"[Info]: Bei der AK-47 werden 300 Schuss vergeben und 950 Materialien benötigt.");
    return 1;
}
CMD:kiste(playerid, params[])
{
	if(GetPlayerInterior(playerid) != 3)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du befindest dich nicht an der Fraktionskiste.");
	if(!IsPlayerInRangeOfPoint(playerid,3.0,2493.24243, -1707.50134, 1014.58276))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du befindest dich nicht an der Fraktionskiste.");
	new merker = true;
	for(new i=9;i<MAX_FRAKS;i++)
	{
		if(GetPlayerVirtualWorld(playerid) == i && SpielerInfo[playerid][sFraktion] == i)
		{
  			ShowPlayerDialog(playerid,DIALOG_FRAKKISTE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionskiste","Waffen\nDrogen\nMaterialien\nBombe","Weiter","Abbrechen");
			merker = false;
			return 1;
		}
	}
	if(merker){SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt kein Schlüssel zu dieser Fraktionskiste.");}
	return 1;
}
CMD:baseheal(playerid, params[])
{
	if(SpielerInfo[playerid][sFraktion] > 8 && SpielerInfo[playerid][sFraktion] != 19)
 	{
  		if(!IsAllowedForCommand(playerid,"Baseheal"))return KeinRang
  		if(!IsPlayerInRangeOfPoint(playerid,50,2495.9895,-1692.4834,1014.7422) && GetPlayerVirtualWorld(playerid) == SpielerInfo[playerid][sFraktion])return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist nicht in der Base.");
		if(FrakInfo[GetPlayerVirtualWorld(playerid)][fiBaseheal] < 1)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Diese Base hat keine Heals mehr übrig.");
		FrakInfo[GetPlayerVirtualWorld(playerid)][fiBaseheal] -= 1;
		new string[128];
		format(string,sizeof(string),"[Info]: {FFFFFF}Du hast einen Baseheal benutzt. Es sind noch %d/50 Baseheals vorhanden.",FrakInfo[GetPlayerVirtualWorld(playerid)][fiBaseheal]);
		SendClientMessage(playerid,COLOR_SUPER,string);
		SetPlayerHealth(playerid,100);
		if(FrakInfo[SpielerInfo[playerid][sFraktion]][fiBasehealUpgrade] > 0)
		{
  			SetPlayerArmour(playerid, 25);
	    	SendClientMessage(playerid,COLOR_GANGFIGHT,"[Gangupgrade]: +25 Weste durch Gangupgrade erhalten.");
		}
		return 1;
  	}
  	else NichtBerechtigt
	return 1;
}

CMD:paybackkarte(playerid, params[])
{
	if(!IsPlayerInRangeOfPoint(playerid,3.0,1410.9038,-13.4412,1006.7496))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du befindest dich nicht in der Base der International Television.");
 	if(SpielerInfo[playerid][sPayBackCard] > 0)
  	{
   		if(SpielerInfo[playerid][sPayBackPunkte] < 100)return SendClientMessage(playerid,COLOR_BLUE,"[PAYBACK]: {FFFFFF}Du kannst deine Payback-Punkte erst ab 100 Punkten auszahlen lassen.");
     	GivePlayerMoneyEx(playerid,SpielerInfo[playerid][sPayBackPunkte]);
      	SpielerInfo[playerid][sPayBackPunkte] = 0;
       	SendClientMessage(playerid,COLOR_BLUE,"[PAYBACK]: {FFFFFF}Du hast dir deine PayBack-Punkte auszahlen lassen.");
  	}
   	else
    {
		SpielerInfo[playerid][sPayBackCard] = 1;
		SendClientMessage(playerid,COLOR_BLUE,"[PAYBACK]: {FFFFFF}Fantastisch! Du hast jetzt eine Payback-Karte!");
		SendClientMessage(playerid,COLOR_BLUE,"[PAYBACK]: {FFFFFF}Kaufe einfach wie gewohnt in Geschäften, Autohäusern und vielem mehr ein.");
		SendClientMessage(playerid,COLOR_BLUE,"[PAYBACK]: {FFFFFF}Für jeden Einkauf ab 100$ erhälst du PAYBACK-Punkte. Ein Punkt entspricht einem Dollar.");
		SendClientMessage(playerid,COLOR_BLUE,"[PAYBACK]: {FFFFFF}Deinen Punktestand kannst du jederzeit und überall mit '/payback' einsehen!");
	}
	return 1;
}
CMD:payback(playerid, params[])
{
	if(SpielerInfo[playerid][sPayBackCard] < 1)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt keine Payback-Karte.");
 	new string[64];
  	format(string,sizeof(string),"[Payback-Punktestand]:{FFFFFF} %d Punkte.",SpielerInfo[playerid][sPayBackPunkte]);
   	SendClientMessage(playerid,COLOR_BLUE,string);
    return 1;
}

CMD:matsdealer(playerid, params[])
{
	if(SpielerInfo[playerid][sNebenjob] != 13)return NichtBerechtigt
 	SetPlayerCheckpointEx(playerid,713.5808,-1170.0105,16.6040,3.0);
  	SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Ein Marker zur Position des Matsdealers wurde dir auf der Karte gesetzt.");
   	return 1;
}
CMD:bestellen(playerid, params[])
{
	if(IsPlayerInRangeOfPoint(playerid,3.0,377.0177,-67.6665,1001.5151))
 	{
  		ShowMenuForPlayer(BSNMenu,playerid);
  		TogglePlayerControllable(playerid, false);
    	return 1;
	}
	else if(IsPlayerInRangeOfPoint(playerid,3.0,369.4442,-6.2557,1001.8516))
	{
 		ShowMenuForPlayer(BSNMenu,playerid);
   		TogglePlayerControllable(playerid, false);
	    return 1;
	}
	else if(IsPlayerInRangeOfPoint(playerid,3.0,1212.6414,-904.0792,42.9244))
	{
 		ShowMenuForPlayer(BSNMenu,playerid);
   		TogglePlayerControllable(playerid, false);
	    return 1;
	}
	else SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du kannst hier nichts bestellen.");
	return 1;
}


CMD:repairkit(playerid, params[])
{
	if(SpielerInfo[playerid][sRepairkit] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt kein Repairkit.");
 	if(IsPlayerInAnyVehicle(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du kannst kein Fahrzeug innen reparieren.");
  	new string[144];
   	new Float:x, Float:y, Float:z;
    for(new tmpcarx = 0; tmpcarx < MAX_VEHICLES; tmpcarx++)
	{
 		if(!IsValidVehicle(tmpcarx))continue;
		GetVehiclePos(tmpcarx,x,y,z);
		if(IsPlayerInRangeOfPoint(playerid,5.0,x,y,z))
		{
  			if(Motorhaube[tmpcarx] == false)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Die Motorhaube vom Fahrzeuge muss geöffnet sein.");
			new Float:vehHealth;
			GetVehicleHealth(tmpcarx, vehHealth);
			if(vehHealth > 800)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Das Fahrzeug muss nicht repariert werden (über 800 HP).");
   			RepairVehicle(tmpcarx);
    		SetVehicleHealth(tmpcarx,800);
    		SpielerInfo[playerid][sRepairkit] -= 1;
			format(string,sizeof(string),"* %s repariert mit einem Repairkit ein Fahrzeug.",SpielerInfo[playerid][sName]);
			ProxDetector(12.0, playerid, string, 0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA);
			break;
		}
	}
	return 1;
}
CMD:einkaufen(playerid, params[])
{
	if(!IsPlayerInRangeOfPoint(playerid,3.0,-22.1672,-138.5988,1003.5469))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du befindest nicht im 24/7 an der Kasse.");
 	new an = GetPVarInt(playerid,"StoreID");
  	DeletePVar(playerid,"StoreBesitzer");
	if(strlen(StoreInfo[an][siBesitzer]) > 2)//Besitzer
 	{
  		SetPVarInt(playerid,"StoreBesitzer",1);
    	ShowPlayerDialog(playerid,DIALOG_STORE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - 24/7","Navigationsgerät\nHandy\nTelefonbuch\nRepairkit\nKamera\nPfandflaschen verkaufen","Weiter","Zurück");
    }
	else//Staat
	{
 		ShowPlayerDialog(playerid,DIALOG_STORE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - 24/7","Navigationsgerät\nHandy\nTelefonbuch\nRepairkit\nKamera\nPfandflaschen verkaufen","Weiter","Zurück");
	}
 	return 1;
}

CMD:rlock(playerid, params[])
{
	if(GetPVarInt(playerid,"Ziviroller") == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Du hast kein Roller ausgeliehen.");
 	new vehicleid = GetPVarInt(playerid,"Ziviroller");
  	if(GetPVarInt(playerid,"ZivirollerLock") == 0)//Aufgeschlossen
   	{
    	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(vehicleid, engine, lights, alarm, true, bonnet, boot, objective);
		GameTextForPlayer(playerid,"~w~Roller ~r~abgeschlossen",3000,6);
		SetPVarInt(playerid,"ZivirollerLock",1);
  	}
   	else if(GetPVarInt(playerid,"ZivirollerLock") == 1)//Abgeschlossen
    {
    	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(vehicleid, engine, lights, alarm, false, bonnet, boot, objective);
		GameTextForPlayer(playerid,"~w~Roller ~g~aufgeschlossen",3000,6);
		SetPVarInt(playerid,"ZivirollerLock",0);
  	}
   	return 1;
}

CMD:matstransport(playerid, params[])
{
	if(SpielerInfo[playerid][sFraktion] > 8  && SpielerInfo[playerid][sFraktion] < 19)
 	{
  		if(GetPlayerVehicleID(playerid) == WaffenTransporter && WaffenTransporterMats > 3000)
  		{
			if(IsPlayerInRangeOfPoint(playerid, 50.0, 2495.2358,-1690.7219,14.7656))
			{
   				WaffenTransporterFrakID = 0;
			    if(FrakInfo[9][fiMatsUpgrade] > 0){FrakInfo[9][fiMats] += 9000;}
			    else {FrakInfo[9][fiMats] += 7000;}
			    DestroyVehicle(WaffenTransporter);
			    WaffenTransporter = INVALID_VEHICLE_ID;
			    WaffenTransportTimer = SetTimer("SpawnWaffenTransporter", 1800000, true);
			    foreach(new i : Player)
			    {
       				if(SpielerInfo[i][sFraktion] > 8 && SpielerInfo[i][sFraktion] != 19)
			        {
						SendClientMessage(i,COLOR_GANGFIGHT,"[MATS-TRANSPORT:] Der Transporter für die Materialien wurde an der >> Grove Street << Base abgegeben.");
						SendClientMessage(i,COLOR_GANGFIGHT,"[MATS-TRANSPORT:] Der Transport ist damit beendet. Der Transporter für Materialien wird in 30 Minuten wieder spawnen!");
      				}
    			}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 50.0, 1999.8800,-1114.5149,27.1250))
			{
   				WaffenTransporterFrakID = 0;
			    if(FrakInfo[10][fiMatsUpgrade] > 0){FrakInfo[10][fiMats] += 9000;}
			    else {FrakInfo[10][fiMats] += 7000;}
			    DestroyVehicle(WaffenTransporter);
			    WaffenTransporter = INVALID_VEHICLE_ID;
			    WaffenTransportTimer = SetTimer("SpawnWaffenTransporter", 1800000, true);
			    foreach(new i : Player)
			    {
       				if(SpielerInfo[i][sFraktion] > 8 && SpielerInfo[i][sFraktion] != 19)
			        {
						SendClientMessage(i,COLOR_GANGFIGHT,"[MATS-TRANSPORT:] Der Transporter für die Materialien wurde an der >> Ballas << Base abgegeben.");
						SendClientMessage(i,COLOR_GANGFIGHT,"[MATS-TRANSPORT:] Der Transport ist damit beendet. Der Transporter für Materialien wird in 30 Minuten wieder spawnen!");
      				}
		    	}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 50.0, 2549.6614,-1032.2898,69.5789))
			{
   				WaffenTransporterFrakID = 0;
			    if(FrakInfo[11][fiMatsUpgrade] > 0){FrakInfo[11][fiMats] += 9000;}
			    else {FrakInfo[11][fiMats] += 7000;}
				DestroyVehicle(WaffenTransporter);
    			WaffenTransporter = INVALID_VEHICLE_ID;
			    WaffenTransportTimer = SetTimer("SpawnWaffenTransporter", 1800000, true);
			    foreach(new i : Player)
			    {
       				if(SpielerInfo[i][sFraktion] > 8 && SpielerInfo[i][sFraktion] != 19)
			        {
						SendClientMessage(i,COLOR_GANGFIGHT,"[MATS-TRANSPORT:] Der Transporter für die Materialien wurde an der >> Vagos << Base abgegeben.");
						SendClientMessage(i,COLOR_GANGFIGHT,"[MATS-TRANSPORT:] Der Transport ist damit beendet. Der Transporter für Materialien wird in 30 Minuten wieder spawnen!");
      				}
		    	}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 50.0, 2508.2561,-1998.5865,13.9025))
			{
   				WaffenTransporterFrakID = 0;
		    	if(FrakInfo[12][fiMatsUpgrade] > 0){FrakInfo[12][fiMats] += 9000;}
			    else {FrakInfo[12][fiMats] += 7000;}
			    DestroyVehicle(WaffenTransporter);
			    WaffenTransporter = INVALID_VEHICLE_ID;
			    WaffenTransportTimer = SetTimer("SpawnWaffenTransporter", 1800000, true);
			    foreach(new i : Player)
			    {
       				if(SpielerInfo[i][sFraktion] > 8 && SpielerInfo[i][sFraktion] != 19)
			        {
						SendClientMessage(i,COLOR_GANGFIGHT,"[MATS-TRANSPORT:] Der Transporter für die Materialien wurde an der >> Aztecas << Base abgegeben.");
						SendClientMessage(i,COLOR_GANGFIGHT,"[MATS-TRANSPORT:] Der Transport ist damit beendet. Der Transporter für Materialien wird in 30 Minuten wieder spawnen!");
      				}
		    	}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 50.0, -2462.7795,132.3849,35.1719))
			{
   				WaffenTransporterFrakID = 0;
			    if(FrakInfo[13][fiMatsUpgrade] > 0){FrakInfo[13][fiMats] += 9000;}
			    else {FrakInfo[13][fiMats] += 7000;}
			    DestroyVehicle(WaffenTransporter);
			    WaffenTransporter = INVALID_VEHICLE_ID;
			    WaffenTransportTimer = SetTimer("SpawnWaffenTransporter", 1800000, true);
			    foreach(new i : Player)
			    {
       				if(SpielerInfo[i][sFraktion] > 8 && SpielerInfo[i][sFraktion] != 19)
			        {
						SendClientMessage(i,COLOR_GANGFIGHT,"[MATS-TRANSPORT:] Der Transporter für die Materialien wurde an der >> Rifa << Base abgegeben.");
						SendClientMessage(i,COLOR_GANGFIGHT,"[MATS-TRANSPORT:] Der Transport ist damit beendet. Der Transporter für Materialien wird in 30 Minuten wieder spawnen!");
      				}
    			}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 50.0, 725.6343,-1439.8298,13.5318))
			{
   				WaffenTransporterFrakID = 0;
			    if(FrakInfo[14][fiMatsUpgrade] > 0){FrakInfo[14][fiMats] += 9000;}
				else {FrakInfo[14][fiMats] += 7000;}
    			DestroyVehicle(WaffenTransporter);
		    	WaffenTransporter = INVALID_VEHICLE_ID;
			    WaffenTransportTimer = SetTimer("SpawnWaffenTransporter", 1800000, true);
			    foreach(new i : Player)
			    {
       				if(SpielerInfo[i][sFraktion] > 8 && SpielerInfo[i][sFraktion] != 19)
			        {
						SendClientMessage(i,COLOR_YELLOW,"[MATS-TRANSPORT:] Der Transporter für die Materialien wurde an der >> Triaden << Base abgegeben.");
						SendClientMessage(i,COLOR_YELLOW,"[MATS-TRANSPORT:] Der Transport ist damit beendet. Der Transporter für Materialien wird in 30 Minuten wieder spawnen!");
      				}
		    	}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 50.0, 255.1670,-1366.6371,53.1094))
			{
   				WaffenTransporterFrakID = 0;
			    if(FrakInfo[15][fiMatsUpgrade] > 0){FrakInfo[15][fiMats] += 9000;}
			    else {FrakInfo[15][fiMats] += 7000;}
			    DestroyVehicle(WaffenTransporter);
			    WaffenTransporter = INVALID_VEHICLE_ID;
			    WaffenTransportTimer = SetTimer("SpawnWaffenTransporter", 1800000, true);
			    foreach(new i : Player)
			    {
       				if(SpielerInfo[i][sFraktion] > 8 && SpielerInfo[i][sFraktion] != 19)
			        {
						SendClientMessage(i,COLOR_GANGFIGHT,"[MATS-TRANSPORT:] Der Transporter für die Materialien wurde an der >> Yakuza << Base abgegeben.");
						SendClientMessage(i,COLOR_GANGFIGHT,"[MATS-TRANSPORT:] Der Transport ist damit beendet. Der Transporter für Materialien wird in 30 Minuten wieder spawnen!");
      				}
		    	}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 50.0, 1447.6503,362.0286,18.9134))
			{
   				WaffenTransporterFrakID = 0;
			    if(FrakInfo[16][fiMatsUpgrade] > 0){FrakInfo[16][fiMats] += 9000;}
			    else {FrakInfo[16][fiMats] += 7000;}
			    DestroyVehicle(WaffenTransporter);
			    WaffenTransporter = INVALID_VEHICLE_ID;
			    WaffenTransportTimer = SetTimer("SpawnWaffenTransporter", 1800000, true);
			    foreach(new i : Player)
			    {
       				if(SpielerInfo[i][sFraktion] > 8 && SpielerInfo[i][sFraktion] != 19)
		        	{
						SendClientMessage(i,COLOR_GANGFIGHT,"[MATS-TRANSPORT:] Der Transporter für die Materialien wurde an der >> Camorra << Base abgegeben.");
						SendClientMessage(i,COLOR_GANGFIGHT,"[MATS-TRANSPORT:] Der Transport ist damit beendet. Der Transporter für Materialien wird in 30 Minuten wieder spawnen!");
      				}
		    	}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 50.0, 985.9162,2000.5089,11.4609))
			{
   				WaffenTransporterFrakID = 0;
			    if(FrakInfo[17][fiMatsUpgrade] > 0){FrakInfo[17][fiMats] += 9000;}
			    else {FrakInfo[17][fiMats] += 7000;}
			    DestroyVehicle(WaffenTransporter);
			    WaffenTransporter = INVALID_VEHICLE_ID;
			    WaffenTransportTimer = SetTimer("SpawnWaffenTransporter", 1800000, true);
			    foreach(new i : Player)
			    {
  					if(SpielerInfo[i][sFraktion] > 8 && SpielerInfo[i][sFraktion] != 19)
       				{
						SendClientMessage(i,COLOR_GANGFIGHT,"[MATS-TRANSPORT:] Der Transporter für die Materialien wurde an der >> Triaden << Base abgegeben.");
						SendClientMessage(i,COLOR_GANGFIGHT,"[MATS-TRANSPORT:] Der Transport ist damit beendet. Der Transporter für Materialien wird in 30 Minuten wieder spawnen!");
      				}
    			}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 50.0, 302.3475,-1154.6626,81.3429))
			{
   				WaffenTransporterFrakID = 0;
			    if(FrakInfo[18][fiMatsUpgrade] > 0){FrakInfo[18][fiMats] += 9000;}
			    else {FrakInfo[18][fiMats] += 7000;}
			    DestroyVehicle(WaffenTransporter);
			    WaffenTransporter = INVALID_VEHICLE_ID;
			    WaffenTransportTimer = SetTimer("SpawnWaffenTransporter", 1800000, true);
			    foreach(new i : Player)
		    	{
       				if(SpielerInfo[i][sFraktion] > 8 && SpielerInfo[i][sFraktion] != 19)
			        {
						SendClientMessage(i,COLOR_GANGFIGHT,"[MATS-TRANSPORT:] Der Transporter für die Materialien wurde an der >> Triaden << Base abgegeben.");
						SendClientMessage(i,COLOR_GANGFIGHT,"[MATS-TRANSPORT:] Der Transport ist damit beendet. Der Transporter für Materialien wird in 30 Minuten wieder spawnen!");
      				}
		    	}
			}
			else SendClientMessage(playerid,COLOR_YELLOW,"[MATS-TRANSPORT]: Du bist nicht nah genug an einer Base. Du kannst den Transporter auch bei deinen Verbündeten abliefern!");
		}
		else return SendClientMessage(playerid,COLOR_RED,"[MATS-TRANSPORT]: Belade den Waffentransporter erst mit Materialien!");
	}
	else NichtBerechtigt
 	return 1;
}
CMD:stellen(playerid, params[])
{
	if(!IsPlayerInRangeOfPoint(playerid,3.0,339.5168,1830.3673,2241.5850))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du kannst dich hier nicht stellen.");
 	if(GetPlayerWantedLevelEx(playerid) == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du wirst nicht von der Polizei gesucht.");
  	if(CopDuty == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Derzeit stehen keine Beamten zur Verfügung.");
   	new string[144];
	foreach(new i : Player)
	{
 		if(SpielerInfo[i][sFraktion] != 2)continue;
   		if(GetPVarInt(i,"CopDuty") == 0)continue;
		format(string,sizeof(string),"[Zentrale]: %s steht am Eingangsbereich und möchte sich stellen.",SpielerInfo[playerid][sName]);
		SendClientMessage(i,COLOR_BLUE,string);
	}
	SetPVarInt(playerid,"HatSichGestellt",1);

	if(GetPVarInt(playerid,"Handschellen") == 0)
	{
		SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Dir wurden automatisch Handschellen angelegt.");
		SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Alle illegalen Dinge wie Waffen, Mats und Drogen wurden dir abgenommen.");
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CUFFED);
		ResetPlayerWeapons(playerid);
		SpielerInfo[playerid][sDrogen] = 0;
		Handschellen[playerid] = SetPlayerAttachedObject(playerid, ATTACH_INDEX_HANDCUFF, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
		SetPVarInt(playerid,"Handschellen",1);
		return 1;
	}

	SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Alle verfügbaren Beamten wurden benachrichtigt. Bitte habe ein wenig Geduld.");
 	return 1;
}
CMD:mats(playerid, params[])
{
	if(!IsPlayerInAnyGang(playerid))return NichtBerechtigt
 	if(!IsPlayerInRangeOfPoint(playerid,7.0,1083.0126,-1226.7549,15.8203))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du kannst hier keine Materialien holen.");
	if(!IsPlayerInAnyVehicle(playerid) || GetPlayerVehicleID(playerid) != WaffenTransporter)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}[MATS-TRANSPORT]: Du musst im Transporter für die Materialien sitzen.");
 	if(WaffenTransporterMats == 0)
  	{
		WaffenTransporterMats = 3000;
		SendClientMessage(playerid,COLOR_GANGFIGHT,"[MATS-TRANSPORT]: Bring die Materialien jetzt zur Weiterverarbeitung in die Fabrik in San Fierro.");
  		SetPlayerCheckpointEx(playerid,-1826.3789,42.1302,15.1228,3.5);
    	return 1;
	}
	else
	{
 		SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}[MATS-TRANSPORT]: Bring die Materialien erst zur Fabrik in San Fierro.");
   		SetPlayerCheckpointEx(playerid,-1826.3789,42.1302,15.1228,3.5);
	    return 1;
	}
}
CMD:waffenteile(playerid, params[])
{
	if(!IsPlayerInAnyGang(playerid))return NichtBerechtigt
 	if(!IsPlayerInRangeOfPoint(playerid,7.0,-1826.3789,42.1302,15.1228))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du kannst hier keine Waffenteile holen.");
  	if(WaffenTransporterMats == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}[MATS-TRANSPORT]: Fahre zurück und lade den Transporter mit Materialien voll!");
   	if(GetPlayerVehicleID(playerid) != WaffenTransporter)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}[MATS-TRANSPORT]: Du sitzt nicht im Waffentransporter!");
	if(WaffenTransporterMats > 3000)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Der Waffentransporter ist bereits mit umgewandelten Materialien befüllt.");
	WaffenTransporterMats = 3001;
	if(FrakInfo[SpielerInfo[playerid][sFraktion]][fiMatsUpgrade] > 0){SendClientMessage(playerid,COLOR_GANGFIGHT,"[MATS-TRANSPORT]: Die Materialien wurden bearbeitet. Bringe Sie nun zur Fraktions-Base (+9000 Mats)!");}
	else SendClientMessage(playerid,COLOR_GANGFIGHT,"[MATS-TRANSPORT]: Die Materialien wurden bearbeitet. Bringe Sie nun zur Fraktions-Base (+7000 Mats)!");
 	SendClientMessage(playerid,COLOR_GANGFIGHT,"[MATS-TRANSPORT]: Mit /matstransport entlädst du dort den Transporter. Du kannst auch deine Verbündeten beliefern!");
	new string[128];
 	format(string,sizeof(string),"* %s lässt sich etwas umwandeln.",SpielerInfo[playerid][sName]);
	ProxDetector(12, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
 	return 1;
}
CMD:klamotten(playerid, params[])
{
	if(IsPlayerInRangeOfPoint(playerid,2.5,206.3749,-8.0665,1001.2109))//Victim
	{
 		ShowPlayerDialog(playerid,DIALOG_VICTIM,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Schmuck","Skin\nSchmuck\nSchmuck verkaufen","Weiter","Abbrechen");
   		return 1;
  	}
  	else SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du befindest dich in keinem Kleidungsgeschäft.");
  	return 1;
}

CMD:baumarkt(playerid, params[])
{
	if(!IsPlayerInRangeOfPoint(playerid,1,2532.0051,-1519.2444,24.1094))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du befindest dich nicht im OBI Baumarkt.");
	ShowPlayerDialog(playerid, DIALOG_OBIBAUMARKT, DIALOG_STYLE_TABLIST_HEADERS, "{007DFF}"SERV_NAME"{FFFFFF} - Baumarkt",
	"Produkt\tPreis\n\
	Schaufel\t$500\n\
	Beutel\t$10\n\
	Helm 1\t$50\n\
	Helm 2\t$50\n\
	Helm 3\t$75\n\
	Helm 4\t$75\n\
	Helm 5\t$80\n\
	Feuerzeug\t150$\n\
	Spraydose\t300$\n\
	Obstkorb\t500$",
	"Kaufen", "Abbrechen");
	return 1;
}
CMD:kampfstyles(playerid, params[])
{
	if(IsPlayerInRangeOfPoint(playerid,5.0,756.8801,5.5222,1000.7000) || IsPlayerInRangeOfPoint(playerid,5.0,768.1483,-37.2912,1000.6865) || IsPlayerInRangeOfPoint(playerid,5.0,774.9591,-62.3417,1000.7184))
	{
		ShowPlayerDialog(playerid, DIALOG_GYM, DIALOG_STYLE_TABLIST_HEADERS, "{007DFF}"SERV_NAME"{FFFFFF} - Gym",
		"Kampfstyle\tPreis\n\
		Standart\t$10000\n\
		Boxer\t$20000\n\
		Kungfu\t$30000\n\
		Kneehead\t$40000\n\
		Roundhousekick\t$50000\n\
		Ellebogen\t$60000",
		"Erlernen", "Abbrechen");
	}
	else SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist in keinem Gym.");
 	return 1;
}
CMD:inventar(playerid, params[])
{
	new str[164];
 	format(str,sizeof(str),
	"Name\tAnzahl\n\
	Beutel\t%d\n\
	Obstkorb\t%d\n\
	Pfandflaschen\t%d\n\
	Drogen\t%d\n\
	Materialien\t%d\n\
	Repairkit\t%d\n\
	Bombe\t%d\n\
	Feuerzeuge\t%d\n\
	Fischgewicht\t%d Kg",SpielerInfo[playerid][sBeutel],SpielerInfo[playerid][sObstkorb],SpielerInfo[playerid][sPfandflaschen],SpielerInfo[playerid][sDrogen],SpielerInfo[playerid][sMaterialien],SpielerInfo[playerid][sRepairkit],SpielerInfo[playerid][sBombe],SpielerInfo[playerid][sFeuerzeug],SpielerInfo[playerid][sFischGewicht]);
	ShowPlayerDialog(playerid, 9992, DIALOG_STYLE_TABLIST_HEADERS, "{007DFF}"SERV_NAME"{FFFFFF} - Inventar",str,"Weiter", "");
 	return 1;
}
CMD:lastcp(playerid, params[])
{
	if(SpielerInfo[playerid][sLastCPX] > 0.1)
 	{
 		SetPlayerCheckpointEx(playerid,SpielerInfo[playerid][sLastCPX],SpielerInfo[playerid][sLastCPY],SpielerInfo[playerid][sLastCPZ],SpielerInfo[playerid][sLastCPSize]);
  		SendClientMessage(playerid,COLOR_GREY,"[Info]: Checkpoints wiederhergestellt.");
	}
	else SendClientMessage(playerid,COLOR_RED,"[Fehler]: {FFFFFF}Bisher wurde dir noch kein Checkpoint gesetzt.");
 	return 1;
}
CMD:usedrugs(playerid, params[])
{
	if(SpielerInfo[playerid][sFraktion] == 2 || SpielerInfo[playerid][sFraktion] == 3)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du kannst keine Drogen nehmen oder bei der nächsten Stichprobe verlierst du deine Marke!");
 	if(SpielerInfo[playerid][sDrogen] < 2)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du brauchst mindestens 2g Drogen bei dir.");
  	if(GetPVarInt(playerid,"HatDrogenGenutzt") > 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du kannst nur alle 3 Sekunden Drogen zu dir nehmen.");
   	if(GetPVarInt(playerid,"WurdeGeradeAngeschossen") > 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hattest gerade eine Kampfsituation, warte noch ein wenig.");
	new Float:pHealthRN;
	GetPlayerHealth(playerid, pHealthRN);
	SetPlayerHealth(playerid, pHealthRN + 25);
	GetPlayerHealth(playerid, pHealthRN);
	if(pHealthRN >= 175)
	{
 		SetPlayerHealth(playerid,175);
   		SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Deine Leben sind liegen bereits bei 175 HP, mehr ist nicht möglich.");
	    if(GetPVarInt(playerid,"MissionActive") == 4)
		{
  			DeletePVar(playerid,"MissionActive");
	    	ShowAchievement(playerid,"~g~Mission 4","Belohnung: ~n~~g~250 EXP!");
	    	SendClientMessage(playerid,COLOR_LIGHTGREEN,"[Mission]: Du hast die Mission abgeschlossen! +250 EXP!");
   			GivePlayerEXP(playerid,250);
   			SpielerInfo[playerid][sMissionSolved][4] = 1;
		}
		return 1;
	}
	SpielerInfo[playerid][sDrogen] -= 2;
	new string[128];
	ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,false,false,false,false,0);
	ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,false,false,false,false,0);
	format(string,sizeof(string),"* %s nimmt Drogen zu sich.",SpielerInfo[playerid][sName]);
	ProxDetector(12, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	SetPVarInt(playerid,"HatDrogenGenutzt",1);
	SetTimerEx("HatDrogenGenutztTime",3000,false,"i",playerid);
 	return 1;
}

CMD:payday(playerid, params[])
{
	new string[128];
 	format(string,sizeof(string),"** PayDay-Gehaltscheck: %d$ - %d/45 Minuten bis zum nächsten PayDay. **",SpielerInfo[playerid][sPayDayGeld],SpielerInfo[playerid][sPayDay]);
	SendClientMessage(playerid,COLOR_INFO,string);
	if(GetPVarInt(playerid,"HatPayDayGehabt") > 0)
	{
 		ShowPlayerDialog(playerid,9982,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Dein letzter Payday",AllPaycheckstring[playerid],"OK","");
	}
	return 1;
}
CMD:backup(playerid, params[])
{
	if(SpielerInfo[playerid][sFraktion] == 2 || SpielerInfo[playerid][sFraktion] == 6)
 	{
  		new string[128], stringbk[128];
    	format(string,sizeof(string),"ZENTRALE: %s %s benötigt sofortige Unterstützung!",RangName(playerid),SpielerInfo[playerid][sName]);
     	format(stringbk,sizeof(stringbk),"ZENTRALE: Laut GPS-Ortung befindet er sich aktuell in %s!",GetPlayerArea(playerid));
      	foreach(new i : Player)
       	{
        	if(SpielerInfo[i][sFraktion] != 2 && SpielerInfo[i][sFraktion] != 6)continue;
         	SendClientMessage(i,COLOR_WHITE," ");
          	SendClientMessage(i,COLOR_BLUE,"ZENTRALE: Achtung! An alle verfügbaren Einheiten. Es wurde ein Backup-Notruf abgesetzt!");
           	SendClientMessage(i,COLOR_BLUE,string);
            SendClientMessage(i,COLOR_BLUE,stringbk);
        }
       	if(GetPVarInt(playerid,"CopMaske") == 1){format(string,sizeof(string),"* Unbekannter spricht in sein Funkgerät.");}
		else if(GetPVarInt(playerid,"FraktionsMaske") == 1){format(string,sizeof(string),"* Unbekannter spricht in sein Funkgerät.");}
		else if(GetPVarInt(playerid,"GruppenMaske") == 1){format(string,sizeof(string),"* Unbekannter spricht in sein Funkgerät.");}
		format(string,sizeof(string),"* %s %s spricht in sein Funkgerät.",RangName(playerid),SpielerInfo[playerid][sName]);
		ProxDetector(12, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
  		return 1;
	}
 	else NichtBerechtigt
  	return 1;
}
alias:backup("bk")
CMD:backupall(playerid, params[])
{
	if(SpielerInfo[playerid][sFraktion] != 0 || SpielerInfo[playerid][sFraktion] < 9)
 	{
  		new string[128], stringbk[128];
    	format(string,sizeof(string),"ZENTRALE: %s %s benötigt sofortige Unterstützung!",RangName(playerid),SpielerInfo[playerid][sName]);
     	format(stringbk,sizeof(stringbk),"ZENTRALE: Laut GPS-Ortung befindet er sich aktuell in %s!",GetPlayerArea(playerid));
      	foreach(new i : Player)
       	{
        	if(SpielerInfo[i][sFraktion] == 0 || SpielerInfo[i][sFraktion] >= 9)continue;
         	SendClientMessage(i,COLOR_WHITE," ");
          	SendClientMessage(i,COLOR_BLUE,"ZENTRALE: Achtung! An alle verfügbaren Einheiten. Es wurde ein Backup-Notruf abgesetzt!");
           	SendClientMessage(i,COLOR_BLUE,string);
            SendClientMessage(i,COLOR_BLUE,stringbk);
        }
        if(GetPVarInt(playerid,"CopMaske") == 1){format(string,sizeof(string),"* Unbekannter spricht in sein Funkgerät.");}
		else if(GetPVarInt(playerid,"FraktionsMaske") == 1){format(string,sizeof(string),"* Unbekannter spricht in sein Funkgerät.");}
		else if(GetPVarInt(playerid,"GruppenMaske") == 1){format(string,sizeof(string),"* Unbekannter spricht in sein Funkgerät.");}
		format(string,sizeof(string),"* %s %s spricht in sein Funkgerät.",RangName(playerid),SpielerInfo[playerid][sName]);
		ProxDetector(12, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
  		return 1;
	}
 	else NichtBerechtigt
  	return 1;
}
alias:backupall("bka")
CMD:maske(playerid, params[])
{
	new string[128];
 	if(SpielerInfo[playerid][sFraktion] == 2 || SpielerInfo[playerid][sFraktion] == 6 || SpielerInfo[playerid][sFraktion] > 8 || SpielerInfo[playerid][sGruppe] > 0)
  	{
		if(GetPVarInt(playerid,"FBIDuty") == 1 || GetPVarInt(playerid,"CopDuty") == 1 || SpielerInfo[playerid][sFraktion] > 8 || SpielerInfo[playerid][sGruppe] > 0)
		{
  			if(SpielerInfo[playerid][sFraktion] == 2 || SpielerInfo[playerid][sFraktion] == 6)
	    	{
      			if(GetPVarInt(playerid,"CopMaske") == 0)
	        	{
          			foreach(new i : Player){ShowPlayerNameTagForPlayer(i, playerid, false);}
	            	SetPVarInt(playerid,"CopMaske",1);
		            format(string,sizeof(string),"* %s %s zieht eine Maske auf.",RangName(playerid),SpielerInfo[playerid][sName]);
					ProxDetector(12, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
     			}
	       		else if(GetPVarInt(playerid,"CopMaske") == 1)
		        {
          			foreach(new i : Player){ShowPlayerNameTagForPlayer(i, playerid, true);}
	            	DeletePVar(playerid,"CopMaske");
	            	format(string,sizeof(string),"* %s %s zieht seine Maske wieder ab.",RangName(playerid),SpielerInfo[playerid][sName]);
					ProxDetector(12, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
     			}
        		return 1;
			}
			else if(SpielerInfo[playerid][sFraktion] == 19)
			{
   				if(GetPVarInt(playerid,"FraktionsMaske") == 1)
   				{
       				foreach(new i : Player){ShowPlayerNameTagForPlayer(i, playerid, true);}
           			DeletePVar(playerid,"FraktionsMaske");
					ProxDetector(12, playerid, "Unbekannter zieht seine Maske wieder ab.",COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					return 1;
     			}
        		if(!IsAllowedForCommand(playerid,"Maske"))return KeinRang
	    		if(!IsPlayerInRangeOfPoint(playerid,50,-2158.6267,642.4954,1052.3750))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist nicht in der Base.");
				if(GetPlayerWantedLevelEx(playerid) > 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du kannst keine Maske aufsetzten solange du Wanteds hast.");
				if(FrakInfo[19][fiMasken] < 1)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Diese Base hat keine Masken mehr übrig.");
    			foreach(new i : Player){ShowPlayerNameTagForPlayer(i, playerid, false);}
       			SetPVarInt(playerid,"FraktionsMaske",1);
          		format(string,sizeof(string),"* %s %s zieht eine Maske auf.",RangName(playerid),SpielerInfo[playerid][sName]);
				ProxDetector(12, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				FrakInfo[19][fiMasken] -= 1;
				format(string,sizeof(string),"[Info]: {FFFFFF}Du hast eine Maske aufgesetzt. Es sind noch %d/15 Masken vorhanden.",FrakInfo[GetPlayerVirtualWorld(playerid)][fiMasken]);
				SendClientMessage(playerid,COLOR_SUPER,string);
    			return 1;
			}
			else if(SpielerInfo[playerid][sFraktion] > 8)
			{
   				if(GetPVarInt(playerid,"FraktionsMaske") == 1)
   				{
       				foreach(new i : Player){ShowPlayerNameTagForPlayer(i, playerid, true);}
           			DeletePVar(playerid,"FraktionsMaske");
					ProxDetector(12, playerid, "Unbekannter zieht seine Maske wieder ab.",COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					return 1;
     			}
        		if(!IsAllowedForCommand(playerid,"Maske"))return KeinRang
	    		if(!IsPlayerInRangeOfPoint(playerid,50,2495.9895,-1692.4834,1014.7422) && GetPlayerVirtualWorld(playerid) == SpielerInfo[playerid][sFraktion])return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist nicht in der Base.");
				if(GetPlayerWantedLevelEx(playerid) > 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du kannst keine Maske aufsetzten solange du Wanteds hast.");
				if(FrakInfo[GetPlayerVirtualWorld(playerid)][fiMasken] < 1)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Diese Base hat keine Masken mehr übrig.");
    			foreach(new i : Player){ShowPlayerNameTagForPlayer(i, playerid, false);}
       			SetPVarInt(playerid,"FraktionsMaske",1);
          		format(string,sizeof(string),"* %s %s zieht eine Maske auf.",RangName(playerid),SpielerInfo[playerid][sName]);
				ProxDetector(12, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				FrakInfo[GetPlayerVirtualWorld(playerid)][fiMasken] -= 1;
				format(string,sizeof(string),"[Info]: {FFFFFF}Du hast eine Maske aufgesetzt. Es sind noch %d/15 Masken vorhanden.",FrakInfo[GetPlayerVirtualWorld(playerid)][fiMasken]);
				SendClientMessage(playerid,COLOR_SUPER,string);
    			return 1;
			}
		}
		else SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Du bist nicht im Dienst!");
		return 1;
	}
	else NichtBerechtigt
	return 1;
}
CMD:steuern(playerid, params[])
{
	new string[128];
	format(string,sizeof(string),"[Steuern]: {FFFFFF}Aktuelle Steuern: durch %i dividiert (z.B. 20.000$ : 70 = 285$ Steuern).\nHaussteuer: durch %i dividiert.\nKFZ-Steuer: %d$ pro Fahr und Flugzeug",GovVars[govSteuern],GovVars[govSteuernHaus],GovVars[govSteuernKFZ]);
	ShowPlayerDialog(playerid, DIALOG_NULL, DIALOG_STYLE_MSGBOX, "redv-reallife.de | Steuer", string, "Schließen", "");
 	return 1;
}

CMD:dashcam(playerid, params[])
{
	if(SpielerInfo[playerid][sFraktion] != 2 && SpielerInfo[playerid][sFraktion] != 6)return NichtBerechtigt
 	if(!IsPlayerInAnyVehicle(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist in keinem Streifenwagen.");
  	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 596 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 597 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 598)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Dashcams befinden sich nur in Streifenwagen.");
   	if(GetPVarInt(playerid,"Dashcam") < 1)
    {
		DashcamTimer[playerid] = SetTimerEx("ActDashcam", 1150, true, "i", playerid);
  		PlayerTextDrawShow(playerid, DashcamTD[playerid][0]);
		PlayerTextDrawShow(playerid, DashcamTD[playerid][1]);
		PlayerTextDrawShow(playerid, DashcamTD[playerid][2]);
		PlayerTextDrawShow(playerid, DashcamTD[playerid][3]);
		PlayerTextDrawShow(playerid, DashcamTD[playerid][4]);
		SetPVarInt(playerid,"Dashcam",1);
		SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Dashcam aktiviert.");
  	}
   	else if(GetPVarInt(playerid,"Dashcam") > 0)
    {
		KillTimer(DashcamTimer[playerid]);
  		PlayerTextDrawHide(playerid, DashcamTD[playerid][0]);
		PlayerTextDrawHide(playerid, DashcamTD[playerid][1]);
		PlayerTextDrawHide(playerid, DashcamTD[playerid][2]);
		PlayerTextDrawHide(playerid, DashcamTD[playerid][3]);
		PlayerTextDrawHide(playerid, DashcamTD[playerid][4]);
		DeletePVar(playerid,"Dashcam");
		SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Dashcam deaktiviert.");
  	}
   	return 1;
}
CMD:waffenkammer(playerid, params[])
{
	if(SpielerInfo[playerid][sFraktion] != 2 && SpielerInfo[playerid][sFraktion] != 6)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Die Polizei teilt keine Waffen an dich aus.");
 	if(!IsPlayerInRangeOfPoint(playerid,3.0,316.2444,1834.3264,2241.5850))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du befindest dich nicht an der Waffenkammer.");
  	if(SpielerInfo[playerid][sFraktion] == 2 && GetPVarInt(playerid,"CopDuty") == 0 && GetPVarInt(playerid,"CopUndercover") == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du musst erst in den Dienst gehen um dich ausrüsten zu können.");
	else if(SpielerInfo[playerid][sFraktion] == 6 && GetPVarInt(playerid,"FBIDuty") == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du musst erst in den Dienst gehen um dich ausrüsten zu können.");
 	if(GetPVarInt(playerid,"PDEquipt") == 1)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du kannst dich nur alle 30 Sekunden ausrüsten.");
	new string[128], fid[11];
	format(fid,sizeof(fid),"%d",SpielerInfo[playerid][sFraktion]);
	format(string,sizeof(string),"%s\n%s\n%s\nSchutzweste\nDesert Eagle\nM4\nMP5",mysql_GetString("frakequip", "Equip1Name", "frakid", fid),mysql_GetString("frakequip", "Equip2Name", "frakid", fid),mysql_GetString("frakequip", "Equip3Name", "frakid", fid));
	ShowPlayerDialog(playerid,DIALOG_PDEQUIP,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - LSPD Ausrüstung",string,"Ausrüsten","Abbrechen");
 	return 1;
}


CMD:gangupgrades(playerid, params[])
{
	if(SpielerInfo[playerid][sFraktion] < 9 || SpielerInfo[playerid][sFraktion] == 19)return NichtBerechtigt
 	new upgstring[1024], frakID = SpielerInfo[playerid][sFraktion], headstring[128];
  	format(headstring,sizeof(headstring),"{007DFF}"SERV_NAME"{FFFFFF} - Gangupgrades | %d Gangpunkte",FrakInfo[frakID][fiGangpunkte]);

	format(upgstring,sizeof(upgstring),"Beschreibung\tVorhanden\n\
	Drogenpflanzen wachsen in 20 statt 25 Minuten\t%s\n\
	100$ Rabatt ab 1.000$ Einkauf im Ammunation\t%s\n\
	25 Prozent Weste beim benutzen von /baseheal\t%s\n\
	Statt bis 3k bis 5k pro Stunde für Geldgebiete\t%s\n",JaNein(FrakInfo[frakID][fiDrogenUpgrade]),JaNein(FrakInfo[frakID][fiAmmunationUpgrade]),JaNein(FrakInfo[frakID][fiBasehealUpgrade]),JaNein(FrakInfo[frakID][fiGangzonenUpgrade]));
	format(upgstring,sizeof(upgstring),"%s9000 Materialien statt 7000 pro Matstransport\t%s",upgstring,JaNein(FrakInfo[frakID][fiMatsUpgrade]));

	ShowPlayerDialog(playerid,9992,DIALOG_STYLE_TABLIST_HEADERS,headstring,upgstring,"OK","");
	return 1;
}
alias:gangupgrades("gup")



CMD:icp(playerid, params[])
{
	if(GetPVarInt(playerid,"ICPEdit") == 0)
 	{
  		SelectTextDraw(playerid, 0xFFFFFFFF);
    	PlayerTextDrawSetSelectable(playerid, ICPMessageEdit[playerid], true);
	    PlayerTextDrawSetSelectable(playerid, ICPHitsoundEdit[playerid], true);
	    PlayerTextDrawSetSelectable(playerid, ICPOChatEdit[playerid], true);
	    PlayerTextDrawSetSelectable(playerid, ICPCameraEdit[playerid], true);
	    PlayerTextDrawSetSelectable(playerid, ICPHandyEdit[playerid], true);
	    PlayerTextDrawSetSelectable(playerid, ICPBlinkerEdit[playerid], true);
	    PlayerTextDrawSetSelectable(playerid, ICPSave[playerid], true);

		PlayerTextDrawShow(playerid, ICPBox[playerid]);
  		PlayerTextDrawShow(playerid, ICPTitel[playerid]);
    	PlayerTextDrawShow(playerid, ICPMessage[playerid]);
     	PlayerTextDrawShow(playerid, ICPHitsound[playerid]);
      	PlayerTextDrawShow(playerid, ICPOChat[playerid]);
       	PlayerTextDrawShow(playerid, ICPCamera[playerid]);
       	PlayerTextDrawShow(playerid, ICPHandy[playerid]);
        PlayerTextDrawShow(playerid, ICPBlinker[playerid]);
	    PlayerTextDrawShow(playerid, ICPSave[playerid]);

		if(SpielerInfo[playerid][icpNachrichten] == 1){PlayerTextDrawSetString(playerid, ICPMessageEdit[playerid], "~g~] Aktiviert");}
  		else PlayerTextDrawSetString(playerid, ICPMessageEdit[playerid], "~r~] Deaktiviert");
  		if(SpielerInfo[playerid][icpHitsound] == 1){PlayerTextDrawSetString(playerid, ICPHitsoundEdit[playerid], "~g~] Aktiviert");}
    	else PlayerTextDrawSetString(playerid, ICPHitsoundEdit[playerid], "~r~] Deaktiviert");
	    if(SpielerInfo[playerid][icpOChat] == 1){PlayerTextDrawSetString(playerid, ICPOChatEdit[playerid], "~g~] Aktiviert");}
	    else PlayerTextDrawSetString(playerid, ICPOChatEdit[playerid], "~r~] Deaktiviert");
	    if(SpielerInfo[playerid][icpCamera] == 1){PlayerTextDrawSetString(playerid, ICPCameraEdit[playerid], "~g~] Aktiviert");}
	   	else PlayerTextDrawSetString(playerid, ICPCameraEdit[playerid], "~r~] Deaktiviert");
	    if(SpielerInfo[playerid][icpHandy] == 1){PlayerTextDrawSetString(playerid, ICPHandyEdit[playerid], "~g~] Angeschaltet");}
	    else PlayerTextDrawSetString(playerid, ICPHandyEdit[playerid], "~r~] Ausgeschaltet");
		PlayerTextDrawSetString(playerid, ICPBlinkerEdit[playerid], "~y~] Einstellung");

		PlayerTextDrawShow(playerid, ICPMessageEdit[playerid]);
  		PlayerTextDrawShow(playerid, ICPHitsoundEdit[playerid]);
	   	PlayerTextDrawShow(playerid, ICPOChatEdit[playerid]);
	    PlayerTextDrawShow(playerid, ICPCameraEdit[playerid]);
	    PlayerTextDrawShow(playerid, ICPHandyEdit[playerid]);
	    PlayerTextDrawShow(playerid, ICPBlinkerEdit[playerid]);
	    SetPVarInt(playerid,"ICPEdit",1);
	    return 1;
	}
	else if(GetPVarInt(playerid,"ICPEdit") == 1)
	{
 		SendClientMessage(playerid,COLOR_ICP,"Damit deine Einstellungen übernommen werden klicke auf 'Speichern & Verlassen'.");
   		return 1;
	}
	return 1;
}


//Fraktions Befehle
CMD:bnd(playerid,params[])
{
	if(SpielerInfo[playerid][sFraktion] < 9 || SpielerInfo[playerid][sFraktion] > 18)return NichtBerechtigt
	new frakid, text[200], string[240];
	if(sscanf(params,"is[200]",frakid,text))return SendClientMessage(playerid,COLOR_YELLOW,"Benutze: {FFFFFF}/bnd [FraktionsID] [Nachricht]");
	if(FrakInfo[SpielerInfo[playerid][sFraktion]][fiBnd][frakid] < 1)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Ihr seid mit dieser Fraktion nicht verbündet.");
	format(string,sizeof(string),"[Bündnis-Chat] %s %s: %s",FrakKurzel(SpielerInfo[playerid][sFraktion]),SpielerInfo[playerid][sName],text);
	foreach(new i : Player)
	{
	    if(SpielerInfo[i][sFraktion] == SpielerInfo[playerid][sFraktion] || SpielerInfo[i][sFraktion] == frakid)
	    {
	        SendClientMessage(i,COLOR_YELLOW,string);
	    }
	}
	return 1;
}

CMD:lc(playerid,params[])
{
	if(SpielerInfo[playerid][sFraktion] < 1 || SpielerInfo[playerid][sRank] < 6)return NichtBerechtigt
	new text[200], string[240];
	if(sscanf(params,"s[200]",text))return SendClientMessage(playerid,COLOR_YELLOW,"Benutze: {FFFFFF}/lc [Nachricht]");
	format(string,sizeof(string),"[Leader-Chat] %s %s: %s",FrakKurzel(SpielerInfo[playerid][sFraktion]),SpielerInfo[playerid][sName],text);
	foreach(new i : Player)
	{
	    if(SpielerInfo[playerid][sFraktion] > 0 && SpielerInfo[i][sRank] > 6)
	    {
	        SendClientMessage(i,COLOR_NEWS,string);
	    }
	}
	return 1;
}

CMD:vehlabel(playerid,params[])
{
    if(SpielerInfo[playerid][sFraktion] == 2 || SpielerInfo[playerid][sFraktion] == 6 || SpielerInfo[playerid][sFraktion] == 5 || SpielerInfo[playerid][sFraktion] == 7)
    {
		if(GetPVarInt(playerid,"CopDuty") == 1 || GetPVarInt(playerid,"FBIDuty") == 1 || GetPVarInt(playerid,"MedicDuty") == 1 || GetPVarInt(playerid,"FeuerwehrDuty") == 1 || GetPVarInt(playerid,"OAmtDuty") == 1)
		{
            if(!IsPlayerInAnyVehicle(playerid))return SendClientMessage(playerid,COLOR_GREY,"[Info]: Du sitzt in keinem Fahrzeug.");
    		new PLAYER_STATE:State=GetPlayerState(playerid);
    		if(State!=PLAYER_STATE_DRIVER)return SendClientMessage(playerid,COLOR_RED,"Du bist nicht der Fahrer dieses Fahrzeugs.");
            new tmpcar = GetPlayerVehicleID(playerid);
            if(FahrzeugInfo[tmpcar][fFraktion] != SpielerInfo[playerid][sFraktion])return SendClientMessage(playerid,COLOR_GREY,"[Info]: Du sitzt in keinem Fraktionsfahrzeug.");
            new string[364];
            format(string,sizeof(string),"{FFFFFF}Bitte folgen\nEinsatz - Nicht folgen\nEinsatzleitung\nÜberholverbot\nAllgemeine Verkehrskontrolle\n-- Label entfernen --"),
            ShowPlayerDialog(playerid, DIALOG_VEH_LABEL, DIALOG_STYLE_LIST, "{007DFF}"SERV_NAME"{FFFFFF} - Fahrzeuglabel", string, "Auswählen", "Schließen");
		}
		else SendClientMessage(playerid,COLOR_RED,"* Du bist nicht im Dienst!");
		return 1;
	}
	else NichtBerechtigt
 	return 1;
}

CMD:repair(playerid,params[])
{
	if(SpielerInfo[playerid][sFraktion] != 7)return NichtBerechtigt
	if(GetPVarInt(playerid,"OAmtDuty") < 1)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist nicht im Dienst.");
	if(!IsPlayerInAnyVehicle(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Nur im Fahrzeug möglich.");
	new string[144], pID, Preis, tmpcar = GetPlayerVehicleID(playerid);
	if(GetVehicleModel(tmpcar) != 552)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Nur im Mechaniker Fahrzeug möglich.");
	if(sscanf(params,"ud",pID,Preis))return SendClientMessage(playerid,COLOR_YELLOW,"Benutze: {FFFFFF}/repair [SpielerID/Name] [Kosten]");
	if(!IsPlayerConnectedEx(pID))return NichtOnline
	if(GetDistanceBetweenPlayersEx(playerid, pID) >= 7)return NichtNahe
	new PLAYER_STATE:State=GetPlayerState(pID);
 	if(State!=PLAYER_STATE_DRIVER)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du angegebene Spieler ist nicht der Fahrer dieses Fahrzeugs.");
	format(string,sizeof(string),"Du bietest dem Fahrer {FF0000}%s{00CDFF} eine Fahrzeugreparatur in Höhe von {FF0000}%d${00CDFF} an.",SpielerInfo[pID][sName],Preis);
	SendClientMessage(playerid,COLOR_INFO,string);
	format(string,sizeof(string),"{FF0000}%s %s{00CDFF} bietet dir eine Fahrzeugreparatur in Höhe von {FF0000}%d${00CDFF} an.",RangName(playerid),SpielerInfo[playerid][sName],Preis);
	SendClientMessage(pID,COLOR_INFO,string);
	SendClientMessage(pID,COLOR_INFO,"Benutze '{FF0000}/accept repair{00CDFF}' um die Fahrzeugreparatur anzunehmen.");
	SetPVarInt(pID,"MechanikerID",playerid);
	SetPVarInt(pID,"MechanikerPreis",Preis);
	return 1;
}

CMD:gangwar(playerid,params[])
{
	if(SpielerInfo[playerid][sFraktion] < 9)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist in keiner Gang/Mafia.");
	if(SpielerInfo[playerid][sRank] < 6)return NichtBerechtigt
	new FraktionsID;
	if(sscanf(params,"i",FraktionsID))return SendClientMessage(playerid,COLOR_YELLOW,"Benutze: {FFFFFF}/gangwar [FraktionsID] (/fl für eine Liste der Fraktionen)");
	if(FraktionsID < 9 || FraktionsID > 18)return SendClientMessage(playerid,COLOR_YELLOW,"* Du kannst nur Fraktion 9 - 18 den Krieg erklären! (/fl für eine Liste der Fraktionen)");
	if(FraktionsID == SpielerInfo[playerid][sFraktion])return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Du kannst deiner eigenen Fraktion nicht den Krieg erklären!");
	if(FrakInfo[SpielerInfo[playerid][sFraktion]][fiWarGegner] != 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Deine Fraktion befindet sich schon im Krieg!");
	if(FrakInfo[FraktionsID][fiWarGegner] != 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Diese Fraktion befindet sich bereits im Krieg! (/gangwars für eine Liste der Kriege)");
	new string[200], string2[200];
	format(string,sizeof(string),"[GANGWAR] Die Fraktion '%s' hat der Fraktion '%s' den Krieg erklärt!",FrakName(SpielerInfo[playerid][sFraktion]),FrakName(FraktionsID));
	SendICPMsg(string);
	format(string,sizeof(string),"[GANGWAR] Die Fraktion '%s' hat euch den Krieg erklärt!",FrakName(SpielerInfo[playerid][sFraktion]));
	format(string2,sizeof(string2),"[GANGWAR] Ihr habt der Fraktion '%s' den Krieg erklärt!",FrakName(FraktionsID));
	FrakInfo[SpielerInfo[playerid][sFraktion]][fiWarGegner] = FraktionsID;
	FrakInfo[FraktionsID][fiWarGegner] = SpielerInfo[playerid][sFraktion];
	FrakInfo[SpielerInfo[playerid][sFraktion]][fiWarPoints] = 0;
	FrakInfo[FraktionsID][fiWarPoints] = 0;
	foreach(new i : Player)
	{
	    if(SpielerInfo[i][sFraktion] == FraktionsID)
	    {
	        SendClientMessage(i,COLOR_WHITE," ");
	        SendClientMessage(i,COLOR_GANGFIGHT,string);
	        SendClientMessage(i,COLOR_SUPER,"[GANGWAR] Der Krieg hat begonnen. Die Fraktion die zuerst 50 Kills hat, ist die bessere!");
	    }
	    else if(SpielerInfo[i][sFraktion] == SpielerInfo[playerid][sFraktion])
	    {
	        SendClientMessage(i,COLOR_WHITE," ");
	        SendClientMessage(i,COLOR_GANGFIGHT,string2);
	        SendClientMessage(i,COLOR_SUPER,"[GANGWAR] Der Krieg hat begonnen. Die Fraktion die zuerst 50 Kills hat, ist die bessere!");
	    }
	}
	return 1;
}

CMD:horten(playerid,params[])
{
	if(SpielerInfo[playerid][sFraktion] == 2 || SpielerInfo[playerid][sFraktion] == 6 || SpielerInfo[playerid][sNebenjob] == 19)
	{
	    if(GetPVarInt(playerid,"CopDuty") == 1 || GetPVarInt(playerid,"FBIDuty") == 1 || SpielerInfo[playerid][sNebenjob] == 19)
	    {
	        if(SpielerInfo[playerid][sNebenjob] == 15 && GetPVarInt(playerid,"WaitToFind") > 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Die Polizei erlaubt dir nur alle 30 Sekunden den Zugriff.");
			new Nummer;
			if(sscanf(params,"i",Nummer))return SendClientMessage(playerid,COLOR_YELLOW,"Benutze: {FFFFFF}/horten [Handynummer]");
			new merker = 0;
			foreach(new i : Player)
			{
				if(SpielerInfo[i][sHandy] == Nummer)
				{
				    merker = i;
				}
			}
			if(merker < 1)return SendClientMessage(playerid,COLOR_GREY,"[Info]: HGPS-ORTUNG: Das Handy konnte nicht ermittelt werden (StatusC=404NotFound)");
			if(SpielerInfo[merker][icpHandy] < 1)return SendClientMessage(playerid,COLOR_GREY,"[Info]: HGPS-ORTUNG: Das Handy konnte nicht ermittelt werden (StatusC=500OutOfOrder)");
			if(SpielerInfo[playerid][sNebenjob] == 19)
			{
			    if(SpielerInfo[merker][sFraktion] == 2 || SpielerInfo[merker][sFraktion] == 6)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Die Polizei gewährt dir auf diese Handy-Nummer keinen Zugriff.");
			    SetPVarInt(playerid,"WaitToFind",1);
			    WaitToFindTimer[playerid] = SetTimerEx("WaitToFindDetektiv", 30000, false, "i", playerid);
			}
			new Float:gpsOrtPos[3];
			GetPlayerPos(merker,gpsOrtPos[0],gpsOrtPos[1],gpsOrtPos[2]);
			SetPlayerCheckpointEx(playerid,gpsOrtPos[0],gpsOrtPos[1],gpsOrtPos[2],4.0);
			SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}HGPS-ORTUNG: Das Handy wurde geortet (StatusC=100CPSet)");
			return 1;
		}
		else SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Du bist nicht im Dienst.");
		return 1;
	}
	else NichtBerechtigt
	return 1;
}

CMD:hkennzeichen(playerid,params[])
{
    if(SpielerInfo[playerid][sFraktion] == 2 || SpielerInfo[playerid][sFraktion] == 6)
	{
	    if(GetPVarInt(playerid,"CopDuty") == 1 || GetPVarInt(playerid,"FBIDuty") == 1)
	    {
	        new plate[11];
			if(sscanf(params,"s[11]",plate))return SendClientMessage(playerid,COLOR_YELLOW,"Benutze: {FFFFFF}/hkennzeichen [Kennzeichen]");
			new string[200];
			mysql_format(sqlHandle, string, 128, "SELECT `Besitzer` FROM `vehicles` WHERE `Kennzeichen` = '%s'", plate);
	      	new Cache:result = mysql_query(sqlHandle, string);
			
			if(cache_num_rows())
			{
				cache_get_value_name(0, "Besitzer",string);
				format(string,sizeof(string),"[Info]: {FFFFFF}Das Fahrzeug ist zugewiesen auf: '%s'. (StatusC=100Success)",string);
				SendClientMessage(playerid,COLOR_INFO,string);
			}
			else
			{
				SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Kein Privatfahrzeug-Eintrag in der Datenbank gefunden. (StatusC=404NotFound)");
			}
			
			cache_delete(result);
   			return 1;
	    }
		else SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist nicht im Dienst.");
		return 1;
	}
	else NichtBerechtigt
	return 1;
}

CMD:orten(playerid,params[])
{
	if(SpielerInfo[playerid][sFraktion] == 2 || SpielerInfo[playerid][sFraktion] == 6 || SpielerInfo[playerid][sFraktion] == 5)
	{
	    if(GetPVarInt(playerid,"CopDuty") == 1 || GetPVarInt(playerid,"FBIDuty") == 1 || SpielerInfo[playerid][sFraktion] == 5)
	    {
			new vehid;
			if(sscanf(params,"i",vehid))return SendClientMessage(playerid,COLOR_YELLOW,"Benutze: {FFFFFF}/orten [FahrzeugID]");
			if(!IsValidVehicle(vehid))return SendClientMessage(playerid,COLOR_GREY,"[Info]: GPS-ORTUNG: Das Fahrzeug konnte nicht ermittelt werden (StatusC=404NotFound)");
			if(FahrzeugInfo[vehid][fFraktion] > 8 && SpielerInfo[playerid][sFraktion] == 5)return SendClientMessage(playerid,COLOR_GREY,"[Info]: Der Rettungsdienst kann lediglich Fahrzeuge von Staatsfraktionen orten.");
			new Float:gpsOrtPos[3];
			GetVehiclePos(vehid,gpsOrtPos[0],gpsOrtPos[1],gpsOrtPos[2]);
			SetPlayerCheckpointEx(playerid,gpsOrtPos[0],gpsOrtPos[1],gpsOrtPos[2],4.0);
			SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}GPS-ORTUNG: Das Fahrzeug wurde geortet (StatusC=100CPSet)");
			return 1;
		}
		else SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist nicht im Dienst.");
		return 1;
	}
	else NichtBerechtigt
	return 1;
}

CMD:takedrugs(playerid,params[])
{
    if(SpielerInfo[playerid][sFraktion] == 2 || SpielerInfo[playerid][sFraktion] == 6)
	{
	    if(GetPVarInt(playerid,"CopDuty") == 1 || GetPVarInt(playerid,"FBIDuty") == 1)
	    {
		    new pID;
		    if(sscanf(params,"u",pID))return SendClientMessage(playerid,COLOR_YELLOW,"Benutze: {FFFFFF}/takedrugs [SpielerID]");
		    if(SpielerInfo[pID][sDrogen] < 1)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Der Spieler führt keine Drogen mit sich.");
		    if(GetDistanceBetweenPlayersEx(playerid, pID) >= 12)return NichtNahe
		    SpielerInfo[pID][sDrogen] = 0;
			new string[128];
			format(string,sizeof(string),"%s %s nimmt %s seine Drogen ab.",RangName(playerid),SpielerInfo[playerid][sName],SpielerInfo[pID][sName]);
			ProxDetector(12, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			return 1;
		}
		else SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist nicht im Dienst.");
		return 1;
	}
	else NichtBerechtigt
	return 1;
}

CMD:takemats(playerid,params[])
{
    if(SpielerInfo[playerid][sFraktion] == 2 || SpielerInfo[playerid][sFraktion] == 6)
	{
	    if(GetPVarInt(playerid,"CopDuty") == 1 || GetPVarInt(playerid,"FBIDuty") == 1)
	    {
		    new pID;
		    if(sscanf(params,"u",pID))return SendClientMessage(playerid,COLOR_YELLOW,"Benutze: {FFFFFF}/takemats [SpielerID]");
		    if(SpielerInfo[pID][sMaterialien] > 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Der Spieler führt keine Materialien mit sich.");
		    if(GetDistanceBetweenPlayersEx(playerid, pID) >= 12)return NichtNahe
		    SpielerInfo[pID][sMaterialien] = 0;
			new string[128];
			format(string,sizeof(string),"%s %s nimmt %s seine Mmaterialien ab.",RangName(playerid),SpielerInfo[playerid][sName],SpielerInfo[pID][sName]);
			ProxDetector(12, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			return 1;
		}
		else SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist nicht im Dienst.");
		return 1;
	}
	else NichtBerechtigt
	return 1;
}

CMD:takegun(playerid,params[])
{
	if(SpielerInfo[playerid][sFraktion] == 2 || SpielerInfo[playerid][sFraktion] == 6)
	{
	    if(GetPVarInt(playerid,"CopDuty") == 1 || GetPVarInt(playerid,"FBIDuty") == 1)
	    {
		    new pID, waffenid;
		    if(sscanf(params,"ui",pID,waffenid))return SendClientMessage(playerid,COLOR_YELLOW,"Benutze: {FFFFFF}/takegun [SpielerID] [WaffenID]");
		    if(waffenid < 1 || waffenid > 48)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Gebe eine gültige WaffenID an.");
		    if(GetDistanceBetweenPlayersEx(playerid, pID) >= 12)return NichtNahe
		    RemovePlayerWeapon(pID,WEAPON:waffenid);
			new string[128];
			format(string,sizeof(string),"%s %s nimmt %s eine Waffe weg.",RangName(playerid),SpielerInfo[playerid][sName],SpielerInfo[pID][sName]);
			ProxDetector(12, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			return 1;
		}
		else SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist nicht im Dienst.");
		return 1;
	}
	else NichtBerechtigt
	return 1;
}

CMD:takeguns(playerid,params[])
{
	if(SpielerInfo[playerid][sFraktion] == 2 || SpielerInfo[playerid][sFraktion] == 6)
	{
	    if(GetPVarInt(playerid,"CopDuty") == 1 || GetPVarInt(playerid,"FBIDuty") == 1)
	    {
		    new pID;
		    if(sscanf(params,"ui",pID))return SendClientMessage(playerid,COLOR_YELLOW,"Benutze: {FFFFFF}/takeguns [SpielerID]");
		    if(GetDistanceBetweenPlayersEx(playerid, pID) >= 12)return NichtNahe
		    ResetPlayerWeapons(pID);
			new string[128];
			format(string,sizeof(string),"%s %s nimmt %s alle Waffen weg.",RangName(playerid),SpielerInfo[playerid][sName],SpielerInfo[pID][sName]);
			ProxDetector(12, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			return 1;
		}
		else SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist nicht im Dienst.");
		return 1;
	}
	else NichtBerechtigt
	return 1;
}

//Allgemeine Befehle

CMD:buymats(playerid,params[])
{
    if(SpielerInfo[playerid][sNebenjob] != 13)return NichtBerechtigt
    if(!IsPlayerInRangeOfPoint(playerid,5.0,713.5808,-1170.0105,16.6040))return SendClientMessage(playerid,COLOR_RED,"[Info]: Du stehst nicht beim Matsdealer.");
    new mats;
    if(sscanf(params,"i",mats))return SendClientMessage(playerid,COLOR_YELLOW,"Benutze: {FFFFFF}/buymats [Anzahl]");
    if(mats < 0)return SendClientMessage(playerid,COLOR_GREY,"Matsdealer sagt: Digga, sag mir eine ordentliche Zahl oder verzieh dich.");
	new matspreis = mats * 5;
	if(GetPlayerMoneyEx(playerid) < matspreis)return SendClientMessage(playerid,COLOR_GREY,"Matsdealer sagt: Ich will 5$ pro Material. Bring mehr Geld mit oder kauf weniger.");
	SpielerInfo[playerid][sMaterialien] += mats;
	SetPVarInt(playerid,"NoPAYBACK",1);
	GivePlayerMoneyEx(playerid,-matspreis);
	new rand = random(4);
	switch(rand)
	{
	    case 0:{SendClientMessage(playerid,COLOR_GREY,"Matsdealer sagt: War mir ein Vergnügen. Ich liebe diese grüne Papier.");}
	    case 1:{SendClientMessage(playerid,COLOR_GREY,"Matsdealer sagt: Bruder, nettes Geschäft. Falls du Ihn siehst, grüß Emilio von mir!");}
	    case 2:{SendClientMessage(playerid,COLOR_GREY,"Matsdealer sagt: Wenn du erwischt wirst, hast du die Materialien nicht von mir, kapito?");}
	    case 3:{SendClientMessage(playerid,COLOR_GREY,"Matsdealer sagt: Hier deine Ware. Da mein Geld. Immer wieder gerne Bruder.");}
	}
	return 1;
}

CMD:erstehilfe(playerid,params[])
{
	if(SpielerInfo[playerid][sPaket] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt kein Erste-Hilfe-Paket.");
	if(GetPVarInt(playerid,"WurdeGeradeAngeschossen") > 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hattest gerade eine Kampfsituation, warte noch ein wenig.");
	SpielerInfo[playerid][sPaket] = 0;
	new string[128];
 	SetPlayerHealth(playerid,150);
	format(string,sizeof(string),"* %s versorgt seine Wunden mit dem Erste-Hilfe-Paket",SpielerInfo[playerid][sName]);
	ProxDetector(12.0, playerid, string, 0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA);
	return 1;
}

CMD:angebot(playerid,params[])
{
	new Auswahl[24], Auswahl2[24], string[224];
    if(sscanf(params,"s[24]s[24]",Auswahl,Auswahl2))return SendClientMessage(playerid,COLOR_YELLOW,"Benutze: {FFFFFF}/angebot [Annehmen|Ablehnen] [Tankstelle|Ammunation|24/7|Haus|GHaus|Garage]");
   	if(strcmp(Auswahl, "Annehmen", true, strlen(Auswahl)) == 0)
    {
   		if(strcmp(Auswahl2, "Tankstelle", true, strlen(Auswahl2)) == 0)
    	{
    	    if(GetPVarInt(playerid,"TankstelleAngebot") == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast kein Angebot erhalten.");
    	    if(!IsPlayerConnectedEx(GetPVarInt(playerid,"TankstelleAngebotID")))return NichtOnline
    	    if(SpielerInfo[playerid][sTankstelle] != 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt bereits eine Tankstelle");
    	    if(SpielerInfo[playerid][sBankkonto] < GetPVarInt(playerid,"TankstelleAngebotPreis"))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend auf deinem Konto.");
            format(string,sizeof(string),"Du hast dir die Tankstelle (ID:{FF0000}%d{00CDFF}) vom Spieler {FF0000}%s{00CDFF} für {FF0000}%d${00CDFF} abgekauft.",GetPVarInt(playerid,"TankstelleAngebot"),SpielerInfo[GetPVarInt(playerid,"TankstelleAngebotID")][sName],GetPVarInt(playerid,"TankstelleAngebotPreis"));
            SendClientMessage(playerid,COLOR_INFO,string);

            SendClientMessage(playerid,COLOR_INFO,"Das Geld wurde von deinem Konto abgebucht.");

            format(string,sizeof(string),"Spieler {FF0000}%s{00CDFF} hat deine Tankstelle für {FF0000}%d${00CDFF} abgekauft. Das Geld wurde auf deinem Konto überwiesen.",SpielerInfo[playerid][sName],GetPVarInt(playerid,"TankstelleAngebotPreis"));
            SendClientMessage(GetPVarInt(playerid,"TankstelleAngebotID"),COLOR_INFO,string);
            SpielerInfo[playerid][sBankkonto] -= GetPVarInt(playerid,"TankstelleAngebotPreis");
            SpielerInfo[GetPVarInt(playerid,"TankstelleAngebotID")][sBankkonto] += GetPVarInt(playerid,"TankstelleAngebotPreis");
            SpielerInfo[playerid][sTankstelle] = GetPVarInt(playerid,"TankstelleAngebot");
            SpielerInfo[GetPVarInt(playerid,"TankstelleAngebotID")][sTankstelle] = 0;

            new tsid = SpielerInfo[playerid][sTankstelle];
			DestroyDynamic3DTextLabel(TankstellenInfo[tsid][tsText][0]);
			TankstellenInfo[tsid][tsText][0] = Text3D:INVALID_3DTEXT_ID;
			DestroyPickup(TankstellenInfo[tsid][tsPickup][0]);
			format(string, sizeof(string), "Tankstelle 'ID: {FF0000}%d{FFFFFF}'\nBesitzer: {FF0000}%s", tsid, SpielerInfo[playerid][sName]);
			TankstellenInfo[tsid][tsPickup][0] = CreatePickup(1272, 23, TankstellenInfo[tsid][tsEPos_X], TankstellenInfo[tsid][tsEPos_Y], TankstellenInfo[tsid][tsEPos_Z], -1);
			TankstellenInfo[tsid][tsText][0] = CreateDynamic3DTextLabel(string, COLOR_WHITE, TankstellenInfo[tsid][tsEPos_X], TankstellenInfo[tsid][tsEPos_Y], TankstellenInfo[tsid][tsEPos_Z], 10.0);

			format(TankstellenInfo[tsid][tsBesitzer], MAX_PLAYER_NAME, SpielerInfo[playerid][sName]);
			format(TankstellenInfo[tsid][tsBeschreibung], 15, "Petrol Station");

			TankstellenTafelUpdate(tsid);
			Streamer_Update(playerid);

			DeletePVar(playerid,"TankstelleAngebot");
			DeletePVar(playerid,"TankstelleAngebotID");
			DeletePVar(playerid,"TankstelleAngebotPreis");
			return 1;
    	}
    	else if(strcmp(Auswahl2, "Ammunation", true, strlen(Auswahl2)) == 0)
    	{
    	    if(GetPVarInt(playerid,"AmmunationAngebot") == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast kein Angebot erhalten.");
    	    if(!IsPlayerConnectedEx(GetPVarInt(playerid,"AmmunationAngebotID")))return NichtOnline
    	    if(SpielerInfo[playerid][sAmmunation] != 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt bereits eine Ammunation");
    	    if(SpielerInfo[playerid][sBankkonto] < GetPVarInt(playerid,"AmmunationAngebotPreis"))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend auf deinem Konto.");
            format(string,sizeof(string),"Du hast dir das Ammunation (ID:{FF0000}%d{00CDFF}) vom Spieler {FF0000}%s{00CDFF} für {FF0000}%d${00CDFF} abgekauft.",GetPVarInt(playerid,"AmmunationAngebot"),SpielerInfo[GetPVarInt(playerid,"AmmunationAngebotID")][sName],GetPVarInt(playerid,"AmmunationAngebotPreis"));
            SendClientMessage(playerid,COLOR_INFO,string);

            SendClientMessage(playerid,COLOR_INFO,"Das Geld wurde von deinem Konto abgebucht.");

            format(string,sizeof(string),"Spieler {FF0000}%s{00CDFF} hat dein Ammunation für {FF0000}%d${00CDFF} abgekauft. Das Geld wurde auf deinem Konto überwiesen.",SpielerInfo[playerid][sName],GetPVarInt(playerid,"AmmunationAngebotPreis"));
            SendClientMessage(GetPVarInt(playerid,"AmmunationAngebotID"),COLOR_INFO,string);
            SpielerInfo[playerid][sBankkonto] -= GetPVarInt(playerid,"AmmunationAngebotPreis");
            SpielerInfo[GetPVarInt(playerid,"AmmunationAngebotID")][sBankkonto] += GetPVarInt(playerid,"AmmunationAngebotPreis");
            SpielerInfo[playerid][sAmmunation] = GetPVarInt(playerid,"AmmunationAngebot");
            SpielerInfo[GetPVarInt(playerid,"AmmunationAngebotID")][sAmmunation] = 0;

            new an = SpielerInfo[playerid][sAmmunation];

			DestroyDynamic3DTextLabel(AmmunationInfo[an][amText]);
			AmmunationInfo[an][amText] = Text3D:INVALID_3DTEXT_ID;
			DestroyPickup(AmmunationInfo[an][amPickup]);

 			format(string, sizeof(string), "Ammunation 'ID: {FF0000}%d{FFFFFF}'\nBesitzer: {FF0000}%s", an, AmmunationInfo[an][amBesitzer]);
 			AmmunationInfo[an][amText] = CreateDynamic3DTextLabel(string, COLOR_WHITE, AmmunationInfo[an][amPos_X], AmmunationInfo[an][amPos_Y], AmmunationInfo[an][amPos_Z], 10.0);
    		AmmunationInfo[an][amPickup] = CreatePickup(1272, 23, AmmunationInfo[an][amPos_X], AmmunationInfo[an][amPos_Y], AmmunationInfo[an][amPos_Z], -1);

			format(AmmunationInfo[an][amBesitzer], MAX_PLAYER_NAME, SpielerInfo[playerid][sName]);

			DeletePVar(playerid,"AmmunationAngebot");
			DeletePVar(playerid,"AmmunationAngebotID");
			DeletePVar(playerid,"AmmunationAngebotPreis");
			return 1;
    	}
	 	else if(strcmp(Auswahl2, "24/7", true, strlen(Auswahl2)) == 0)
    	{
    	    if(GetPVarInt(playerid,"StoreAngebot") == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast kein Angebot erhalten.");
    	    if(!IsPlayerConnectedEx(GetPVarInt(playerid,"StoreAngebotID")))return NichtOnline
    	    if(SpielerInfo[playerid][sStore] != 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt bereits ein 24/7");
    	    if(SpielerInfo[playerid][sBankkonto] < GetPVarInt(playerid,"StoreAngebotPreis"))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend auf deinem Konto.");
            format(string,sizeof(string),"Du hast dir das 24/7 (ID:{FF0000}%d{00CDFF}) vom Spieler {FF0000}%s{00CDFF} für {FF0000}%d${00CDFF} abgekauft.",GetPVarInt(playerid,"StoreAngebot"),SpielerInfo[GetPVarInt(playerid,"StoreAngebotID")][sName],GetPVarInt(playerid,"StoreAngebotPreis"));
            SendClientMessage(playerid,COLOR_INFO,string);

            SendClientMessage(playerid,COLOR_INFO,"Das Geld wurde von deinem Konto abgebucht.");

            format(string,sizeof(string),"Spieler {FF0000}%s{00CDFF} hat dein 24/7 für {FF0000}%d${00CDFF} abgekauft. Das Geld wurde auf deinem Konto überwiesen.",SpielerInfo[playerid][sName],GetPVarInt(playerid,"StoreAngebotPreis"));
            SendClientMessage(GetPVarInt(playerid,"StoreAngebotID"),COLOR_INFO,string);
            SpielerInfo[playerid][sBankkonto] -= GetPVarInt(playerid,"StoreAngebotPreis");
            SpielerInfo[GetPVarInt(playerid,"StoreAngebotID")][sBankkonto] += GetPVarInt(playerid,"StoreAngebotPreis");
            SpielerInfo[playerid][sStore] = GetPVarInt(playerid,"StoreAngebot");
            SpielerInfo[GetPVarInt(playerid,"StoreAngebotID")][sStore] = 0;

            new an = SpielerInfo[playerid][sStore];

			DestroyDynamic3DTextLabel(StoreInfo[an][siText]);
			StoreInfo[an][siText] = Text3D:INVALID_3DTEXT_ID;
			DestroyPickup(StoreInfo[an][siPickup]);

 			format(string, sizeof(string), "24/7 'ID: {FF0000}%d{FFFFFF}'\nBesitzer: {FF0000}%s", an, StoreInfo[an][siBesitzer]);
 			StoreInfo[an][siText] = CreateDynamic3DTextLabel(string, COLOR_WHITE, StoreInfo[an][siPos_X], StoreInfo[an][siPos_Y], StoreInfo[an][siPos_Z], 10.0);
    		StoreInfo[an][siPickup] = CreatePickup(1272, 23, StoreInfo[an][siPos_X], StoreInfo[an][siPos_Y], StoreInfo[an][siPos_Z], -1);

			format(StoreInfo[an][siBesitzer], MAX_PLAYER_NAME, SpielerInfo[playerid][sName]);

			DeletePVar(playerid,"StoreAngebot");
			DeletePVar(playerid,"StoreAngebotID");
			DeletePVar(playerid,"StoreAngebotPreis");
			return 1;
    	}
    	else if(strcmp(Auswahl2, "Haus", true, strlen(Auswahl2)) == 0)
    	{
    	    if(GetPVarInt(playerid,"HausAngebot") == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast kein Angebot erhalten.");
    	    if(!IsPlayerConnectedEx(GetPVarInt(playerid,"HausAngebotID")))return NichtOnline
    	    if(SpielerInfo[playerid][sHaus] != 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt bereits ein Haus");
    	    if(SpielerInfo[playerid][sBankkonto] < GetPVarInt(playerid,"HausAngebotPreis"))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend auf deinem Konto.");
            format(string,sizeof(string),"Du hast dir das Haus (ID: {FF0000}%d{00CDFF}) vom Spieler {FF0000}%s{00CDFF} für {FF0000}%d${00CDFF} abgekauft.",GetPVarInt(playerid,"HausAngebot"),SpielerInfo[GetPVarInt(playerid,"HausAngebotID")][sName],GetPVarInt(playerid,"HausAngebotPreis"));
            SendClientMessage(playerid,COLOR_INFO,string);

            SpielerInfo[playerid][sBankkonto] -= GetPVarInt(playerid,"HausAngebotPreis");
            SpielerInfo[GetPVarInt(playerid,"HausAngebotID")][sBankkonto] += GetPVarInt(playerid,"HausAngebotPreis");
            SpielerInfo[playerid][sHaus] = GetPVarInt(playerid,"HausAngebot");
            SpielerInfo[GetPVarInt(playerid,"HausAngebotID")][sHaus] = 0;
			HausInfo[GetPVarInt(playerid,"HausAngebot")][hsMiete] = 0;
			HausInfo[GetPVarInt(playerid,"HausAngebot")][hsMietbar] = 0;
			SpielerInfo[playerid][sMieter] = 0;

            new hs = SpielerInfo[playerid][sHaus];

			DestroyDynamic3DTextLabel(HausInfo[hs][hsText]);
			HausInfo[hs][hsText] = Text3D:INVALID_3DTEXT_ID;
			DestroyDynamicPickup(HausInfo[hs][hsPickup]);

    		if(HausInfo[hs][hsTyp] == 1)//Appartment
	    	{
      			format(string,sizeof(string),"Du hast dir das Appartment (ID:{FF0000}%d{00CDFF}) vom Spieler {FF0000}%s{00CDFF} für {FF0000}%d${00CDFF} abgekauft.",GetPVarInt(playerid,"HausAngebot"),SpielerInfo[GetPVarInt(playerid,"HausAngebotID")][sName],GetPVarInt(playerid,"HausAngebotPreis"));
            	SendClientMessage(playerid,COLOR_INFO,string);
      			format(string,sizeof(string),"Spieler {FF0000}%s{00CDFF} hat dein Appartment für {FF0000}%d${00CDFF} abgekauft. Das Geld wurde auf deinem Konto überwiesen.",SpielerInfo[playerid][sName],GetPVarInt(playerid,"HausAngebotPreis"));
            	SendClientMessage(GetPVarInt(playerid,"HausAngebotID"),COLOR_INFO,string);

    			format(string, sizeof(string), "Appartment 'ID: {FF0000}%d{FFFFFF}'\nBesitzer: {FF0000}%s", hs, HausInfo[hs][hsBesitzer]);
    			HausInfo[hs][hsPickup] = CreateDynamicPickup(1272, 23, HausInfo[hs][hsPos_X], HausInfo[hs][hsPos_Y], HausInfo[hs][hsPos_Z], -1);
			}
			else if(HausInfo[hs][hsTyp] == 2)//Haus
   			{
   				format(string,sizeof(string),"Du hast dir das Haus (ID:{FF0000}%d{00CDFF}) vom Spieler {FF0000}%s{00CDFF} für {FF0000}%d${00CDFF} abgekauft.",GetPVarInt(playerid,"HausAngebot"),SpielerInfo[GetPVarInt(playerid,"HausAngebotID")][sName],GetPVarInt(playerid,"HausAngebotPreis"));
            	SendClientMessage(playerid,COLOR_INFO,string);
      			format(string,sizeof(string),"Spieler {FF0000}%s{00CDFF} hat dein Haus für {FF0000}%d${00CDFF} abgekauft. Das Geld wurde auf deinem Konto überwiesen.",SpielerInfo[playerid][sName],GetPVarInt(playerid,"HausAngebotPreis"));
            	SendClientMessage(GetPVarInt(playerid,"HausAngebotID"),COLOR_INFO,string);

   				format(string, sizeof(string), "Haus 'ID: {FF0000}%d{FFFFFF}'\nBesitzer: {FF0000}%s", hs, HausInfo[hs][hsBesitzer]);
    			HausInfo[hs][hsPickup] = CreateDynamicPickup(1272, 23, HausInfo[hs][hsPos_X], HausInfo[hs][hsPos_Y], HausInfo[hs][hsPos_Z], -1);
   			}
   			else if(HausInfo[hs][hsTyp] == 3)//Villa
   			{
   				format(string,sizeof(string),"Du hast dir die Villa (ID:{FF0000}%d{00CDFF}) vom Spieler {FF0000}%s{00CDFF} für {FF0000}%d${00CDFF} abgekauft.",GetPVarInt(playerid,"HausAngebot"),SpielerInfo[GetPVarInt(playerid,"HausAngebotID")][sName],GetPVarInt(playerid,"HausAngebotPreis"));
            	SendClientMessage(playerid,COLOR_INFO,string);
      			format(string,sizeof(string),"Spieler {FF0000}%s{00CDFF} hat deine Villa für {FF0000}%d${00CDFF} abgekauft. Das Geld wurde auf deinem Konto überwiesen.",SpielerInfo[playerid][sName],GetPVarInt(playerid,"HausAngebotPreis"));
            	SendClientMessage(GetPVarInt(playerid,"HausAngebotID"),COLOR_INFO,string);

   				format(string, sizeof(string), "Villa 'ID: {FF0000}%d{FFFFFF}'\nBesitzer: {FF0000}%s", hs, HausInfo[hs][hsBesitzer]);
    			HausInfo[hs][hsPickup] = CreateDynamicPickup(1272, 23, HausInfo[hs][hsPos_X], HausInfo[hs][hsPos_Y], HausInfo[hs][hsPos_Z], -1);
   			}
   			SendClientMessage(playerid,COLOR_INFO,"Das Geld wurde von deinem Konto abgebucht.");
            HausInfo[hs][hsText] = CreateDynamic3DTextLabel(string, COLOR_WHITE, HausInfo[hs][hsPos_X], HausInfo[hs][hsPos_Y], HausInfo[hs][hsPos_Z], 10.0);
			format(HausInfo[hs][hsBesitzer], MAX_PLAYER_NAME, SpielerInfo[playerid][sName]);

			//Furniture System
			DeleteAllFurnitures(hs);

			DeletePVar(playerid,"HausAngebot");
			DeletePVar(playerid,"HausAngebotID");
			DeletePVar(playerid,"HausAngebotPreis");
			return 1;
    	}
    	else if(strcmp(Auswahl2, "GHaus", true, strlen(Auswahl2)) == 0)
    	{
    	    if(GetPVarInt(playerid,"GHausAngebot") == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast kein Angebot erhalten.");
    	    if(!IsPlayerConnectedEx(GetPVarInt(playerid,"GHausAngebotID")))return NichtOnline
    	    if(SpielerInfo[playerid][sGHaus] != 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt bereits ein Gruppenhaus");
    	    if(SpielerInfo[playerid][sBankkonto] < GetPVarInt(playerid,"GHausAngebotPreis"))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend auf deinem Konto.");
			format(string,sizeof(string),"Du hast dir das Gruppenhaus (ID:{FF0000}%d{00CDFF}) vom Spieler {FF0000}%s{00CDFF} für {FF0000}%d${00CDFF} abgekauft.",GetPVarInt(playerid,"GHausAngebot"),SpielerInfo[GetPVarInt(playerid,"GHausAngebotID")][sName],GetPVarInt(playerid,"HausAngebotPreis"));
            SendClientMessage(playerid,COLOR_INFO,string);

            SpielerInfo[playerid][sBankkonto] -= GetPVarInt(playerid,"GHausAngebotPreis");
            SpielerInfo[GetPVarInt(playerid,"GHausAngebotID")][sBankkonto] += GetPVarInt(playerid,"GHausAngebotPreis");
            SpielerInfo[playerid][sGHaus] = GetPVarInt(playerid,"GHausAngebot");
            SpielerInfo[GetPVarInt(playerid,"GHausAngebotID")][sGHaus] = 0;
			HausInfo[GetPVarInt(playerid,"GHausAngebot")][hsMiete] = 0;
			HausInfo[GetPVarInt(playerid,"GHausAngebot")][hsMietbar] = 0;

            new hs = SpielerInfo[playerid][sGHaus];

			DestroyDynamic3DTextLabel(HausInfo[hs][hsText]);
			HausInfo[hs][hsText] = Text3D:INVALID_3DTEXT_ID;
			DestroyDynamicPickup(HausInfo[hs][hsPickup]);

    		if(HausInfo[hs][hsTyp] == 1)//Appartment
	    	{
      			format(string,sizeof(string),"Du hast dir das Appartment (ID:{FF0000}%d{00CDFF}) vom Spieler {FF0000}%s{00CDFF} für {FF0000}%d${00CDFF} abgekauft.",GetPVarInt(playerid,"GHausAngebot"),SpielerInfo[GetPVarInt(playerid,"GHausAngebotID")][sName],GetPVarInt(playerid,"GHausAngebotPreis"));
            	SendClientMessage(playerid,COLOR_INFO,string);
      			format(string,sizeof(string),"Spieler {FF0000}%s{00CDFF} hat dein Appartment für {FF0000}%d${00CDFF} abgekauft. Das Geld wurde auf deinem Konto überwiesen.",SpielerInfo[playerid][sName],GetPVarInt(playerid,"GHausAngebotPreis"));
            	SendClientMessage(GetPVarInt(playerid,"HausAngebotID"),COLOR_INFO,string);

    			format(string, sizeof(string), "Appartment 'ID: {FF0000}%d{FFFFFF}'\nBesitzer: {FF0000}%s", hs, HausInfo[hs][hsBesitzer]);
    			HausInfo[hs][hsPickup] = CreateDynamicPickup(1272, 23, HausInfo[hs][hsPos_X], HausInfo[hs][hsPos_Y], HausInfo[hs][hsPos_Z], -1);
			}
			else if(HausInfo[hs][hsTyp] == 2)//Haus
   			{
   				format(string,sizeof(string),"Du hast dir das Haus (ID:{FF0000}%d{00CDFF}) vom Spieler {FF0000}%s{00CDFF} für {FF0000}%d${00CDFF} abgekauft.",GetPVarInt(playerid,"GHausAngebot"),SpielerInfo[GetPVarInt(playerid,"GHausAngebotID")][sName],GetPVarInt(playerid,"GHausAngebotPreis"));
            	SendClientMessage(playerid,COLOR_INFO,string);
      			format(string,sizeof(string),"Spieler {FF0000}%s{00CDFF} hat dein Gruppen für {FF0000}%d${00CDFF} abgekauft. Das Geld wurde auf deinem Konto überwiesen.",SpielerInfo[playerid][sName],GetPVarInt(playerid,"GHausAngebotPreis"));
            	SendClientMessage(GetPVarInt(playerid,"GHausAngebotID"),COLOR_INFO,string);

   				format(string, sizeof(string), "Haus 'ID: {FF0000}%d{FFFFFF}'\nBesitzer: {FF0000}%s", hs, HausInfo[hs][hsBesitzer]);
    			HausInfo[hs][hsPickup] = CreateDynamicPickup(1272, 23, HausInfo[hs][hsPos_X], HausInfo[hs][hsPos_Y], HausInfo[hs][hsPos_Z], -1);
   			}
   			else if(HausInfo[hs][hsTyp] == 3)//Villa
   			{
   				format(string,sizeof(string),"Du hast dir die Villa (ID:{FF0000}%d{00CDFF}) vom Spieler {FF0000}%s{00CDFF} für {FF0000}%d${00CDFF} abgekauft.",GetPVarInt(playerid,"GHausAngebot"),SpielerInfo[GetPVarInt(playerid,"GHausAngebotID")][sName],GetPVarInt(playerid,"GHausAngebotPreis"));
            	SendClientMessage(playerid,COLOR_INFO,string);
      			format(string,sizeof(string),"Spieler {FF0000}%s{00CDFF} hat deine Villa für {FF0000}%d${00CDFF} abgekauft. Das Geld wurde auf deinem Konto überwiesen.",SpielerInfo[playerid][sName],GetPVarInt(playerid,"GHausAngebotPreis"));
            	SendClientMessage(GetPVarInt(playerid,"GHausAngebotID"),COLOR_INFO,string);

   				format(string, sizeof(string), "Villa 'ID: {FF0000}%d{FFFFFF}'\nBesitzer: {FF0000}%s", hs, HausInfo[hs][hsBesitzer]);
    			HausInfo[hs][hsPickup] = CreateDynamicPickup(1272, 23, HausInfo[hs][hsPos_X], HausInfo[hs][hsPos_Y], HausInfo[hs][hsPos_Z], -1);
   			}
   			SendClientMessage(playerid,COLOR_INFO,"Das Geld wurde von deinem Konto abgebucht.");
            HausInfo[hs][hsText] = CreateDynamic3DTextLabel(string, COLOR_WHITE, HausInfo[hs][hsPos_X], HausInfo[hs][hsPos_Y], HausInfo[hs][hsPos_Z], 10.0);
			format(HausInfo[hs][hsBesitzer], MAX_PLAYER_NAME, SpielerInfo[playerid][sName]);

			DeletePVar(playerid,"GHausAngebot");
			DeletePVar(playerid,"GHausAngebotID");
			DeletePVar(playerid,"GHausAngebotPreis");
			return 1;
    	}
    	else if(strcmp(Auswahl2, "Garage", true, strlen(Auswahl2)) == 0)
    	{
    	    if(GetPVarInt(playerid,"GarageAngebot") == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast kein Angebot erhalten.");
    	    if(!IsPlayerConnectedEx(GetPVarInt(playerid,"GHausAngebotID")))return NichtOnline
    	    if(SpielerInfo[playerid][sGarage] != 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt bereits eine Garage");
    	    if(SpielerInfo[playerid][sBankkonto] < GetPVarInt(playerid,"GHausAngebotPreis"))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend auf deinem Konto.");
			format(string,sizeof(string),"Du hast dir die Garage (ID:{FF0000}%d{00CDFF}) vom Spieler {FF0000}%s{00CDFF} für {FF0000}%d${00CDFF} abgekauft.",GetPVarInt(playerid,"GarageAngebot"),SpielerInfo[GetPVarInt(playerid,"GarageAngebotID")][sName],GetPVarInt(playerid,"GarageAngebotPreis"));
            SendClientMessage(playerid,COLOR_INFO,string);

            SpielerInfo[playerid][sBankkonto] -= GetPVarInt(playerid,"GarageAngebotPreis");
            SpielerInfo[GetPVarInt(playerid,"GarageAngebotID")][sBankkonto] += GetPVarInt(playerid,"GarageAngebotPreis");
            SpielerInfo[playerid][sGarage] = GetPVarInt(playerid,"GarageAngebot");
            SpielerInfo[GetPVarInt(playerid,"GarageAngebotID")][sGarage] = 0;
			GaragenInfo[GetPVarInt(playerid,"GarageAngebot")][giMiete] = 0;
			GaragenInfo[GetPVarInt(playerid,"GarageAngebot")][giMietbar] = 0;

            new hs = SpielerInfo[playerid][sGarage];

			DestroyDynamic3DTextLabel(GaragenInfo[hs][giText]);
			GaragenInfo[hs][giText] = Text3D:INVALID_3DTEXT_ID;
			DestroyDynamicPickup(GaragenInfo[hs][giPickup]);

			format(string,sizeof(string),"Du hast dir die Garage (ID:{FF0000}%d{00CDFF}) vom Spieler {FF0000}%s{00CDFF} für {FF0000}%d${00CDFF} abgekauft.",GetPVarInt(playerid,"GarageAngebot"),SpielerInfo[GetPVarInt(playerid,"GarageAngebotID")][sName],GetPVarInt(playerid,"GarageAngebotPreis"));
        	SendClientMessage(playerid,COLOR_INFO,string);
  			format(string,sizeof(string),"Spieler {FF0000}%s{00CDFF} hat deine Garage für {FF0000}%d${00CDFF} abgekauft. Das Geld wurde auf deinem Konto überwiesen.",SpielerInfo[playerid][sName],GetPVarInt(playerid,"GarageAngebotPreis"));
        	SendClientMessage(GetPVarInt(playerid,"GarageAngebotID"),COLOR_INFO,string);

			format(string, sizeof(string), "Garage 'ID: {FF0000}%d{FFFFFF}'\nBesitzer: {FF0000}%s", hs, GaragenInfo[hs][giBesitzer]);
			GaragenInfo[hs][giPickup] = CreateDynamicPickup(1272, 23, GaragenInfo[hs][giPos_X], GaragenInfo[hs][giPos_Y], GaragenInfo[hs][giPos_Z], -1);

   			SendClientMessage(playerid,COLOR_INFO,"Das Geld wurde von deinem Konto abgebucht.");
            GaragenInfo[hs][giText] = CreateDynamic3DTextLabel(string, COLOR_WHITE, GaragenInfo[hs][giPos_X], GaragenInfo[hs][giPos_Y], GaragenInfo[hs][giPos_Z], 10.0);
			format(GaragenInfo[hs][giBesitzer], MAX_PLAYER_NAME, SpielerInfo[playerid][sName]);

			DeletePVar(playerid,"GarageAngebot");
			DeletePVar(playerid,"GarageAngebotID");
			DeletePVar(playerid,"GarageAngebotPreis");
			return 1;
    	}
        return 1;
    }
   	if(strcmp(Auswahl, "Ablehnen", true, strlen(Auswahl)) == 0)
    {
  		if(strcmp(Auswahl2, "Tankstelle", true, strlen(Auswahl2)) == 0)
    	{
	    	if(GetPVarInt(playerid,"TankstelleAngebot") == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast kein Angebot erhalten.");
    	    if(!IsPlayerConnectedEx(GetPVarInt(playerid,"TankstelleAngebotID")))return NichtOnline
    	    SendClientMessage(playerid,COLOR_SUPER,"Du hast das Angebot abgelehnt.");

         	format(string,sizeof(string),"Spieler {FF0000}%s{00CDFF} hat dein Angebot abgelehnt.",SpielerInfo[playerid][sName]);
            SendClientMessage(GetPVarInt(playerid,"TankstelleAngebotID"),COLOR_INFO,string);

   			DeletePVar(playerid,"TankstelleAngebot");
			DeletePVar(playerid,"TankstelleAngebotID");
			DeletePVar(playerid,"TankstelleAngebotPreis");
    	    return 1;
    	}
    	else if(strcmp(Auswahl2, "Ammunation", true, strlen(Auswahl2)) == 0)
    	{
	    	if(GetPVarInt(playerid,"AmmunationAngebot") == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast kein Angebot erhalten.");
    	    if(!IsPlayerConnectedEx(GetPVarInt(playerid,"AmmunationAngebotID")))return NichtOnline
    	    SendClientMessage(playerid,COLOR_SUPER,"Du hast das Angebot abgelehnt.");

         	format(string,sizeof(string),"Spieler {FF0000}%s{00CDFF} hat dein Angebot abgelehnt.",SpielerInfo[playerid][sName]);
            SendClientMessage(GetPVarInt(playerid,"AmmunationAngebotID"),COLOR_INFO,string);

			DeletePVar(playerid,"AmmunationAngebot");
			DeletePVar(playerid,"AmmunationAngebotID");
			DeletePVar(playerid,"AmmunationAngebotPreis");
    	    return 1;
		}
  		else if(strcmp(Auswahl2, "24/7", true, strlen(Auswahl2)) == 0)
    	{
	    	if(GetPVarInt(playerid,"StoreAngebot") == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast kein Angebot erhalten.");
    	    if(!IsPlayerConnectedEx(GetPVarInt(playerid,"StoreAngebotID")))return NichtOnline
    	    SendClientMessage(playerid,COLOR_SUPER,"Du hast das Angebot abgelehnt.");

         	format(string,sizeof(string),"Spieler {FF0000}%s{00CDFF} hat dein Angebot abgelehnt.",SpielerInfo[playerid][sName]);
            SendClientMessage(GetPVarInt(playerid,"StoreAngebotID"),COLOR_INFO,string);

			DeletePVar(playerid,"StoreAngebot");
			DeletePVar(playerid,"StoreAngebotID");
			DeletePVar(playerid,"StoreAngebotPreis");
    	    return 1;
    	}
    	else if(strcmp(Auswahl2, "Haus", true, strlen(Auswahl2)) == 0)
    	{
	    	if(GetPVarInt(playerid,"HausAngebot") == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast kein Angebot erhalten.");
    	    if(!IsPlayerConnectedEx(GetPVarInt(playerid,"HausAngebotID")))return NichtOnline
    	    SendClientMessage(playerid,COLOR_SUPER,"Du hast das Angebot abgelehnt.");

         	format(string,sizeof(string),"Spieler {FF0000}%s{00CDFF} hat dein Angebot abgelehnt.",SpielerInfo[playerid][sName]);
            SendClientMessage(GetPVarInt(playerid,"HausAngebotID"),COLOR_INFO,string);

			DeletePVar(playerid,"HausAngebot");
			DeletePVar(playerid,"HausAngebotID");
			DeletePVar(playerid,"HausAngebotPreis");
    	    return 1;
    	}
    	else if(strcmp(Auswahl2, "GHaus", true, strlen(Auswahl2)) == 0)
    	{
	    	if(GetPVarInt(playerid,"GHausAngebot") == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast kein Angebot erhalten.");
    	    if(!IsPlayerConnectedEx(GetPVarInt(playerid,"GHausAngebotID")))return NichtOnline
    	    SendClientMessage(playerid,COLOR_SUPER,"Du hast das Angebot abgelehnt.");

         	format(string,sizeof(string),"Spieler {FF0000}%s{00CDFF} hat dein Angebot abgelehnt.",SpielerInfo[playerid][sName]);
            SendClientMessage(GetPVarInt(playerid,"GHausAngebotID"),COLOR_INFO,string);

			DeletePVar(playerid,"GHausAngebot");
			DeletePVar(playerid,"GHausAngebotID");
			DeletePVar(playerid,"GHausAngebotPreis");
    	    return 1;
    	}
    	else if(strcmp(Auswahl2, "Garage", true, strlen(Auswahl2)) == 0)
    	{
	    	if(GetPVarInt(playerid,"GarageAngebot") == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast kein Angebot erhalten.");
    	    if(!IsPlayerConnectedEx(GetPVarInt(playerid,"GarageAngebotID")))return NichtOnline
    	    SendClientMessage(playerid,COLOR_SUPER,"Du hast das Angebot abgelehnt.");

         	format(string,sizeof(string),"Spieler {FF0000}%s{00CDFF} hat dein Angebot abgelehnt.",SpielerInfo[playerid][sName]);
            SendClientMessage(GetPVarInt(playerid,"GarageAngebotID"),COLOR_INFO,string);

			DeletePVar(playerid,"GarageAngebot");
			DeletePVar(playerid,"GarageAngebotID");
			DeletePVar(playerid,"GarageAngebotPreis");
    	    return 1;
    	}
        return 1;
    }
    return 1;
}

CMD:verwaltung(playerid,params[])
{
	new Auswahl[24], string[148];
    if(sscanf(params,"s[24]",Auswahl))return SendClientMessage(playerid,COLOR_YELLOW,"Benutze: {FFFFFF}/verwaltung [Tankstelle|Ammunation|24/7|Haus|Ghaus|Garage]");
   	if(strcmp(Auswahl, "Tankstelle", true, strlen(Auswahl)) == 0)
    {
        if(SpielerInfo[playerid][sTankstelle] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt keine Tankstelle.");
        new hs = SpielerInfo[playerid][sTankstelle];
        if(GetNearTankstellenHausID(playerid) == hs)
        {
	        ShowPlayerDialog(playerid,DIALOG_VERWALTUNG,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Upgrades\nPreise\nVerkaufen\nBeschreibung ändern","Weiter","Abbrechen");
	        SetPVarInt(playerid,"Verwaltung",1);
			return 1;
		} else {
			SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist nicht am Eingang von deiner Tankstelle.");
		}
	}
	else if(strcmp(Auswahl, "Ammunation", true, strlen(Auswahl)) == 0)
    {
        if(SpielerInfo[playerid][sAmmunation] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt kein Ammunation.");
        new hs = SpielerInfo[playerid][sAmmunation];
		if(GetNearAmmunationID(playerid) == hs)
		{
	        ShowPlayerDialog(playerid,DIALOG_VERWALTUNG,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Upgrades\nPreise\nVerkaufen","Weiter","Abbrechen");
	        SetPVarInt(playerid,"Verwaltung",2);
			return 1;
		} else {
			SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist nicht am Eingang von deinem Ammunation.");
		}
	}
	else if(strcmp(Auswahl, "24/7", true, strlen(Auswahl)) == 0)
    {
        if(SpielerInfo[playerid][sStore] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt kein 24/7.");
        new hs = SpielerInfo[playerid][sStore];
  		if(IsPlayerInRangeOfPoint(playerid, 3.5, StoreInfo[hs][siPos_X], StoreInfo[hs][siPos_Y], StoreInfo[hs][siPos_Z]))
		{
	        ShowPlayerDialog(playerid,DIALOG_VERWALTUNG,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Upgrades\nPreise\nVerkaufen","Weiter","Abbrechen");
	        SetPVarInt(playerid,"Verwaltung",3);
			return 1;
		} else {
			SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist nicht am Eingang von deinem 24/7.");
		}
	}
	else if(strcmp(Auswahl, "Haus", true, strlen(Auswahl)) == 0)
    {
        if(SpielerInfo[playerid][sHaus] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt kein Haus.");
        new hs = SpielerInfo[playerid][sHaus];
  		if(IsPlayerInRangeOfPoint(playerid, 3.5, HausInfo[hs][hsPos_X], HausInfo[hs][hsPos_Y], HausInfo[hs][hsPos_Z]))
		{
			format(string, sizeof(string), "Upgrades\nMietbar: %s\nMiete\nHauskasse\n%s\nVerkaufen", HausMietbar(playerid), HausLocked(playerid));
			ShowPlayerDialog(playerid,DIALOG_HAUS_VERWALTUNG,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung",string,"Weiter","Abbrechen");
	        SetPVarInt(playerid,"Verwaltung",4);
  			return 1;
   		} else {
   		    SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist nicht am Eingang von deinem Haus.");
   		}
	}
	else if(strcmp(Auswahl, "Ghaus", true, strlen(Auswahl)) == 0)
    {
        if(SpielerInfo[playerid][sGHaus] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt kein Gruppenhaus.");
    	new hs = SpielerInfo[playerid][sGHaus];
  		if(IsPlayerInRangeOfPoint(playerid, 3.5, HausInfo[hs][hsPos_X], HausInfo[hs][hsPos_Y], HausInfo[hs][hsPos_Z]))
		{
			format(string, sizeof(string), "Upgrades\nHauskasse\n%s\nAnzeige\nVerkaufen", GHausLocked(playerid));
			ShowPlayerDialog(playerid,DIALOG_GHAUS_VERWALTUNG,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung",string,"Weiter","Abbrechen");
	        SetPVarInt(playerid,"Verwaltung",5);
			return 1;
		} else {
		    SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist nicht am Eingang von deinem Gruppenhaus.");
		}
	}
	else if(strcmp(Auswahl, "Garage", true, strlen(Auswahl)) == 0)
    {
        if(SpielerInfo[playerid][sGarage] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt keine Garage.");
        new hs = SpielerInfo[playerid][sGarage];
  		if(IsPlayerInRangeOfPoint(playerid, 3.5, GaragenInfo[hs][giPos_X], GaragenInfo[hs][giPos_Y], GaragenInfo[hs][giPos_Z]))
		{
			format(string, sizeof(string), "Upgrades\nMietbar: %s\nMiete\n%s\nVerkaufen", GarageMietbar(playerid), GarageLocked(playerid));
			ShowPlayerDialog(playerid,DIALOG_GARAGE_VERWALTUNG,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung",string,"Weiter","Abbrechen");
	        SetPVarInt(playerid,"Verwaltung",6);
			return 1;
		} else {
			SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist nicht am Eingang von deiner Garage.");
		}
	}
	return 1;
}

CMD:kaufen(playerid,params[])
{
	new Auswahl[24], string[128];
    if(sscanf(params,"s[24]",Auswahl))return SendClientMessage(playerid,COLOR_YELLOW,"Benutze: {FFFFFF}/kaufen [Tankstelle|Ammunation|24/7|Haus|Garage]");
   	if(strcmp(Auswahl, "Tankstelle", true, strlen(Auswahl)) == 0)
    {
        if(GetPlayerScore(playerid) < 4)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du kannst erst ab Level 4 eine Tankstelle kaufen.");
        if(!AnTankstellenHaus(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist an keiner Tankstelle.");
        new tsid = GetNearTankstellenHausID(playerid);
        if(SpielerInfo[playerid][sTankstelle] != 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt bereits eine Tankstelle.");
        if(strlen(TankstellenInfo[tsid][tsBesitzer]) > 2)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du kannst diese Tankstelle nicht kaufen.");
        if(SpielerInfo[playerid][sPerso] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt keinen Personalausweis. Begebe dich zu Stadthalle und beantrage dort deinen Personalausweis.");
	    format(string,sizeof(string),"{FFFFFF}Bist du dir sicher, dass du dir die Tankstelle (ID:{FF0000}%d{FFFFFF}) für {FF0000}%d${FFFFFF} kaufen möchtest ?",tsid,TankstellenInfo[tsid][tsPreis]);
	    ShowPlayerDialog(playerid,DIALOG_KAUFEN,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Kaufbestätigung",string,"Ja","Nein");
	    SetPVarInt(playerid,"Kaufen",1);
	    return 1;
    }
   	if(strcmp(Auswahl, "Ammunation", true, strlen(Auswahl)) == 0)
    {
        if(GetPlayerScore(playerid) < 4)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du kannst erst ab Level 4 ein Ammunation kaufen.");
        if(!AnAmmunation(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist an keinem Ammunation.");
        new an = GetNearAmmunationID(playerid);
        if(SpielerInfo[playerid][sAmmunation] != 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt bereits ein Ammunation.");
        if(strlen(AmmunationInfo[an][amBesitzer]) > 2)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du kannst das Ammunation nicht kaufen.");
        if(SpielerInfo[playerid][sPerso] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt keinen Personalausweis. Begebe dich zu Stadthalle und beantrage dort deinen Personalausweis.");
	    format(string,sizeof(string),"{FFFFFF}Bist du dir sicher, dass du dir das Ammunation (ID:{FF0000}%d{FFFFFF}) für {FF0000}%d${FFFFFF} kaufen möchtest ?",an,AmmunationInfo[an][amPreis]);
	    ShowPlayerDialog(playerid,DIALOG_KAUFEN,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Kaufbestätigung",string,"Ja","Nein");
	    SetPVarInt(playerid,"Kaufen",2);
	    return 1;
    }
	if(strcmp(Auswahl, "24/7", true, strlen(Auswahl)) == 0)
    {
        if(GetPlayerScore(playerid) < 4)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du kannst erst ab Level 4 einen Store kaufen.");
        if(!AnStore(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist an keinem 24/7.");
        new an = GetNearStoreID(playerid);
        if(SpielerInfo[playerid][sStore] != 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt bereits ein 24/7.");
        if(strlen(StoreInfo[an][siBesitzer]) > 2)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du kannst den 24/7 nicht kaufen.");
        if(SpielerInfo[playerid][sPerso] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt keinen Personalausweis. Begebe dich zu Stadthalle und beantrage dort deinen Personalausweis.");
	    format(string,sizeof(string),"{FFFFFF}Bist du dir sicher, dass du dir das 24/7 (ID:{FF0000}%d{FFFFFF}) für {FF0000}%d${FFFFFF} kaufen möchtest ?",an,StoreInfo[an][siPreis]);
	    ShowPlayerDialog(playerid,DIALOG_KAUFEN,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Kaufbestätigung",string,"Ja","Nein");
	    SetPVarInt(playerid,"Kaufen",3);
	    return 1;
    }
	if(strcmp(Auswahl, "Haus", true, strlen(Auswahl)) == 0)
    {
        if(GetPlayerScore(playerid) < 3)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du kannst erst ab Level 3 ein Haus kaufen.");
        if(!AnHaus(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist an keinem Haus.");
        if(SpielerInfo[playerid][sPerso] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt keinen Personalausweis. Begebe dich zu Stadthalle und beantrage dort deinen Personalausweis.");
		ShowPlayerDialog(playerid,DIALOG_HAUS_KAUFEN,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Kaufauswahl","Privat\nGruppe","Weiter","Abbrechen");
	    return 1;
    }
	if(strcmp(Auswahl, "Garage", true, strlen(Auswahl)) == 0)
    {
        if(!AnGarage(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist an keiner Garage.");
        new an = GetNearGarageID(playerid);
        if(SpielerInfo[playerid][sGarage] != 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt bereits eine Garage.");
        if(strlen(GaragenInfo[an][giBesitzer]) > 2)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du kannst die Garage nicht kaufen.");
        if(SpielerInfo[playerid][sPerso] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt keinen Personalausweis. Begebe dich zu Stadthalle und beantrage dort deinen Personalausweis.");
	    format(string,sizeof(string),"{FFFFFF}Bist du dir sicher, dass du dir die Garage (ID:{FF0000}%d{FFFFFF}) für {FF0000}%d${FFFFFF} kaufen möchtest ?",an,GaragenInfo[an][giPreis]);
	    ShowPlayerDialog(playerid,DIALOG_KAUFEN,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Kaufbestätigung",string,"Ja","Nein");
	    SetPVarInt(playerid,"Kaufen",6);
	    return 1;
    }
	return 1;
}

CMD:selldrugs(playerid,params[])
{
	if(SpielerInfo[playerid][sFraktion] < 9 && SpielerInfo[playerid][sNebenjob] != 12)return NichtBerechtigt
	if(!IsAllowedForCommand(playerid,"Selldrugs"))return KeinRang
	new pID, Preis, Anzahl;
	if(sscanf(params,"uii",pID,Anzahl,Preis))return SendClientMessage(playerid,COLOR_YELLOW,"Benutze: {FFFFFF}/selldrugs [SpielerID] [Gramm] [Preis]");
	{
	    if(SpielerInfo[playerid][sFraktion] > 8 && SpielerInfo[pID][sNebenjob] != 12)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Gangs & Mafian können nur an Drogendealer verkaufen.");
	    if(SpielerInfo[playerid][sDrogen] < 2)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du brauchst mindestens 2g Drogen um diese zu verkaufen.");
	    if(pID == playerid)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du kannst keine Drogen an dich selbst verkaufen.");
	    if(GetDistanceBetweenPlayersEx(playerid, pID) > 5.0)return NichtNahe
		if(IsPlayerInAnyVehicle(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Steige zuerst aus deinem Fahrzeug aus.");
		if(IsPlayerInAnyVehicle(pID))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Der Spieler sitzt in einem Fahrzeug.");
		if(Preis < 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Der Preis muss mindestens einen Dollar betragen.");
		SetPVarInt(pID,"HatDrogenAngebot",Preis);
		SetPVarInt(pID,"HatDrogenAngebotPID",playerid);
		SetPVarInt(pID,"HatDrogenAngebotAnzahl",Anzahl);
		SetPVarInt(pID,"HatDrogenAngebotPrivat",1);
		new string[128];
		format(string,sizeof(string),"* %s bietet dir %dg Drogen für %d$ an. Tippe \"/accept Drogen\" um anzunehmen.",SpielerInfo[playerid][sName],Anzahl,Preis);
		SendClientMessage(pID,COLOR_PURPLE,string);
		format(string,sizeof(string),"* Du bietest %s %dg Drogen für %d$ an.",SpielerInfo[pID][sName],Anzahl,Preis);
		SendClientMessage(playerid,COLOR_PURPLE,string);
	}
	return 1;
}

CMD:giveweapon(playerid,params[])
{
	if(SpielerInfo[playerid][sNebenjob] != 13)return NichtBerechtigt
	new pID, _Waffe[24];
	if(sscanf(params,"us[24]",pID,_Waffe))return SendClientMessage(playerid,COLOR_YELLOW,"Benutze: /giveweapon [SpielerID] [Deagle|MP5|Shotgun|AK47]");
	if(strcmp(_Waffe, "Deagle", true, strlen(_Waffe)) == 0)
	{
	    if(SpielerInfo[playerid][sMaterialien] < 235)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du brauchst 235 Materialien um eine Deagle zusammen zu bauen.");
	    if(!IsPlayerConnectedEx(pID))return NichtOnline
	    if(GetDistanceBetweenPlayersEx(playerid, pID) >= 5.0)return NichtNahe
	    if(IsPlayerInAnyVehicle(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Steige zuerst aus deinem Fahrzeug aus.");
		if(IsPlayerInAnyVehicle(pID))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Der Spieler sitzt in einem Fahrzeug.");
		GivePlayerWeapon(pID,WEAPON:24,60);
		SpielerInfo[playerid][sMaterialien] -= 235;
		new string[128];
		format(string,sizeof(string),"[Info]: {FFFFFF}%s hat dir für eine Desert Eagle mit 60 Schuss zusammen gebaut.",SpielerInfo[playerid][sName]);
		SendClientMessage(pID,COLOR_PURPLE,string);
		format(string,sizeof(string),"[Info]: {FFFFFF}Du hast %s eine Desert Eagle mit 60 Schuss zusammen gebaut.",SpielerInfo[pID][sName]);
		SendClientMessage(playerid,COLOR_PURPLE,string);
		if(GetPVarInt(playerid,"CopMaske") == 1){format(string,sizeof(string),"* Unbekannter baut etwas zusammen und reicht es weiter.");}
  		else if(GetPVarInt(playerid,"FraktionsMaske") == 1){format(string,sizeof(string),"* Unbekannter baut etwas zusammen und reicht es weiter.");}
  		else if(GetPVarInt(playerid,"GruppenMaske") == 1){format(string,sizeof(string),"* Unbekannter baut etwas zusammen und reicht es weiter.");}
		else {format(string,sizeof(string),"* %s baut etwas zusammen und reicht es weiter.",SpielerInfo[playerid][sName]);}
		ProxDetector(12, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
	else if(strcmp(_Waffe, "MP5", true, strlen(_Waffe)) == 0)
	{
	    if(SpielerInfo[playerid][sMaterialien] < 525)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du brauchst 525 Materialien um eine MP5 zusammen zu bauen.");
	    if(!IsPlayerConnectedEx(pID))return NichtOnline
	    if(GetDistanceBetweenPlayersEx(playerid, pID) >= 5.0)return NichtNahe
	    if(IsPlayerInAnyVehicle(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Steige zuerst aus deinem Fahrzeug aus.");
		if(IsPlayerInAnyVehicle(pID))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Der Spieler sitzt in einem Fahrzeug.");
		GivePlayerWeapon(pID,WEAPON:29,400);
		SpielerInfo[playerid][sMaterialien] -= 525;
		new string[128];
		format(string,sizeof(string),"[Info]: {FFFFFF}%s hat dir für eine MP5 mit 400 Schuss zusammen gebaut.",SpielerInfo[playerid][sName]);
		SendClientMessage(pID,COLOR_PURPLE,string);
		format(string,sizeof(string),"[Info]: {FFFFFF}Du hast %s eine MP5 mit 400 Schuss zusammen gebaut.",SpielerInfo[pID][sName]);
		SendClientMessage(playerid,COLOR_PURPLE,string);
		if(GetPVarInt(playerid,"CopMaske") == 1){format(string,sizeof(string),"* Unbekannter baut etwas zusammen und reicht es weiter.");}
  		else if(GetPVarInt(playerid,"FraktionsMaske") == 1){format(string,sizeof(string),"* Unbekannter baut etwas zusammen und reicht es weiter.");}
  		else if(GetPVarInt(playerid,"GruppenMaske") == 1){format(string,sizeof(string),"* Unbekannter baut etwas zusammen und reicht es weiter.");}
		else {format(string,sizeof(string),"* %s baut etwas zusammen und reicht es weiter.",SpielerInfo[playerid][sName]);}
		ProxDetector(12, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
	if(strcmp(_Waffe, "Shotgun", true, strlen(_Waffe)) == 0)
	{
	    if(SpielerInfo[playerid][sMaterialien] < 700)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du brauchst 700 Materialien um eine Shotgun zusammen zu bauen.");
	    if(!IsPlayerConnectedEx(pID))return NichtOnline
	    if(GetDistanceBetweenPlayersEx(playerid, pID) >= 5.0)return NichtNahe
	    if(IsPlayerInAnyVehicle(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Steige zuerst aus deinem Fahrzeug aus.");
		if(IsPlayerInAnyVehicle(pID))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Der Spieler sitzt in einem Fahrzeug.");
		GivePlayerWeapon(pID,WEAPON:25,90);
		SpielerInfo[playerid][sMaterialien] -= 700;
		new string[128];
		format(string,sizeof(string),"[Info]: {FFFFFF}%s hat dir für eine Shotgun mit 90 Schuss zusammen gebaut.",SpielerInfo[playerid][sName]);
		SendClientMessage(pID,COLOR_PURPLE,string);
		format(string,sizeof(string),"[Info]: {FFFFFF}Du hast %s eine Shotgun mit 90 Schuss zusammen gebaut.",SpielerInfo[pID][sName]);
		SendClientMessage(playerid,COLOR_PURPLE,string);
		if(GetPVarInt(playerid,"CopMaske") == 1){format(string,sizeof(string),"* Unbekannter baut etwas zusammen und reicht es weiter.");}
  		else if(GetPVarInt(playerid,"FraktionsMaske") == 1){format(string,sizeof(string),"* Unbekannter baut etwas zusammen und reicht es weiter.");}
  		else if(GetPVarInt(playerid,"GruppenMaske") == 1){format(string,sizeof(string),"* Unbekannter baut etwas zusammen und reicht es weiter.");}
		else {format(string,sizeof(string),"* %s baut etwas zusammen und reicht es weiter.",SpielerInfo[playerid][sName]);}
		ProxDetector(12, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
	if(strcmp(_Waffe, "AK47", true, strlen(_Waffe)) == 0)
	{
	    if(SpielerInfo[playerid][sMaterialien] < 950)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du brauchst 950 Materialien um eine AK47 zusammen zu bauen.");
	    if(!IsPlayerConnectedEx(pID))return NichtOnline
	    if(GetDistanceBetweenPlayersEx(playerid, pID) >= 5.0)return NichtNahe
	    if(IsPlayerInAnyVehicle(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Steige zuerst aus deinem Fahrzeug aus.");
		if(IsPlayerInAnyVehicle(pID))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Der Spieler sitzt in einem Fahrzeug.");
		GivePlayerWeapon(pID,WEAPON:31,600);
		SpielerInfo[playerid][sMaterialien] -= 950;
		new string[128];
		format(string,sizeof(string),"[Info]: {FFFFFF}%s hat dir für eine AK47 mit 600 Schuss zusammen gebaut.",SpielerInfo[playerid][sName]);
		SendClientMessage(pID,COLOR_PURPLE,string);
		format(string,sizeof(string),"[Info]: {FFFFFF}Du hast %s eine AK47 mit 600 Schuss zusammen gebaut.",SpielerInfo[pID][sName]);
		SendClientMessage(playerid,COLOR_PURPLE,string);
		if(GetPVarInt(playerid,"CopMaske") == 1){format(string,sizeof(string),"* Unbekannter baut etwas zusammen und reicht es weiter.");}
  		else if(GetPVarInt(playerid,"FraktionsMaske") == 1){format(string,sizeof(string),"* Unbekannter baut etwas zusammen und reicht es weiter.");}
  		else if(GetPVarInt(playerid,"GruppenMaske") == 1){format(string,sizeof(string),"* Unbekannter baut etwas zusammen und reicht es weiter.");}
		else {format(string,sizeof(string),"* %s baut etwas zusammen und reicht es weiter.",SpielerInfo[playerid][sName]);}
		ProxDetector(12, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
	return 1;
}

CMD:accept(playerid,params[])
{
	new Auswahl[10], string[144];
	if(sscanf(params,"s[10]",Auswahl))return SendClientMessage(playerid,COLOR_YELLOW,"Benutze: {FFFFFF}/accept [Ticket|Heal|Paket|Repair|Drogen|Dice|Bündniss|Race]");
	{
		if(strcmp(Auswahl, "Ticket", true, strlen(Auswahl)) == 0)
	    {
  			if(GetPVarInt(playerid,"TicketAngebot") == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast kein Angebot erhalten.");
			if(!IsPlayerConnectedEx(GetPVarInt(playerid,"Officer")))return NichtOnline
			if(GetDistanceBetweenPlayersEx(playerid, GetPVarInt(playerid,"Officer")) >= 10)return NichtNahe
			if(GetPlayerMoneyEx(playerid) < GetPVarInt(playerid,"TicketPreis"))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
			format(string,128,"[Info]: {FFFFFF}Spieler {FF0000}%s{00CDFF} hat das Ticket in höhe von {FF0000}%d${00CDFF} bezahlt.",SpielerInfo[playerid][sName],GetPVarInt(playerid,"TicketPreis"));
			SendClientMessage(GetPVarInt(playerid,"Officer"),COLOR_INFO,string);
			format(string,128,"[Info]: {FFFFFF}Du hast das Ticket in höhe von {FF0000}%d${00CDFF} bezahlt.",GetPVarInt(playerid,"TicketPreis"));
			SendClientMessage(playerid,COLOR_INFO,string);
			SetPVarInt(playerid,"NoPAYBACK",1);
			GivePlayerMoneyEx(playerid,-GetPVarInt(playerid,"TicketPreis"));
			FrakInfo[SpielerInfo[GetPVarInt(playerid,"Officer")][sFraktion]][fiFrakKasse] += GetPVarInt(playerid,"TicketPreis");
			DeletePVar(playerid,"Officer");
			DeletePVar(playerid,"TicketAngebot");
			DeletePVar(playerid,"TicketPreis");
			return 1;
		}
		else if(strcmp(Auswahl, "Heal", true, strlen(Auswahl)) == 0)
	    {
	        new pID = GetPVarInt(playerid,"Arzt");
  			if(GetPVarInt(playerid,"HealthPreis") == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast kein Angebot erhalten.");
			if(!IsPlayerConnectedEx(pID))return NichtOnline
			if(GetDistanceBetweenPlayersEx(playerid, pID) > 12)return NichtNahe
			if(GetPlayerMoneyEx(playerid) < GetPVarInt(playerid,"HealthPreis"))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
			SetPVarInt(playerid,"NoPAYBACK",1);
			GivePlayerMoneyEx(playerid,-GetPVarInt(playerid,"HealthPreis"));
			GivePlayerMoneyEx(pID,GetPVarInt(playerid,"HealthPreis"));
			TogglePlayerControllable(playerid, false);
			TogglePlayerControllable(pID,false);
			format(string,128,"%s %s beginnt mit der Heilung.",RangName(pID),SpielerInfo[pID][sName]);
			SendClientMessage(playerid,COLOR_SUPER,string);
			format(string,128,"Du beginnst %s zu heilen.",SpielerInfo[playerid][sName]);
			SendClientMessage(pID,COLOR_SUPER,string);
			KillTimer(HealthTimer[playerid]);
			HealthTimer[playerid] = SetTimerEx("Heilen",1000,true,"i",playerid);
			KillTimer(HealthTimer[pID]);
			HealthTimer[pID] = SetTimerEx("Heilen",1000,true,"i",playerid);
			return 1;
	    }
   		else if(strcmp(Auswahl, "Paket", true, strlen(Auswahl)) == 0)
	    {
	        new pID = GetPVarInt(playerid,"ErsteHilfePaket");
  			if(GetPVarInt(playerid,"ErsteHilfePaketPreis") == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast kein Angebot erhalten.");
			if(!IsPlayerConnectedEx(pID))return NichtOnline
			if(GetDistanceBetweenPlayersEx(playerid, pID) > 12)return NichtNahe
			if(SpielerInfo[playerid][sPaket] == 1)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt bereits ein Erste-Hilfe-Paket.");
			if(GetPlayerMoneyEx(playerid) < GetPVarInt(playerid,"ErsteHilfePaketPreis"))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
            SetPVarInt(playerid,"NoPAYBACK",1);
			GivePlayerMoneyEx(playerid,-GetPVarInt(playerid,"ErsteHilfePaketPreis"));
			FrakInfo[SpielerInfo[pID][sFraktion]][fiFrakKasse] += GetPVarInt(playerid,"ErsteHilfePaketPreis");
			SpielerInfo[playerid][sPaket] = 1;
			format(string,128,"%s %s hat dir ein Erste-Hilfe-Paket gegeben.",RangName(pID),SpielerInfo[pID][sName]);
			SendClientMessage(playerid,COLOR_SUPER,string);
			format(string,128,"Du hast %s ein Erste-Hilfe-Paket für %d$ verkauft.",SpielerInfo[playerid][sName],GetPVarInt(playerid,"ErsteHilfePaketPreis"));
			SendClientMessage(pID,COLOR_SUPER,string);
			DeletePVar(playerid,"ErsteHilfePaket");
			DeletePVar(playerid,"ErsteHilfePaketPreis");
			return 1;
	    }
   		else if(strcmp(Auswahl, "Repair", true, strlen(Auswahl)) == 0)
	    {
	        new pID = GetPVarInt(playerid,"MechanikerID");
  			if(GetPVarInt(playerid,"MechanikerPreis") == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast kein Angebot erhalten.");
  			if(!IsPlayerInAnyVehicle(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Nur im Fahrzeug möglich.");
			if(!IsPlayerConnectedEx(pID))return NichtOnline
			if(GetDistanceBetweenPlayersEx(playerid, pID) > 12)return NichtNahe
			new PLAYER_STATE:State=GetPlayerState(playerid);
 			if(State!=PLAYER_STATE_DRIVER)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist nicht der Fahrer dieses Fahrzeugs.");
			if(GetPlayerMoneyEx(playerid) < GetPVarInt(playerid,"MechanikerPreis"))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");

            SetPVarInt(playerid,"NoPAYBACK",1);
			GivePlayerMoneyEx(playerid,-GetPVarInt(playerid,"MechanikerPreis"));
			FrakInfo[SpielerInfo[pID][sFraktion]][fiFrakKasse] += GetPVarInt(playerid,"MechanikerPreis");

			RepairVehicle(GetPlayerVehicleID(playerid));
			SetVehicleHealth(GetPlayerVehicleID(playerid), 1000);

			format(string,128,"[Info]: {FFFFFF}%s %s hat dein Fahrzeug für %d$ repariert.",RangName(pID),SpielerInfo[pID][sName],GetPVarInt(playerid,"MechanikerPreis"));
			SendClientMessage(playerid,COLOR_SUPER,string);
			format(string,128,"[Info]: {FFFFFF}Du hast das Fahrzeug von %s für %d$ repariert.",SpielerInfo[playerid][sName],GetPVarInt(playerid,"MechanikerPreis"));
			SendClientMessage(pID,COLOR_SUPER,string);
			DeletePVar(playerid,"MechanikerID");
			DeletePVar(playerid,"MechanikerPreis");
			return 1;
	    }
	    else if(strcmp(Auswahl, "Drogen", true, strlen(Auswahl)) == 0)
	    {
	        if(GetPVarInt(playerid,"HatDrogenAngebot") < 1)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Niemand hat dir zurzeit ein Angebot gemacht.");
	        if(GetDistanceBetweenPlayersEx(playerid, GetPVarInt(playerid,"HatDrogenAngebotPID")) > 5.0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Dein Dealer ist nicht nahe genug.");
			if(IsPlayerInAnyVehicle(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Steige zuerst aus deinem Fahrzeug aus.");
			if(IsPlayerInAnyVehicle(GetPVarInt(playerid,"HatDrogenAngebotPID")))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Der Spieler sitzt in einem Fahrzeug.");
			new pID = GetPVarInt(playerid,"HatDrogenAngebotPID");
			new Anzahl = GetPVarInt(playerid,"HatDrogenAngebotAnzahl");
            SetPVarInt(playerid,"NoPAYBACK",1);
			GivePlayerMoneyEx(playerid,-GetPVarInt(playerid,"HatDrogenAngebot"));
			if(GetPVarInt(playerid,"HatDrogenAngebotPrivat") > 0)
			{
				GivePlayerMoneyEx(pID,GetPVarInt(playerid,"HatDrogenAngebot"));
			}
			else
			{
				FrakInfo[SpielerInfo[pID][sFraktion]][fiFrakKasse] += GetPVarInt(playerid,"HatDrogenAngebot");
				format(string,sizeof(string),"[Drogendeal]: Das Mitglied %s hat %dg Drogen für $%d vertickt.",SpielerInfo[pID][sName],Anzahl,GetPVarInt(playerid,"HatDrogenAngebot"));
				foreach(new i : Player)
				{
				    if(SpielerInfo[i][sFraktion] == SpielerInfo[pID][sFraktion])
				    {
				        SendClientMessage(i,COLOR_GANGFIGHT,string);
				    }
				}
			}
			DeletePVar(playerid,"HatDrogenAngebotPrivat");
			ApplyAnimation(playerid,"DEALER","DRUGS_BUY", 4.0, false, false, false, false, 0);
			ApplyAnimation(playerid,"DEALER","DRUGS_BUY", 4.0, false, false, false, false, 0);
			ApplyAnimation(pID,"DEALER","DRUGS_BUY", 4.0, false, false, false, false, 0);
			ApplyAnimation(pID,"DEALER","DRUGS_BUY", 4.0, false, false, false, false, 0);
			SpielerInfo[playerid][sDrogen] += Anzahl;
			SpielerInfo[pID][sDrogen] -= Anzahl;
			format(string,sizeof(string),"* %s und %s führen einen illegalen Drogenhandel durch.",SpielerInfo[pID][sName],SpielerInfo[playerid][sName]);
			ProxDetector(12, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			DeletePVar(playerid,"HatDrogenAngebotPID");
			DeletePVar(playerid,"HatDrogenAngebot");
			if(GetPVarInt(playerid,"MissionActive") == 3)
			{
			    DeletePVar(playerid,"MissionActive");
			    ShowAchievement(playerid,"~g~Mission 3","Belohnung: ~n~~g~100 EXP!");
                SendClientMessage(playerid,COLOR_LIGHTGREEN,"[Mission]: Du hast die Mission abgeschlossen! +100 EXP!");
   				GivePlayerEXP(playerid,100);
   				SpielerInfo[playerid][sMissionSolved][3] = 1;
			}
	        return 1;
	    }
		else if(strcmp(Auswahl, "Race", true, strlen(Auswahl)) == 0)
		{
			if(GetPVarInt(playerid,"RaceOffer") == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Niemand hat dich zum Rennen eingeladen.");

			new pID = GetPVarInt(playerid, "RacePlayer");
			if(!IsPlayerConnected(pID))return SendClientMessage(playerid, COLOR_GREY,"Spieler nicht eingeloggt.");
			if(GetDistanceBetweenPlayersEx(playerid,pID) > 5.0)return SendClientMessage(playerid, COLOR_GREY,"Der angegebene Spieler ist nicht in deiner N?he!");
			format(string,sizeof(string),"Du hast die Einladung von %s (ID:%i) zu einem Rennen angenommen.",GetName(pID),pID);
			SendClientMessage(playerid, COLOR_YELLOW,string);
			format(string,sizeof(string),"%s hat deine von dir aus gestellte Einladung zu einem Rennen angenommen.",GetName(playerid));
			SendClientMessage(pID,COLOR_YELLOW,string);
			DeletePVar(playerid, "RaceOffer");
			DeletePVar(playerid, "RacePlayer");
			InviteInRace[playerid] = 1;
			RaceCps[playerid] = 0;
			foreach(new i : Player)
			{
				if(IsPlayerConnected(i) && !IsPlayerNPC(i))
				{
					if(InviteInRace[i] == 1)
					{
						format(string,sizeof(string),"[RACE-INFO]: %s ist dem Rennen beigetreten.",GetName(playerid));
						SendClientMessage(i, COLOR_YELLOW, string);
					}
				}
			}
		}
	    else if(strcmp(Auswahl, "Dice", true, strlen(Auswahl)) == 0)
	    {
	        if(GetPVarInt(playerid,"DiceAngebot") == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Niemand möchte mit dir Würfeln.");
	        if(GetDistanceBetweenPlayersEx(playerid, GetPVarInt(playerid,"DiceAngebot")) > 5.0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Dein Gegner ist nicht mehr nah genug.");
			new pID = GetPVarInt(playerid,"DiceAngebot");
			SetPVarInt(playerid,"DiceGegner",pID);
            SetPVarInt(pID,"DiceGegner",playerid);
            format(string,128,"Du würfelst jetzt mit %s. Viel Glück!",SpielerInfo[pID][sName]);
            SendClientMessage(playerid,COLOR_SUPER,string);
            format(string,128,"%s würfelt jetzt mit dir. Viel Glück!",SpielerInfo[playerid][sName]);
            SendClientMessage(pID,COLOR_SUPER,string);

			ShowDice(playerid,pID);

			DeletePVar(playerid,"DiceAngebot");
			return 1;
	    }
	    else if(strcmp(Auswahl, "Bündniss", true, strlen(Auswahl)) == 0)
	    {
	        if(SpielerInfo[playerid][sFraktion] < 9)return NichtBerechtigt
	        if(GetPVarInt(playerid,"BNDAnfrage") < 1)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Keine Gang oder Mafia hat dir eine Bündniss-Anfrage geschickt.");

			new Angefragt = SpielerInfo[GetPVarInt(playerid,"BNDAnfrage")][sFraktion];
			new Eigene = SpielerInfo[playerid][sFraktion];

			FrakInfo[Angefragt][fiBnd][Eigene] = 1;
			FrakInfo[Eigene][fiBnd][Angefragt] = 1;

			new txtstring[128];
			format(txtstring,sizeof(txtstring),"[Bündniss]: {FFFFFF}Ihr seid jetzt mit der Fraktion '%s' verbündet!",FrakName(Angefragt));
			SendClientMessage(playerid,COLOR_GANGFIGHT,txtstring);
			format(txtstring,sizeof(txtstring),"[Bündniss]: {FFFFFF}Ihr seid jetzt mit der Fraktion '%s' verbündet!",FrakName(Eigene));
			SendClientMessage(GetPVarInt(playerid,"BNDAnfrage"),COLOR_GANGFIGHT,txtstring);

			DeletePVar(playerid,"BNDAnfrage");

			foreach(new i : Player)
			{
			    if(FrakInfo[SpielerInfo[i][sFraktion]][fiBnd][SpielerInfo[playerid][sFraktion]] > 0)//Verbündete
			    {
			     	SetPlayerMarkerForPlayer(i, playerid, 0x00C300FF);//Grün
			        SetPlayerMarkerForPlayer(playerid, i, 0x00C300FF);//Grün
			    }
			}
			return 1;
	    }
	}
	return 1;
}

//Admin Elektriker und LWK Fahrer :D

//Job Befehle

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	if(vehicleid == WaffenTransporter && SpielerInfo[playerid][sFraktion] < 9)
	{
	    TogglePlayerControllable(playerid, false);
		TogglePlayerControllable(playerid, true);
	}
	if(FahrzeugInfo[vehicleid][fNebenjob] != 0)
    {
		if(FahrzeugInfo[vehicleid][fNebenjob] == 1)//Trucker
	    {
	    	if(!ispassenger)
	        {
	            if(FahrzeugInfo[vehicleid][fNebenjob] != SpielerInfo[playerid][sNebenjob])
				{
					TogglePlayerControllable(playerid, false);
					TogglePlayerControllable(playerid, true);
					SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt keine Schlüssel für dieses Fahrzeug.");
					return 1;
				}
				if(GetPVarInt(playerid,"TruckerDuty") == 0)
				{
					TogglePlayerControllable(playerid, false);
					TogglePlayerControllable(playerid, true);
					SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bekommst die Schlüssel für die Fahrzeuge, wenn du in den Dienst gehst.");
					return 1;
				}
				if(FahrzeugInfo[vehicleid][fJobFahrer] != 0)
				{
				    if(FahrzeugInfo[vehicleid][fJobFahrer] != playerid)
				    {
		   				TogglePlayerControllable(playerid, false);
						TogglePlayerControllable(playerid, true);
						SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Das Fahrzeug ist bereits von einem Mitarbeiter belegt.");
						return 1;
				    }
				}
				SendClientMessage(playerid,COLOR_SUPER,"Benutze '/beliefern' um die Arbeit zu beginnen.");
	        }
	 	}
	 	else if(FahrzeugInfo[vehicleid][fNebenjob] == 2)//Pizzabote
	    {
	    	if(!ispassenger)
	        {
	            if(FahrzeugInfo[vehicleid][fNebenjob] != SpielerInfo[playerid][sNebenjob])
				{
					TogglePlayerControllable(playerid, false);
					TogglePlayerControllable(playerid, true);
					SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt keine Schlüssel für dieses Fahrzeug.");
					return 1;
				}
				if(GetPVarInt(playerid,"PizzaboteDuty") == 0)
				{
					TogglePlayerControllable(playerid, false);
					TogglePlayerControllable(playerid, true);
					SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bekommst die Schlüssel für die Fahrzeuge, wenn du in den Dienst gehst.");
					return 1;
				}
				if(FahrzeugInfo[vehicleid][fJobFahrer] == 0)
				{
					TogglePlayerControllable(playerid, false);
					TogglePlayerControllable(playerid, true);
					SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du kannst das Fahrzeug erst fahren, wenn im Kofferraum deine Pizzen liegen.");
					return 1;
				}
				if(FahrzeugInfo[vehicleid][fJobFahrer] != 0)
				{
				    if(FahrzeugInfo[vehicleid][fJobFahrer] != playerid)
				    {
		   				TogglePlayerControllable(playerid, false);
						TogglePlayerControllable(playerid, true);
						SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Das Fahrzeug ist bereits von einem Mitarbeiter belegt.");
						return 1;
				    }
				}
	        }
	 	}
		else if(FahrzeugInfo[vehicleid][fNebenjob] == 3)//Kehrmaschinenfahrer
	    {
	    	if(!ispassenger)
	        {
	            if(FahrzeugInfo[vehicleid][fNebenjob] != SpielerInfo[playerid][sNebenjob])
				{
					TogglePlayerControllable(playerid, false);
					TogglePlayerControllable(playerid, true);
					SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt keine Schlüssel für dieses Fahrzeug.");
					return 1;
				}
				if(GetPVarInt(playerid,"KehrmaschinenDuty") == 0)
				{
					TogglePlayerControllable(playerid, false);
					TogglePlayerControllable(playerid, true);
					SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bekommst die Schlüssel für die Fahrzeuge, wenn du in den Dienst gehst.");
					return 1;
				}
				if(FahrzeugInfo[vehicleid][fJobFahrer] != 0)
				{
				    if(FahrzeugInfo[vehicleid][fJobFahrer] != playerid)
				    {
		   				TogglePlayerControllable(playerid, false);
						TogglePlayerControllable(playerid, true);
						SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Das Fahrzeug ist bereits von einem Mitarbeiter belegt.");
						return 1;
				    }
				}
				if(GetPVarInt(playerid,"KfahrerArbeitet") == 0)return SendClientMessage(playerid,COLOR_SUPER,"Benutze '/startjob' um die Arbeit zu beginnen.");
	        }
	 	}
		else if(FahrzeugInfo[vehicleid][fNebenjob] == 4)//Pilot
	    {
	    	if(!ispassenger)
	        {
	            if(FahrzeugInfo[vehicleid][fNebenjob] != SpielerInfo[playerid][sNebenjob])
				{
					TogglePlayerControllable(playerid, false);
					TogglePlayerControllable(playerid, true);
					SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt keine Schlüssel für dieses Fahrzeug.");
					return 1;
				}
				if(GetPVarInt(playerid,"PilotDuty") == 0)
				{
					TogglePlayerControllable(playerid, false);
					TogglePlayerControllable(playerid, true);
					SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bekommst die Schlüssel für die Fahrzeuge, wenn du in den Dienst gehst.");
					return 1;
				}
				if(FahrzeugInfo[vehicleid][fJobFahrer] != 0)
				{
				    if(FahrzeugInfo[vehicleid][fJobFahrer] != playerid)
				    {
		   				TogglePlayerControllable(playerid, false);
						TogglePlayerControllable(playerid, true);
						SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Das Fahrzeug ist bereits von einem Mitarbeiter belegt.");
						return 1;
				    }
				}
				if(GetPVarInt(playerid,"PilotArbeitet") == 0)return SendClientMessage(playerid,COLOR_SUPER,"Benutze '/startjob' um die Arbeit zu beginnen.");
	        }
	 	}
		else if(FahrzeugInfo[vehicleid][fNebenjob] == 5)//Busfahrer
	    {
	    	if(!ispassenger)
	        {
	            if(FahrzeugInfo[vehicleid][fNebenjob] != SpielerInfo[playerid][sNebenjob])
				{
					TogglePlayerControllable(playerid, false);
					TogglePlayerControllable(playerid, true);
					SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt keine Schlüssel für dieses Fahrzeug.");
					return 1;
				}
				if(GetPVarInt(playerid,"BusfahrerDuty") == 0)
				{
					TogglePlayerControllable(playerid, false);
					TogglePlayerControllable(playerid, true);
					SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bekommst die Schlüssel für die Fahrzeuge, wenn du in den Dienst gehst.");
					return 1;
				}
				if(FahrzeugInfo[vehicleid][fJobFahrer] != 0)
				{
				    if(FahrzeugInfo[vehicleid][fJobFahrer] != playerid)
				    {
		   				TogglePlayerControllable(playerid, false);
						TogglePlayerControllable(playerid, true);
						SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Das Fahrzeug ist bereits von einem Mitarbeiter belegt.");
						return 1;
				    }
				}
				if(FahrzeugInfo[vehicleid][fJobEXP] > SpielerInfo[playerid][sJobEXP][4])
				{
					TogglePlayerControllable(playerid, false);
					TogglePlayerControllable(playerid, true);
					SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht die nötige Erfahrung, um den Bus fahren zu können.");
					return 1;
				}
				if(GetPVarInt(playerid,"BusfahrerArbeitet") == 0)return SendClientMessage(playerid,COLOR_SUPER,"Benutze '/startjob' um die Arbeit zu beginnen.");
	        }
	 	}
		else if(FahrzeugInfo[vehicleid][fNebenjob] == 6)//Müllmann
	    {
	    	if(!ispassenger)
	        {
	            if(FahrzeugInfo[vehicleid][fNebenjob] != SpielerInfo[playerid][sNebenjob])
				{
					TogglePlayerControllable(playerid, false);
					TogglePlayerControllable(playerid, true);
					SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt keine Schlüssel für dieses Fahrzeug.");
					return 1;
				}
				if(GetPVarInt(playerid,"MüllmannDuty") == 0)
				{
					TogglePlayerControllable(playerid, false);
					TogglePlayerControllable(playerid, true);
					SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bekommst die Schlüssel für die Fahrzeuge, wenn du in den Dienst gehst.");
					return 1;
				}
				if(FahrzeugInfo[vehicleid][fJobFahrer] != 0)
				{
				    if(FahrzeugInfo[vehicleid][fJobFahrer] != playerid)
				    {
		   				TogglePlayerControllable(playerid, false);
						TogglePlayerControllable(playerid, true);
						SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Das Fahrzeug ist bereits von einem Mitarbeiter belegt.");
						return 1;
				    }
				}
				if(GetPVarInt(playerid,"MüllBeutelHand") == 1)
				{
					TogglePlayerControllable(playerid, false);
					TogglePlayerControllable(playerid, true);
					SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Bring den Müllbeutel erst zum Müllwagen.");
					return 1;
				}
				if(GetPVarInt(playerid,"MüllmannArbeitet") == 0)return SendClientMessage(playerid,COLOR_SUPER,"Benutze '/startjob' um die Arbeit zu beginnen.");
	        }
	 	}
	 	else if(FahrzeugInfo[vehicleid][fNebenjob] == 7)//Landwirt
	    {
	    	if(!ispassenger)
	        {
	            if(FahrzeugInfo[vehicleid][fNebenjob] != SpielerInfo[playerid][sNebenjob])
				{
					TogglePlayerControllable(playerid, false);
					TogglePlayerControllable(playerid, true);
					SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt keine Schlüssel für dieses Fahrzeug.");
					return 1;
				}
				if(GetPVarInt(playerid,"LandwirtDuty") == 0)
				{
					TogglePlayerControllable(playerid, false);
					TogglePlayerControllable(playerid, true);
					SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bekommst die Schlüssel für die Fahrzeuge, wenn du in den Dienst gehst.");
					return 1;
				}
				if(FahrzeugInfo[vehicleid][fJobFahrer] != 0)
				{
				    if(FahrzeugInfo[vehicleid][fJobFahrer] != playerid)
				    {
		   				TogglePlayerControllable(playerid, false);
						TogglePlayerControllable(playerid, true);
						SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Das Fahrzeug ist bereits von einem Mitarbeiter belegt.");
						return 1;
				    }
				}
				if(GetPVarInt(playerid,"Landwirt2Time") == 1 && GetVehicleModel(vehicleid) == 532 && GetPVarInt(playerid,"LandwirtNotAgainMea") == 0)
			    {
					new string[128];
		      		FahrzeugInfo[vehicleid][fJobFahrer] = playerid;
		   			format(string, sizeof(string), "Landwirt\n{FE0000}%s{FFFFFF}", SpielerInfo[playerid][sName]);
					UpdateDynamic3DTextLabelText(FahrzeugInfo[vehicleid][fLabel], COLOR_WHITE, string);
				    SetPVarInt(playerid,"LandwirtAuto",vehicleid);
					for(new id=0; id<sizeof(LandwirtInfo); id++)
	 				{
	 				    if(LandwirtInfo[id][lStufe] == 1)
	 				    {
	 				        DestroyDynamicObject(LandwirtObjekt[playerid][id]);
	 				        LandwirtObjekt[playerid][id] = -1;
						}
						else if(LandwirtInfo[id][lStufe] == 2)
	  					{
	  					    LandwirtObjekt[playerid][id] = CreateDynamicObject(LandwirtInfo[id][lObjekt], LandwirtInfo[id][lPos_X],LandwirtInfo[id][lPos_Y],LandwirtInfo[id][lPos_Z], LandwirtInfo[id][lRPos_X],LandwirtInfo[id][lRPos_Y],LandwirtInfo[id][lRPos_Z], -1, -1, playerid, 200.0);
	  					}
					}
	    			SetPVarInt(playerid,"LandwirtCheckpoint",24);
					DeletePVar(playerid,"Landwirt2Time");
					DeletePVar(playerid,"LandwirtAutoHolen");
					SetPlayerCheckpointEx(playerid,LandwirtInfo[24][lPos_X],LandwirtInfo[24][lPos_Y],LandwirtInfo[24][lPos_Z],2.5);
					GameTextForPlayer(playerid,"~r~Maehe~w~ nun die ~r~Pflanzen~w~ mit dem ~r~Maehdrescher.",3000,4);
			        SendClientMessage(playerid,COLOR_SUPER,"Mähe nun die Pflanzen mit dem Mähdrescher.");
			    }
			    if(GetPVarInt(playerid,"LandwirtStufe") == 3 && GetVehicleModel(vehicleid) == 478)
			    {
	  				new string[128];
		      		FahrzeugInfo[vehicleid][fJobFahrer] = playerid;
		   			format(string, sizeof(string), "Landwirt\n{FE0000}%s{FFFFFF}", SpielerInfo[playerid][sName]);
					UpdateDynamic3DTextLabelText(FahrzeugInfo[vehicleid][fLabel], COLOR_WHITE, string);
				    SetPVarInt(playerid,"LandwirtAuto",vehicleid);
				    SetPVarInt(playerid,"LandwirtHatWalton",1);
				    DeletePVar(playerid,"LandwirtAutoHolen");
			        SendClientMessage(playerid,COLOR_SUPER,"Sammel die einzelnen Heuballen auf, und bringe sie anschließend zu deinem Walton.");
			        SendClientMessage(playerid,COLOR_INFO,"Die Heuballen kannst du mit der N Taste oder mit '/aufsammeln' aufheben.");
			        SendClientMessage(playerid,COLOR_INFO,"Benutze '/reinlegen' um die Heuballen auf den Walton zu legen.");
			    }
			    if(GetPVarInt(playerid,"LandwirtArbeitet") == 0)return SendClientMessage(playerid,COLOR_SUPER,"Benutze '/startjob' um die Arbeit zu beginnen.");
	        }
	 	}
	 	else if(FahrzeugInfo[vehicleid][fNebenjob] == 10)//Geldlieferant
	    {
	    	if(!ispassenger)
	        {
	            if(FahrzeugInfo[vehicleid][fNebenjob] != SpielerInfo[playerid][sNebenjob])
				{
					TogglePlayerControllable(playerid, false);
					TogglePlayerControllable(playerid, true);
					SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt keine Schlüssel für dieses Fahrzeug.");
					return 1;
				}
				if(GetPVarInt(playerid,"GeldlieferantDuty") == 0)
				{
					TogglePlayerControllable(playerid, false);
					TogglePlayerControllable(playerid, true);
					SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bekommst die Schlüssel für die Fahrzeuge, wenn du in den Dienst gehst.");
					return 1;
				}
				if(FahrzeugInfo[vehicleid][fJobFahrer] != 0)
				{
				    if(FahrzeugInfo[vehicleid][fJobFahrer] != playerid)
				    {
		   				TogglePlayerControllable(playerid, false);
						TogglePlayerControllable(playerid, true);
						SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Das Fahrzeug ist bereits von einem Mitarbeiter belegt.");
						return 1;
				    }
				}
				if(GetPVarInt(playerid,"GeldlieferantArbeitet") == 0)return SendClientMessage(playerid,COLOR_SUPER,"Benutze '/startjob' um die Arbeit zu beginnen.");
	        }
	 	}
	 	else if(FahrzeugInfo[vehicleid][fNebenjob] == 11)//Elektriker
	    {
	    	if(!ispassenger)
	        {
	            if(FahrzeugInfo[vehicleid][fNebenjob] != SpielerInfo[playerid][sNebenjob])
				{
					TogglePlayerControllable(playerid, false);
					TogglePlayerControllable(playerid, true);
					SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt keine Schlüssel für dieses Fahrzeug.");
					return 1;
				}
				if(GetPVarInt(playerid,"ElektrikerDuty") == 0)
				{
					TogglePlayerControllable(playerid, false);
					TogglePlayerControllable(playerid, true);
					SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bekommst die Schlüssel für die Fahrzeuge, wenn du in den Dienst gehst.");
					return 1;
				}
				if(FahrzeugInfo[vehicleid][fJobFahrer] != 0)
				{
				    if(FahrzeugInfo[vehicleid][fJobFahrer] != playerid)
				    {
		   				TogglePlayerControllable(playerid, false);
						TogglePlayerControllable(playerid, true);
						SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Das Fahrzeug ist bereits von einem Mitarbeiter belegt.");
						return 1;
				    }
				}
				if(GetPVarInt(playerid,"ElektrikerArbeitet") == 0)return SendClientMessage(playerid,COLOR_SUPER,"Benutze '/startjob' um die Arbeit zu beginnen.");
	        }
	 	}
	}
    else if(FahrzeugInfo[vehicleid][fBankrob] != 0)
    {
        if(SpielerInfo[playerid][sFraktion] != SpielerInfo[BankAttacker][sFraktion])
        {
    		TogglePlayerControllable(playerid, false);
			TogglePlayerControllable(playerid, true);
			SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt keine Schlüssel für dieses Fahrzeug.");
		}
		else
		{
			if(!ispassenger)
			{
  				if(BankRobGeldGesamt == 0)
			    {
			    	SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du kannst den Van erst abliefern, wenn sich min. 1 Geldsack im Van befindet.");
				}
				else
				{
				    PlayerTextDrawHide(playerid, BankraubTD[playerid][0]);
				    PlayerTextDrawHide(playerid, BankraubTD[playerid][1]);
				    PlayerTextDrawHide(playerid, BankraubTD[playerid][2]);
				    PlayerTextDrawHide(playerid, BankraubTD[playerid][3]);
				    PlayerTextDrawHide(playerid, BankraubTD[playerid][4]);
				    PlayerTextDrawHide(playerid, BankraubTD[playerid][5]);
				    KillTimer(PlayerBankRobTimer[playerid]);
					BankRobAmLaufen = 0;
					BankRobGeldSackSpawned[1] = 0;
					DeletePVar(playerid,"Bankrob");
		    		for(new sackid=0; sackid<sizeof(GeldSack); sackid++)
			 		{
			 		    DestroyDynamicObject(BankRobGeldSack[sackid]);
			 		    DestroyDynamic3DTextLabel(BankRobGeldSackLabel[sackid]);
			 		    BankRobGeldSackLabel[sackid] = Text3D:INVALID_3DTEXT_ID;
			 		}
				    SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Bringe den Van zum roten Marker, um den Bankraub abzuschließen.");
				    SetPlayerCheckpointEx(playerid,873.8837,-14.7565,62.9002,5.0);
				}
			}
		}
 	}
 	else if(FahrzeugInfo[vehicleid][fImportCar] != 0)
  	{
	   if(GetPlayerScore(playerid) < 2)
	   {
  			TogglePlayerControllable(playerid, false);
			TogglePlayerControllable(playerid, true);
			SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du kannst das Importfahrzeug erst ab Level 2 fahren.");
	   }
	   else
	   {
	    	new string[144];
			if(GetPVarInt(playerid,"Probefahrt") == 0)
			{
				if(!ispassenger)
				{
		   			format(string,sizeof(string),"~g~%d~w~ Minuten",ImportCarTime);
		 			if(ImportCarTime == 10){format(string,sizeof(string),"~y~%d~w~ Minuten",ImportCarTime);}
		 			if(ImportCarTime == 5){format(string,sizeof(string),"~r~%d~w~ Minuten",ImportCarTime);}

					PlayerTextDrawSetString(playerid,CountdownDraw[playerid][2],"ImportCar");
					PlayerTextDrawSetString(playerid,CountdownDraw[playerid][3],string);
					PlayerTextDrawShow(playerid,CountdownDraw[playerid][0]);
					PlayerTextDrawShow(playerid,CountdownDraw[playerid][1]);
					PlayerTextDrawShow(playerid,CountdownDraw[playerid][2]);
					PlayerTextDrawShow(playerid,CountdownDraw[playerid][3]);
				}
			}
			else
			{
				if(!ispassenger)
				{
					format(string,sizeof(string),"Die Mission läuft in {FF0000}%d{FFFFFF} Minuten ab.",ImportCarTime);
					SendClientMessage(playerid,COLOR_WHITE,string);
				}
			}
			if(!ispassenger)
			{
    			format(string,sizeof(string),"Das Importfahrzeug der Stunde wurde vom Spieler %s gestohlen.",SpielerInfo[playerid][sName]);
				SendClientMessageToAll(COLOR_ORANGE,string);
    			SendClientMessage(playerid,COLOR_INFO,"Liefere das Fahrzeug am Hafen ab, um deine Belohnung zu erhalten.");
		        SetPlayerCheckpointEx(playerid,2415.0757,-2468.6069,13.3313,3.5);
		        SetPVarInt(playerid,"ImImportCar",1);
			}
	   }
  	}
	else if(FahrzeugInfo[vehicleid][fKurrierCar] != 0)
  	{
  	    new string[144], kurrierid = GetPVarInt(playerid,"KurrierID");
   		kurrierid--;
    	if(FahrzeugInfo[vehicleid][fKurrierCar] != playerid)
		{
			TogglePlayerControllable(playerid, false);
			TogglePlayerControllable(playerid, true);
			SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt keine Schlüssel für dieses Fahrzeug.");
			return 1;
		}
		if(ispassenger)
		{
			TogglePlayerControllable(playerid, false);
			TogglePlayerControllable(playerid, true);
			SendClientMessage(playerid,COLOR_INFO,"Steige als Fahrer in das Kurrierfahrzeug, um die Mission zu starten.");
			return 1;
		}
		if(GetPVarInt(playerid,"Probefahrt") == 0)
		{
		    if(GetPVarInt(playerid,"FirstKurrierEnter") == 0)
		    {
				SendClientMessage(playerid,COLOR_ORANGE,"Bring das Kurrierfahrzeug schnell zum Abgabepunkt. (Roter Marker)");
		        SetPlayerCheckpointEx(playerid,1424.7201,929.2430,10.5348,3.5);
		        SetPVarInt(playerid,"ImKurrierCar",1);

	   			format(string,sizeof(string),"~g~%d~w~ Minuten",KurrierCarTime[kurrierid]);
	 			if(KurrierCarTime[kurrierid] == 10){format(string,sizeof(string),"~y~%d~w~ Minuten",KurrierCarTime[kurrierid]);}
	 			if(KurrierCarTime[kurrierid] == 5){format(string,sizeof(string),"~r~%d~w~ Minuten",KurrierCarTime[kurrierid]);}

				PlayerTextDrawSetString(playerid,CountdownDraw[playerid][2],"KurrierCar");
				PlayerTextDrawSetString(playerid,CountdownDraw[playerid][3],string);
				PlayerTextDrawShow(playerid,CountdownDraw[playerid][0]);
				PlayerTextDrawShow(playerid,CountdownDraw[playerid][1]);
				PlayerTextDrawShow(playerid,CountdownDraw[playerid][2]);
				PlayerTextDrawShow(playerid,CountdownDraw[playerid][3]);
			}
			else
			{
				format(string,sizeof(string),"~g~%d~w~ Minuten",KurrierCarTime[kurrierid]);
	 			if(KurrierCarTime[kurrierid] == 10){format(string,sizeof(string),"~y~%d~w~ Minuten",KurrierCarTime[kurrierid]);}
	 			if(KurrierCarTime[kurrierid] == 5){format(string,sizeof(string),"~r~%d~w~ Minuten",KurrierCarTime[kurrierid]);}

				PlayerTextDrawSetString(playerid,CountdownDraw[playerid][2],"KurrierCar");
				PlayerTextDrawSetString(playerid,CountdownDraw[playerid][3],string);
				PlayerTextDrawShow(playerid,CountdownDraw[playerid][0]);
				PlayerTextDrawShow(playerid,CountdownDraw[playerid][1]);
				PlayerTextDrawShow(playerid,CountdownDraw[playerid][2]);
				PlayerTextDrawShow(playerid,CountdownDraw[playerid][3]);
			}
		}
		else
		{
			format(string,sizeof(string),"Die Mission läuft in {FF0000}%d{FFFFFF} Minuten ab.",KurrierCarTime[kurrierid]);
			SendClientMessage(playerid,COLOR_WHITE,string);
	   }
  	}
	return 1;
}

public OnPlayerExitVehicle(playerid, vehicleid)
{
	AirTrafficking_OnPlayerExitVehicle(playerid);

	DeletePVar(playerid,"News_Live");
    SetPlayerDrunkLevel(playerid, 0);
	KillTimer(FahrenTimer[playerid]);
    if(GetPVarInt(playerid,"FSchein") != 0 && GetPVarInt(playerid,"NotKickFahrschulDesyncs") < 1 && GetPVarInt(playerid,"HatFahrschulCar") == 1)
    {
		if(schulung[playerid] != 0)
		{
			DisablePlayerCheckpoint(playerid);
			DeletePVar(playerid,"FahrschulStunde");
			DeletePVar(playerid,"FSchein");
			DeletePVar(playerid,"FahrschulCar");
			DeletePVar(playerid,"HatFahrschulCar");

			schulung[playerid] = 0;
			FahrschulCar[vehicleid] = 0;
			Fehlerpunkte[playerid] = 0;
			DestroyDynamic3DTextLabel(FahrzeugInfo[vehicleid][fLabel]);
			FahrzeugInfo[vehicleid][fLabel] = Text3D:INVALID_3DTEXT_ID;
			DeleteVehicle(vehicleid);
	        DisablePlayerCheckpoint(playerid);
			SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Die Fahrschulprüfung wurde abgebrochen, da du das Fahrezug verlassen hast.");
		}
    }
	if(IsAMotorrad(vehicleid))
	{
        if(SpielerInfo[playerid][sHelm] > 0)
		{
			RemovePlayerAttachedObject(playerid, ATTACH_INDEX_HELM);
		}
	}
	if(FahrzeugInfo[vehicleid][fFraktion] == 0 && FahrzeugInfo[vehicleid][fAutohaus] == 0 && FahrzeugInfo[vehicleid][fGruppe] == 0 && FahrzeugInfo[vehicleid][fBesitzerID] == 0)
	{
	    DOOR[vehicleid] = false;
	    GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(vehicleid,engine,lights,alarm,false,bonnet,boot,objective);
	}
	return 1;
}

public OnVehicleDamageStatusUpdate(vehicleid, playerid)
{
	if(vehicleid == WaffenTransporter || vehicleid == BankRobVan)
	{
	    new panelsXX, doorsXX, lightsXX, tiresXX;
		GetVehicleDamageStatus(vehicleid, VEHICLE_PANEL_STATUS:panelsXX, VEHICLE_DOOR_STATUS:doorsXX, VEHICLE_LIGHT_STATUS:lightsXX, VEHICLE_TYRE_STATUS:tiresXX);
		UpdateVehicleDamageStatus(vehicleid, VEHICLE_PANEL_STATUS:panelsXX, VEHICLE_DOOR_STATUS:doorsXX, VEHICLE_LIGHT_STATUS:lightsXX, VEHICLE_TYRE_STATUS:0);
	}
	return 1;
}

public OnUnoccupiedVehicleUpdate(vehicleid,playerid,passenger_seat,Float:new_x, Float:new_y, Float:new_z, Float:vel_x, Float:vel_y, Float:vel_z)
{
	for(new i=0;i<MAX_NAGELBAENDER;i++)
	{
	 	if(NagelBand[i][Erstellt] == true)
	    {
		  	if(IsVehicleInRangeOfPoint(vehicleid,2.0,NagelBand[i][oPosX],NagelBand[i][oPosY],NagelBand[i][oPosZ]))
		   	{
				UpdateVehicleDamageStatus(vehicleid,VEHICLE_PANEL_STATUS:0,VEHICLE_DOOR_STATUS:0,VEHICLE_LIGHT_STATUS:0,VEHICLE_TYRE_STATUS:ReifenPlatt(1,1,1,1));
			}
		}
	}
	return 1;
}

public OnPlayerStateChange(playerid, PLAYER_STATE:newstate, PLAYER_STATE:oldstate)
{
	//LumberjackSystem
	//Log_PlayerStateChange(playerid, newstate);
	//MiningJob
	//Minining_PlayerStateChange(playerid, newstate, oldstate);
	//Airtraffick
	AirTrafficking_OnPlayerStateChange(playerid, newstate);
	//DynamicRobbery
	DynamicRobberyStateChange(playerid, newstate);

	new tmpcar = GetPlayerVehicleID(playerid);
	SetPVarInt(playerid,"LastVehicleID",GetPlayerVehicleID(playerid));
	if(GetPVarInt(playerid,"SpecateVon") > 0){UpdateSpectateStatus(playerid, GetPVarInt(playerid,"SpecateVon"));}
	if(newstate == PLAYER_STATE_DRIVER || newstate == PLAYER_STATE_PASSENGER)
	{
	    if(DOOR[tmpcar] == true)
	    {
     		PlayerTextDrawShow(playerid, Tacho[playerid][12]);
	    }
    	if(newstate == PLAYER_STATE_PASSENGER)
		{
		    new PlayerWeapon[2];
		    GetPlayerWeaponData(playerid, WEAPON_SLOT:4, WEAPON:PlayerWeapon[0], PlayerWeapon[1]);
		    if(PlayerWeapon[0] != 0){SetPlayerArmedWeapon(playerid,WEAPON:PlayerWeapon[0]);}
		    else SetPlayerArmedWeapon(playerid,WEAPON:0);
		}
  		if(IsAFahrrad(tmpcar))
	    {
   			GetVehicleParamsEx(tmpcar, engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(tmpcar, true, lights, alarm, doors, bonnet, boot, objective);
	    }
    	else
		{
  			if(!IsAFahrrad(tmpcar))
		    {
				new carname[46],Float:vHealth;
				GetVehicleHealth(tmpcar, vHealth);
				PlayerTextDrawSetPreviewModel(playerid, Tacho[playerid][1], GetVehicleModel(tmpcar));
				PlayerTextDrawSetPreviewVehicleColours(playerid, Tacho[playerid][1], FahrzeugInfo[tmpcar][fColor][0], FahrzeugInfo[tmpcar][fColor][1]);
				format(carname,sizeof(carname),"%i Kilometer",FahrzeugInfo[tmpcar][fKilometer]);
				PlayerTextDrawSetString(playerid, Tacho[playerid][9], carname);
				format(carname,sizeof(carname),"%s %.2f/%dL",TankArtName(tmpcar),FahrzeugInfo[tmpcar][fTank],VehicleData[GetVehicleModel(tmpcar)-400][vehLiter]);
				PlayerTextDrawSetString(playerid, Tacho[playerid][3], carname);
				PlayerTextDrawShow(playerid, Tacho[playerid][0]);
				PlayerTextDrawShow(playerid, Tacho[playerid][1]);
				PlayerTextDrawShow(playerid, Tacho[playerid][2]);
				PlayerTextDrawShow(playerid, Tacho[playerid][3]);
				PlayerTextDrawShow(playerid, Tacho[playerid][4]);
				format(carname,sizeof(carname),"Schaden %.0f%",((1000 - vHealth) / 10));
				PlayerTextDrawSetString(playerid, Tacho[playerid][5], carname);
				PlayerTextDrawShow(playerid, Tacho[playerid][5]);
				PlayerTextDrawShow(playerid, Tacho[playerid][6]);
				PlayerTextDrawShow(playerid, Tacho[playerid][7]);
				PlayerTextDrawShow(playerid, Tacho[playerid][8]);
				PlayerTextDrawShow(playerid, Tacho[playerid][9]);
				if(Motor[tmpcar] == true){PlayerTextDrawShow(playerid, Tacho[playerid][10]);}
				if(Licht[tmpcar] == true){PlayerTextDrawShow(playerid, Tacho[playerid][11]);}
				KillTimer(TachoTimer[playerid]);
				TachoTimer[playerid] = SetTimerEx("SpeedoMeter",MAX_TACHOTIME,true,"i",playerid);
				if(IsAMotorrad(tmpcar))
            	{
            		if(GetPVarInt(playerid,"FahrschulStunde") != 1)
					{
						if(GetVehicleModel(tmpcar) == 462)return 1;
	                	if(SpielerInfo[playerid][sHelm] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Pass auf, dass die Polizei dich nicht erwischt. Besorge dir lieber einen Helm im OBI Baumarkt.");
					}
					SetPlayerAttachedObject(playerid,ATTACH_INDEX_HELM,SpielerInfo[playerid][sHelm], 2, 0.07, 0.017, 0, 88, 75, 0);
				}
			}
		}
		if(FahrzeugInfo[tmpcar][fFahrschule] == 1 && GetPVarInt(playerid, "HatFahrschulCar") < 1)
		{
	        if(GetPVarInt(playerid,"FahrschulStunde") == 1)
			{
			    if(IsAMotorrad(tmpcar))
			    {
			        if(GetPVarInt(playerid,"FSchein") == 4 && GetPVarInt(playerid,"FahrschulCar") == 0 && GetPVarInt(playerid,"NotKickFahrschulDesyncs") < 1)
			        {
						CreateFCar(playerid,4);
						schulung[playerid] = 4;
						SetPlayerCheckpointEx(playerid,825.0745,-1319.6958,12.9720,3.0);
						SendClientMessage(playerid, COLOR_YELLOW, "Der erste Checkpoint wurde gesetzt. Fahr Vorsichtig und halte dich an die Geschwindigkeitsbegrenzung.");
						SendClientMessage(playerid,COLOR_INFO,"* Du kannst den Motor mit '/motor' und das Licht mit '/licht' an/ausmachen.");
						return 1;
			        }
			        else
			        {
					 	RemovePlayerFromVehicle(playerid);
			    		SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du nimmst an keiner Fahrstunde für diese Fahrzeugklasse teil.");
			    		return 1;
				    }
			    }
			    else if(IsAFlugzeug(tmpcar))
			    {
			        if(GetPVarInt(playerid,"FSchein") == 2 && GetPVarInt(playerid,"FahrschulCar") == 0 && GetPVarInt(playerid,"NotKickFahrschulDesyncs") < 1)
			        {
 						CreateFCar(playerid,2);
 						schulung[playerid] = 2;
						SetPlayerRaceCheckpoint(playerid,CP_TYPE:3,1055.9390,-1352.7063,63.7135,0,0,0,5.0);
						SendClientMessage(playerid, COLOR_YELLOW, "Der erste Checkpoint wurde gesetzt. Fliege Vorsichtig und nicht zu tief.");
						SendClientMessage(playerid,COLOR_INFO,"* Du kannst den Motor mit '/motor' anmachen.");
						return 1;
			        }
			        else
			        {
			    		RemovePlayerFromVehicle(playerid);
			    		SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du nimmst an keiner Fahrstunde für diese Fahrzeugklasse teil.");
			    		return 1;
				    }
			    }
			    else if(IsALKW(tmpcar))
				{
				    if(GetPVarInt(playerid,"FSchein") == 3 && GetPVarInt(playerid,"FahrschulCar") == 0 && GetPVarInt(playerid,"NotKickFahrschulDesyncs") < 1)
				    {
						CreateFCar(playerid,3);
						schulung[playerid] = 3;
						SetPlayerCheckpointEx(playerid,1055.9783,-1371.6139,12.9566,3.0);
						SendClientMessage(playerid,COLOR_INFO,"* Du kannst den Motor mit '/motor' und das Licht mit '/licht' an/ausmachen.");
						return 1;
			        }
			        else
			        {
			    		RemovePlayerFromVehicle(playerid);
			    		SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du nimmst an keiner Fahrstunde für diese Fahrzeugklasse teil.");
			    		return 1;
				    }
				}
    			else if(IsABoot(tmpcar))
				{
				    if(GetPVarInt(playerid,"FSchein") != 5 && GetPVarInt(playerid,"NotKickFahrschulDesyncs") < 1)
				    {
			    		RemovePlayerFromVehicle(playerid);
			    		SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du nimmst an keiner Fahrstunde für diese Fahrzeugklasse teil.");
			    		return 1;
				    }
				    return 1;
				}
				else
				{
				    if(GetPVarInt(playerid,"FSchein") == 1 && GetPVarInt(playerid,"FahrschulCar") == 0 && GetPVarInt(playerid,"NotKickFahrschulDesyncs") < 1 && GetPVarInt(playerid, "HatFahrschulCar") < 1)
				    {
						CreateFCar(playerid,1);
						schulung[playerid] = 1;
						SetPlayerCheckpointEx(playerid,1056.1189,-1349.9054,13.1140,3.0);
						SendClientMessage(playerid,COLOR_INFO,"* Du kannst den Motor mit '/motor' und das Licht mit '/licht' an/ausmachen.");
						return 1;
			        }
			        else
			        {
			    		RemovePlayerFromVehicle(playerid);
			    		SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du nimmst an keiner Fahrstunde für diese Fahrzeugklasse teil.");
			    		return 1;
				    }
				}
			}
			else
			{
			    RemovePlayerFromVehicle(playerid);
			    SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist in keiner Fahrstunde.");
			}
		}
		if(Radio[tmpcar] == true)
		{
			if(CarRadio[tmpcar] > 0 && CarRadio[tmpcar] < MAX_RADIOS + 1)
			{
				LoadVehicleRadioById(playerid, CarRadio[tmpcar]);
			}
			else if(CarRadio[tmpcar] == 999)
			{
				PlayAudioStreamForPlayer(playerid, CarRadioUrl[tmpcar]);
				GameTextForPlayer(playerid, "~g~CustomRadio", 3000, 3);
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
	{
	    SetPlayerArmedWeapon(playerid,WEAPON:0);
		if(tmpcar == WaffenTransporter && WaffenTransporterMats < 1 && SpielerInfo[playerid][sFraktion] > 8 && WaffenTransporterFrakID != SpielerInfo[playerid][sFraktion])
		{
		    if(SpielerInfo[playerid][sFraktion] < 9 || SpielerInfo[playerid][sFraktion] == 19)
		    {
		        RemovePlayerFromVehicle(playerid);
		        SendClientMessage(playerid,COLOR_RED,"[Info]: Dieser Transporter ist nur für Gangs und Mafian.");
		    }
		    else
		    {
			    WaffenTransporterFrakID = SpielerInfo[playerid][sFraktion];
			    KillTimer(WaffenTransportTimer);
			    SetPlayerCheckpointEx(playerid,1083.0126,-1226.7549,15.8203,4.0);
			    new string[128];
			    format(string,sizeof(string),"[MATS-TRANSPORT]: Die Fraktion %s hat gerade einen Waffentransport gestartet!",FrakName(SpielerInfo[playerid][sFraktion]));
				foreach(new i : Player)
				{
					if(SpielerInfo[i][sFraktion] > 8)
					{
					    SendClientMessage(i,COLOR_GANGFIGHT,string);
					    SendClientMessage(i,COLOR_GANGFIGHT,"[MATS-TRANSPORT]: Schaltet Sie aus und krallt euch den Waffentransporter!");
					}
				}
				SendClientMessage(playerid,COLOR_GANGFIGHT,"[Info]: {FFFFFF}Begebe dich zum '/mats'-Punkt um Materialien aufzuladen.");
			}
		}
		if(tmpcar == WaffenTransporter && WaffenTransporterMats == 3000 && WaffenTransporterFrakID != SpielerInfo[playerid][sFraktion] && SpielerInfo[playerid][sFraktion] > 8)
		{
		    WaffenTransporterFrakID = SpielerInfo[playerid][sFraktion];
		    new string[128];
		    format(string,sizeof(string),"[MATS-TRANSPORT]: Die Fraktion %s hat gerade den Transporter für die Materialien übernommen!",FrakName(SpielerInfo[playerid][sFraktion]));
			foreach(new i : Player)
			{
				if(SpielerInfo[i][sFraktion] > 8)
				{
				    SendClientMessage(playerid,COLOR_GANGFIGHT,string);
				    SendClientMessage(playerid,COLOR_GANGFIGHT,"[MATS-TRANSPORT]: Schaltet Sie aus und krallt euch den Waffentransporter!");
				}
			}
		}
	    SetPlayerArmedWeapon(playerid,WEAPON:0);
	    format(FahrzeugInfo[tmpcar][fLastDriver], MAX_PLAYER_NAME, SpielerInfo[playerid][sName]);
	    SetPlayerDrunkLevel(playerid, 0);
	    KillTimer(FahrenTimer[playerid]);
		if(IsALKW(tmpcar))
	    {
	        if(SpielerInfo[playerid][sTruckLic] == 0 && GetPVarInt(playerid,"FahrschulStunde") != 1)
	        {
				SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt keinen Lastkraftwagenschein.");
	        	SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Wenn du von der Polizei kontrolliert wirst wird das Konsequenzen haben.");
                SetPlayerDrunkLevel(playerid, 8000);
                KillTimer(FahrenTimer[playerid]);
                FahrenTimer[playerid] = SetTimerEx("OhneSchein",4000,true,"i",playerid);
			}
	    }
 		else if(IsAFlugzeug(tmpcar))
	    {
	        if(SpielerInfo[playerid][sFlugLic] == 0 && GetPVarInt(playerid,"FahrschulStunde") != 1)
	        {
				SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt keinen Flugschein.");
	        	SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Wenn du von der Polizei kontrolliert wirst, wird das Konsequenzen haben.");
                SetPlayerDrunkLevel(playerid, 8000);
                KillTimer(FahrenTimer[playerid]);
                FahrenTimer[playerid] = SetTimerEx("OhneSchein",4000,true,"i",playerid);
			}
		}
  		else if(IsAMotorrad(tmpcar))
	    {
	        if(SpielerInfo[playerid][sBikeLic] == 0 && GetPVarInt(playerid,"FahrschulStunde") != 1)
	        {
	            if(GetVehicleModel(tmpcar) != 462)
				{
					SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt keinen Motorradschein.");
		        	SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Wenn du von der Polizei kontrolliert wirst, wird das Konsequenzen haben.");
					SetPlayerDrunkLevel(playerid, 8000);
	                KillTimer(FahrenTimer[playerid]);
	                FahrenTimer[playerid] = SetTimerEx("OhneSchein",4000,true,"i",playerid);
				}
			}
		}
	    else if(!IsAFahrrad(tmpcar) || IsALKW(tmpcar) || IsAFlugzeug(tmpcar) || IsAMotorrad(tmpcar))
	    {
	        if(SpielerInfo[playerid][sCarLic] == 0 && GetPVarInt(playerid,"FahrschulStunde") != 1)
	        {
				SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt keinen Führerschein.");
	        	SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Wenn du von der Polizei kontrolliert wirst, wird das Konsequenzen haben.");
                SetPlayerDrunkLevel(playerid, 8000);
                KillTimer(FahrenTimer[playerid]);
                FahrenTimer[playerid] = SetTimerEx("OhneSchein",4000,true,"i",playerid);
			}
		}
		else if(FahrzeugInfo[tmpcar][fNebenjob] == 1)
  		{
            if(SpielerInfo[playerid][sNebenjob] == 1)
            {
     			PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
			    SendClientMessage(playerid,COLOR_SUPER,"Benutze: '/beliefern' um ein Geschäft zu beliefern. Weitere Befehle unter '/help'.");
			}
		}
		else if(FahrzeugInfo[tmpcar][fNebenjob] == 2)
  		{
            if(SpielerInfo[playerid][sNebenjob] == 2)
            {
     			PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
			    SendClientMessage(playerid,COLOR_SUPER,"Benutze: '/ausliefern' um die Pizzen auszuliefern. Weitere Befehle unter '/help'.");
			}
		}
		else if(FahrzeugInfo[tmpcar][fNebenjob] == 3)
  		{
            if(SpielerInfo[playerid][sNebenjob] == 3)
            {
     			PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
			    SendClientMessage(playerid,COLOR_SUPER,"Benutze: '/startjob' um die Tour zu starten.");
			}
		}
		else if(FahrzeugInfo[tmpcar][fNebenjob] == 4)
  		{
            if(SpielerInfo[playerid][sNebenjob] == 4)
            {
     			PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
			    SendClientMessage(playerid,COLOR_SUPER,"Benutze: '/startjob' um die Tour zu starten.");
			}
		}
		else if(FahrzeugInfo[tmpcar][fNebenjob] == 5)
  		{
            if(SpielerInfo[playerid][sNebenjob] == 5)
            {
     			PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
			    SendClientMessage(playerid,COLOR_SUPER,"Benutze: '/startjob' um die Tour zu starten.");
			}
		}
		else if(FahrzeugInfo[tmpcar][fNebenjob] == 6)
  		{
            if(SpielerInfo[playerid][sNebenjob] == 6)
            {
     			PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
			    SendClientMessage(playerid,COLOR_SUPER,"Benutze: '/startjob' um die Tour zu starten.");
			}
		}
 		else if(FahrzeugInfo[tmpcar][fNebenjob] == 7)
  		{
            if(SpielerInfo[playerid][sNebenjob] == 7)
            {
                if(GetPVarInt(playerid,"Landwirt2Time") == 0)
                {
	     			PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
				    SendClientMessage(playerid,COLOR_SUPER,"Benutze: '/startjob' um die Tour zu starten.");
			    }
			}
		}
		else if(FahrzeugInfo[tmpcar][fNebenjob] == 16)
		{
		    if(SpielerInfo[playerid][sNebenjob] == 16)
		    {
		        PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
			    SendClientMessage(playerid,COLOR_SUPER,"Benutze: '/startjob' um die Tour zu starten.");
		    }
		}
	}
	if(newstate == PLAYER_STATE_ONFOOT)
	{
	    if(GetVehicleModel(GetPVarInt(playerid,"LastVehicleID")) == 537){SetCameraBehindPlayer(playerid);}
	    if(GetPVarInt(playerid,"Dashcam") > 0)
	    {
			KillTimer(DashcamTimer[playerid]);
	        PlayerTextDrawHide(playerid, DashcamTD[playerid][0]);
			PlayerTextDrawHide(playerid, DashcamTD[playerid][1]);
			PlayerTextDrawHide(playerid, DashcamTD[playerid][2]);
			PlayerTextDrawHide(playerid, DashcamTD[playerid][3]);
			PlayerTextDrawHide(playerid, DashcamTD[playerid][4]);
			DeletePVar(playerid,"Dashcam");
			SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Dashcam deaktiviert.");
	    }
		if(GetPVarInt(playerid,"ImImportCar") == 1)
		{
			PlayerTextDrawHide(playerid,CountdownDraw[playerid][0]);
			PlayerTextDrawHide(playerid,CountdownDraw[playerid][1]);
			PlayerTextDrawHide(playerid,CountdownDraw[playerid][2]);
			PlayerTextDrawHide(playerid,CountdownDraw[playerid][3]);
		    DisablePlayerCheckpoint(playerid);
		    DeletePVar(playerid,"ImImportCar");
		}
		if(SpielerInfo[playerid][sHelm] != 0)
		{
		    RemovePlayerAttachedObject(playerid,ATTACH_INDEX_HELM);
		}
	    StopAudioStreamForPlayer(playerid);
 		SetPlayerDrunkLevel(playerid, 0);
		KillTimer(FahrenTimer[playerid]);
		CarRadio[tmpcar] = 0;
		format(CarRadioUrl[tmpcar], 128, "none");
		Radio[tmpcar] = false;
	    PlayerTextDrawHide(playerid, Tacho[playerid][0]);
		PlayerTextDrawHide(playerid, Tacho[playerid][1]);
		PlayerTextDrawHide(playerid, Tacho[playerid][2]);
		PlayerTextDrawHide(playerid, Tacho[playerid][3]);
		PlayerTextDrawHide(playerid, Tacho[playerid][4]);
		PlayerTextDrawHide(playerid, Tacho[playerid][5]);
		PlayerTextDrawHide(playerid, Tacho[playerid][6]);
		PlayerTextDrawHide(playerid, Tacho[playerid][7]);
		PlayerTextDrawHide(playerid, Tacho[playerid][8]);
		PlayerTextDrawHide(playerid, Tacho[playerid][9]);
		PlayerTextDrawHide(playerid, Tacho[playerid][10]);
		PlayerTextDrawHide(playerid, Tacho[playerid][11]);
		PlayerTextDrawHide(playerid, Tacho[playerid][12]);
	    KillTimer(TachoTimer[playerid]);
	}
	return 1;
}

public OnPlayerPickUpPickup(playerid, pickupid)
{
    new str[900], string[7][164];
	if(pickupid == FallschirmPickup)//Fallschirm
 	{
 	    GivePlayerWeapon(playerid,WEAPON:46,1);
  		SendClientMessage(playerid, COLOR_WHITE, "Du hast einen Fallschirm erhalten. Viel Spaß & Glück beim springen.");
 	}
    else if(pickupid == ImportCarPickup)
    {
        if(GetPlayerScore(playerid) < 2)return SendClientMessage(playerid, COLOR_RED, "Für diese Spezial Mission benötigst min. das zweite Level.");
        SetPVarInt(playerid,"Mission",1);
		format(string[0],164,"{FFFFFF}Spezial Mission: {FB944F}Importfahrzeug der Stunde");
		format(string[1],164,"{FFFFFF}Begib dich zum Flugzeug Friedhof und suche das Importfahrzeug der Stunde. (Random zwischen den Flugzeugen)");
		format(string[2],164,"{FFFFFF}Wenn du das Flugzeug gefunden hast, steige in das Flugzeug ein und bringe es zum Abgabepunkt beim LS Hafen.");
		format(string[3],164,"{FFFFFF}--- {FF0000}BEACHTE {FFFFFF}--- {FFFFFF}Sobald du in das Fahrzeug eingestiegen bist, werden alle Spieler, sowie die");
		format(string[4],164,"{FFFFFF}Polizei benachrichtigt, dass du das Importfahrzeug der Stunde gestohlen hast. Du erhälst für das Stehlen des");
		format(string[5],164,"{FFFFFF}Fahrzeuges 2 Wanteds. Die Mission bedeutet also Geschick und Schnelligkeit.");
		format(string[6],164,"{FFFFFF}Verfügbar ab Rang: 2 | Belohnung: 6000$ - 8000$");
		format(str,sizeof str,"%s\n\n%s\n%s\n%s\n%s\n%s\n%s",string[0],string[1],string[2],string[3],string[4],string[5],string[6]);
        ShowPlayerDialog(playerid,DIALOG_MISSION,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Spezial Mission",str,"Annehmen","Ablehnen");
    }
    else if(pickupid == KurrierPickup[0] || pickupid == KurrierPickup[1] || pickupid == KurrierPickup[2])
    {
        if(GetPlayerScore(playerid) < 2)return SendClientMessage(playerid, COLOR_RED, "Für diese Spezial Mission benötigst min. das zweite Level.");
        if(SpielerInfo[playerid][sKurrier] == 1)return SendClientMessage(playerid, COLOR_RED, "Du kannst die Mission erst wieder nach deinem PayDay ausführen.");
        SetPVarInt(playerid,"Mission",2);
        format(string[0],164,"{FFFFFF}Spezial Mission: {FB944F}Kurrierdienst");
        if(pickupid == KurrierPickup[0])
		{
			SetPVarInt(playerid,"KurrierID",1);
			format(string[1],164,"{FFFFFF}Begib nach Dillimore und steige dort in das Kurrierfahrzeug ein.");
			format(string[2],164,"{FFFFFF}Anschließend musst du die Lieferung nach Las Venturas fahren.");
			format(string[3],164,"{FFFFFF}--- {FF0000}BEACHTE {FFFFFF}--- {FFFFFF}Du hast für die Abgabe der Lieferung nur 2 Minuten Zeit.");
		}
        else if(pickupid == KurrierPickup[1])
		{
			SetPVarInt(playerid,"KurrierID",2);
			format(string[1],164,"{FFFFFF}Begib nach Fort Carson und steige dort in das Kurrierfahrzeug ein.");
			format(string[2],164,"{FFFFFF}Anschließend musst du die Lieferung nach Las Venturas fahren.");
			format(string[3],164,"{FFFFFF}--- {FF0000}BEACHTE {FFFFFF}--- {FFFFFF}Du hast für die Abgabe der Lieferung nur 2 Minuten Zeit.");
		}
        else if(pickupid == KurrierPickup[2])
		{
			SetPVarInt(playerid,"KurrierID",3);
			format(string[1],164,"{FFFFFF}Begib nach oben zum Parkhaus und steige dort in das Kurrierfahrzeug ein.");
			format(string[2],164,"{FFFFFF}Anschließend musst du die Lieferung nach Los Santos fahren.");
			format(string[3],164,"{FFFFFF}--- {FF0000}BEACHTE {FFFFFF}--- {FFFFFF}Du hast für die Abgabe der Lieferung nur 4 Minuten Zeit.");
		}
		format(string[4],164,"{FFFFFF}Die Mission bedeutet also Geschick und Schnelligkeit.");
		format(string[5],164,"{FFFFFF}Verfügbar ab Rang: 2 | Belohnung: 3000$");
		format(str,sizeof str,"%s\n\n%s\n%s\n%s\n%s\n%s",string[0],string[1],string[2],string[3],string[4],string[5]);
        ShowPlayerDialog(playerid,DIALOG_MISSION,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Spezial Mission",str,"Annehmen","Ablehnen");
    }
	Evidence_OnPlayerPickUpPickup(playerid, pickupid);
	return 1;
}


public OnPlayerEnterCheckpoint(playerid)
{
	DisablePlayerCheckpoint(playerid);
	new vehicleid = GetPlayerVehicleID(playerid);
	if(IsPlayerInRangeOfPoint(playerid,7.0,1394.7555,2632.2500,12.3495))
	{
	    SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Willkommen am Las Venturas Bahnhof.");
	    SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Bitte benutze '/gueter' um deinen Zug zu entladen.");
	    SetPlayerCheckpointEx(playerid,-1944.3750,102.6988,27.2245,7.0);
	}
	if(IsPlayerInRangeOfPoint(playerid,7.0,-1944.3750,102.6988,27.2245))
	{
	    SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Willkommen am San Fierro Bahnhof.");
	    SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Bitte benutze '/gueter' um deinen Zug zu entladen.");
	    SetPlayerCheckpointEx(playerid,1777.6743,-1953.8064,15.0995,7.0);
	}
	if(IsPlayerInRangeOfPoint(playerid,7.0,1777.6743,-1953.8064,15.0995))
	{
	    SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Willkommen am Los Santos Bahnhof.");
	    SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Bitte benutze '/gueter' um deine Zug-Tour erfolgreich zu beenden.");
	}
	new getNearestKiosk = AmNewsKiosk(playerid);
	if(getNearestKiosk != -1 && GetPVarInt(playerid, "NewsAuslieferung") == 1)
	{
	    new npaperplace = GetPVarInt(playerid, "NewsPaperPlace");
        if(getNearestKiosk == npaperplace)
        {
		    if(NewsPaperKiosk[npaperplace][SlotUsed] == 1)
		    {
	     		NewsPaperKiosk[npaperplace][ZeitungAmount] += GetPVarInt(playerid, "NewsPaperAmount");
	     		new string[144], _earncash = 0, _earnexp = 0;
	     		_earncash = ((GetPVarInt(playerid, "NewsPaperAmount")*ServerLager[it_newspaper_price])/20);
	     		_earnexp = ((GetPVarInt(playerid, "NewsPaperAmount")*2)+(GetPVarInt(playerid, "NewsDistance")/15));
	     		format(string, sizeof(string),"Zeitungsstand\n\nZeitungen: %i\n/buynewspaper\n%i $",NewsPaperKiosk[npaperplace][ZeitungAmount],ServerLager[it_newspaper_price]);
	     		UpdateDynamic3DTextLabelText(NewsPaperKiosk[GetPVarInt(playerid, "NewsPaperPlace")][nkLabel], COLOR_WHITE, string);
	     		format(string, sizeof(string),"Du hast %i $ für die Auslieferung der Zeitungen erhalten (%i EXP erhalten).",_earncash, _earnexp);
	     		SendClientMessage(playerid, COLOR_YELLOW, string);
	     		GivePlayerEXP(playerid,_earnexp);
	     		GivePlayerMoneyEx(playerid,_earncash);
	     		FrakInfo[8][fiFrakKasse] -= _earncash;
				DeletePVar(playerid, "NewsAuslieferung");
				DeletePVar(playerid, "NewsPaperPlace");
				DeletePVar(playerid, "NewsDistance");
				DeletePVar(playerid, "NewsPaperAmount");
			}
		}
	}

	if(IsPlayerInRangeOfPoint(playerid,5.0,1128.0292,-1687.3867,13.2602))
	{
	    if(SpielerInfo[playerid][sFraktion] == 7)
	    {
			new car = GetVehicleTrailer(GetPlayerVehicleID(playerid)), query[128];
			if(FahrzeugInfo[car][fFraktion] != 0 || FahrzeugInfo[car][fGruppe] != 0 || strlen(FahrzeugInfo[car][fBesitzer]) != 0)
			{
				PlayerPlaySound(playerid, 1139, 0.0, 0.0, 0.0);
		        if(strlen(FahrzeugInfo[car][fBesitzer]) != 0){
				format(query, sizeof(query), "SMS von 113 (O-AMT): Sehr geehrte/r Bürger/in, Ihr %s befindet sich in unserer Verwahrstelle.",FahrzeugName[FahrzeugInfo[car][fModelID]-400]);
				SendClientMessage(FahrzeugInfo[car][fBesitzerID],COLOR_INFO,query);}
		        FahrzeugInfo[car][fParkkralle] = 0;
				FahrzeugInfo[car][fAbgeschleppt] = 1;
				SavePrivatCarVehicle(car);
				DeleteVehicle(car);
				SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Das Fahrzeug befindet sich nun in der Verwahrstelle.");
				DisablePlayerCheckpoint(playerid);
				FrakInfo[SpielerInfo[playerid][sFraktion]][fiFrakKasse] += 500;
			}
			else SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du kannst dieses Fahrzeug nicht abschleppen.");
		}
  	}
  	if(IsPlayerInRangeOfPoint(playerid,5.0,1945.9243,-1569.7150,13.5977) && ProbefahrtCar[playerid] != INVALID_VEHICLE_ID ||
	   IsPlayerInRangeOfPoint(playerid,5.0,1845.0406,-1397.4750,13.3906) && ProbefahrtCar[playerid] != INVALID_VEHICLE_ID ||
	   IsPlayerInRangeOfPoint(playerid,5.0,1882.7588,-2440.4363,13.5547) && ProbefahrtCar[playerid] != INVALID_VEHICLE_ID ||
	   IsPlayerInRangeOfPoint(playerid,5.0,2951.4438,-1995.4794,-0.2203) && ProbefahrtCar[playerid] != INVALID_VEHICLE_ID ||
	   IsPlayerInRangeOfPoint(playerid,5.0,-1581.5812,1166.5559,6.7440) && ProbefahrtCar[playerid] != INVALID_VEHICLE_ID)
  	{
  	    KillTimer(ProbefahrtTimer[playerid]);
  	    if(ProbefahrtTime[playerid] > 0)
  	    {
  	        FahrzeugInfo[ProbefahrtCar[playerid]][fTank] = 0;
			ProbefahrtTime[playerid] = 0;
			DestroyVehicleEx(ProbefahrtCar[playerid]);
			SendClientMessage(playerid,COLOR_YELLOW,"Vielen Dank, wir hoffen Sie sind mit unserem Fahrzeug zufrieden gewesen.");
			DisablePlayerCheckpoint(playerid);
		}
		else
		{
		    FahrzeugInfo[ProbefahrtCar[playerid]][fTank] = 0;
		    ProbefahrtTime[playerid] = 0;
			DestroyVehicleEx(ProbefahrtCar[playerid]);
			SendClientMessage(playerid,COLOR_YELLOW,"Vielen Dank, wir hoffen Sie sind mit unserem Fahrzeug zufrieden gewesen.");
			new string[128];
			format(string,sizeof(string),"Für Ihre Verspätung erheben wir eine Gebür von 1600$ von Ihrem Bankkonto.");
			SendClientMessage(playerid,COLOR_YELLOW,string);
			SpielerInfo[playerid][sBankkonto] -= 1600;
			format(string,sizeof(string),"Aktuelles Wantedlevel: %d",GetPlayerWantedLevelEx(playerid));
			SendClientMessage(playerid,COLOR_YELLOW,string);
			format(string,sizeof(string),"ZENTRALE: Das Autohaus meldet das der Flüchtige %s das Fahrzeug soeben zurückgebracht habe.",SpielerInfo[playerid][sName]);
			SendCopMessage(COLOR_BLUE,string);
			DisablePlayerCheckpoint(playerid);
		}
		DeletePVar(playerid,"ProbeFahrt");
		PlayerTextDrawHide(playerid, CountdownDraw[playerid][0]);
		PlayerTextDrawHide(playerid, CountdownDraw[playerid][1]);
		PlayerTextDrawHide(playerid, CountdownDraw[playerid][2]);
		PlayerTextDrawHide(playerid, CountdownDraw[playerid][3]);
		SpielerInfo[playerid][sPerso] = 1;
		SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}INFO: Du hast deinen Perso wiederbekommen.");
		DisablePlayerCheckpoint(playerid);
  	}
  	if(IsPlayerInRangeOfPoint(playerid,5.0,2607.1702,-2187.9561,14.1298))
  	{
		if(SpielerInfo[playerid][sNebenjob] == 1)
		{
		    if(GetVehicleTrailer(vehicleid) != SpielerLKWTrailer[playerid])return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Das ist nicht dein Anhänger.");
		    TogglePlayerControllable(playerid, false);
		    ShowPlayerDialog(playerid,DIALOG_TRAILER_TTANKAUSWAHL,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Anhänger auffuellen","Benzin\nDiesel\nKerosin","Weiter","");
		    DisablePlayerCheckpoint(playerid);
		}
	}
	if(IsPlayerInRangeOfPoint(playerid,5.0,2153.7937,-2290.0913,13.3805))
	{
	    if(SpielerInfo[playerid][sNebenjob] == 1)
	    {
	    	SpielerInfo[playerid][sPayDayGeld] += JobInfo[1][jiGehalt];
	        SendClientMessage(playerid,COLOR_SUPER,"Hinweis: Du hast deinen LKW abgegeben und erhälst dein Gehalt in Höhe von 3.500$ an deinem nächsten PayDay!");
		    UpdateDynamic3DTextLabelText(FahrzeugInfo[vehicleid][fLabel], COLOR_WHITE, "Jobfahrzeug von\n{FE0000}Niemandem");
		    FahrzeugTank[vehicleid] = VehicleData[GetVehicleModel(vehicleid)-400][vehLiter];
		    DeletePVar(playerid,"TrailerBetanken");
			DeletePVar(playerid, "TruckerAngebot");
			DeletePVar(playerid, "TrailerUpdate");
		    FahrzeugInfo[vehicleid][fNebenjobDuty] = 0;
		    DestroyVehicleEx(SpielerLKWTrailer[playerid]);
		    SetVehicleToRespawn(vehicleid);
		    SpielerLKWTrailer[playerid] = 0;
		    DisablePlayerCheckpoint(playerid);
		    GivePlayerEXP(playerid,35);
	  	}
	}
	if(IsPlayerInRangeOfPoint(playerid,2.5,PizzaKundenPos[playerid][0],PizzaKundenPos[playerid][1],PizzaKundenPos[playerid][2]))
	{
	    if(SpielerInfo[playerid][sNebenjob] != 2)return NichtBerechtigt
	    if(GetPVarInt(playerid,"PizzaTragen") == 0)
	    {
			SendClientMessage(playerid,COLOR_SUPER,"Steig wieder in dein Dienstfahrzeug und öffne den Kofferraum mit '/fahrzeug'.");
			DisablePlayerCheckpoint(playerid);
		}
		else
		{
		    new hs;
		    DeletePVar(playerid,"PizzaTragen");
		    RemovePlayerAttachedObject(playerid,ATTACH_INDEX_JOB);
		    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		    PlayAudioStreamForPlayer(playerid,"https://"SERV_WURL"/sounds/Pizzabote.mp3");

		    if(PizzaAusgeliefert[playerid] < 4)
			{
		    	SendClientMessage(playerid,COLOR_SUPER,"Sehr gut. Der nächste Kunde wartet bereits auf seine Pizza.");
		    	SendClientMessage(playerid,COLOR_SUPER,"Steige jetzt wieder in das Dienstfahrzeug und begebe dich zum nächsten Kunden.");
		    }
		    DisablePlayerCheckpoint(playerid);
			loop_erneut:
            for(new mf=1;mf<MAX_HAUSER;mf++)
            {
                hs = 1+random(MAX_HAUSER);
                if(HausInfo[hs][hsErstellt] == false || HausInfo[hs][hsOrt] != 1 || HausInfo[hs][hsPos_X] == PizzaKundenPos[playerid][0]
					|| hs == 1 || HausInfo[hs][hsID] == 0 || HausInfo[hs][hsID] == 90)goto loop_erneut;
				PizzaKundenPos[playerid][0] = HausInfo[hs][hsPos_X];
				PizzaKundenPos[playerid][1] = HausInfo[hs][hsPos_Y];
				PizzaKundenPos[playerid][2] = HausInfo[hs][hsPos_Z];
				SetPlayerCheckpointEx(playerid,HausInfo[hs][hsPos_X],HausInfo[hs][hsPos_Y],HausInfo[hs][hsPos_Z],2.5);
				break;
            }
		    if(PizzaAusgeliefert[playerid] == 0){PizzaAusgeliefert[playerid] = 1;}
		    else if(PizzaAusgeliefert[playerid] == 1){PizzaAusgeliefert[playerid] = 2;}
		    else if(PizzaAusgeliefert[playerid] == 2){PizzaAusgeliefert[playerid] = 3;}
		    else if(PizzaAusgeliefert[playerid] == 3){PizzaAusgeliefert[playerid] = 4;}
		    else if(PizzaAusgeliefert[playerid] == 4)
			{
			    SendClientMessage(playerid,COLOR_INFO,"Hinweis: Das waren alle Pizzen. Begebe dich nun zum roten Marker um dein Geld zu erhalten.");
			    SetPlayerCheckpointEx(playerid,2095.8269,-1799.6149,13.0425,5.0);
				PizzaAusgeliefert[playerid] = 5;
			}
		}
	}
	if(IsPlayerInRangeOfPoint(playerid,1.5,PizzaKofferraumPos[playerid][0],PizzaKofferraumPos[playerid][1],PizzaKofferraumPos[playerid][2]))
	{
	    if(SpielerInfo[playerid][sNebenjob] != 2)return NichtBerechtigt
	    if(GetPVarInt(playerid,"PizzaTragen") == 0)
	    {
	        SetPVarInt(playerid,"PizzaTragen",1);
	        TogglePlayerControllable(playerid, false);
	    	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_CARRY);
	    	KillTimer(PizzaRausnehmenTimer[playerid]);
   			PizzaRausnehmenTimer[playerid] = SetTimerEx("PizzaRausnehmen",2000,false,"i",playerid);
	    	GameTextForPlayer(playerid, "~r~Bitte warten...", 2000, 5);
			DisablePlayerCheckpoint(playerid);
		}
		else
		{
		    SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast bereits die Pizza vom Kunden auf der Hand.");
		    SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Bringe die Pizza jetzt zum Kunden. Der Kunde befindet sich am roten Marker.");
		    SetPlayerCheckpointEx(playerid,PizzaKundenPos[playerid][0],PizzaKundenPos[playerid][1],PizzaKundenPos[playerid][2],2.5);
		}
	}
	if(IsPlayerInRangeOfPoint(playerid,1.5,MuellHausPos[playerid][0],MuellHausPos[playerid][1],MuellHausPos[playerid][2]))
	{
	    if(SpielerInfo[playerid][sNebenjob] != 6)return NichtBerechtigt
	    SetPVarInt(playerid,"MüllBeutelHand",1);
	    ApplyAnimation(playerid, "BOMBER", "BOM_Plant_Crouch_In", 4.1, false, true, true, true, 1, SYNC_ALL);
	    ClearAnimations(playerid);
	    SetPlayerAttachedObject(playerid,ATTACH_INDEX_JOB,1264,6,0.165999,0.003000,-0.184999,0.000000,0.000000,0.000000,0.498999,0.466999,0.489000);
	    SendClientMessage(playerid,COLOR_SUPER,"Sehr gut. Schmeiße den Müll jetzt in den Müllwagen.");
	    DisablePlayerCheckpoint(playerid);
		new Float:x, Float:y, Float:z;
		GetXYInFrontOfVehicle(GetPVarInt(playerid,"MüllAuto"),x,y,z,-4.5);
		MuellAutoPos[playerid][0] = x;
		MuellAutoPos[playerid][1] = y;
		MuellAutoPos[playerid][2] = z;
	    SetPlayerCheckpointEx(playerid,MuellAutoPos[playerid][0],MuellAutoPos[playerid][1],MuellAutoPos[playerid][2],3.0);
	}
	if(IsPlayerInRangeOfPoint(playerid,3.0,MuellAutoPos[playerid][0],MuellAutoPos[playerid][1],MuellAutoPos[playerid][2]))
	{
	    new vehid = GetPVarInt(playerid,"MüllAuto"), string[144];
	    if(SpielerInfo[playerid][sNebenjob] != 6)return NichtBerechtigt
	    if(GetPVarInt(playerid,"MüllBeutel") < 10)
	    {
		    DeletePVar(playerid,"MüllBeutelHand");
		    SetPVarInt(playerid,"MüllBeutel",GetPVarInt(playerid,"MüllBeutel")+1);
			format(string, sizeof(string), "Müllwagen:\n{FE0000}%s{FFFFFF}\nMüll: {FF0000}%d{FFFFFF} Liter", SpielerInfo[playerid][sName],GetPVarInt(playerid,"MüllBeutel"));
	 		UpdateDynamic3DTextLabelText(FahrzeugInfo[vehid][fLabel], COLOR_WHITE, string);
	 		ApplyAnimation(playerid, "BOMBER", "BOM_Plant_Crouch_In", 4.1, false, true, true, true, 1, SYNC_ALL);
		    ClearAnimations(playerid);
		    RemovePlayerAttachedObject(playerid,ATTACH_INDEX_JOB);
	        DisablePlayerCheckpoint(playerid);
	        loop_start3:
	        for(new mf=1;mf<MAX_HAUSER;mf++)
	        {
	            new hs = 1+random(MAX_HAUSER);
	            if(HausInfo[hs][hsErstellt] == false || HausInfo[hs][hsOrt] != 1)goto loop_start3;
				MuellHausPos[playerid][0] = HausInfo[hs][hsPos_X];
				MuellHausPos[playerid][1] = HausInfo[hs][hsPos_Y];
				MuellHausPos[playerid][2] = HausInfo[hs][hsPos_Z];
				SetPlayerCheckpointEx(playerid,HausInfo[hs][hsPos_X],HausInfo[hs][hsPos_Y],HausInfo[hs][hsPos_Z],1.5);
	   			SendClientMessage(playerid,COLOR_SUPER,"Begib dich nun zum nächsten Haus.");
				break;
		 	}
		}
		else
		{
			DeletePVar(playerid,"MüllBeutelHand");
			ApplyAnimation(playerid, "BOMBER", "BOM_Plant_Crouch_In", 4.1, false, true, true, true, 1, SYNC_ALL);
		    ClearAnimations(playerid);
		    RemovePlayerAttachedObject(playerid,ATTACH_INDEX_JOB);
		    SetPlayerCheckpointEx(playerid,1770.9084,-2022.5839,14.1376,3.0);
		    SendClientMessage(playerid,COLOR_INFO,"Dein Müllwagen ist voll. Bringe ihn zurück zur Firma, um dein Gehalt zu erhalten.");
		}
	}
	if(IsPlayerInRangeOfPoint(playerid,3.0,1770.9084,-2022.5839,14.1376) && GetPVarInt(playerid,"MüllBeutel") == 10 && SpielerInfo[playerid][sNebenjob] == 6)
	{
	    TogglePlayerControllable(playerid, false);
 		GameTextForPlayer(playerid,"~r~Muellwagen wird entleert~n~~w~Bitte warten...",10000,4);
 		KillTimer(MuellmannTimer[playerid]);
 		MuellmannTimer[playerid] = SetTimerEx("MuellEntleeren",10000,false,"i",playerid);
	    DisablePlayerCheckpoint(playerid);
	}
 	if(IsPlayerInRangeOfPoint(playerid,5.0,2095.8269,-1799.6149,13.0425) && PizzaAusgeliefert[playerid] == 5)
	{
	    if(FahrzeugInfo[vehicleid][fNebenjob] != 2)return 1;
	    new string[128], tmpcar = GetPVarInt(playerid,"PizzaAuto");
	    UpdateDynamic3DTextLabelText(FahrzeugInfo[tmpcar][fLabel], COLOR_WHITE, "Jobfahrzeug von\n{FE0000}Niemandem");
	    FahrzeugInfo[tmpcar][fNebenjobDuty] = 0;
	    SetVehicleToRespawn(tmpcar);
	    FahrzeugInfo[tmpcar][fJobFahrer] = 0;
	    DeletePVar(playerid,"PizzaTragen");
	    DeletePVar(playerid,"PizzaGeholt");
	    DeletePVar(playerid,"PizzaAusliefern");
	    PizzaKundenPos[playerid][0] = 0;
	    PizzaKundenPos[playerid][1] = 0;
	    PizzaKundenPos[playerid][2] = 0;
	    PizzaKofferraumPos[playerid][0] = 0;
	    PizzaKofferraumPos[playerid][1] = 0;
	    PizzaKofferraumPos[playerid][2] = 0;
		PizzaAusgeliefert[playerid] = 0;
        format(string,sizeof(string),"Dein Gehalt in Höhe von %d$ wird dir am Payday überwiesen. Benutze /payday um deinen Check einzusehen.",JobInfo[2][jiGehalt]);
        SendClientMessage(playerid,COLOR_INFO,string);
        SpielerInfo[playerid][sPayDayGeld] += JobInfo[2][jiGehalt];
	    DisablePlayerCheckpoint(playerid);
	    if(GetPVarInt(playerid,"KeineExpFürJob") > 0){GivePlayerEXP(playerid,35); DeletePVar(playerid,"KeineExpFürJob");}
	}
	if(IsPlayerInRangeOfPoint(playerid,5.0,1801.7838,-1707.5288,13.6681) && GetPVarInt(playerid,"GeldlieferantAbgabe"))
	{
	    if(FahrzeugInfo[vehicleid][fNebenjob] != 10)return 1;
	    new string[128], tmpcar = GetPVarInt(playerid,"GeldtransporterID");
	    UpdateDynamic3DTextLabelText(FahrzeugInfo[tmpcar][fLabel], COLOR_WHITE, "Jobfahrzeug von\n{FE0000}Niemandem");
	    FahrzeugInfo[tmpcar][fNebenjobDuty] = 0;
	    SetVehicleToRespawn(tmpcar);
	    FahrzeugInfo[tmpcar][fJobFahrer] = 0;
        format(string,sizeof(string),"Dein Gehalt in Höhe von %d$ wird dir am Payday überwiesen. Benutze /payday um deinen Check einzusehen.",GetPVarInt(playerid,"GeldlieferantGehalt"));
        SendClientMessage(playerid,COLOR_INFO,string);
        SpielerInfo[playerid][sPayDayGeld] += GetPVarInt(playerid,"GeldlieferantGehalt");
        GivePlayerEXP(playerid,35);
        DeletePVar(playerid,"GeldlieferantAbgabe");
        DeletePVar(playerid,"GeldlieferantGehalt");
        DeletePVar(playerid,"GeldtransporterID");
        DeletePVar(playerid,"GeldlieferantArbeitet");
        DeletePVar(playerid,"GeldkofferWert");
        DeletePVar(playerid,"GeldtransporterGeld");
        DeletePVar(playerid,"GeldkofferInHand");
    	DeletePVar(playerid,"GeldkofferWert");
    	RemovePlayerAttachedObject(playerid, ATTACH_INDEX_JOB);
	    DisablePlayerCheckpoint(playerid);
	    if(GetPVarInt(playerid,"GeldlieferantGehalt") > 100){GivePlayerEXP(playerid,35);}
	}
	if(IsPlayerInRangeOfPoint(playerid,5.0,2130.8152,-1737.6101,13.5597) && GetPVarInt(playerid,"ElektrikerAbgabe"))
	{
	    if(FahrzeugInfo[vehicleid][fNebenjob] != 11)return 1;
	    if(GetPVarInt(playerid,"WerkzeugInHand") > 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast noch Werkzeug in der Hand. Lege es erst in den Wagen zurück.");
	    new string[128], tmpcar = GetPVarInt(playerid,"ElektrikerID");
	    FahrzeugInfo[tmpcar][fNebenjobDuty] = 0;
	    UpdateDynamic3DTextLabelText(FahrzeugInfo[tmpcar][fLabel], COLOR_WHITE, "Jobfahrzeug von\n{FE0000}Niemandem");
	    SetVehicleToRespawn(tmpcar);
	    FahrzeugInfo[tmpcar][fJobFahrer] = 0;
        format(string,sizeof(string),"Dein Gehalt in Höhe von %d$ wird dir am Payday überwiesen. Benutze /payday um deinen Check einzusehen.",GetPVarInt(playerid,"ElektrikerGehalt"));
        SendClientMessage(playerid,COLOR_INFO,string);
        SpielerInfo[playerid][sPayDayGeld] += GetPVarInt(playerid,"ElektrikerGehalt");
        if(GetPVarInt(playerid,"ElektrikerGehalt") > 100){GivePlayerEXP(playerid,35);}
        if(GetPVarInt(playerid,"WerkzeugInHand") != 0){RemovePlayerAttachedObject(playerid, ATTACH_INDEX_JOB);}
        DeletePVar(playerid,"ElektrikerAbgabe");
        DeletePVar(playerid,"ElektrikerGehalt");
        DeletePVar(playerid,"ElektrikerID");
        DeletePVar(playerid,"ElektrikerArbeitet");
        DeletePVar(playerid,"WerkzeugInHand");
	    DisablePlayerCheckpoint(playerid);
	}
	if(IsPlayerInRangeOfPoint(playerid,5.0,1369.3030,-1648.6495,13.3828))
	{
	    if(FahrzeugInfo[vehicleid][fNebenjob] == 3)
	    {
			new string[128], tmpcar = GetPVarInt(playerid,"Kehrmaschine");
		    UpdateDynamic3DTextLabelText(FahrzeugInfo[tmpcar][fLabel], COLOR_WHITE, "Jobfahrzeug von\n{FE0000}Niemandem{FFFFFF}\nMüll: {FF0000}0{FFFFFF} Liter");
		    SetVehicleToRespawn(tmpcar);
		    FahrzeugInfo[tmpcar][fNebenjobDuty] = 0;
	        format(string,sizeof(string),"Dein Gehalt in Höhe von %d$ wird dir am Payday überwiesen. Benutze /payday um deinen Check einzusehen.",JobInfo[3][jiGehalt]);
	        SendClientMessage(playerid,COLOR_INFO,string);
	        SpielerInfo[playerid][sPayDayGeld] += JobInfo[3][jiGehalt];
	        FahrzeugInfo[tmpcar][fJobFahrer] = 0;
	   	    DeletePVar(playerid,"Kehrmaschine");
			DeletePVar(playerid,"KehrmaschinenAuftrag");
			DeletePVar(playerid,"KfahrerArbeitet");
			DeletePVar(playerid,"MuellLiter");
		    DisablePlayerCheckpoint(playerid);
		    GivePlayerEXP(playerid,35);
		}
	}
	if(IsPlayerInRangeOfPoint(playerid,5.0,1481.1711,-1755.6505,13.5766))
	{
	    SendClientMessage(playerid,COLOR_SUPER,"Betrete nun die Stadhalle und begib dich zu Michelle S.");
		DisablePlayerCheckpoint(playerid);
	}
	if(IsPlayerInRangeOfPoint(playerid,5.0,1480.9572,-1743.6293,13.5469) || IsPlayerInRangeOfPoint(playerid,5.0,1779.4395,-1722.1451,13.5390)
	|| IsPlayerInRangeOfPoint(playerid,5.0,1276.3075,-1337.8020,13.3573) || IsPlayerInRangeOfPoint(playerid,5.0,1000.9811,-1347.8755,13.3498))
	{
	    SendClientMessage(playerid,COLOR_SUPER,"Du hast dein Ziel erreicht.");
	    DisablePlayerCheckpoint(playerid);
	}
 	if(IsPlayerInRangeOfPoint(playerid,5.0,375.8552,-2054.8748,8.0156))
	{
	    if(GetPVarInt(playerid,"GeldImGeldsack") != 0)
	    {
			if(IsPlayerInAnyVehicle(playerid))return SetPlayerCheckpointEx(playerid,375.8552,-2054.8748,8.0156,5.0);
			new str[128];
		    format(str,sizeof(str),"Gut gemacht! Du hast durch den Ladenraub +%d$ erhalten.",GetPVarInt(playerid,"GeldImGeldsack"));
		    SendClientMessage(playerid,COLOR_SUPER,str);
		    GivePlayerMoneyEx(playerid,GetPVarInt(playerid,"GeldImGeldsack"));
		    DeletePVar(playerid,"GeldImGeldsack");
		    DeletePVar(playerid,"HatGeldsack");
		    RemovePlayerAttachedObject(playerid,ATTACH_INDEX_GELDSACK);
			DisablePlayerCheckpoint(playerid);
			if(SpielerInfo[playerid][sFraktion] > 8 && SpielerInfo[playerid][sFraktion] < 19)
			{
			    new string[128];
			    format(string,sizeof(string),"[Gangpunkte]: {FFFFFF}%s %s hat gerade erfolgreich einen Laden ausgeraubt. +1 Gangpunkt.",RangName(playerid),SpielerInfo[playerid][sName]);
			    foreach(new i : Player)
			    {
			        if(SpielerInfo[i][sFraktion] == SpielerInfo[playerid][sFraktion])
			        {
			            SendClientMessage(i,COLOR_SUPER,string);
			        }
			    }
			    FrakInfo[SpielerInfo[playerid][sFraktion]][fiGangpunkte] += 1;
			}
			if(GetPVarInt(playerid,"MissionActive") == 1)
			{
			    DeletePVar(playerid,"MissionActive");
			    ShowAchievement(playerid,"~g~Mission 1","Belohnung: ~n~~g~300 EXP!");
			    SendClientMessage(playerid,COLOR_LIGHTGREEN,"[Mission]: Du hast die Mission erfolgreich abgeschlossen! +300 EXP!");
			    GivePlayerEXP(playerid,300);
			    SpielerInfo[playerid][sMissionSolved][1] = 1;
			}
		}
	}
	if(IsPlayerInRangeOfPoint(playerid,7.0,2061.6660,-2593.2915,14.2723) || IsPlayerInRangeOfPoint(playerid,7.0,-1642.5271,-149.6707,14.8681)
	|| IsPlayerInRangeOfPoint(playerid,7.0,1388.8792,1683.4226,11.5457))
	{
	    if(SpielerInfo[playerid][sNebenjob] == 4)
	    {
   			new tmpcar = GetPVarInt(playerid,"FlugID");
		    if(FahrzeugInfo[vehicleid][fNebenjob] != 4)return 1;
            if(GetPVarInt(playerid,"PilotArbeitet") >= 1 && GetPVarInt(playerid,"PilotArbeitet") != 4)
            {
		        TogglePlayerControllable(playerid, false);
		        KillTimer(PilotenTimer[playerid]);
				PilotenTimer[playerid] = SetTimerEx("PilotRoute",15000,false,"i",playerid);
				GameTextForPlayer(playerid,"~w~Das Flugzeug wird beladen. Bitte warten...",15000,4);
			}
			else if(GetPVarInt(playerid,"PilotArbeitet") == 4)
			{
 				new string[128];
			    UpdateDynamic3DTextLabelText(FahrzeugInfo[tmpcar][fLabel], COLOR_WHITE, "Jobfahrzeug von\n{FE0000}Niemandem{FFFFFF}");
			    SetVehicleToRespawn(tmpcar);
		        format(string,sizeof(string),"Dein Gehalt in Höhe von %d$ wird dir am Payday überwiesen. Benutze /payday um deinen Check einzusehen.",JobInfo[4][jiGehalt]);
		        SendClientMessage(playerid,COLOR_INFO,string);
		        SpielerInfo[playerid][sPayDayGeld] += JobInfo[4][jiGehalt];
		        SpielerInfo[playerid][sJobEXP][3] += 1;
		        if(SpielerInfo[playerid][sJobEXP][3] < 150)
				{
			        format(string,sizeof(string),"Du hast zusätzlich +1 Erfahrung bekommen. Erfahrungen: %d/150",SpielerInfo[playerid][sJobEXP][3]);
			        SendClientMessage(playerid,COLOR_INFO,string);
				}
		        else if(SpielerInfo[playerid][sJobEXP][3] >= 150)
				{
			        format(string,sizeof(string),"Du hast zusätzlich +1 Erfahrung bekommen. Erfahrungen: %d/300",SpielerInfo[playerid][sJobEXP][3]);
			        SendClientMessage(playerid,COLOR_INFO,string);
				}
				FahrzeugInfo[tmpcar][fJobFahrer] = 0;
		   	    DeletePVar(playerid,"FlugID");
				DeletePVar(playerid,"PilotArbeitet");
			    DisablePlayerCheckpoint(playerid);
			    GivePlayerEXP(playerid,35);
			}
	    }
	}
	//Prison Checkpoints
	if(SpielerInfo[playerid][sPrisonCP] > 0)
	{
		if(IsPlayerInRangeOfPoint(playerid,2.5,1354.3055,2123.5054,11.0156))
		{
            if(SpielerInfo[playerid][sPrisonCP] == 1)
            {
                SpielerInfo[playerid][sPrisonCP] = 0;
                SetPlayerVirtualWorld(playerid,0);
				SpawnPlayerEx(playerid);
				SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Reiß dich in Zukunft mehr zusammen & halte dich an die Regeln!");
            }
    		else if(SpielerInfo[playerid][sPrisonCP] > 1)
            {
                 SpielerInfo[playerid][sPrisonCP]--;
                 SetPlayerCheckpointEx(playerid,1319.4429,2121.0369,11.0156,2.5);
            }
		}
		if(IsPlayerInRangeOfPoint(playerid,2.5,1319.4429,2121.0369,11.0156))
		{
  			if(SpielerInfo[playerid][sPrisonCP] == 1)
            {
                SpielerInfo[playerid][sPrisonCP] = 0;
                SetPlayerVirtualWorld(playerid,0);
				SpawnPlayerEx(playerid);
				SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Reiß dich in Zukunft mehr zusammen & halte dich an die Regeln!");
            }
    		else if(SpielerInfo[playerid][sPrisonCP] > 1)
            {
                 SpielerInfo[playerid][sPrisonCP]--;
                 SetPlayerCheckpointEx(playerid,1324.8143,2146.6045,11.0234,2.5);
            }
		}
		if(IsPlayerInRangeOfPoint(playerid,2.5,1324.8143,2146.6045,11.0234))
		{
			if(SpielerInfo[playerid][sPrisonCP] == 1)
            {
                SpielerInfo[playerid][sPrisonCP] = 0;
                SetPlayerVirtualWorld(playerid,0);
				SpawnPlayerEx(playerid);
				SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Reiß dich in Zukunft mehr zusammen & halte dich an die Regeln!");
            }
    		else if(SpielerInfo[playerid][sPrisonCP] > 1)
            {
                 SpielerInfo[playerid][sPrisonCP]--;
                 SetPlayerCheckpointEx(playerid,1360.2632,2148.7158,11.0156,2.5);
            }
		}
		if(IsPlayerInRangeOfPoint(playerid,2.5,1360.2632,2148.7158,11.0156))
		{
			if(SpielerInfo[playerid][sPrisonCP] == 1)
            {
                SpielerInfo[playerid][sPrisonCP] = 0;
                SetPlayerVirtualWorld(playerid,0);
				SpawnPlayerEx(playerid);
				SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Reiß dich in Zukunft mehr zusammen & halte dich an die Regeln!");
            }
    		else if(SpielerInfo[playerid][sPrisonCP] > 1)
            {
                 SpielerInfo[playerid][sPrisonCP]--;
                 SetPlayerCheckpointEx(playerid,1354.3055,2123.5054,11.0156,2.5);
            }
		}
  	}
	if(FahrzeugInfo[vehicleid][fNebenjob] == 3)
	{
		if(IsPlayerInRangeOfPoint(playerid,1.5,MuellRouteInfo[GetPVarInt(playerid,"KehrmaschinenAuftrag")][mrPos_X],MuellRouteInfo[GetPVarInt(playerid,"KehrmaschinenAuftrag")][mrPos_Y],MuellRouteInfo[GetPVarInt(playerid,"KehrmaschinenAuftrag")][mrPos_Z]))
		{
		    new tmpcar = GetPVarInt(playerid,"Kehrmaschine");
		    if(FahrzeugInfo[tmpcar][fNebenjob] == SpielerInfo[playerid][sNebenjob])
		    {
			    new string[128];
			    SetPVarInt(playerid,"MuellLiter",GetPVarInt(playerid,"MuellLiter")+1);
			    DisablePlayerCheckpoint(playerid);
			    DestroyDynamicObject(MuellObjekt[playerid][GetPVarInt(playerid,"KehrmaschinenAuftrag")]);
			    format(string, sizeof(string), "Jobfahrzeug von\n{FE0000}%s{FFFFFF}\nMüll: {FF0000}%d{FFFFFF} Liter", SpielerInfo[playerid][sName], GetPVarInt(playerid,"MuellLiter"));
				UpdateDynamic3DTextLabelText(FahrzeugInfo[tmpcar][fLabel], COLOR_WHITE, string);
				if(GetPVarInt(playerid,"KehrmaschinenAuftrag") != 28)
				{
					SetPVarInt(playerid,"KehrmaschinenAuftrag",GetPVarInt(playerid,"KehrmaschinenAuftrag")+1);
					new id = GetPVarInt(playerid,"KehrmaschinenAuftrag");
					SetPlayerCheckpointEx(playerid,MuellRouteInfo[id][mrPos_X],MuellRouteInfo[id][mrPos_Y],MuellRouteInfo[id][mrPos_Z],1.5);
				}
				else
				{
					SetPlayerCheckpointEx(playerid,1369.3030,-1648.6495,13.3828,5.0);
				    SendClientMessage(playerid,COLOR_SUPER,"Das war alles. Bring die Kehrmaschine jetzt wieder zurück um dein Gehalt zu bekommen.");
				}
			}
			else SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du sitzt in keinem Jobfahrzeug.");
		}
  	}
	if(SpielerInfo[playerid][sNebenjob] == 5)//Busfahrer
	{
	    if(GetPVarInt(playerid,"BusfahrerArbeitet") == 1)
  		{
  		    if(FahrzeugInfo[vehicleid][fNebenjob] == 5)
			{
	   			new id = GetPVarInt(playerid,"BusfahrerLinie"), cp = GetPVarInt(playerid, "BusfahrerRoute");

				if(IsPlayerInRangeOfPoint(playerid,5.0,busRouteCheckpoint[id][cp][0], busRouteCheckpoint[id][cp][1], busRouteCheckpoint[id][cp][2]))
	   			{
	 	    		new string[128], tmpcar = GetPVarInt(playerid,"BusID");
				    if(FahrzeugInfo[tmpcar][fNebenjob] != SpielerInfo[playerid][sNebenjob])return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du sitzt in keinem Jobfahrzeug.");
	   			    
					cp++;

					if(cp >= MAX_BUS_ROUTES_CPS) {
						DeletePlayerJobCheckpoint(playerid);
						TogglePlayerControllable(playerid, false);
	   			        ShowPlayerDialog(playerid,DIALOG_BUSFAHRER_ASK,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Busfahrer","Weiter Jobben\nAufhören","Bestätigen","Abbrechen");
	   			        new gehalt = JobInfo[5][jiGehalt] + busRoutesData[id][bBusMoneyBonus];
			        	format(string,sizeof(string),"Dein Gehalt in Höhe von %d$ wird dir am Payday überwiesen. Benutze /payday um deinen Check einzusehen.",gehalt);
				        SendClientMessage(playerid,COLOR_INFO,string);
				        SpielerInfo[playerid][sPayDayGeld] += gehalt;
				        SpielerInfo[playerid][sJobEXP][4] += (1 + busRoutesData[id][bBusJobExpBonus]);
				        DeletePVar(playerid,"BusfahrerLinie");
				        DeletePVar(playerid,"BusfahrerRoute");
				        FahrzeugInfo[tmpcar][fJobFahrer] = 0;
				        GivePlayerEXP(playerid,35);
						return 1;
					} else if(busRouteCheckpoint[id][cp][0] == 0.000) {
						DeletePlayerJobCheckpoint(playerid);
						TogglePlayerControllable(playerid, false);
	   			        ShowPlayerDialog(playerid,DIALOG_BUSFAHRER_ASK,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Busfahrer","Weiter Jobben\nAufhören","Bestätigen","Abbrechen");
	   			        new gehalt = JobInfo[5][jiGehalt] + busRoutesData[id][bBusMoneyBonus];
			        	format(string,sizeof(string),"Dein Gehalt in Höhe von %d$ wird dir am Payday überwiesen. Benutze /payday um deinen Check einzusehen.",gehalt);
				        SendClientMessage(playerid,COLOR_INFO,string);
				        SpielerInfo[playerid][sPayDayGeld] += gehalt;
				        SpielerInfo[playerid][sJobEXP][4] += (1 + busRoutesData[id][bBusJobExpBonus]);
				        DeletePVar(playerid,"BusfahrerLinie");
				        DeletePVar(playerid,"BusfahrerRoute");
				        FahrzeugInfo[tmpcar][fJobFahrer] = 0;
				        GivePlayerEXP(playerid,35);
						return 1;
					} else {
						DeletePlayerJobCheckpoint(playerid);
	   			        SetPVarInt(playerid,"AnBusHaltestelle",1);
		      			TogglePlayerControllable(playerid, false);
		      			KillTimer(BusfahrerTimer[playerid]);
						BusfahrerTimer[playerid] = SetTimerEx("Busfahrer",1000,true,"i",playerid);
						SetPVarInt(playerid,"BusCountdown",10);
		    			//GameTextForPlayer(playerid, "Weiterfahrt in~n~~b~10 sec", 1000, 5);
		    			PlayerTextDrawSetString(playerid, RobBar[playerid][2], "Weiterfahrt in 10");
		    			PlayerTextDrawShow(playerid, RobBar[playerid][0]);
		    			PlayerTextDrawTextSize(playerid, RobBar[playerid][1], 212.000000, -1.000000);
			    		PlayerTextDrawShow(playerid, RobBar[playerid][1]);
			    		PlayerTextDrawShow(playerid, RobBar[playerid][2]);
			    		RobBarValue[playerid] = 212.000000;
					}
				}
			}
  		}
	}
	if(SpielerInfo[playerid][sNebenjob] == 7)//Landwirt
	{
		if(IsPlayerInRangeOfPoint(playerid,3.5,-105.4470,72.9262,3.1172) &&
		GetPVarInt(playerid,"LandwirtArbeitet") == 1 && GetPVarInt(playerid,"LandwirtStufe") >= 1)
		{
		    new vehid = GetPVarInt(playerid,"LandwirtAuto");
		    if(GetPVarInt(playerid,"LandwirtStufe") == 1)
		    {
			    DisablePlayerCheckpoint(playerid);
				new trailerid, Float:Pos[3];
				GetPlayerPos(playerid,Pos[0],Pos[1],Pos[2]);
				trailerid = CreateVehicle(610,Pos[0]+2,Pos[1]+2,Pos[2]+0.5,0,1,1,-1);
			    SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Fahre mit dem Traktor die einzelnen Checkpoints ab.");
				SetPlayerCheckpointEx(playerid,LandwirtInfo[0][lPos_X],LandwirtInfo[0][lPos_Y],LandwirtInfo[0][lPos_Z],2.5);
				SetPVarInt(playerid,"TraktorTrailer",trailerid);
				AttachTrailerToVehicle(trailerid, GetPlayerVehicleID(playerid));
				SetTimerEx("AttachTrailer", 1000, false, "ii", trailerid, GetPlayerVehicleID(playerid));
			}
			else if(GetPVarInt(playerid,"LandwirtStufe") == 2)
			{
			    DestroyVehicle(GetPVarInt(playerid,"TraktorTrailer"));
	 	    	UpdateDynamic3DTextLabelText(FahrzeugInfo[vehid][fLabel], COLOR_WHITE, "Landwirt\n{FE0000}Niemand");
		    	SetVehicleToRespawn(vehid);
		    	FahrzeugInfo[vehid][fJobFahrer] = 0;
		    	DeletePVar(playerid,"TraktorTrailer");
		    	DeletePVar(playerid,"LandwirtAuto");
		    	DeletePVar(playerid,"LandwirtAbgabe");
		    	SetPVarInt(playerid,"Landwirt2Time",1);
	            SetPVarInt(playerid,"LandwirtAutoHolen",1);
		    	GameTextForPlayer(playerid,"~w~Steige nun in ein ~r~Meadrescher ~w~ein",3000,4);
			}
			else if(GetPVarInt(playerid,"LandwirtStufe") == 3)
			{
	 	    	UpdateDynamic3DTextLabelText(FahrzeugInfo[vehid][fLabel], COLOR_WHITE, "Landwirt\n{FE0000}Niemand");
		    	SetVehicleToRespawn(vehid);
		    	FahrzeugInfo[vehid][fJobFahrer] = 0;
		    	DeletePVar(playerid,"LandwirtAuto");
	            DeletePVar(playerid,"LandwirtAbgabe");
		    	SetPVarInt(playerid,"Landwirt2Time",1);
		    	SetPVarInt(playerid,"LandwirtAutoHolen",2);
		    	SetPVarInt(playerid,"LandwirtNotAgainMea",1);
		    	GameTextForPlayer(playerid,"~w~Steige nun in ein ~r~Walton ~w~ein",3000,4);
			}
			else if(GetPVarInt(playerid,"LandwirtStufe") == 5)
			{
	  			new string[128], tmpcar = GetPVarInt(playerid,"LandwirtAuto");
			    UpdateDynamic3DTextLabelText(FahrzeugInfo[tmpcar][fLabel], COLOR_WHITE, "Landwirt\n{FE0000}Niemand");
			    SetVehicleToRespawn(tmpcar);
			    FahrzeugInfo[tmpcar][fJobFahrer] = 0;
		 		DeletePVar(playerid,"LandwirtArbeitet");
				DeletePVar(playerid,"Landwirt2Time");
				DeletePVar(playerid,"LandwirtNotAgainMea");
				DeletePVar(playerid,"LandwirtMerker");
				DeletePVar(playerid,"LandwirtStufe2Obj");
				DeletePVar(playerid,"LandwirtHatWalton");
				DeletePVar(playerid,"HeuballenImWalton");
				DeletePVar(playerid,"HatHeuballen");
				DeletePVar(playerid,"LandwirtStufe");
			    WaltonKofferraumPos[playerid][0] = 0;
			    WaltonKofferraumPos[playerid][1] = 0;
			    WaltonKofferraumPos[playerid][2] = 0;
		        format(string,sizeof(string),"Dein Gehalt in Höhe von %d$ wird dir am Payday überwiesen. Benutze /payday um deinen Check einzusehen.",JobInfo[7][jiGehalt]);
		        SendClientMessage(playerid,COLOR_INFO,string);
		        SpielerInfo[playerid][sPayDayGeld] += JobInfo[7][jiGehalt];
			    DisablePlayerCheckpoint(playerid);
			    GivePlayerEXP(playerid,35);
				DeletePVar(playerid,"LandwirtCheckpoint");
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,3.5,-23.2852,-274.7156,5.4197) && GetPVarInt(playerid,"HeuballenAbgabe") == 1)
		{
		    TogglePlayerControllable(playerid, false);
		    GameTextForPlayer(playerid,"~w~Walton wird entladen. Bitte warten...",10000,4);
		    KillTimer(LandwirtTimer[playerid]);
		    LandwirtTimer[playerid] = SetTimerEx("HeuballenAbgabe",10000,false,"i",playerid);
		    DisablePlayerCheckpoint(playerid);
		}
  	}
	if(IsPlayerInRangeOfPoint(playerid,2.5,LandwirtInfo[GetPVarInt(playerid,"LandwirtCheckpoint")][lPos_X],LandwirtInfo[GetPVarInt(playerid,"LandwirtCheckpoint")][lPos_Y],LandwirtInfo[GetPVarInt(playerid,"LandwirtCheckpoint")][lPos_Z]) &&
			GetPVarInt(playerid,"LandwirtArbeitet") == 1 && GetPVarInt(playerid,"LandwirtStufe") == 1)
	{
		DisablePlayerCheckpoint(playerid);
 		new id = GetPVarInt(playerid,"LandwirtCheckpoint");
    	LandwirtObjekt[playerid][id] = CreateDynamicObject(LandwirtInfo[id][lObjekt], LandwirtInfo[id][lPos_X],LandwirtInfo[id][lPos_Y],LandwirtInfo[id][lPos_Z], LandwirtInfo[id][lRPos_X],LandwirtInfo[id][lRPos_Y],LandwirtInfo[id][lRPos_Z], -1, -1, playerid, 200.0);
    	SetPVarInt(playerid,"LandwirtCheckpoint",GetPVarInt(playerid,"LandwirtCheckpoint")+1);
		if(GetPVarInt(playerid,"LandwirtCheckpoint") == 24)
    	{
        	SetPVarInt(playerid,"LandwirtStufe",2);
       		SetPlayerCheckpointEx(playerid,-105.4470,72.9262,3.1172,3.5);
       		SetPVarInt(playerid,"LandwirtAbgabe",1);
        	SendClientMessage(playerid,COLOR_INFO,"Bringe den Traktor zum roten Marker um ihn abzugeben.");
    	}
    	else
		{
		    new id2 = GetPVarInt(playerid,"LandwirtCheckpoint");
			SetPlayerCheckpointEx(playerid,LandwirtInfo[id2][lPos_X],LandwirtInfo[id2][lPos_Y],LandwirtInfo[id2][lPos_Z],2.5);
		}
    }
	if(IsPlayerInRangeOfPoint(playerid,2.5,LandwirtInfo[GetPVarInt(playerid,"LandwirtCheckpoint")][lPos_X],LandwirtInfo[GetPVarInt(playerid,"LandwirtCheckpoint")][lPos_Y],LandwirtInfo[GetPVarInt(playerid,"LandwirtCheckpoint")][lPos_Z]) &&
			GetPVarInt(playerid,"LandwirtArbeitet") == 1 && GetPVarInt(playerid,"LandwirtStufe") == 2)
	{
		if(GetPVarInt(playerid,"LandwirtMerker") == 0)
	 	{
	 	    SetPVarInt(playerid,"LandwirtMerker",1);
	 	    SetPVarInt(playerid,"LandwirtCheckpoint",48);
	 	    SetPVarInt(playerid,"LandwirtStufe2Obj",24);
            DestroyDynamicObject(LandwirtObjekt[playerid][24]);
            LandwirtObjekt[playerid][24] = -1;
        }
		else
		{
        	SetPVarInt(playerid,"LandwirtStufe2Obj",GetPVarInt(playerid,"LandwirtStufe2Obj")+1);
            DestroyDynamicObject(LandwirtObjekt[playerid][GetPVarInt(playerid,"LandwirtStufe2Obj")]);
            LandwirtObjekt[playerid][GetPVarInt(playerid,"LandwirtStufe2Obj")] = -1;
	 	}
	 	new id = GetPVarInt(playerid,"LandwirtCheckpoint");
		LandwirtObjekt[playerid][id] = CreateDynamicObject(LandwirtInfo[id][lObjekt], LandwirtInfo[id][lPos_X],LandwirtInfo[id][lPos_Y],LandwirtInfo[id][lPos_Z], LandwirtInfo[id][lRPos_X],LandwirtInfo[id][lRPos_Y],LandwirtInfo[id][lRPos_Z], -1, -1, playerid, 200.0);
		SetPVarInt(playerid,"LandwirtCheckpoint",GetPVarInt(playerid,"LandwirtCheckpoint")+1);
		if(GetPVarInt(playerid,"LandwirtCheckpoint") == 72)
    	{
        	SetPVarInt(playerid,"LandwirtStufe",3);
        	SetPVarInt(playerid,"LandwirtAbgabe",2);
       		SetPlayerCheckpointEx(playerid,-105.4470,72.9262,3.1172,3.5);
        	SendClientMessage(playerid,COLOR_INFO,"Bringe den Mähdrescher zum roten Marker um ihn abzugeben.");
    	}
    	else
		{
			new id2 = GetPVarInt(playerid,"LandwirtCheckpoint");
			SetPlayerCheckpointEx(playerid,LandwirtInfo[id2][lPos_X],LandwirtInfo[id2][lPos_Y],LandwirtInfo[id2][lPos_Z],2.5);
		}
	}
	if(IsPlayerInRangeOfPoint(playerid,2.0,WaltonKofferraumPos[playerid][0],WaltonKofferraumPos[playerid][1],WaltonKofferraumPos[playerid][2]) &&
			GetPVarInt(playerid,"LandwirtArbeitet") == 1 && GetPVarInt(playerid,"LandwirtStufe") == 3 && GetPVarInt(playerid,"HatHeuballen") == 1)
 	{
		if(GetPVarInt(playerid,"LandwirtHatWalton") == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast noch keinen Walton als Jobfahrzeug.");
	    if(GetPVarInt(playerid,"HatHeuballen") == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Hebe erst einen Heuballen auf, um sie anschließend in den Walton legen zu können.");
	    new Float:x, Float:y, Float:z, merker = true;
		GetXYInFrontOfVehicle(GetPVarInt(playerid,"LandwirtAuto"),x,y,z,-2.02);
	    if(IsPlayerInRangeOfPoint(playerid,3.0,x,y,z))
	    {
		    new vehid = GetPVarInt(playerid,"LandwirtAuto");
			GetVehicleParamsEx(vehid, engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(vehid, engine, lights, alarm, doors, bonnet, true, objective);
		    TogglePlayerControllable(playerid, false);
			GameTextForPlayer(playerid, "~r~Bitte warten...", 3000, 5);
			//KillTimer(PizzaReinlegenTimer[playerid]);
			//PizzaReinlegenTimer[playerid] =
			SetTimerEx("HeuballenReinlegen",2000,true,"i",playerid);
	   		merker = false;
	   		return 1;
	    }
	    if(merker)
		{
	        SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du befindest dich nicht am Kofferraum des Waltons.");
	        return 1;
	    }
	}
	else if(IsPlayerInRangeOfPoint(playerid,5.0,1623.6760,-1894.1190,13.6745) && SpielerInfo[playerid][sNebenjob] == 10 && GetPVarInt(playerid,"GeldlieferantAbholung") == 1)
	{
	    if(GlobalVars[Geldlieferant] == 0)
	    {
	        GlobalVars[Geldlieferant] = playerid;
			TogglePlayerControllable(playerid, false);
			ClearChat(playerid,10);
			KillTimer(LoadingTimer[playerid]);
			new vehID = GetPlayerVehicleID(playerid);
			LoadingTimer[playerid] = SetTimerEx("LoadScreen",3000,false,"ii",playerid, vehID);
		    PlayerTextDrawShow(playerid,LoadingScreen[playerid][0]);
			PlayerTextDrawShow(playerid,LoadingScreen[playerid][1]);
			SetVehiclePos(vehID,1623.6760,-1894.1190,13.6745);
			SetVehicleZAngle(vehID,268.2960);

   			PlayerTextDrawHide(playerid, Tacho[playerid][0]);
			PlayerTextDrawHide(playerid, Tacho[playerid][1]);
			PlayerTextDrawHide(playerid, Tacho[playerid][2]);
			PlayerTextDrawHide(playerid, Tacho[playerid][3]);
			PlayerTextDrawHide(playerid, Tacho[playerid][4]);
			PlayerTextDrawHide(playerid, Tacho[playerid][5]);
			PlayerTextDrawHide(playerid, Tacho[playerid][6]);
			PlayerTextDrawHide(playerid, Tacho[playerid][7]);
			PlayerTextDrawHide(playerid, Tacho[playerid][8]);
			PlayerTextDrawHide(playerid, Tacho[playerid][9]);
			PlayerTextDrawHide(playerid, Tacho[playerid][10]);
			PlayerTextDrawHide(playerid, Tacho[playerid][11]);
		    KillTimer(TachoTimer[playerid]);
   		}
   		else
   		{
		   	SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Derzeit wird bereits ein Geldtransporter beladen. Warte bis der Geldtransporter vor dir fertig beladen wurde.");
		   	SendClientMessage(playerid,COLOR_INFO,"Hinweis: Benutze danach erneut '/startjob' um den Checkpoint erneut anzeigen zu lassen.");
	   	}
	}
	else if(IsPlayerInRangeOfPoint(playerid,3.5,2415.0757,-2468.6069,13.3313))
	{
	    if(GetPVarInt(playerid,"ImImportCar") == 1)
	    {
			new PLAYER_STATE:State = GetPlayerState(playerid);
			if(State == PLAYER_STATE_DRIVER)
			{
			    if(GetPlayerVehicleID(playerid) == ImportCar)
			    {
				    new str[144], RandomMoney = 6000+random(2001);
                    SetPlayerPos(playerid,-2433.4509,2313.6296,4.9844);
				    format(str,sizeof(str),"Spieler %s hat das Importfahrzeug erfolgreich abgeliefert. Belohnung: %d$",SpielerInfo[playerid][sName],RandomMoney);
				    SendClientMessageToAll(COLOR_ORANGE,str);
		            GivePlayerMoneyEx(playerid,RandomMoney);
		            if(GetPVarInt(playerid,"Probefahrt") == 0)
		            {
						PlayerTextDrawHide(playerid,CountdownDraw[playerid][0]);
						PlayerTextDrawHide(playerid,CountdownDraw[playerid][1]);
						PlayerTextDrawHide(playerid,CountdownDraw[playerid][2]);
						PlayerTextDrawHide(playerid,CountdownDraw[playerid][3]);
		            }
		            KillTimer(ImportCarTimer);
		            KillTimer(TachoTimer[playerid]);
		            Importfahrzeug = false;
		            SetTimer("_ImportCarTimer",3600000,false);
			     	DeleteVehicle(ImportCar);
			     	ImportCar = 0;
					DeletePVar(playerid,"ImImportCar");
				}
				else SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du befindest dich nicht im Importfahrzeug.");
			}
		}
	}
	else if(IsPlayerInRangeOfPoint(playerid,3.5,1424.7201,929.2430,10.5348))
	{
	    if(GetPVarInt(playerid,"ImKurrierCar") == 1)
	    {
			new PLAYER_STATE:State = GetPlayerState(playerid);
			if(State == PLAYER_STATE_DRIVER)
			{
			    new kurrierid = GetPVarInt(playerid,"KurrierID");
			    kurrierid--;
			    if(GetPlayerVehicleID(playerid) == KurrierCar[kurrierid])
			    {
			        SpielerInfo[playerid][sKurrier] = 1;
			        if(GetPVarInt(playerid,"KurrierID") == 1){SetPlayerPos(playerid,777.7709,-1016.0993,26.3594);}
			        else if(GetPVarInt(playerid,"KurrierID") == 2){SetPlayerPos(playerid,-939.2057,1425.2814,30.4340);}
			        else if(GetPVarInt(playerid,"KurrierID") == 3){SetPlayerPos(playerid,2300.4077,1928.9025,10.8417);}
				    SendClientMessage(playerid,COLOR_ORANGE,"Du hast die Lieferung erfolgreich abgeliefert. Belohnung: 3000$");
		            GivePlayerMoneyEx(playerid,3000);
		            if(GetPVarInt(playerid,"Probefahrt") == 0)
		            {
						PlayerTextDrawHide(playerid,CountdownDraw[playerid][0]);
						PlayerTextDrawHide(playerid,CountdownDraw[playerid][1]);
						PlayerTextDrawHide(playerid,CountdownDraw[playerid][2]);
						PlayerTextDrawHide(playerid,CountdownDraw[playerid][3]);
		            }
		            KillTimer(KurrierCarTimer[kurrierid]);
		            KillTimer(TachoTimer[playerid]);
		            Kurrierfahrzeug[kurrierid] = false;
			     	DeleteVehicle(KurrierCar[kurrierid]);
			     	KurrierCar[kurrierid] = 0;
					DeletePVar(playerid,"ImKurrierCar");
					DeletePVar(playerid,"KurrierID");
				}
				else SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du befindest dich nicht im Kurrierfahrzeug.");
			}
		}
	}
	else if(IsPlayerInRangeOfPoint(playerid,5.0,873.8837,-14.7565,62.9002))
	{
 		if(SpielerInfo[playerid][sFraktion] == SpielerInfo[BankAttacker][sFraktion])
	    {
	        if(GetPlayerVehicleID(playerid) == BankRobVan)
	        {
		        new str[144];
		        if(FahrzeugInfo[vehicleid][fBankrob] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du sitzt nicht im Fluchtwagen.");
			    SendClientMessage(playerid,COLOR_SUPER,"Herzlichen Glückwunsch! Der Bankrob war erfolgreich.");
			    format(str,sizeof(str),"Du konntest insgesamt %d$ erbeuten.",BankRobGeldGesamt);
			    SendClientMessage(playerid,COLOR_INFO,str);
			    GivePlayerMoneyEx(playerid,BankRobGeldGesamt);
			    BankRobGeldGesamt = 0;
			    DeleteVehicle(BankRobVan);
		        DisablePlayerCheckpoint(playerid);
		        BankAttacker = -1;
		        BankRobVan = INVALID_VEHICLE_ID;
			}
			else SetPlayerCheckpointEx(playerid,873.8837,-14.7565,62.9002,5.0);
		}
    }
	new Float:x,Float:y,Float:z;
	GetVehiclePos(BankRobVan,x,y,z);
	if(IsPlayerInRangeOfPoint(playerid,5.0,x,y,z))
	{
	    if(SpielerInfo[playerid][sFraktion] == SpielerInfo[BankAttacker][sFraktion])
	    {
			if(GetPVarInt(playerid,"HatGeldsack") == 1)
			{
			    new str3[144];
			    new sackid = GetPVarInt(playerid,"Geldsack");
			    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DUCK);
			    BankRobGeldGesamt += BankRobGeld[sackid];
			    format(str3,sizeof(str3),"~w~ GELD IM VAN: ~b~ %d$",BankRobGeldGesamt);
  	    		PlayerTextDrawSetString(BankAttacker, BankraubTD[BankAttacker][3], str3);
			    format(str3,sizeof(str3),"Du hast %d$ in den Van gelegt.",BankRobGeld[sackid]);
		    	SendClientMessage(playerid,COLOR_SUPER,str3);
			    DeletePVar(playerid,"HatGeldsack");
			    DeletePVar(playerid,"Geldsack");
			    RemovePlayerAttachedObject(playerid, ATTACH_INDEX_GELDSACK);
			    DisablePlayerCheckpoint(playerid);
			}
		}
	}
	if(schulung[playerid] == 1)
    {
		if(IsPlayerInRangeOfPoint(playerid,5.0,2131.4434,-1913.7465,13.1203))
		{
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpointEx(playerid,2185.1831,-1896.4948,13.1653, 5.0);
		}
		else if(IsPlayerInRangeOfPoint(playerid,5.0,2185.1831,-1896.4948,13.1653))
		{
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpointEx(playerid,2218.2236,-1774.7302,13.0326, 5.0);
		}
		else if(IsPlayerInRangeOfPoint(playerid,5.0,2218.2236,-1774.7302,13.0326))
		{
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpointEx(playerid,2493.2781,-1734.3680,13.1198, 5.0);
		}
		else if(IsPlayerInRangeOfPoint(playerid,5.0,2493.2781,-1734.3680,13.1198))
		{
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpointEx(playerid,2514.2424,-1913.6000,13.0790, 5.0);
		}
		else if(IsPlayerInRangeOfPoint(playerid,5.0,2514.2424,-1913.6000,13.0790))
		{
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpointEx(playerid,2691.8303,-1933.6136,13.0780, 5.0);
		}
		else if(IsPlayerInRangeOfPoint(playerid,5.0,2691.8303,-1933.6136,13.0780))
		{
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpointEx(playerid,2711.2573,-2035.3756,13.0526, 5.0);
		}
		else if(IsPlayerInRangeOfPoint(playerid,5.0,2711.2573,-2035.3756,13.0526))
		{
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpointEx(playerid,2380.7014,-2046.9449,14.6754, 5.0);
		}
		else if(IsPlayerInRangeOfPoint(playerid,5.0,2380.7014,-2046.9449,14.6754))
		{
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpointEx(playerid,2291.0898,-2069.2493,13.1047, 5.0);
		}
		else if(IsPlayerInRangeOfPoint(playerid,5.0,2291.0898,-2069.2493,13.1047))
		{
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpointEx(playerid,2217.2590,-1959.3469,13.0540, 5.0);
		}
		else if(IsPlayerInRangeOfPoint(playerid,5.0,2217.2590,-1959.3469,13.0540))
		{
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpointEx(playerid,2152.0547,-1891.9957,13.0774, 5.0);
		}
   		else if(IsPlayerInRangeOfPoint(playerid,5.0,2152.0547,-1891.9957,13.0774))
		{
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpointEx(playerid,2152.0547,-1891.9957,13.0774, 5.0);
		}
   		else if(IsPlayerInRangeOfPoint(playerid,5.0,2152.0547,-1891.9957,13.0774))
   		{
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpointEx(playerid,2104.5325,-1908.7010,13.1209, 5.0);
		}
   		else if(IsPlayerInRangeOfPoint(playerid,5.0,2104.5325,-1908.7010,13.1209))
		{
	  		KillTimer(TachoTimer[playerid]);
			SpielerInfo[playerid][sCarLic] = 1;
			SendClientMessage(playerid, COLOR_SUPER, "Du hast die Praxis bestanden und den Autoschein erhalten. +25 EXP!");
			DisablePlayerCheckpoint(playerid);
			GivePlayerEXP(playerid,25);
			DeletePVar(playerid,"FahrschulStunde");
			DeletePVar(playerid,"FahrschulCar");
			DeletePVar(playerid,"FSchein");
			DeletePVar(playerid,"HatFahrschulCar");
			schulung[playerid] = 0;
			FahrschulCar[vehicleid] = 0;
			Fehlerpunkte[playerid] = 0;
			DestroyDynamic3DTextLabel(FahrzeugInfo[vehicleid][fLabel]);
			FahrzeugInfo[vehicleid][fLabel] = Text3D:INVALID_3DTEXT_ID;
			RemovePlayerFromVehicle(playerid);
			DeleteVehicle(vehicleid);
		}
	}
	if(schulung[playerid] == 3)
    {
		if(IsPlayerInRangeOfPoint(playerid,5.0,2131.4434,-1913.7465,13.1203))
		{
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpointEx(playerid,2185.1831,-1896.4948,13.1653, 5.0);
		}
		else if(IsPlayerInRangeOfPoint(playerid,5.0,2185.1831,-1896.4948,13.1653))
		{
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpointEx(playerid,2218.2236,-1774.7302,13.0326, 5.0);
		}
		else if(IsPlayerInRangeOfPoint(playerid,5.0,2218.2236,-1774.7302,13.0326))
		{
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpointEx(playerid,2493.2781,-1734.3680,13.1198, 5.0);
		}
		else if(IsPlayerInRangeOfPoint(playerid,5.0,2493.2781,-1734.3680,13.1198))
		{
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpointEx(playerid,2514.2424,-1913.6000,13.0790, 5.0);
		}
		else if(IsPlayerInRangeOfPoint(playerid,5.0,2514.2424,-1913.6000,13.0790))
		{
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpointEx(playerid,2691.8303,-1933.6136,13.0780, 5.0);
		}
		else if(IsPlayerInRangeOfPoint(playerid,5.0,2691.8303,-1933.6136,13.0780))
		{
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpointEx(playerid,2711.2573,-2035.3756,13.0526, 5.0);
		}
		else if(IsPlayerInRangeOfPoint(playerid,5.0,2711.2573,-2035.3756,13.0526))
		{
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpointEx(playerid,2380.7014,-2046.9449,14.6754, 5.0);
		}
		else if(IsPlayerInRangeOfPoint(playerid,5.0,2380.7014,-2046.9449,14.6754))
		{
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpointEx(playerid,2291.0898,-2069.2493,13.1047, 5.0);
		}
		else if(IsPlayerInRangeOfPoint(playerid,5.0,2291.0898,-2069.2493,13.1047))
		{
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpointEx(playerid,2217.2590,-1959.3469,13.0540, 5.0);
		}
		else if(IsPlayerInRangeOfPoint(playerid,5.0,2217.2590,-1959.3469,13.0540))
		{
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpointEx(playerid,2152.0547,-1891.9957,13.0774, 5.0);
		}
   		else if(IsPlayerInRangeOfPoint(playerid,5.0,2152.0547,-1891.9957,13.0774))
		{
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpointEx(playerid,2152.0547,-1891.9957,13.0774, 5.0);
		}
   		else if(IsPlayerInRangeOfPoint(playerid,5.0,2152.0547,-1891.9957,13.0774))
   		{
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpointEx(playerid,2104.5325,-1908.7010,13.1209, 5.0);
		}
   		else if(IsPlayerInRangeOfPoint(playerid,5.0,2104.5325,-1908.7010,13.1209))
		{
		    KillTimer(TachoTimer[playerid]);
			SpielerInfo[playerid][sTruckLic] = 1;
			SendClientMessage(playerid, COLOR_SUPER, "Du hast die Praxis bestanden und den LKWschein erhalten. +25 EXP!");
			DisablePlayerCheckpoint(playerid);
			GivePlayerEXP(playerid,25);
			DeletePVar(playerid,"FahrschulStunde");
			DeletePVar(playerid,"FSchein");
			DeletePVar(playerid,"FahrschulCar");
			DeletePVar(playerid,"HatFahrschulCar");
			schulung[playerid] = 0;
			FahrschulCar[vehicleid] = 0;
			Fehlerpunkte[playerid] = 0;
			DestroyDynamic3DTextLabel(FahrzeugInfo[vehicleid][fLabel]);
			FahrzeugInfo[vehicleid][fLabel] = Text3D:INVALID_3DTEXT_ID;
			RemovePlayerFromVehicle(playerid);
			DeleteVehicle(vehicleid);
  		}
	}
	if(schulung[playerid] == 4)
    {
		if(IsPlayerInRangeOfPoint(playerid,5.0,2131.4434,-1913.7465,13.1203))
		{
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpointEx(playerid,2185.1831,-1896.4948,13.1653, 5.0);
		}
		else if(IsPlayerInRangeOfPoint(playerid,5.0,2185.1831,-1896.4948,13.1653))
		{
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpointEx(playerid,2218.2236,-1774.7302,13.0326, 5.0);
		}
		else if(IsPlayerInRangeOfPoint(playerid,5.0,2218.2236,-1774.7302,13.0326))
		{
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpointEx(playerid,2493.2781,-1734.3680,13.1198, 5.0);
		}
		else if(IsPlayerInRangeOfPoint(playerid,5.0,2493.2781,-1734.3680,13.1198))
		{
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpointEx(playerid,2514.2424,-1913.6000,13.0790, 5.0);
		}
		else if(IsPlayerInRangeOfPoint(playerid,5.0,2514.2424,-1913.6000,13.0790))
		{
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpointEx(playerid,2691.8303,-1933.6136,13.0780, 5.0);
		}
		else if(IsPlayerInRangeOfPoint(playerid,5.0,2691.8303,-1933.6136,13.0780))
		{
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpointEx(playerid,2711.2573,-2035.3756,13.0526, 5.0);
		}
		else if(IsPlayerInRangeOfPoint(playerid,5.0,2711.2573,-2035.3756,13.0526))
		{
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpointEx(playerid,2380.7014,-2046.9449,14.6754, 5.0);
		}
		else if(IsPlayerInRangeOfPoint(playerid,5.0,2380.7014,-2046.9449,14.6754))
		{
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpointEx(playerid,2291.0898,-2069.2493,13.1047, 5.0);
		}
		else if(IsPlayerInRangeOfPoint(playerid,5.0,2291.0898,-2069.2493,13.1047))
		{
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpointEx(playerid,2217.2590,-1959.3469,13.0540, 5.0);
		}
		else if(IsPlayerInRangeOfPoint(playerid,5.0,2217.2590,-1959.3469,13.0540))
		{
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpointEx(playerid,2152.0547,-1891.9957,13.0774, 5.0);
		}
   		else if(IsPlayerInRangeOfPoint(playerid,5.0,2152.0547,-1891.9957,13.0774))
		{
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpointEx(playerid,2152.0547,-1891.9957,13.0774, 5.0);
		}
   		else if(IsPlayerInRangeOfPoint(playerid,5.0,2152.0547,-1891.9957,13.0774))
   		{
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpointEx(playerid,2104.5325,-1908.7010,13.1209, 5.0);
		}
   		else if(IsPlayerInRangeOfPoint(playerid,5.0,2104.5325,-1908.7010,13.1209))
		{
		    KillTimer(TachoTimer[playerid]);
			SpielerInfo[playerid][sBikeLic] = 1;
			SendClientMessage(playerid, COLOR_SUPER, "Du hast die Praxis bestanden und den Motorradschein erhalten. +25 EXP!");
			DisablePlayerCheckpoint(playerid);
			GivePlayerEXP(playerid,25);
			DeletePVar(playerid,"FahrschulStunde");
			DeletePVar(playerid,"FahrschulCar");
			DeletePVar(playerid,"FSchein");
			DeletePVar(playerid,"HatFahrschulCar");
			schulung[playerid] = 0;
			FahrschulCar[vehicleid] = 0;
			Fehlerpunkte[playerid] = 0;
			DestroyDynamic3DTextLabel(FahrzeugInfo[vehicleid][fLabel]);
			FahrzeugInfo[vehicleid][fLabel] = Text3D:INVALID_3DTEXT_ID;
			RemovePlayerFromVehicle(playerid);
			DeleteVehicle(vehicleid);
		}
    }
    else if(schulung[playerid] == 5)
    {
  		if(IsPlayerInRangeOfPoint(playerid,5.0,-3078.3984,631.2441,0.4050))
		{
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpointEx(playerid,-3219.0916,871.5428,0.1375, 5.0);
		}
		else if(IsPlayerInRangeOfPoint(playerid,5.0,-3219.0916,871.5428,0.1375))
		{
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpointEx(playerid,-3166.7493,1258.2539,0.2166, 5.0);
		}
		else if(IsPlayerInRangeOfPoint(playerid,5.0,-3166.7493,1258.2539,0.2166))
		{
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpointEx(playerid,-3358.6602,1420.8948,0.2525, 5.0);
		}
		else if(IsPlayerInRangeOfPoint(playerid,5.0,-3358.6602,1420.8948,0.2525))
		{
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpointEx(playerid,-3418.0669,1085.7467,0.0043, 5.0);
		}
		else if(IsPlayerInRangeOfPoint(playerid,5.0,-3418.0669,1085.7467,0.0043))
		{
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpointEx(playerid,-3341.1541,760.6445,0.0294, 5.0);
		}
		else if(IsPlayerInRangeOfPoint(playerid,5.0,-3341.1541,760.6445,0.0294))
		{
			DisablePlayerCheckpoint(playerid);
			SetPlayerCheckpointEx(playerid,-2921.9160,515.4715,0.0556, 5.0);
		}
		else if(IsPlayerInRangeOfPoint(playerid,5.0,-2921.9160,515.4715,0.0556))
		{
		    KillTimer(TachoTimer[playerid]);
			SpielerInfo[playerid][sBootLic] = 1;
			SendClientMessage(playerid, COLOR_SUPER, "Du hast die Praxis bestanden und den Bootschein erhalten. +25 EXP!");
			DisablePlayerCheckpoint(playerid);
			GivePlayerEXP(playerid,25);
			DeletePVar(playerid,"FahrschulStunde");
			DeletePVar(playerid,"FahrschulCar");
			DeletePVar(playerid,"FSchein");
			DeletePVar(playerid,"HatFahrschulCar");
			schulung[playerid] = 0;
			FahrschulCar[vehicleid] = 0;
			DestroyDynamic3DTextLabel(FahrzeugInfo[vehicleid][fLabel]);
			FahrzeugInfo[vehicleid][fLabel] = Text3D:INVALID_3DTEXT_ID;
			RemovePlayerFromVehicle(playerid);
			DeleteVehicle(vehicleid);
	    	SetPlayerPos(playerid,2114.9937,-1930.7943,13.3838);
		    SetPlayerFacingAngle(playerid,357.4838);
		}
    }
	return 1;
}

public OnPlayerPickUpDynamicPickup(playerid, pickupid)
{
	//HalloweenEvent
	Hallo_PlayerPickUpDynamicPickup(playerid, pickupid);
	return 1;
}

public OnPlayerEnterDynamicCP(playerid, checkpointid)
{
	//MiningSystem
	//Mining_PlayerEnterDynamicCP(playerid, checkpointid);
	//FishingJob
	FishingJob_OnPlayerEnterDynamicCP(playerid, checkpointid);
	//DynamicRobbery
	DynamicRobberyDynEntCheckpoint(playerid, checkpointid);
	//FastFoodStood
	FastFoodStood_EnterDynamicCP(playerid, checkpointid);
	return 1;
}

public OnPlayerLeaveDynamicCP(playerid)
{
	DynamicRobberyDynLeaCheckpoint(playerid);
	return 1;
}

public OnPlayerLeaveCheckpoint(playerid)
{
	return 1;
}

public OnPlayerEnterRaceCheckpoint(playerid)
{
	Race_PlayerEnterRaceCheckpoint(playerid);
	if(schulung[playerid] == 2)
    {
  		if(IsPlayerInRangeOfPoint(playerid,5.0,1055.9390,-1352.7063,63.7135))
		{
        	DisablePlayerRaceCheckpoint(playerid);
        	SetPlayerRaceCheckpoint(playerid,CP_TYPE:3,1270.9484,-1351.9408,126.7743,0,0,0,5.0);
        }
		if(IsPlayerInRangeOfPoint(playerid,5.0,1270.9484,-1351.9408,126.7743))
		{
        	DisablePlayerRaceCheckpoint(playerid);
        	SetPlayerRaceCheckpoint(playerid,CP_TYPE:3,1498.5369,-1436.3499,179.1459,0,0,0,5.0);
        }
		if(IsPlayerInRangeOfPoint(playerid,5.0,1498.5369,-1436.3499,179.1459))
		{
        	DisablePlayerRaceCheckpoint(playerid);
        	SetPlayerRaceCheckpoint(playerid,CP_TYPE:3,1774.4407,-1597.8804,206.3759,0,0,0,5.0);
        }
		if(IsPlayerInRangeOfPoint(playerid,5.0,1774.4407,-1597.8804,206.3759))
		{
        	DisablePlayerRaceCheckpoint(playerid);
        	SetPlayerRaceCheckpoint(playerid,CP_TYPE:3,2188.2087,-1843.3027,212.9565,0,0,0,5.0);
        }
		if(IsPlayerInRangeOfPoint(playerid,5.0,2188.2087,-1843.3027,212.9565))
		{
        	DisablePlayerRaceCheckpoint(playerid);
        	SetPlayerRaceCheckpoint(playerid,CP_TYPE:3,2708.8230,-1812.6624,178.0781,0,0,0,5.0);
        }
		if(IsPlayerInRangeOfPoint(playerid,5.0,2708.8230,-1812.6624,178.0781))
		{
        	DisablePlayerRaceCheckpoint(playerid);
        	SetPlayerRaceCheckpoint(playerid,CP_TYPE:3,2831.0137,-1195.6720,176.8167,0,0,0,5.0);
        }
		if(IsPlayerInRangeOfPoint(playerid,5.0,2831.0137,-1195.6720,176.8167))
		{
        	DisablePlayerRaceCheckpoint(playerid);
        	SetPlayerRaceCheckpoint(playerid,CP_TYPE:3,2391.9382,-693.3754,281.2787,0,0,0,5.0);
        }
		if(IsPlayerInRangeOfPoint(playerid,5.0,2391.9382,-693.3754,281.2787))
		{
        	DisablePlayerRaceCheckpoint(playerid);
        	SetPlayerRaceCheckpoint(playerid,CP_TYPE:3,1520.0850,-641.3022,265.1308,0,0,0,5.0);
        }

		if(IsPlayerInRangeOfPoint(playerid,5.0,1520.0850,-641.3022,265.1308))
		{
        	DisablePlayerRaceCheckpoint(playerid);
        	SetPlayerRaceCheckpoint(playerid,CP_TYPE:3,1130.4629,-861.1239,271.4177,0,0,0,5.0);
        }
		if(IsPlayerInRangeOfPoint(playerid,5.0,1130.4629,-861.1239,271.4177))
		{
        	DisablePlayerRaceCheckpoint(playerid);
        	SetPlayerRaceCheckpoint(playerid,CP_TYPE:3,988.9382,-1267.5741,190.6118,0,0,0,5.0);
        }
		if(IsPlayerInRangeOfPoint(playerid,5.0,988.9382,-1267.5741,190.6118))
		{
        	DisablePlayerRaceCheckpoint(playerid);
        	SetPlayerRaceCheckpoint(playerid,CP_TYPE:3,976.9742,-1362.1537,21.8291,0,0,0,5.0);
        }
		if(IsPlayerInRangeOfPoint(playerid,5.0,976.9742,-1362.1537,21.8291))
		{
		    KillTimer(TachoTimer[playerid]);
			new vehicleid = GetPlayerVehicleID(playerid);
			SpielerInfo[playerid][sFlugLic] = 1;
			SendClientMessage(playerid, COLOR_SUPER, "Du hast die Praxis bestanden und den Flugschein erhalten. +25 EXP!");
			DisablePlayerRaceCheckpoint(playerid);
			GivePlayerEXP(playerid,25);
			if(SpielerInfo[playerid][sAchivFlugLic] < 1)
		    {
		        ShowAchievement(playerid,"Mache deinen Flugschein","+ 100 EXP");
		        GivePlayerEXP(playerid,100);
		        SpielerInfo[playerid][sAchivFlugLic] = 1;
		    }
			DeletePVar(playerid,"FahrschulStunde");
			DeletePVar(playerid,"FSchein");
			DeletePVar(playerid,"FahrschulCar");
			DeletePVar(playerid,"HatFahrschulCar");
			schulung[playerid] = 0;
			FahrschulCar[vehicleid] = 0;
			Fehlerpunkte[playerid] = 0;
			DestroyDynamic3DTextLabel(FahrzeugInfo[vehicleid][fLabel]);
			FahrzeugInfo[vehicleid][fLabel] = Text3D:INVALID_3DTEXT_ID;
			RemovePlayerFromVehicle(playerid);
			DeleteVehicle(vehicleid);
		}
    }
	return 1;
}

public OnPlayerLeaveRaceCheckpoint(playerid)
{
	return 1;
}

public OnRconCommand(cmd[])
{
	new madecmd[32];
	format(madecmd,sizeof(madecmd),"%s",cmd);
    if(!strcmp(madecmd, "gmx", true))
	{
	    SendAdminMessage(COLOR_RED,"[KRITISCH / WARNUNG / ACHTUNG]: {FFFFFF}Blockierter RCON-CMD '/gmx' abgesandt!");
	    return 0;
	}
	else if(!strcmp(madecmd, "ban", true))
	{
	    SendAdminMessage(COLOR_RED,"[KRITISCH / WARNUNG / ACHTUNG]: {FFFFFF}Blockierter RCON-CMD '/ban' abgesandt!");
	    return 0;
	}
	else if(!strcmp(madecmd, "kick", true))
	{
	    SendAdminMessage(COLOR_RED,"[KRITISCH / WARNUNG / ACHTUNG]: {FFFFFF}Blockierter RCON-CMD '/kick' abgesandt!");
	    return 0;
	}
	if(!strcmp(madecmd, "exit", true))
	{
	    SendAdminMessage(COLOR_RED,"[KRITISCH / WARNUNG / ACHTUNG]: {FFFFFF}Blockierter RCON-CMD '/exit' abgesandt!");
	    return 0;
	}
	return 1;
}

public OnPlayerRequestSpawn(playerid)
{
    if(IsPlayerNPC(playerid))return 1;
	return 1;
}

public OnObjectMoved(objectid)
{
	AirTrafficking_OnObjectMoved(objectid);
	return 1;
}

public OnPlayerObjectMoved(playerid, objectid)
{
	return 1;
}

public OnEnterExitModShop(playerid, enterexit, interiorid)
{
	new vehicleid = GetPlayerVehicleID(playerid);
    if(enterexit == 0)//Verlassen
    {
		FahrzeugInfo[vehicleid][fTuning][0] = GetVehicleComponentInSlot(vehicleid,CARMODTYPE:0);
		FahrzeugInfo[vehicleid][fTuning][1] = GetVehicleComponentInSlot(vehicleid,CARMODTYPE:1);
		FahrzeugInfo[vehicleid][fTuning][2] = GetVehicleComponentInSlot(vehicleid,CARMODTYPE:2);
	 	FahrzeugInfo[vehicleid][fTuning][3] = GetVehicleComponentInSlot(vehicleid,CARMODTYPE:3);
		FahrzeugInfo[vehicleid][fTuning][4] = GetVehicleComponentInSlot(vehicleid,CARMODTYPE:4);
		FahrzeugInfo[vehicleid][fTuning][5] = GetVehicleComponentInSlot(vehicleid,CARMODTYPE:5);
		FahrzeugInfo[vehicleid][fTuning][6] = GetVehicleComponentInSlot(vehicleid,CARMODTYPE:6);
		FahrzeugInfo[vehicleid][fTuning][7] = GetVehicleComponentInSlot(vehicleid,CARMODTYPE:7);
		FahrzeugInfo[vehicleid][fTuning][8] = GetVehicleComponentInSlot(vehicleid,CARMODTYPE:8);
		FahrzeugInfo[vehicleid][fTuning][9] = GetVehicleComponentInSlot(vehicleid,CARMODTYPE:9);
		FahrzeugInfo[vehicleid][fTuning][10] = GetVehicleComponentInSlot(vehicleid,CARMODTYPE:10);
		FahrzeugInfo[vehicleid][fTuning][11] = GetVehicleComponentInSlot(vehicleid,CARMODTYPE:11);
		FahrzeugInfo[vehicleid][fTuning][12] = GetVehicleComponentInSlot(vehicleid,CARMODTYPE:12);
		FahrzeugInfo[vehicleid][fTuning][13] = GetVehicleComponentInSlot(vehicleid,CARMODTYPE:13);
		if(FahrzeugInfo[vehicleid][fFraktion] != 0){
        ChangeVehiclePaintjob(vehicleid, 3);
        ChangeVehicleColours(vehicleid, FrakCarFarbe1(SpielerInfo[playerid][sFraktion]), FrakCarFarbe2(SpielerInfo[playerid][sFraktion]));}
    }
    return 1;
}

public OnVehicleMod(playerid, vehicleid, component)
{
	switch(component)
	{
	    case 1008..1010: if(IsPlayerInInvalidNosVehicle(playerid)) RemoveVehicleComponent(vehicleid, component);
	}
	if(!IsComponentidCompatible(GetVehicleModel(vehicleid), component)) RemoveVehicleComponent(vehicleid, component);
	return 1;
}

public OnVehiclePaintjob(playerid, vehicleid, paintjob)
{
	return 1;
}

public OnVehicleRespray(playerid, vehicleid, colour1, colour2)
{
	return 1;
}

gMenu:TEST1_MENU(playerid, response, listitem)
{
	if(response == MENU_RESPONSE_SELECT)
    {
	    switch(listitem)
		{
    		case 0:
     		{
         		SendClientMessage(playerid, COLOR_SUPER, "Gratuliere für die richtige Antwort, es folgt Frage 2.");
				HidePlayerMenu(playerid);
         		ShowPlayerMenu(playerid, TEST2_MENU, "Fahrschule", "Fahrschulfragebogen");
			    AddPlayerMenuItem(playerid, "Antwort A", "");
			    AddPlayerMenuItem(playerid, "Antwort B", "");
			    AddPlayerMenuItem(playerid, "Antwort C", "");
 				if(GetPVarInt(playerid,"FSchein") != 2)
    		    {
 					TheoriAufgaben(playerid);
 				}
 				else
 				{
 					TheoriFlugAufgaben(playerid);
				}
    		}
    		case 1, 2:
    		{
   				ClearAnimations(playerid);
                TogglePlayerControllable(playerid,true);
    			SendClientMessage(playerid, COLOR_RED, "Du bist durchgefallen! Damit du dich und andere Verkehrsteilnehmer nicht behinderst,");
        		SendClientMessage(playerid, COLOR_RED, "ist es wichtig, dass du weist, wie du dich zu Verhalten hast.");
        		HidePlayerMenu(playerid);
        		DeletePVar(playerid,"TheoriTest");
    		}
		}
	}
	return 1;
}

gMenu:TEST2_MENU(playerid, response, listitem)
{
	if(response == MENU_RESPONSE_SELECT)
    {
	    switch(listitem)
		{
    		case 2:
    		{
				SendClientMessage(playerid, COLOR_SUPER, "Gratuliere für die richtige Antwort, es folgt Frage 2.");
				HidePlayerMenu(playerid);
				ShowPlayerMenu(playerid, TEST3_MENU, "Fahrschule", "Fahrschulfragebogen");
			    AddPlayerMenuItem(playerid, "Antwort A", "");
			    AddPlayerMenuItem(playerid, "Antwort B", "");
			    AddPlayerMenuItem(playerid, "Antwort C", "");
    			if(GetPVarInt(playerid,"FSchein") == 2)
    		    {
	 				TheoriFlugAufgaben(playerid);
 				}
 				else
 				{
	 				TheoriAufgaben(playerid);
	 			}
    		}
    		case 0, 1:
    		{
      			ClearAnimations(playerid);
                TogglePlayerControllable(playerid,true);
    			SendClientMessage(playerid, COLOR_RED, "Du bist durchgefallen! Damit du dich und andere Verkehrsteilnehmer nicht behinderst,");
        		SendClientMessage(playerid, COLOR_RED, "ist es wichtig, dass du weist, wie du dich zu Verhalten hast.");
        		HidePlayerMenu(playerid);
        		DeletePVar(playerid,"TheoriTest");
    		}
		}
	}
	return 1;
}

gMenu:TEST3_MENU(playerid, response, listitem)
{
	if(response == MENU_RESPONSE_SELECT)
    {
	    switch(listitem)
		{
    		case 2:
    		{
         		SendClientMessage(playerid, COLOR_SUPER, "Gratuliere für die richtige Antwort, es folgt Frage 2.");
				HidePlayerMenu(playerid);
         		ShowPlayerMenu(playerid, TEST4_MENU, "Fahrschule", "Fahrschulfragebogen");
			    AddPlayerMenuItem(playerid, "Antwort A", "");
			    AddPlayerMenuItem(playerid, "Antwort B", "");
			    AddPlayerMenuItem(playerid, "Antwort C", "");
    			if(GetPVarInt(playerid,"FSchein") == 2)
    		    {
 					TheoriFlugAufgaben(playerid);
 				}
 				else
 				{
 					TheoriAufgaben(playerid);
				}
			}
			case 0, 1:
    		{
      			ClearAnimations(playerid);
                TogglePlayerControllable(playerid,true);
    			SendClientMessage(playerid, COLOR_RED, "Du bist durchgefallen! Damit du dich und andere Verkehrsteilnehmer nicht behinderst,");
        		SendClientMessage(playerid, COLOR_RED, "ist es wichtig, dass du weist, wie du dich zu Verhalten hast.");
        		HidePlayerMenu(playerid);
        		DeletePVar(playerid,"TheoriTest");
    		}
		}
	}
	return 1;
}

gMenu:TEST4_MENU(playerid, response, listitem)
{
	if(response == MENU_RESPONSE_SELECT)
    {
	    switch(listitem)
		{
    		case 0:
    		{
      			ClearAnimations(playerid);
                TogglePlayerControllable(playerid, true);
    			SendClientMessage(playerid, COLOR_RED, "Du bist durchgefallen! Damit du dich und andere Verkehrsteilnehmer nicht behinderst,");
        		SendClientMessage(playerid, COLOR_RED, "ist es wichtig, dass du weist, wie du dich zu Verhalten hast.");
        		HidePlayerMenu(playerid);
        		DeletePVar(playerid,"TheoriTest");
			}
    		case 1:
    		{
                ClearChat(playerid, 10);
                ClearAnimations(playerid);
                TogglePlayerControllable(playerid, true);
	    		new Float:Pos[3];
		    	GetPlayerPos(playerid,Pos[0],Pos[1],Pos[2]);
		    	SetPlayerPos(playerid,Pos[0],Pos[1]+1,Pos[2]);
                DeletePVar(playerid,"TheoriTest");
		    	SetPVarInt(playerid,"FahrschulStunde",1);
   				if(GetPVarInt(playerid,"FSchein") == 2)
    		    {
	                SendClientMessage(playerid,COLOR_SUPER,"Super! Du hast die Theorie nun hinter dir. Es folgt im direkten Anschluss die Praxis.");
					SendClientMessage(playerid,COLOR_INFO,"Hinweis: Verlasse die Fahrschule und steige in den Helikopter.");
			    }
			    else
			    {
       				SendClientMessage(playerid,COLOR_SUPER,"Super! Du hast die Theorie nun hinter dir. Es folgt im direkten Anschluss die Praxis.");
					SendClientMessage(playerid,COLOR_INFO,"Hinweis: Verlasse die Fahrschule und steige in das Prüffahrzeug.");
			    }
			    HidePlayerMenu(playerid);
    		}
    		case 2:
    		{
    		    ClearAnimations(playerid);
                TogglePlayerControllable(playerid, true);
    			SendClientMessage(playerid, COLOR_RED, "Du bist durchgefallen! Damit du dich und andere Verkehrsteilnehmer nicht behinderst,");
        		SendClientMessage(playerid, COLOR_RED, "ist es wichtig, dass du weist, wie du dich zu Verhalten hast.");
        		HidePlayerMenu(playerid);
        		DeletePVar(playerid,"TheoriTest");
    		}
		}
	}
	return 1;
}

gMenu:RATHAUS_MENU(playerid, response, listitem)
{
    if(response == MENU_RESPONSE_SELECT)
    {
	    switch(listitem)
		{
			case 0://Nebenjobs
			{
				if(SpielerInfo[playerid][sPerso] == 0)
				{
				    SendClientMessage(playerid,COLOR_WHITE," ");
				    SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Du benötigst einen zunächst Personalausweis.");
					TogglePlayerControllable(playerid, true);
					SetCameraBehindPlayer(playerid);
					DeletePVar(playerid,"Rathaus");
					HidePlayerMenu(playerid);
				}
				if(SpielerInfo[playerid][sBankPin] == 0)
				{
				    SendClientMessage(playerid,COLOR_WHITE," ");
				    SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Du benötigst ein Bankkonto um einen Nebenjob annehmen zu können.");
					TogglePlayerControllable(playerid, true);
					SetCameraBehindPlayer(playerid);
					DeletePVar(playerid,"Rathaus");
					HidePlayerMenu(playerid);
				}
				else
				{
					if(GetPVarInt(playerid,"TruckerDuty") == 0 && GetPVarInt(playerid,"PizzaboteDuty") == 0 &&
					GetPVarInt(playerid,"KehrmaschinenDuty") == 0  && GetPVarInt(playerid,"PilotDuty") == 0 &&
					GetPVarInt(playerid,"BusfahrerDuty") == 0 && GetPVarInt(playerid,"MüllmannDuty")  == 0 &&
					GetPVarInt(playerid,"LandwirtDuty") == 0 && GetPVarInt(playerid,"GeldlieferantDuty") == 0 &&
					GetPVarInt(playerid,"ElektrikerDuty") == 0)
					{
					    if(SpielerInfo[playerid][sNebenjob] < 1)
		 				{
							TogglePlayerControllable(playerid, true);
							SetCameraBehindPlayer(playerid);
							SendClientMessage(playerid,COLOR_WHITE," ");
						    SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Du bist also auf der Suche nach Arbeit.");
						    SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Wir bieten viele Nebenjobs in ganz San Andreas an.");
							ShowPlayerDialog(playerid,DIALOG_NEBENJOBS,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Nebenjobs","LKW-Fahrer / Trucker\nPizzabote\nKehrmaschinenfahrer\nPilot\nBusfahrer\nMüllmann\nLandwirt\nGeldlieferant\nElektriker\nZugfahrer\nDetektiv\nLangstreckenfahrer\nFluglieferant\nHochseefischer","Weiter","Zurück");
						}
						else
						{
							SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Kündige erst dein jetzigen Nebenjob, um dir ein neuen beantragen zu können.");
							TogglePlayerControllable(playerid, true);
							SetCameraBehindPlayer(playerid);
							DeletePVar(playerid,"Rathaus");
						}
					}
					else
					{
						SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Kündige erst dein jetzigen Nebenjob, um dir ein neuen beantragen zu können.");
						TogglePlayerControllable(playerid, true);
						SetCameraBehindPlayer(playerid);
						DeletePVar(playerid,"Rathaus");
						SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Gehe erst in den Feierabend, um ein neuen Nebenjob aussuchen zu können.");
					}
				}
			}
			case 1://Ausweise
			{
				if(SpielerInfo[playerid][sBankPin] == 0) {
				    SendClientMessage(playerid,COLOR_WHITE," ");
				    SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Du benötigst ein Bankkonto um einen Ausweis zu erwerben.");
					TogglePlayerControllable(playerid, true);
					SetCameraBehindPlayer(playerid);
					DeletePVar(playerid,"Rathaus");
					HidePlayerMenu(playerid);
					return 1;
				}

				SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Hier hast du unsere Auswahl an unseren Ausweisen.");
				
				ShowTollPassDialog(playerid);

				TogglePlayerControllable(playerid, true);
				SetCameraBehindPlayer(playerid);
				DeletePVar(playerid,"Rathaus");
				HidePlayerMenu(playerid);
			}
			case 2://Versicherungen
			{
				if(SpielerInfo[playerid][sBankPin] == 0) {
				    SendClientMessage(playerid,COLOR_WHITE," ");
				    SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Du benötigst ein Bankkonto um eine Versicherung abschließen zu können.");
					TogglePlayerControllable(playerid, true);
					SetCameraBehindPlayer(playerid);
					DeletePVar(playerid,"Rathaus");
					HidePlayerMenu(playerid);
					return 1;
				}

				SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Hier hast du unsere Auswahl an unseren Versicherungen.");
				
				ShowInsuranceDialog(playerid);

				TogglePlayerControllable(playerid, true);
				SetCameraBehindPlayer(playerid);
				DeletePVar(playerid,"Rathaus");
				HidePlayerMenu(playerid);
			}
			case 3://Verlassen
			{
				SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Bis zum nächsten mal.");
				TogglePlayerControllable(playerid, true);
				SetCameraBehindPlayer(playerid);
				DeletePVar(playerid,"Rathaus");
				HidePlayerMenu(playerid);
			}
		}
	}
	return 1;
}

public OnPlayerSelectedMenuRow(playerid, row)
{
	new Menu:CurrentMenu = GetPlayerMenu(playerid);
	if(CurrentMenu == Schwarzmarkt)
	{
		switch(row)
		{
			case 0://Nebenjobs
			{
				ShowPlayerDialog(playerid,DIALOG_SMNEBENJOB,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Schwarzmarkt Nebenjobs","Drogendealer\nWaffendealer","Weiter","Abbrechen");
			}
			case 1://Wanteds entfernen
			{
			    if(GetPlayerWantedLevelEx(playerid) < 10)
				{
					SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Emilio{FFFFFF} sagt: Dein ernst? Unter 10 Wanteds mach ich gar nichts für dich du Meme.");
					TogglePlayerControllable(playerid, true);
					SetCameraBehindPlayer(playerid);
					DeletePVar(playerid,"Schwarzmarkt");
					return 1;
				}
				if(GetPVarInt(playerid,"SchwarzmarktHackGemacht") > 0)
				{
                    SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Emilio{FFFFFF} sagt: Bruder chill mal digga! Ich tuh dir diesen Gefallen nur jede halbe Stunde!");
					TogglePlayerControllable(playerid, true);
					SetCameraBehindPlayer(playerid);
					DeletePVar(playerid,"Schwarzmarkt");
					return 1;
				}
				if(SpielerInfo[playerid][sMissionSolved][6] < 1 && GetPVarInt(playerid,"MissionActive") == 6)
				{
				    SpielerInfo[playerid][sMissionSolved][6] = 1;
				    ShowAchievement(playerid,"Mission 6","Belohnung: 100 EXP");
				    GivePlayerEXP(playerid,100);
				}
				SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Emilio{FFFFFF} sagt: Mal sehen was ich tun kann. Gib mir einen Moment...");
				SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Emilio versucht deine Wanteds zu entfernen. Dieser Vorgang wird etwa 2 Minuten dauern!");
				SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Bleib in Reichweite oder Emilio bricht den Exploit in die Systeme der Polizei ab!");
				foreach(new i : Player)
				{
				    if(SpielerInfo[i][sFraktion] == 2 || SpielerInfo[i][sFraktion] == 6)
				    {
				        SendClientMessage(i,COLOR_BLUE,"[Zentrale]: {FFFFFF}Achtung, an alle Einheiten!");
				        SendClientMessage(i,COLOR_BLUE,"[Zentrale]: {FFFFFF}Es wird versucht sich in das System zu hacken. Standort: Schwarzmarkt!");
				        SendClientMessage(i,COLOR_BLUE,"[Zentrale]: {FFFFFF}Der Exploit wird in voraussichtlich 2 Minuten erfolgreich gewesen sein!");
				    }
				}
				SetPVarInt(playerid,"NoPAYBACK",1);
				GivePlayerMoneyEx(playerid,-5000);
				SetTimerEx("SchwarzmarktHack",120000,false,"i",playerid);
				DeletePVar(playerid,"Schwarzmarkt");
			}
			case 2://Bombe verkaufen
			{
			    if(SpielerInfo[playerid][sFraktion] < 9 || SpielerInfo[playerid][sFraktion] > 18)
			    {
			        NichtBerechtigt
			        TogglePlayerControllable(playerid, true);
					SetCameraBehindPlayer(playerid);
					DeletePVar(playerid,"Schwarzmarkt");
					return 1;
			    }
			    if(SpielerInfo[playerid][sBombe] < 1)
				{
					SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Emilio{FFFFFF} sagt: Du hast ja nicht mal eine Bombe dabei Bruder...");
					TogglePlayerControllable(playerid, true);
					SetCameraBehindPlayer(playerid);
					DeletePVar(playerid,"Schwarzmarkt");
					return 1;
				}
			    SpielerInfo[playerid][sBombe] -= 1;
				FrakInfo[SpielerInfo[playerid][sFraktion]][fiFrakKasse] += 5000;
				SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Emilio{FFFFFF} sagt: Nices Geschäft. Die 7.500$ hab ich auf das Konto deiner Fraktion überwießen.");
				TogglePlayerControllable(playerid, true);
				SetCameraBehindPlayer(playerid);
				DeletePVar(playerid,"Schwarzmarkt");
			}
			case 3://Masken kaufen
			{
			    new frakid = SpielerInfo[playerid][sFraktion];
			    if(FrakInfo[frakid][fiMasken] > 14)
			    {
			        SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Emilio{FFFFFF} sagt: Bruder laut meiner Datenbank habt ihr noch 15 von 15 Masken.");
			        TogglePlayerControllable(playerid, true);
					SetCameraBehindPlayer(playerid);
					DeletePVar(playerid,"Schwarzmarkt");
					return 1;
			    }
			    else
			    {
			        new neueMasken = 15-FrakInfo[frakid][fiMasken];
			        new preis = neueMasken*1000;
			        new string[128];
			        format(string,sizeof(string),"{FF0000}Emilio{FFFFFF} sagt: Alles klar, ich habe euch %d neue Masken bereitgestellt. Das sind $%d.",neueMasken,preis);
			        SendClientMessage(playerid,COLOR_WHITE,string);
			        FrakInfo[frakid][fiMasken] = 15;
			        TogglePlayerControllable(playerid, true);
					SetCameraBehindPlayer(playerid);
					DeletePVar(playerid,"Schwarzmarkt");
					FrakInfo[frakid][fiFrakKasse] -= preis;
					return 1;
			    }
			}
			case 4://Aufwiedersehen
			{
				SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Emilio{FFFFFF} sagt: Komm wieder, wenn du was brauchst.");
				TogglePlayerControllable(playerid, true);
				SetCameraBehindPlayer(playerid);
				DeletePVar(playerid,"Schwarzmarkt");
			}
		}
	}
	if(CurrentMenu == BSNMenu)//BSN Menu
    {
	    switch(row)
	    {
		    case 0://Cola
			{
				if(GetPlayerMoneyEx(playerid) < 2)
				{
					TogglePlayerControllable(playerid, true);
					HideMenuForPlayer(BSNMenu,playerid);
					SetCameraBehindPlayer(playerid);
					SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld dabei.");
				}
				else
				{
	 				new Float:Health;
					GetPlayerHealth(playerid,Health);
					if(Health >= 100)
					{
                        SetPlayerHealth(playerid,100);
                        SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Mehr als 100HP sind hier nicht möglich.");
                        TogglePlayerControllable(playerid, true);
						HideMenuForPlayer(BSNMenu,playerid);
						SetCameraBehindPlayer(playerid);
                        return 1;
					}
					SendClientMessage(playerid,COLOR_SUPER,"Hier ihre Cola. Ich wünsche ihnen noch einen angenehmen Tag. Aufwiedersehen.");
					GivePlayerMoneyEx(playerid,-2);
					TogglePlayerControllable(playerid, true);
					HideMenuForPlayer(BSNMenu,playerid);
					SetCameraBehindPlayer(playerid);
					SetPlayerHealth(playerid,Health+5);
				}
			}
			case 1://Cheeseburger
			{
				if(GetPlayerMoneyEx(playerid) < 3)
				{
					TogglePlayerControllable(playerid, true);
					HideMenuForPlayer(BSNMenu,playerid);
					SetCameraBehindPlayer(playerid);
					SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld dabei.");
				}
				else
				{
	 				new Float:Health;
					GetPlayerHealth(playerid,Health);
					if(Health >= 100)
					{
                        SetPlayerHealth(playerid,100);
                        SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Mehr als 100HP sind hier nicht möglich.");
                        TogglePlayerControllable(playerid, true);
						HideMenuForPlayer(BSNMenu,playerid);
						SetCameraBehindPlayer(playerid);
                        return 1;
					}
					SendClientMessage(playerid,COLOR_SUPER,"Hier ihr Cheeseburger. Ich wünsche ihnen noch einen angenehmen Tag. Aufwiedersehen.");
					GivePlayerMoneyEx(playerid,-3);
					TogglePlayerControllable(playerid, true);
					HideMenuForPlayer(BSNMenu,playerid);
					SetCameraBehindPlayer(playerid);
					SetPlayerHealth(playerid,Health+10);
				}
			}
			case 2://pommes
			{
				if(GetPlayerMoneyEx(playerid) < 5)
				{
					TogglePlayerControllable(playerid, true);
					HideMenuForPlayer(BSNMenu,playerid);
					SetCameraBehindPlayer(playerid);
					SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld dabei.");
				}
				else
				{
					new Float:Health;
					GetPlayerHealth(playerid,Health);
					if(Health >= 100)
					{
                        SetPlayerHealth(playerid,100);
                        SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Mehr als 100HP sind hier nicht möglich.");
                        TogglePlayerControllable(playerid, true);
						HideMenuForPlayer(BSNMenu,playerid);
						SetCameraBehindPlayer(playerid);
                        return 1;
					}
					SendClientMessage(playerid,COLOR_SUPER,"Hier ihre Pommes. Ich wünsche ihnen noch einen angenehmen Tag. Aufwiedersehen.");
					GivePlayerMoneyEx(playerid,-5);
					TogglePlayerControllable(playerid, true);
					HideMenuForPlayer(BSNMenu,playerid);
					SetCameraBehindPlayer(playerid);
					SetPlayerHealth(playerid,Health+15);
				}
			}
			case 3://big mac
			{
				if(GetPlayerMoneyEx(playerid) < 6)
				{
					TogglePlayerControllable(playerid, true);
					HideMenuForPlayer(BSNMenu,playerid);
					SetCameraBehindPlayer(playerid);
					SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld dabei.");
				}
				else
				{
					new Float:Health;
					GetPlayerHealth(playerid,Health);
					if(Health >= 100)
					{
                        SetPlayerHealth(playerid,100);
                        SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Mehr als 100HP sind hier nicht möglich.");
                        TogglePlayerControllable(playerid, true);
						HideMenuForPlayer(BSNMenu,playerid);
						SetCameraBehindPlayer(playerid);
                        return 1;
					}
					SendClientMessage(playerid,COLOR_SUPER,"Hier ihr Big Mac. Ich wünsche ihnen noch einen angenehmen Tag. Aufwiedersehen.");
					GivePlayerMoneyEx(playerid,-6);
					TogglePlayerControllable(playerid, true);
					HideMenuForPlayer(BSNMenu,playerid);
					SetCameraBehindPlayer(playerid);
					SetPlayerHealth(playerid,Health+20);
				}
			}
			case 4://Hamburger royal
			{
				if(GetPlayerMoneyEx(playerid) < 12)
				{
					TogglePlayerControllable(playerid, true);
					HideMenuForPlayer(BSNMenu,playerid);
					SetCameraBehindPlayer(playerid);
					SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld dabei.");
				}
				else
				{
					new Float:Health;
					GetPlayerHealth(playerid,Health);
					if(Health >= 100)
					{
                        SetPlayerHealth(playerid,100);
                        SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Mehr als 100HP sind hier nicht möglich.");
                        TogglePlayerControllable(playerid, true);
						HideMenuForPlayer(BSNMenu,playerid);
						SetCameraBehindPlayer(playerid);
                        return 1;
					}
					SendClientMessage(playerid,COLOR_SUPER,"Hier ihr Hamburger Royal. Ich wünsche ihnen noch einen angenehmen Tag. Aufwiedersehen.");
					GivePlayerMoneyEx(playerid,-12);
					TogglePlayerControllable(playerid, true);
					HideMenuForPlayer(BSNMenu,playerid);
					SetCameraBehindPlayer(playerid);
					SetPlayerHealth(playerid,Health+35);
				}
			}
		}
    }
    new TuningID = GetPlayerTuningID(playerid);
    if(TuningID != INVALID_TUNING_ID)
	{
       TuningSelectedMenuRow(playerid,TuningID, row);
	}
	return 1;
}

public OnPlayerExitedMenu(playerid)
{
	if(GetPVarInt(playerid,"Rathaus") > 0)
	{
	    SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Aufwiedersehen.");
		TogglePlayerControllable(playerid, true);
		SetCameraBehindPlayer(playerid);
		DeletePVar(playerid,"Rathaus");
		return 1;
	}
	new TuningID = GetPlayerTuningID(playerid);
	if(TuningID!= INVALID_TUNING_ID)
	{
		new vehicleid = TuningInfo[TuningID][tVehicleID];
		if(TuningInfo[TuningID][tMenuID] == tkMenu)
		{
			for(new i=0;i<14;i++)
			{
				RemoveVehicleComponent(vehicleid,GetVehicleComponentInSlot(vehicleid,CARMODTYPE:i));
				AddVehicleComponent(vehicleid, FahrzeugInfo[vehicleid][fTuning][i]);
			}
			ChangeVehiclePaintjob(vehicleid, FahrzeugInfo[vehicleid][fPaintjob]);
			ChangeVehicleColours(vehicleid, FahrzeugInfo[vehicleid][fColor][0],FahrzeugInfo[vehicleid][fColor][1]);

			MoveTuningOpen(TuningID,true);
			TogglePlayerControllable(playerid, true);
			SetCameraBehindPlayer(playerid);
			HideMenuForPlayer(TuningInfo[TuningID][tMenu],playerid);
			DestroyMenu(TuningInfo[TuningID][tMenu]);
			TuningInfo[TuningID][tVehicleID] = INVALID_VEHICLE_ID;
			TuningInfo[TuningID][tPlayerID] = INVALID_PLAYER_ID;
			TuningInfo[TuningID][tMenuID] = INVALID_TUNINGMENU_ID;
            SendClientMessage(playerid,COLOR_RED,"[Info]: {FF0000}Tuner V.{FFFFFF} sagt: Bis zum nächsten mal.");
			return 1;
		}
	}
	if(GetPVarInt(playerid,"Schwarzmarkt") > 0)
	{
	    TogglePlayerControllable(playerid, true);
		SetCameraBehindPlayer(playerid);
		DeletePVar(playerid,"Schwarzmarkt");
		return 1;
	}
	return 1;
}
public OnPlayerKeyStateChange(playerid, KEY:newkeys, KEY:oldkeys)
{
	//LumberjackSystem
	//Log_PlayerKeyStateChange(playerid, newkeys);
	//MiningSystem
	//Mining_PlayerKeyStateChange(playerid, newkeys);

	Casino_OnPlayerKeyStateChange(playerid, newkeys, oldkeys);
	AirTrafficking_OnPlayerKeyStateChange(playerid, newkeys, oldkeys);
	//DynamicRobbery
	DynamicRobberyKeyChange(playerid, newkeys, oldkeys);
	//IndicatorSystem
	//Indicator_KeyStateChange(playerid, newkeys);
    if(playerMenu[playerid][E_PLAYER_MENU_ID][0] != EOS)
	{
	    if(newkeys & KEY_SECONDARY_ATTACK)//Entertaste
		{
		    if(GetPVarInt(playerid,"Rathaus") > 0)
		    {
		        TogglePlayerControllable(playerid, true);
				SetCameraBehindPlayer(playerid);
				DeletePVar(playerid,"Rathaus");
				HidePlayerMenu(playerid);
		    }
		    if(GetPVarInt(playerid,"TheoriTest") > 0)
		    {
		        GivePlayerMoneyEx(playerid,GetPVarInt(playerid,"TheroiGekostet"));
				SendClientMessage(playerid,COLOR_GREY,"[Info]: Du hast die Prüfung abgebrochen. Die Fahrschule erstattet dir alle Kosten zurück.");
				SetCameraBehindPlayer(playerid);
				TogglePlayerControllable(playerid, true);
				DeletePVar(playerid,"Theori");
				DeletePVar(playerid,"TheoriTest");
		    }
		}
		if(newkeys & KEY_SECONDARY_ATTACK && (GetTickCount() - playerMenu[playerid][E_PLAYER_MENU_TICKCOUNT]) >= 200)
		{
    		playerMenu[playerid][E_PLAYER_MENU_TICKCOUNT] = GetTickCount();
			PlayerPlaySound(playerid, MENU_SOUND_CLOSE, 0.0, 0.0, 0.0);

			new menuid[32] = "menu_";
			strcat(menuid, playerMenu[playerid][E_PLAYER_MENU_ID]);

			for (new i; i < menuPlayerTextDrawsCount[playerid]; i++)
			{
			    PlayerTextDrawDestroy(playerid, menuPlayerTextDraws[playerid][i]);
			}
		    menuPlayerTextDrawsCount[playerid] = 0;
		    playerMenu[playerid][E_PLAYER_MENU_ID][0] = EOS;

			CallLocalFunction(menuid, "iii", playerid, MENU_RESPONSE_CLOSE, (playerMenu[playerid][E_PLAYER_MENU_LISTITEM] + (playerMenu[playerid][E_PLAYER_MENU_PAGE] * MENU_MAX_LISTITEMS_PERPAGE)));
		}
		else if(newkeys & KEY_SPRINT && (GetTickCount() - playerMenu[playerid][E_PLAYER_MENU_TICKCOUNT]) >= 200)
		{
    		playerMenu[playerid][E_PLAYER_MENU_TICKCOUNT] = GetTickCount();
			PlayerPlaySound(playerid, MENU_SOUND_SELECT, 0.0, 0.0, 0.0);

			new menuid[32] = "menu_";
			strcat(menuid, playerMenu[playerid][E_PLAYER_MENU_ID]);

			for (new i; i < menuPlayerTextDrawsCount[playerid]; i++)
			{
			    PlayerTextDrawDestroy(playerid, menuPlayerTextDraws[playerid][i]);
			}
		    menuPlayerTextDrawsCount[playerid] = 0;
		    playerMenu[playerid][E_PLAYER_MENU_ID][0] = EOS;

			CallLocalFunction(menuid, "iii", playerid, MENU_RESPONSE_SELECT, (playerMenu[playerid][E_PLAYER_MENU_LISTITEM] + (playerMenu[playerid][E_PLAYER_MENU_PAGE] * MENU_MAX_LISTITEMS_PERPAGE)));
		}
	}
    if(!IsPlayerInAnyVehicle(playerid))
	{
	    if(GetPlayerWeapon(playerid) == WEAPON:24)
	    {
			if((newkeys & KEY_FIRE) && (oldkeys & KEY_CROUCH))
			{
				ApplyAnimation(playerid,"PED","getup",4.1,false,false,false,false,0);
			}
		}
		else if(GetPlayerWeapon(playerid) == WEAPON:41 && newkeys & KEY_FIRE && SpielerInfo[playerid][sFraktion] > 8 && SpielerInfo[playerid][sFraktion] != 19)
	    {
	        for(new fc = 1;fc<MAX_SPRAYTAGS;fc++)
		    {
				if(SprayTagInfo[fc][stErstellt] == false)continue;
				if(IsPlayerInRangeOfPoint(playerid,8.0,SprayTagInfo[fc][stPos_X],SprayTagInfo[fc][stPos_Y],SprayTagInfo[fc][stPos_Z]))
		 		{
		 		    if(SprayTagInfo[fc][stFactionID] == SpielerInfo[playerid][sFraktion])return 1;

					new spraysperre = SprayTagInfo[fc][stSprayed] - gettime();
					if(gettime() < SprayTagInfo[fc][stSprayed])return SendClientMessage(playerid, COLOR_RED,"[Info]: {FFFFFF}Dieses SprayTag kann erst in %02d:%02d Minuten übersprüht werden.", spraysperre/60, spraysperre%60);
					SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Du hast das Spraytag gecrosst.");
					new gstring[128];
				    format(gstring,sizeof(gstring),"[Gangpunkte]: {FFFFFF}%s %s hat gerade erfolgreich ein Spraytag gecrosst! +1 Gangpunkt.",RangName(playerid),SpielerInfo[playerid][sName]);
				    foreach(new i : Player)
				    {
				        if(SpielerInfo[i][sFraktion] == SpielerInfo[playerid][sFraktion])
				        {
				            SendClientMessage(i,COLOR_SUPER,gstring);
				        }
				        else if(SpielerInfo[i][sFraktion] == SprayTagInfo[fc][stFactionID] && SpielerInfo[i][sFraktion] > 0)
				        {
				            SendClientMessage(i,COLOR_GANGFIGHT,"[Spraytag]: Eines eurer Spraytags wurde gerade gecrosst!");
				        }
				    }
				    SprayTagInfo[fc][stFactionID] = SpielerInfo[playerid][sFraktion];
				    format(gstring,sizeof(gstring),"{%s}%s",FrakSprayTagColor(SprayTagInfo[fc][stFactionID]),FrakName(SprayTagInfo[fc][stFactionID]));
					SetDynamicObjectMaterialText(SprayTagInfo[fc][stObjectID], 0, gstring, OBJECT_MATERIAL_SIZE_256x32, "Segoe Script", 32, 1, 0xFFFFFFFF, 0x00000000, 0);
				    FrakInfo[SpielerInfo[playerid][sFraktion]][fiGangpunkte] += 1;
				    SprayTagInfo[fc][stSprayed] = gettime() + (60 * 30);

				    format(gstring,sizeof(gstring),"%d",SpielerInfo[playerid][sFraktion]);
				    mysql_SetInt("spraytags", "FactionID", SpielerInfo[playerid][sFraktion], "ID", gstring);
		 		}
			}
		}
	}
	if(newkeys & KEY:2)
	{
	    if(IsPlayerInAnyVehicle(playerid))
	    {
	        new vehicleid = GetPlayerVehicleID(playerid);
			if(GetPVarInt(playerid,"SireneHupe") == 1 && GetVehicleParamsSirenState(vehicleid) == true)
			{
				PC_EmulateCommand(playerid, "/sirene");
				//OnPlayerCommandText(playerid,"/sirene");
			}
		}
	}
    if(newkeys & KEY:16)//Entertaste
	{
	    if(IsPlayerInAnyVehicle(playerid))
	    {
	        TuningEnterPress(playerid);
	        return 1;
	    }
	    /*if(IsPlayerInRangeOfPoint(playerid, 3.0, 1778.2074,-1663.4716,14.4360))//Casino Los Santos - Eingang
	    {
     		if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
	        SetPlayerPos(playerid,1133.1150,-15.3099,1000.6797);
	        SetPlayerFacingAngle(playerid, 129.0467);
	        SetPlayerInterior(playerid,0);
	        SetCameraBehindPlayer(playerid);
	        DeletePVar(playerid,"InCasino");//AntiCheat wieder eingreifen lassen
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 3.0, 1133.1150,-15.3099,1000.6797))//Casino Los Santos - Ausgang
	    {
	        if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
	        SetPlayerPos(playerid,1778.2074,-1663.4716,14.4360);
	        SetPlayerFacingAngle(playerid, 129.0467);
	        SetPlayerInterior(playerid,0);
	        SetCameraBehindPlayer(playerid);
	        DeletePVar(playerid,"InCasino");//AntiCheat wieder eingreifen lassen
	    }*/
		InteractEnterExit(playerid);
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, 1554.1569,-1675.6135,16.1953))//LSPD Enter
	    {
	        if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
	    	SetTimerEx("Unfreeze",5000,false,"i",playerid);
   		    TogglePlayerControllable(playerid, false);
   		    Streamer_UpdateEx(playerid,350.1518,1834.3275,2241.5850);
	        SetPlayerPos(playerid,350.1518,1834.3275,2241.5850);
		    SetPlayerFacingAngle(playerid, 85.0523);
		    SetPlayerInterior(playerid,0);
		    SetCameraBehindPlayer(playerid);
		    SetPlayerWeather(playerid, 7);
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 3.0, 350.1518,1834.3275,2241.5850))//LSPD Ausgang
	    {
	        if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
			if(GetPVarInt(playerid,"HatSichGestellt") > 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast dich gestellt. Warte auf einen Beamten.");
			SetPlayerPos(playerid,1550.6349,-1675.4946,15.4941);
		    SetPlayerFacingAngle(playerid, 90.3821);
		    SetPlayerInterior(playerid,0);
		    SetCameraBehindPlayer(playerid);
		    SetPlayerWetter(playerid);
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 3.0, 1524.4829,-1677.8102,6.2188))//LSPD Garage Enter
	    {
	        if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
			SetTimerEx("Unfreeze",5000,false,"i",playerid);
			TogglePlayerControllable(playerid, false);
	        SetPlayerPos(playerid,330.4257,1842.7358,2241.5850);
		    SetPlayerFacingAngle(playerid,179.0921);
		    SetPlayerInterior(playerid,0);
		    SetCameraBehindPlayer(playerid);
		    SetPlayerWeather(playerid, 7);
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 3.0, 330.4257,1842.7358,2241.5850))//LSPD Garage Ausgang
	    {
	        if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
	        if(SpielerInfo[playerid][sFraktion] == 2 || SpielerInfo[playerid][sFraktion] == 6)
	        {
		        SetPlayerPos(playerid,1525.3379,-1677.6476,5.8906);
			    SetPlayerFacingAngle(playerid,270.0940);
			    SetPlayerInterior(playerid,0);
			    SetCameraBehindPlayer(playerid);
		    	SetPlayerWetter(playerid);
		    }
		    else SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Die Türen sind verschlossen.");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 3.0, 1506.2091,-1796.6313,14.1047))//Stadthalle Los Santos - Eingang
		{
		    if(GetPVarInt(playerid,"AntiIntFlucht") == 1)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
		    SetPlayerPos(playerid,920.1977,-1474.9122,2754.3318);
		    SetPlayerFacingAngle(playerid,181.6685);
		    SetPlayerInterior(playerid,0);
		    SetCameraBehindPlayer(playerid);
		    SetPVarInt(playerid,"InCityHall",1);
		    LoadObjectsForPlayer(playerid);
		    SetPlayerWeather(playerid, 7);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 3.0, 920.1977,-1474.9122,2754.3318))//Stadthalle Ausgang
		{
		    if(GetPVarInt(playerid,"AntiIntFlucht") == 1)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
		    if(GetPVarInt(playerid,"InCityHall") == 1)//Stadthalle Los Santos
		    {
		        SetPlayerPos(playerid,1506.2091,-1796.6313,14.1047);
			    SetPlayerFacingAngle(playerid,0.0353);
			    SetPlayerInterior(playerid,0);
			    SetCameraBehindPlayer(playerid);
		        DeletePVar(playerid,"InCityHall");
				LoadObjectsForPlayer(playerid);
		    	SetPlayerWetter(playerid);
		    }
		}
  		else if(IsPlayerInRangeOfPoint(playerid, 3.0, 1564.7876,-1666.4253,28.3956))//LSPD Landeplatz Exit
	    {
	        if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
			SetTimerEx("Unfreeze",5000,false,"i",playerid);
			TogglePlayerControllable(playerid, false);
			Streamer_UpdateEx(playerid,323.6872,1838.8647,2241.5850);
	        SetPlayerPos(playerid,323.6872,1838.8647,2241.5850);
		    SetPlayerFacingAngle(playerid,272.8580);
		    SetPlayerInterior(playerid,0);
		    SetCameraBehindPlayer(playerid);
		    SetPlayerWeather(playerid, 7);
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 3.0, 323.6872,1838.8647,2241.5850))//LSPD Landeplatz Enter
	    {
	        if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
     		if(SpielerInfo[playerid][sFraktion] == 2 || SpielerInfo[playerid][sFraktion] == 6)
	        {
		        SetPlayerPos(playerid,1564.7876,-1666.4253,28.3956);
			    SetPlayerFacingAngle(playerid,272.8580);
			    SetPlayerInterior(playerid,0);
			    SetCameraBehindPlayer(playerid);
		    	SetPlayerWetter(playerid);
 		    }
		    else SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Die Türen sind verschlossen.");
		}
   		else if(IsPlayerInRangeOfPoint(playerid, 3.0, -1605.6135,710.8735,13.8672))//SFPD Eingang
	    {
	        if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
	        SetPlayerPos(playerid,246.375991,109.245994,1003.218750);
		    SetPlayerFacingAngle(playerid, 2.5729);
		    SetPlayerInterior(playerid,10);
		    SetCameraBehindPlayer(playerid);
		    SetPlayerWeather(playerid, 7);
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 3.0, 246.4395,107.2980,1003.2188))//SFPD Ausgang
	    {
	        if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
	        SetPlayerPos(playerid,-1605.4307,711.3495,13.8672);
		    SetPlayerFacingAngle(playerid, 359.7081);
		    SetPlayerInterior(playerid,0);
		    SetCameraBehindPlayer(playerid);
		    SetPlayerWetter(playerid);
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 3.0, -1594.1666,716.2354,-4.9063))//SFPD Garage Enter
	    {
	        if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
	        SetPlayerPos(playerid,214.9014,121.9488,999.0156);
		    SetPlayerFacingAngle(playerid,267.9453);
		    SetPlayerInterior(playerid,10);
		    SetCameraBehindPlayer(playerid);
		    SetPlayerWeather(playerid, 7);
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 3.0, 213.9759,122.1085,999.0156))//SFPD Garage Ausgang
	    {
	        if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
	        SetPlayerPos(playerid,-1593.3552,716.4270,-5.2422);
		    SetPlayerFacingAngle(playerid,270.4071);
		    SetPlayerInterior(playerid,0);
		    SetCameraBehindPlayer(playerid);
		    SetPlayerWetter(playerid);
		}
  		else if(IsPlayerInRangeOfPoint(playerid, 3.0, 2340.2913,2458.3687,14.9688))//LVPD Eingang
	    {
	        if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
	        SetPlayerPos(playerid,288.745971,169.350997,1007.171875);
		    SetPlayerFacingAngle(playerid, 2.5729);
		    SetPlayerInterior(playerid,3);
		    SetCameraBehindPlayer(playerid);
		    SetPlayerWeather(playerid, 7);
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 3.0, 288.6907,167.7179,1007.1719))//LVPD Ausgang
	    {
	        if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
	        SetPlayerPos(playerid,2340.1265,2457.6370,14.9688);
		    SetPlayerFacingAngle(playerid, 180.5920);
		    SetPlayerInterior(playerid,0);
		    SetCameraBehindPlayer(playerid);
		    SetPlayerWetter(playerid);
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 3.0, 2282.1255,2423.9487,3.4766))//LVPD Garage Eingang
	    {
	        if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
	        SetPlayerPos(playerid,238.7352,139.3221,1003.0234);
		    SetPlayerFacingAngle(playerid,270.4521);
		    SetPlayerInterior(playerid,3);
		    SetCameraBehindPlayer(playerid);
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 3.0, 238.7352,139.3221,1003.0234))//LVPD Garage Ausgang
	    {
	        if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
	        SetPlayerPos(playerid,2282.3516,2424.0151,3.4766);
		    SetPlayerFacingAngle(playerid,357.8101);
		    SetPlayerInterior(playerid,0);
		    SetCameraBehindPlayer(playerid);
		    SetPlayerWetter(playerid);
		}
  		if(IsPlayerInRangeOfPoint(playerid, 3.0, 627.3911,-571.7522,17.9145))//Dillimore Enter
	    {
	        if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
	        SetPlayerPos(playerid,322.2275,303.8335,999.1484);
		    SetPlayerFacingAngle(playerid, 351.8964);
		    SetPlayerInterior(playerid,5);
		    SetCameraBehindPlayer(playerid);
		    SetPlayerWeather(playerid, 7);
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 3.0, 322.1980,302.4980,999.1484))//Dillimore Ausgang
	    {
	        if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
	        SetPlayerPos(playerid,628.3005,-571.8865,17.2886);
		    SetPlayerFacingAngle(playerid, 268.1928);
		    SetPlayerInterior(playerid,0);
		    SetCameraBehindPlayer(playerid);
		    SetPlayerWetter(playerid);
	    }
		else if(IsPlayerInRangeOfPoint(playerid, 3.0, -2204.4993,250.6758,35.3366))//FBI Eingang
	    {
	        if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
	        SetPlayerPos(playerid,-2457.1377,503.8396,25.0943);
		    SetPlayerFacingAngle(playerid, 82.3540);
		    SetPlayerInterior(playerid,0);
		    SetCameraBehindPlayer(playerid);
		    SetPlayerWeather(playerid, 7);
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 3.0, -2457.1377,503.8396,25.0943))//FBI Ausgang
	    {
	        if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
	        SetPlayerPos(playerid,-2203.4785,250.4445,35.3366);
		    SetPlayerFacingAngle(playerid, 266.8442);
		    SetPlayerInterior(playerid,0);
		    SetCameraBehindPlayer(playerid);
		    SetPlayerWetter(playerid);
	    }
  		else if(IsPlayerInRangeOfPoint(playerid, 3.0, 1650.2196,-1245.3818,15.4659))//Los Santos Krankenhaus Eingang
	    {
	        if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
	    	SetTimerEx("Unfreeze",3000,false,"i",playerid);
   		    TogglePlayerControllable(playerid, false);
			SetPlayerPos(playerid,1169.3988,-1322.8319,-0.8598);
			SetPlayerFacingAngle(playerid,90);
		    SetPlayerInterior(playerid,0);
		    SetCameraBehindPlayer(playerid);
		    SetPlayerWeather(playerid, 7);
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 3.0, 1169.3988,-1322.8319,-0.8598))//Los Santos Krankenhaus Ausgang
	    {
	        if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
	    	SetTimerEx("Unfreeze",3000,false,"i",playerid);
   		    TogglePlayerControllable(playerid, false);
     		SetPlayerPos(playerid,1650.8616,-1245.4158,15.4659);
		    SetPlayerFacingAngle(playerid, 271.4131);
		    SetPlayerInterior(playerid,0);
		    SetCameraBehindPlayer(playerid);
		    SetPlayerWetter(playerid);
		}
  		else if(IsPlayerInRangeOfPoint(playerid, 3.0,733.4227,-1349.4966,13.5074))//Los Santos San News Eingang Hof
	    {
		    if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
	    	SetTimerEx("Unfreeze",3000,false,"i",playerid);
   		    TogglePlayerControllable(playerid, false);
			SetPlayerPos(playerid,1402.4045,-6.3101,1006.7496);
			SetPlayerFacingAngle(playerid,266.5574);
		    SetPlayerInterior(playerid,0);
		    SetCameraBehindPlayer(playerid);
		    SetPlayerWeather(playerid, 7);
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 3.0, 1402.4045,-6.3101,1006.7496))//Los Santos San News Ausgang Hof
	    {
	        if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
     		SetPlayerPos(playerid,733.4227,-1349.4966,13.5074);
		    SetPlayerFacingAngle(playerid, 270.7864);
		    SetPlayerInterior(playerid,0);
		    SetCameraBehindPlayer(playerid);
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerWetter(playerid);
		}
  		else if(IsPlayerInRangeOfPoint(playerid, 3.0, 648.4459,-1353.8932,13.5470))//Los Santos San News Eingang Hauptstraße
	    {
	        if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
	    	SetTimerEx("Unfreeze",3000,false,"i",playerid);
   		    TogglePlayerControllable(playerid, false);
			SetPlayerPos(playerid,1411.0062,-10.9561,1006.7496);
			SetPlayerFacingAngle(playerid,87.0899);
		    SetPlayerInterior(playerid,0);
		    SetCameraBehindPlayer(playerid);
		    SetPlayerWeather(playerid, 7);
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 3.0, 1411.0062,-10.9561,1006.7496))//Los Santos San News Ausgang Hauptstraße
	    {
	        if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
     		SetPlayerPos(playerid,648.4459,-1353.8932,13.5470);
		    SetPlayerFacingAngle(playerid, 93.4615);
		    SetPlayerInterior(playerid,0);
		    SetCameraBehindPlayer(playerid);
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerWetter(playerid);
		}
  		else if(IsPlayerInRangeOfPoint(playerid, 3.0, 648.5452,-1360.5887,13.5873))//Los Santos Lottoausgabe Eingang2
	    {
	        if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
	    	SetTimerEx("Unfreeze",3000,false,"i",playerid);
   		    TogglePlayerControllable(playerid, false);
			SetPlayerPos(playerid,834.1218,7.3493,1004.1870);
			SetPlayerFacingAngle(playerid,89.2292);
		    SetPlayerInterior(playerid,3);
		    SetCameraBehindPlayer(playerid);
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 3.0, 834.1218,7.3493,1004.1870))//Los Santos Lottoausgabe Ausgang2
	    {
	        if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
     		SetPlayerPos(playerid,648.5452,-1360.5887,13.5873);
		    SetPlayerFacingAngle(playerid, 82.8899);
		    SetPlayerInterior(playerid,0);
		    SetCameraBehindPlayer(playerid);
		}
  		else if(IsPlayerInRangeOfPoint(playerid, 3.0, 1644.9175,-1230.3513,21.1381))//Los Santos Krankenhaus Landeplatz Ausgang
	    {
	        if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
    		SetTimerEx("Unfreeze",3000,false,"i",playerid);
   		    TogglePlayerControllable(playerid, false);
     		SetPlayerPos(playerid,1161.4039,-1316.7357,-0.8598);
		    SetPlayerFacingAngle(playerid, 221.1343);
		    SetPlayerInterior(playerid,0);
		    SetCameraBehindPlayer(playerid);
		    SetPlayerWetter(playerid);
		}
  		else if(IsPlayerInRangeOfPoint(playerid, 3.0, 1161.4039,-1316.7357,-0.8598))//Los Santos Krankenhaus Landeplatz Eingang
	    {
	        if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
    		SetTimerEx("Unfreeze",3000,false,"i",playerid);
   		    TogglePlayerControllable(playerid, false);
     		SetPlayerPos(playerid,1644.9175,-1230.3513,21.1381);
		    SetPlayerFacingAngle(playerid, 268.7846);
		    SetPlayerInterior(playerid,0);
		    SetCameraBehindPlayer(playerid);
		    SetPlayerWeather(playerid, 7);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 3.0, 2495.2358,-1690.7219,14.7656))//Grove Street Eingang
	    {
	        if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
			if(FrakInfo[9][fiBaseZugang] < 1 && SpielerInfo[playerid][sFraktion] != 9)return GameTextForPlayer(playerid,"~r~Base verschlossen",1500,6);
			SetPlayerPos(playerid,2495.9895,-1692.4834,1014.7422);
		    SetPlayerFacingAngle(playerid,178.9615);
		    SetPlayerInterior(playerid,3);
		    SetCameraBehindPlayer(playerid);
		    SetPlayerVirtualWorld(playerid, 9);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 3.0, 1999.8800,-1114.5149,27.1250))//Ballas Eingang
	    {
	        if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
            if(FrakInfo[10][fiBaseZugang] < 1 && SpielerInfo[playerid][sFraktion] != 10)return GameTextForPlayer(playerid,"~r~Base verschlossen",1500,6);
			SetPlayerPos(playerid,2495.9895,-1692.4834,1014.7422);
		    SetPlayerFacingAngle(playerid,178.9615);
		    SetPlayerInterior(playerid,3);
		    SetCameraBehindPlayer(playerid);
		    SetPlayerVirtualWorld(playerid, 10);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 3.0, 2549.6614,-1032.2898,69.5789))//Vagos Eingang
	    {
	        if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
            if(FrakInfo[11][fiBaseZugang] < 1 && SpielerInfo[playerid][sFraktion] != 11)return GameTextForPlayer(playerid,"~r~Base verschlossen",1500,6);
			SetPlayerPos(playerid,2495.9895,-1692.4834,1014.7422);
		    SetPlayerFacingAngle(playerid,178.9615);
		    SetPlayerInterior(playerid,3);
		    SetCameraBehindPlayer(playerid);
		    SetPlayerVirtualWorld(playerid, 11);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 3.0, 2508.2561,-1998.5865,13.9025))//Aztecas Eingang
	    {
	        if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
	        if(FrakInfo[12][fiBaseZugang] < 1 && SpielerInfo[playerid][sFraktion] != 12)return GameTextForPlayer(playerid,"~r~Base verschlossen",1500,6);
	        SetPlayerPos(playerid,2495.9895,-1692.4834,1014.7422);
		    SetPlayerFacingAngle(playerid,178.9615);
		    SetPlayerInterior(playerid,3);
		    SetCameraBehindPlayer(playerid);
		    SetPlayerVirtualWorld(playerid, 12);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 3.0, -2462.7795,132.3849,35.1719))//Rifa Eingang
	    {
	        if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
            if(FrakInfo[13][fiBaseZugang] < 1 && SpielerInfo[playerid][sFraktion] != 13)return GameTextForPlayer(playerid,"~r~Base verschlossen",1500,6);
			SetPlayerPos(playerid,2495.9895,-1692.4834,1014.7422);
		    SetPlayerFacingAngle(playerid,178.9615);
		    SetPlayerInterior(playerid,3);
		    SetCameraBehindPlayer(playerid);
		    SetPlayerVirtualWorld(playerid, 13);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 3.0, 725.6343,-1439.8298,13.5318))//Triads Eingang
	    {
	        if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
            if(FrakInfo[14][fiBaseZugang] < 1 && SpielerInfo[playerid][sFraktion] != 14)return GameTextForPlayer(playerid,"~r~Base verschlossen",1500,6);
			SetPlayerPos(playerid,2495.9895,-1692.4834,1014.7422);
		    SetPlayerFacingAngle(playerid,178.9615);
		    SetPlayerInterior(playerid,3);
		    SetCameraBehindPlayer(playerid);
		    SetPlayerVirtualWorld(playerid, 14);
		}
  		else if(IsPlayerInRangeOfPoint(playerid, 3.0, 255.1670,-1366.6371,53.1094))//Yakuza Eingang
	    {
	        if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
            if(FrakInfo[15][fiBaseZugang] < 1 && SpielerInfo[playerid][sFraktion] != 15)return GameTextForPlayer(playerid,"~r~Base verschlossen",1500,6);
			SetPlayerPos(playerid,2495.9895,-1692.4834,1014.7422);
		    SetPlayerFacingAngle(playerid,178.9615);
		    SetPlayerInterior(playerid,3);
		    SetCameraBehindPlayer(playerid);
		    SetPlayerVirtualWorld(playerid, 15);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 3.0, 1447.6503,362.0286,18.9134))//Camorra Eingang
	    {
	        if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
            if(FrakInfo[16][fiBaseZugang] < 1 && SpielerInfo[playerid][sFraktion] != 16)return GameTextForPlayer(playerid,"~r~Base verschlossen",1500,6);
			SetPlayerPos(playerid,2495.9895,-1692.4834,1014.7422);
		    SetPlayerFacingAngle(playerid,178.9615);
		    SetPlayerInterior(playerid,3);
		    SetCameraBehindPlayer(playerid);
		    SetPlayerVirtualWorld(playerid, 16);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 3.0, 985.9162,2000.5089,11.4609))//Italian Mafia Eingang
	    {
	        if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
            if(FrakInfo[17][fiBaseZugang] < 1 && SpielerInfo[playerid][sFraktion] != 17)return GameTextForPlayer(playerid,"~r~Base verschlossen",1500,6);
			SetPlayerPos(playerid,2495.9895,-1692.4834,1014.7422);
		    SetPlayerFacingAngle(playerid,178.9615);
		    SetPlayerInterior(playerid,3);
		    SetCameraBehindPlayer(playerid);
		    SetPlayerVirtualWorld(playerid, 17);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 3.0, 302.3475,-1154.6626,81.3429))//Russian Mafia Eingang
	    {
	        if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
            if(FrakInfo[18][fiBaseZugang] < 1 && SpielerInfo[playerid][sFraktion] != 18)return GameTextForPlayer(playerid,"~r~Base verschlossen",1500,6);
			SetPlayerPos(playerid,2495.9895,-1692.4834,1014.7422);
		    SetPlayerFacingAngle(playerid,178.9615);
		    SetPlayerInterior(playerid,3);
		    SetCameraBehindPlayer(playerid);
		    SetPlayerVirtualWorld(playerid, 18);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 3.0, 1566.8313,23.2738,24.1641))//International Contract Agency Eingang
	    {
	        if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
	        if(SpielerInfo[playerid][sFraktion] == 2 || SpielerInfo[playerid][sFraktion] == 19 || SpielerInfo[playerid][sFraktion] == 5)
	        {
		        SetPlayerPos(playerid,-2158.6267,642.4954,1052.3750);
			    SetPlayerFacingAngle(playerid,179.2799);
			    SetPlayerInterior(playerid,1);
			    SetCameraBehindPlayer(playerid);
			    SetPlayerVirtualWorld(playerid, 1);
		    }
		    else SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt keine Schlüssel für dieses Gebäude.");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 3.0, -2158.6267,642.4954,1052.3750))//International Contract Agency Ausgang
	    {
	        if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
	        SetPlayerPos(playerid,1566.1394,23.2611,24.1641);
		    SetPlayerFacingAngle(playerid,95.3692);
		    SetPlayerInterior(playerid,0);
		    SetPlayerVirtualWorld(playerid, 0);
		    SetCameraBehindPlayer(playerid);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 3.0, 2495.9895,-1692.4834,1014.7422))//Gangbase Ausgang
	    {
	        if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
	        if(GetPlayerVirtualWorld(playerid) == 9)//Grove Street
	        {
		        SetPlayerPos(playerid,2495.2358,-1690.7219,14.7656);
			    SetPlayerFacingAngle(playerid,1.0876);
			    SetPlayerInterior(playerid,0);
			    SetCameraBehindPlayer(playerid);
			    SetPlayerVirtualWorld(playerid,0);
			}
			else if(GetPlayerVirtualWorld(playerid) == 10)//Ballas
	        {
		        SetPlayerPos(playerid,1999.8800,-1114.5149,27.1250);
			    SetPlayerFacingAngle(playerid,178.1117);
			    SetPlayerInterior(playerid,0);
			    SetCameraBehindPlayer(playerid);
			    SetPlayerVirtualWorld(playerid,0);
			}
			else if(GetPlayerVirtualWorld(playerid) == 11)//Vagos
	        {
		        SetPlayerPos(playerid,2549.6614,-1032.2898,69.5789);
			    SetPlayerFacingAngle(playerid,267.7126);
			    SetPlayerInterior(playerid,0);
			    SetCameraBehindPlayer(playerid);
			    SetPlayerVirtualWorld(playerid,0);
			}
			else if(GetPlayerVirtualWorld(playerid) == 12)//Aztecas
	        {
		        SetPlayerPos(playerid,2508.2561,-1998.5865,13.9025);
			    SetPlayerFacingAngle(playerid,179.5808);
			    SetPlayerInterior(playerid,0);
			    SetCameraBehindPlayer(playerid);
			    SetPlayerVirtualWorld(playerid,0);
			}
			else if(GetPlayerVirtualWorld(playerid) == 13)//Rifa
	        {
		        SetPlayerPos(playerid,-2462.7795,132.3849,35.1719);
			    SetPlayerFacingAngle(playerid,310.5000);
			    SetPlayerInterior(playerid,0);
			    SetCameraBehindPlayer(playerid);
			    SetPlayerVirtualWorld(playerid,0);
			}
			else if(GetPlayerVirtualWorld(playerid) == 14)//Triads
	        {
		        SetPlayerPos(playerid,725.6343,-1439.8298,13.5318);
			    SetPlayerFacingAngle(playerid,1.8470);
			    SetPlayerInterior(playerid,0);
			    SetCameraBehindPlayer(playerid);
			    SetPlayerVirtualWorld(playerid,0);
			}
			else if(GetPlayerVirtualWorld(playerid) == 15)//Yakuza
	        {
		        SetPlayerPos(playerid,255.1670,-1366.6371,53.1094);
			    SetPlayerFacingAngle(playerid,303.0641);
			    SetPlayerInterior(playerid,0);
			    SetCameraBehindPlayer(playerid);
			    SetPlayerVirtualWorld(playerid,0);
			}
			else if(GetPlayerVirtualWorld(playerid) == 16)//Camorra
	        {
		        SetPlayerPos(playerid,1447.6503,362.0286,18.9134);
			    SetPlayerFacingAngle(playerid,334.6532);
			    SetPlayerInterior(playerid,0);
			    SetCameraBehindPlayer(playerid);
			    SetPlayerVirtualWorld(playerid,0);
			}
			else if(GetPlayerVirtualWorld(playerid) == 17)//Italian
	        {
		        SetPlayerPos(playerid,985.9162,2000.5089,11.4609);
			    SetPlayerFacingAngle(playerid,270.1086);
			    SetPlayerInterior(playerid,0);
			    SetCameraBehindPlayer(playerid);
			    SetPlayerVirtualWorld(playerid,0);
			}
			else if(GetPlayerVirtualWorld(playerid) == 18)//Russian
	        {
		        SetPlayerPos(playerid,298.6482,-1155.5629,80.9099);
			    SetPlayerFacingAngle(playerid,88.8443);
			    SetPlayerInterior(playerid,0);
			    SetCameraBehindPlayer(playerid);
			    SetPlayerVirtualWorld(playerid,0);
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 5.0, 2104.8403,-1806.5245,13.5547))//Pizzaria - Eingang
		{
		    if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
  			SetPlayerPos(playerid,372.3678,-133.3004,1001.4922);
		    SetPlayerFacingAngle(playerid,89.9527);
		    SetPlayerInterior(playerid,5);
		    SetCameraBehindPlayer(playerid);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 5.0, 372.3678,-133.3004,1001.4922))//Pizzaria - Ausgang
		{
		    if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
  			SetPlayerPos(playerid,2104.8403,-1806.5245,13.5547);
		    SetPlayerFacingAngle(playerid,89.9527);
		    SetPlayerInterior(playerid,0);
		    SetCameraBehindPlayer(playerid);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 5.0, 461.4087,-1500.8523,31.0597))//Victim - Eingang
		{
		    if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
  			SetPlayerPos(playerid,226.1634,-7.9233,1002.2109);
		    SetPlayerFacingAngle(playerid,86.4828);
		    SetPlayerInterior(playerid,5);
		    SetCameraBehindPlayer(playerid);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 5.0, 227.4834,-8.1822,1002.2109))//Victim - Ausgang
		{
		    if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
  			SetPlayerPos(playerid,460.3593,-1501.0861,31.0562);
		    SetPlayerFacingAngle(playerid,102.2376);
		    SetPlayerInterior(playerid,0);
		    SetCameraBehindPlayer(playerid);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 5.0, -2270.2954,-155.9197,35.3203))//Gym - Eingang - San Fierro
		{
		    if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
  			SetPlayerPos(playerid,773.9017,-49.4196,1000.5859);
		    SetPlayerFacingAngle(playerid,3.2398);
		    SetPlayerInterior(playerid,6);
		    SetCameraBehindPlayer(playerid);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 5.0, 774.1077,-50.3713,1000.5859))//Gym - Ausgang - San Fierro
		{
		    if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
  			SetPlayerPos(playerid,-2269.4595,-155.7332,35.3203);
		    SetPlayerFacingAngle(playerid,268.1295);
		    SetPlayerInterior(playerid,0);
		    SetCameraBehindPlayer(playerid);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 5.0, 1968.8300,2295.7092,16.4559))//Gym - Eingang - Las Venturas
		{
			if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
  			SetPlayerPos(playerid,774.0615,-77.5164,1000.6608);
		    SetPlayerFacingAngle(playerid,358.2264);
		    SetPlayerInterior(playerid,7);
		    SetCameraBehindPlayer(playerid);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 5.0, 773.8901,-78.5057,1000.6623))//Gym - Ausgang - Las Venturas
		{
		    if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
  			SetPlayerPos(playerid,1968.6213,2295.1587,16.4559);
		    SetPlayerFacingAngle(playerid,176.3749);
		    SetPlayerInterior(playerid,0);
		    SetCameraBehindPlayer(playerid);
		}
		else if(AnTankstellenHaus(playerid))
		{
		    if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
      		SetPlayerPos(playerid,6.091179,-29.271898,1003.549438);
		    SetPlayerFacingAngle(playerid,358.0536);
		    SetPlayerInterior(playerid,10);
		    SetPlayerVirtualWorld(playerid,GetNearTankstellenHausID(playerid));
		    SetCameraBehindPlayer(playerid);
			SetPVarInt(playerid,"TankstelleID",GetNearTankstellenHausID(playerid));
			SetPVarInt(playerid,"InTankstelle",1);
  		}
  		else if(IsPlayerInRangeOfPoint(playerid, 3.0, 6.091179,-29.271898,1003.549438))
  		{
  		    if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
  		    if(GetPVarInt(playerid,"InTankstelle") == 1)
  		    {
  		        new ts = GetPVarInt(playerid,"TankstelleID");
  		        SetPlayerPos(playerid,TankstellenInfo[ts][tsEPos_X],TankstellenInfo[ts][tsEPos_Y],TankstellenInfo[ts][tsEPos_Z]);
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				SetCameraBehindPlayer(playerid);
				DeletePVar(playerid,"TankstelleID");
				DeletePVar(playerid,"InTankstelle");
	        }
	    }
	    else if(AnAmmunation(playerid))
	    {
	        if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
   			SetPlayerPos(playerid,286.148986,-40.644397,1001.515625);
		    SetPlayerFacingAngle(playerid,358.0536);
		    SetPlayerInterior(playerid,1);
		    SetPlayerVirtualWorld(playerid,GetNearAmmunationID(playerid));
		    SetCameraBehindPlayer(playerid);
			SetPVarInt(playerid,"AmmunationID",GetNearAmmunationID(playerid));
			SetPVarInt(playerid,"InAmmunation",1);
	    }
   		else if(IsPlayerInRangeOfPoint(playerid, 3.0, 286.148986,-40.644397,1001.515625))
  		{
  		    if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
  		    if(GetPVarInt(playerid,"InAmmunation") == 1)
  		    {
  		        new an = GetPVarInt(playerid,"AmmunationID");
  		        SetPlayerPos(playerid,AmmunationInfo[an][amPos_X],AmmunationInfo[an][amPos_Y],AmmunationInfo[an][amPos_Z]);
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				SetCameraBehindPlayer(playerid);
				DeletePVar(playerid,"AmmunationID");
				DeletePVar(playerid,"InAmmunation");
				if(GetPVarInt(playerid,"AttackedByBot") > 0)
				{
				    DeletePVar(playerid,"AttackedByBot");
				}
				if(GetPVarInt(playerid,"AmAusrauben") == 1){StopAudioStreamForPlayer(playerid); DeletePVar(playerid,"AmAusrauben");}
	        }
	    }
    	else if(AnStore(playerid))
	    {
	        if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
   			SetPlayerPos(playerid,-25.132598,-139.066986,1003.546875);
		    SetPlayerFacingAngle(playerid,358.0536);
		    SetPlayerInterior(playerid,16);
		    SetPlayerVirtualWorld(playerid,GetNearStoreID(playerid));
		    SetCameraBehindPlayer(playerid);
			SetPVarInt(playerid,"StoreID",GetNearStoreID(playerid));
			SetPVarInt(playerid,"InStore",1);
	    }
   		else if(IsPlayerInRangeOfPoint(playerid, 3.0, -25.132598,-139.066986,1003.546875))
  		{
  		    if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
  		    if(GetPVarInt(playerid,"InStore") == 1)
  		    {
  		        new an = GetPVarInt(playerid,"StoreID");
  		        SetPlayerPos(playerid,StoreInfo[an][siPos_X],StoreInfo[an][siPos_Y],StoreInfo[an][siPos_Z]);
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				SetCameraBehindPlayer(playerid);
				DeletePVar(playerid,"StoreID");
				DeletePVar(playerid,"InStore");
				if(GetPVarInt(playerid,"AmAusrauben") == 1){StopAudioStreamForPlayer(playerid); DeletePVar(playerid,"AmAusrauben");}
	        }
		}
	    else if(AnHaus(playerid))
	    {
	        if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
	        new hs = GetNearHausID(playerid);
	        if(HausInfo[hs][hsLocked] == 0 || HausInfo[hs][hsLocked] == 1 && SpielerInfo[playerid][sHaus] == hs || HausInfo[hs][hsLocked] == 1 && SpielerInfo[playerid][sMieter] == hs  || HausInfo[hs][hsLocked] == 1 && SpielerInfo[playerid][sGHaus] == hs)
	        {
		        SetPlayerPos(playerid,HausInfo[hs][hsIPos_X],HausInfo[hs][hsIPos_Y],HausInfo[hs][hsIPos_Z]);
			    SetPlayerInterior(playerid,HausInfo[hs][hsInterior]);
			    SetPlayerVirtualWorld(playerid,hs);
			    SetCameraBehindPlayer(playerid);
				SetPVarInt(playerid,"HausID",hs);
				SetPVarInt(playerid,"InHaus",1);
				SetPlayerWeather(playerid,2);
			}
			else SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Das Haus ist abgeschlossen.");
	    }
   		else if(IsPlayerInRangeOfPoint(playerid, 3.0, HausInfo[GetPVarInt(playerid,"HausID")][hsIPos_X],HausInfo[GetPVarInt(playerid,"HausID")][hsIPos_Y],HausInfo[GetPVarInt(playerid,"HausID")][hsIPos_Z]))
  		{
  		    if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
  		    if(GetPVarInt(playerid,"InHaus") == 1)
  		    {
  		        new hs = GetPVarInt(playerid,"HausID");
  		        SetPlayerPos(playerid,HausInfo[hs][hsPos_X],HausInfo[hs][hsPos_Y],HausInfo[hs][hsPos_Z]);
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				SetCameraBehindPlayer(playerid);
				DeletePVar(playerid,"HausID");
				DeletePVar(playerid,"InHaus");
    			SetPlayerWetter(playerid);
	        }
	    }
	    else if(AnGarage(playerid))
	    {
	        if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
	        new hs = GetNearGarageID(playerid);
	        if(GaragenInfo[hs][giLocked] == 0 || GaragenInfo[hs][giLocked] == 1 && SpielerInfo[playerid][sGarage] == hs || GaragenInfo[hs][giLocked] == 1 && SpielerInfo[playerid][sGMieter] == hs)
	        {
				SetTimerEx("Unfreeze",3000,false,"i",playerid);
				TogglePlayerControllable(playerid, false);
		        SetPlayerPos(playerid,2414.4395,2820.4709,-47.9852);
			    SetPlayerInterior(playerid,0);
			    SetPlayerVirtualWorld(playerid,hs);
			    SetCameraBehindPlayer(playerid);
				SetPVarInt(playerid,"GarageID",hs);
				SetPVarInt(playerid,"InGarage",1);
				SetPlayerWeather(playerid,2);
			}
			else SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Die Garage ist abgeschlossen.");
	    }
   		else if(IsPlayerInRangeOfPoint(playerid, 3.0, 2414.2927,2818.8550,-47.9852))
  		{
  		    if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
  		    if(GetPVarInt(playerid,"InGarage") == 1)
  		    {
  		        new hs = GetPVarInt(playerid,"GarageID");
  		        SetPlayerPos(playerid,GaragenInfo[hs][giPos_X],GaragenInfo[hs][giPos_Y],GaragenInfo[hs][giPos_Z]);
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				SetCameraBehindPlayer(playerid);
				DeletePVar(playerid,"GarageID");
				DeletePVar(playerid,"InGarage");
				SetPlayerWetter(playerid);
	        }
	    }
  	  	else if(AmRestaurant(playerid))
	    {
	        if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
	        new id = GetRestaurant(playerid);
	        SetPlayerPos(playerid,FastFoodInfo[id][fIPos_X],FastFoodInfo[id][fIPos_Y],FastFoodInfo[id][fIPos_Z]);
		    SetPlayerInterior(playerid,FastFoodInfo[id][fiInterior]);
		    SetPlayerVirtualWorld(playerid,FastFoodInfo[id][fiVWorld]);
		    SetCameraBehindPlayer(playerid);
			SetPVarInt(playerid,"RestaurantID",id);
			SetPVarInt(playerid,"InRestaurant",1);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 3.0, FastFoodInfo[GetPVarInt(playerid,"RestaurantID")][fIPos_X],FastFoodInfo[GetPVarInt(playerid,"RestaurantID")][fIPos_Y],FastFoodInfo[GetPVarInt(playerid,"RestaurantID")][fIPos_Z]))
  		{
  		    if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
  		    if(GetPVarInt(playerid,"InRestaurant") == 1)
  		    {
  		        new id = GetPVarInt(playerid,"RestaurantID");
  		        SetPlayerPos(playerid,FastFoodInfo[id][fEPos_X],FastFoodInfo[id][fEPos_Y],FastFoodInfo[id][fEPos_Z]);
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				SetCameraBehindPlayer(playerid);
				DeletePVar(playerid,"RestaurantID");
				DeletePVar(playerid,"InRestaurant");
				if(GetPVarInt(playerid,"AmAusrauben") == 1){StopAudioStreamForPlayer(playerid); DeletePVar(playerid,"AmAusrauben");}
	        }
		}
	    else if(IsPlayerInRangeOfPoint(playerid, 3.0, 2114.9937,-1930.7943,13.3838))//Fahrschule Los Santos Enter
	    {
	        if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
		    SetPlayerPos(playerid,2118.8218,-3891.2322,819.6503);
		    SetPlayerFacingAngle(playerid,357.4838);
		    SetPlayerInterior(playerid,3);
		    SetCameraBehindPlayer(playerid);
    		GameTextForPlayer(playerid, "~g~Willkommen in der Fahrschule",3000,4);
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 3.0, 2118.8218,-3891.2322,819.6503))//Fahrschule Los Santos Ausgang
	    {
	        if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
		    SetPlayerPos(playerid,2114.9937,-1930.7943,13.3838);
		    SetPlayerFacingAngle(playerid,357.4838);
		    SetPlayerInterior(playerid,0);
		    SetPlayerVirtualWorld(playerid,0);
	    }
	    else if(IsPlayerInRangeOfPoint(playerid,1.5,1773.0109,-1699.5596,13.5509))//Los Santos Tresor Enter
		{
		    if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
		    if(BankRobAmLaufen == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Es findet kein Bankrob statt.");
      		if(SpielerInfo[playerid][sFraktion] == SpielerInfo[BankAttacker][sFraktion] || SpielerInfo[playerid][sFraktion] == 2 || SpielerInfo[playerid][sFraktion] == 6)
			{
	  			SetPlayerPos(playerid,1771.5452,-1700.5923,13.5509);
			    SetPlayerFacingAngle(playerid,87.7365);
			}
			else SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Zutritt nur für Polizisten oder Gangmitglieder des Bankräubers.");
		}
  		else if(IsPlayerInRangeOfPoint(playerid,1.5,1771.5452,-1700.5923,13.5509))//Los Santos Tresor Exit
		{
		    if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
  			SetPlayerPos(playerid,1773.3085,-1699.7356,13.5509);
		    SetPlayerFacingAngle(playerid,262.7696);
		}
  		else if(IsPlayerInRangeOfPoint(playerid,3.0,1024.1505,-983.4423,42.6440))//Paintballarena - Los Santos
		{
		    if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
		    if(GetPlayerWantedLevelEx(playerid) != 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du wirst von der Polizei gesucht. Komm wieder wenn du nicht mehr gesucht wirst.");
		    if(GetPlayerMoneyEx(playerid) < 250)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld dabei.");
			if(GetPVarInt(playerid,"CopDuty") == 0 || GetPVarInt(playerid,"FBIDuty") == 0 || GetPVarInt(playerid,"MedicDuty") == 0
			|| GetPVarInt(playerid,"FeuerwehrDuty") == 0 || GetPVarInt(playerid,"SanNewsDuty") == 0 || GetPVarInt(playerid,"TruckerDuty") == 0 || GetPVarInt(playerid,"PizzaboteDuty") == 0 ||
			GetPVarInt(playerid,"KehrmaschinenDuty") == 0 || GetPVarInt(playerid,"PilotDuty") == 0 ||
			GetPVarInt(playerid,"BusfahrerDuty") == 0 || GetPVarInt(playerid,"MüllmannDuty") == 0 ||
			GetPVarInt(playerid,"LandwirtDuty") == 0 || GetPVarInt(playerid,"GeldlieferantDuty") == 0 ||
			GetPVarInt(playerid,"ElektrikerDuty") == 0 || GetPVarInt(playerid,"OAmtDuty") == 0)
			{
			    new string[264];
				format(string,sizeof(string),"{FFFFFF}Arena: {FF0000}Deagle Only{FFFFFF} 			| Spieler: {FF0000}%d\n{FFFFFF}Arena: {FF0000}Deagle & Shotgun{FFFFFF} 		| Spieler: {FF0000}%d\n{FFFFFF}Arena: {FF0000}1vs1{FFFFFF}",PaintballSpieler[0],PaintballSpieler[1]);
				ShowPlayerDialog(playerid,DIALOG_PAINTBALL,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Paintball",string,"Weiter","Zurück");
			}
			else SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist noch im Dienst.");
		}
		else if(IsPlayerInRangeOfPoint(playerid,3.0,1570.7537,-1337.1708,16.4844))//Eingang Fallschirm - Los Santos
		{
		    if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
			SetPlayerPos(playerid,1548.7970,-1366.0869,326.2109);
		    SetPlayerFacingAngle(playerid,90.7367);
		}
		else if(IsPlayerInRangeOfPoint(playerid,3.0,1548.5597,-1364.1962,326.2183))//Ausgang Fallschirm - Los Santos
		{
		    if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
			SetPlayerPos(playerid,1571.1387,-1336.5957,16.4844);
		    SetPlayerFacingAngle(playerid,318.1956);
		}

		Evidence_EnterExit(playerid);

		if(SpielerInfo[playerid][sNebenjob] == 4)//Pilot
		{
		    if(IsAntiInteriorFlucht(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Anti-Interiorflucht: Warte bis du das Gebäude betrittst/verlässt.");
  			new Float:Position[4];
	 		for(new i=1; i<MAX_VEHICLES; i++)
	        {
	        	if(!IsValidVehicle(i))continue;
	        	if(FahrzeugInfo[i][fDatabaseID] == 0)continue;
	        	if(FahrzeugInfo[i][fNebenjob] != 4)continue;
	        	if(FahrzeugInfo[i][fModelID] != 577)continue;
	        	GetVehiclePos(i,Position[0],Position[1],Position[2]);
	            if(IsPlayerInRangeOfPoint(playerid,7.0,Position[0],Position[1],Position[2]))
	            {
   	        		if(FahrzeugInfo[i][fNebenjob] != SpielerInfo[playerid][sNebenjob])return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt keine Schlüssel für dieses Fahrzeug.");
	        		if(SpielerInfo[playerid][sJobEXP][3] < FahrzeugInfo[i][fJobEXP])return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht die benötigte Erfahrung für dieses Flugzeug.");
					PutPlayerInVehicle(playerid,i,0);
	            }
			 }
		}
	}
	else if(newkeys & KEY:131072)//N Taste
	{
		new TuningID = GetFreeTuningID(playerid);
		if(TuningID!= INVALID_TUNING_ID)
   		{
   		    OnPlayerTuningKey(playerid);
   	    }
		if(IsPlayerInRangeOfPoint(playerid,3.0,2109.6850, -3883.6213, 819.8867))//Fahrschule
		{
			PC_EmulateCommand(playerid, "/fahrschule");
		}
		else if(IsPlayerInRangeOfPoint(playerid,3.0,1790.4467,-1710.6276,13.5489))//Gesamtbetrag Bank LS
		{
			PC_EmulateCommand(playerid, "/gesamtbetrag");
		}
		else if(IsPlayerInRangeOfPoint(playerid,3.0,295.7924,-38.2544,1001.5156))//Ammunation Kasse
		{
			PC_EmulateCommand(playerid, "/buygun");
		}
		else if(IsPlayerInRangeOfPoint(playerid,3.0,843.5143,-1746.0594,13.5899))//Hotdogstand
		{
			PC_EmulateCommand(playerid, "/hotdogkaufen");
		}
/*		else if(IsPlayerAtPickupByType(playerid,3.0,918.7917,-1463.4541,2754.3389)) //Stadthalle Rezeption
	    {
			PC_EmulateCommand(playerid, "/stadthalle");
	    }*/
   		else if(IsPlayerInRangeOfPoint(playerid,5.0,918.7917,-1463.4541,2754.3389))//Stadthalle Rezeption
	    {
			PC_EmulateCommand(playerid, "/stadthalle");
	    }
   		else if(IsPlayerInRangeOfPoint(playerid,5.0,-1634.1162,-2241.6426,31.4766))//Schwarzmarkt
	    {
			PC_EmulateCommand(playerid, "/schwarzmarkt");
	    }
	    else if(IsPlayerInRangeOfPoint(playerid,2.0,316.2444,1834.3264,2241.5850))//Waffenkammer LSPD
	    {
			PC_EmulateCommand(playerid, "/waffenkammer");
	    }
	    else if(IsPlayerInRangeOfPoint(playerid,2.0,298.3799,1822.3867,2241.5850))//Skinchange LSPD
	    {
			PC_EmulateCommand(playerid, "/pdskin");
	    }
	    else if(IsPlayerInRangeOfPoint(playerid,2.0,307.2472,1822.1039,2241.5850))//SWAT Duty LSPD
	    {
			PC_EmulateCommand(playerid, "/swatduty");
	    }
	    else if(IsPlayerInRangeOfPoint(playerid,5.0,1778.7935,-1703.7747,13.5609) || IsPlayerInRangeOfPoint(playerid,5.0,1780.3076,-1703.8090,13.5629) && !IsPlayerInAnyVehicle(playerid))
	 	{
			PC_EmulateCommand(playerid, "/bank");
		}
		else if(IsPlayerAtPickupByType(playerid, 5.0, PICKUP_TYPE_CREATEGROUP))
		{
			PC_EmulateCommand(playerid, "/creategruppe");
		}
		else if(IsPlayerAtPickupByType(playerid, 5.0, PICKUP_TYPE_CREATEPARTIE))
		{
			PC_EmulateCommand(playerid, "/createpartei");
		}
		else if(IsPlayerAtPickupByType(playerid, 5.0, PICKUP_TYPE_ORDERFURNITURE)) {
			PC_EmulateCommand(playerid, "/orderfurniture");
		}
		else if(IsPlayerInRangeOfPoint(playerid,3.5,1569.3154,-2154.8662,14.0352))
		{
			PC_EmulateCommand(playerid, "/neon");
		}
		else if(IsPlayerInRangeOfPoint(playerid,2.5,268.67346, 1883.53430, -30.26508))
		{
			PC_EmulateCommand(playerid, "/takebomb");
		}
		else if(IsPlayerInRangeOfPoint(playerid,5.0,756.8801,5.5222,1000.7000) || IsPlayerInRangeOfPoint(playerid,5.0,768.1483,-37.2912,1000.6865)
   		|| IsPlayerInRangeOfPoint(playerid,5.0,774.9591,-62.3417,1000.7184))
   		{
			PC_EmulateCommand(playerid, "/kampfstyles");
   		}
   		else if(IsPlayerInRangeOfPoint(playerid,1,2532.0051,-1519.2444,24.1094))
   		{
			PC_EmulateCommand(playerid, "/baumarkt");
   		}
   		else if(IsPlayerInRangeOfPoint(playerid,2.5,1560.3781,-1694.8395,6.5000) || IsPlayerInRangeOfPoint(playerid,2.5,-2222.7119,265.6810,26.9155))//Repairpoints
   		{
	    	if(SpielerInfo[playerid][sFraktion] == 2 || SpielerInfo[playerid][sFraktion] == 6)
		   	{
			    if(!IsPlayerInAnyVehicle(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du sitzt in keinem Fahrzeug!");
				new PLAYER_STATE:State=GetPlayerState(playerid);
				if(State!=PLAYER_STATE_DRIVER)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist nicht der Fahrer dieses Fahrzeugs.");
				if(FahrzeugInfo[GetPlayerVehicleID(playerid)][fFraktion] != 2 && FahrzeugInfo[GetPlayerVehicleID(playerid)][fFraktion] != 6)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Es können nur staatliche Dienstfahrzeuge behandelt werden.");
				RepairVehicle(GetPlayerVehicleID(playerid));
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 596 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 597 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 598){SetVehicleHealth(GetPlayerVehicleID(playerid), 1500);}
				else SetVehicleHealth(GetPlayerVehicleID(playerid), 1000);
		        FahrzeugInfo[GetPlayerVehicleID(playerid)][fTank] = VehicleData[GetVehicleModel(GetPlayerVehicleID(playerid))-400][vehLiter];
		        new string[128];
		        GovVars[govKasse] -= 5000;
				format(string,sizeof(string),"%s %s hat das Fahrzeug repariert und betankt.",RangName(playerid),SpielerInfo[playerid][sName]);
				SetPlayerChatBubble(playerid, string, COLOR_PURPLE, 12.0, 3000);
				format(string,sizeof(string),"* %s %s hat das Fahrzeug repariert und betankt.",RangName(playerid),SpielerInfo[playerid][sName]);
				ProxDetector(10.0, playerid, string, 0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA);
				PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);

			} else NichtBerechtigt
   		}
		else if(IsPlayerInRangeOfPoint(playerid,3.5,1730.1222,520.3935,28.2204) ||
		IsPlayerInRangeOfPoint(playerid,3.5,1743.9443,515.8735,28.2149) ||
		IsPlayerInRangeOfPoint(playerid,3.5,56.1354,-1525.3245,4.9989) ||
		IsPlayerInRangeOfPoint(playerid,3.5,49.5451,-1538.1730,5.1519) ||
		IsPlayerInRangeOfPoint(playerid,3.5,26.1980,-1338.1219,10.1589) ||
		IsPlayerInRangeOfPoint(playerid,3.5,-1.1519,-1323.5649,11.2628) ||
		IsPlayerInRangeOfPoint(playerid,3.5,523.5012,469.5414,18.9297) ||
		IsPlayerInRangeOfPoint(playerid,3.5,518.9169,475.9107,18.9297))
  		{
			PC_EmulateCommand(playerid, "/maut");
  		}
		else if(AmATM(playerid))
  		{
  		    PC_EmulateCommand(playerid, "/atm");
  		}
		else if(AmLTM(playerid))
  		{
  			new Lotto[3];
    		Lotto[0] = random(9);
			Lotto1_start:
			Lotto[1] = random(9);
    		if(Lotto[0] == Lotto[1])goto Lotto1_start;
			Lotto2_start:
 			Lotto[2]= random(9);
    		if(Lotto[0] == Lotto[2])goto Lotto2_start;
    		if(Lotto[1] == Lotto[2])goto Lotto2_start;
			buylottoschein(playerid,Lotto[0],Lotto[1],Lotto[2]);
  		}
		else if(AmGeldSack(playerid))
  		{
			PC_EmulateCommand(playerid, "/aufheben");
  		}
		else if(AmHeuballen(playerid))
  		{
			PC_EmulateCommand(playerid, "/aufsammeln");
  		}
		else if(IsPlayerInRangeOfPoint(playerid,4.0,1864.6090,-1598.8942,13.6107) || IsPlayerInRangeOfPoint(playerid,4.0,1811.1904,-1398.9595,13.6169)
		|| IsPlayerInRangeOfPoint(playerid,4.0,-1538.5326,1161.8965,7.1947) || IsPlayerInRangeOfPoint(playerid,4.0,595.3383,-1510.0638,15.1829)
		|| IsPlayerInRangeOfPoint(playerid,4.0,2938.4565,-2056.2478,3.5650))
		{
			PC_EmulateCommand(playerid, "/autohaus");
		}
		else if(IsPlayerInRangeOfPoint(playerid,3.0,2493.24243, -1707.50134, 1015.58276))
		{
			PC_EmulateCommand(playerid, "/kiste");
		}
		else if(IsPlayerInRangeOfPoint(playerid,3.0,379.7354,-116.4596,1001.4922))
		{
			PC_EmulateCommand(playerid, "/pizza");
		}
		else if(IsPlayerInRangeOfPoint(playerid,3.0,377.0177,-67.6665,1001.5151) || IsPlayerInRangeOfPoint(playerid,3.0,369.4442,-6.2557,1001.8516))
		{
			PC_EmulateCommand(playerid, "/bestellen");
		}
		else if(IsPlayerInRangeOfPoint(playerid,3.0,-22.1672,-138.5988,1003.5469))
		{
			PC_EmulateCommand(playerid, "/einkaufen");
		}
		else if(IsPlayerInRangeOfPoint(playerid,5.0,298.3004,1828.1854,2241.5850) || IsPlayerInRangeOfPoint(playerid,5.0,231.1223,113.2377,1003.2188) ||
		IsPlayerInRangeOfPoint(playerid,5.0,210.4058,185.9881,1003.0313) || IsPlayerInRangeOfPoint(playerid,5.0,-2469.2332,514.7144,25.0943) ||
		IsPlayerInRangeOfPoint(playerid,5.0,327.1490,307.2458,999.1484) || IsPlayerInRangeOfPoint(playerid,3.0,1055.0511,-1695.7314,13.2615))
    	{
   			if(SpielerInfo[playerid][sFraktion] == 2 || SpielerInfo[playerid][sFraktion] == 6)
			{
      			if(GetPVarInt(playerid,"CopDuty") == 0 && GetPVarInt(playerid,"FBIDuty") == 0)
		        {
		        	if(SpielerInfo[playerid][sFraktion] == 2){ShowPlayerDialog(playerid,DIALOG_DUTY_EQUIP,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Dienstauswahl","In den Dienst gehen\nIn/Aus den Undercover-Dienst gehen","Weiter","Abbrechen");}
					else {ShowPlayerDialog(playerid,DIALOG_DUTY_EQUIP,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Dienstauswahl","In den Dienst gehen\nAusrüsten\nHeilen (100 HP)","Weiter","Abbrechen");}
				}
				else if(GetPVarInt(playerid,"CopDuty") == 1 || GetPVarInt(playerid,"FBIDuty") == 1)
				{
				    if(SpielerInfo[playerid][sFraktion] == 2){ShowPlayerDialog(playerid,DIALOG_DUTY_EQUIP,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Dienstauswahl","In den Feierabend gehen","Weiter","Abbrechen");}
					else {ShowPlayerDialog(playerid,DIALOG_DUTY_EQUIP,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Dienstauswahl","In den Feierabend gehen\nAusrüsten\nHeilen (100 HP)","Weiter","Abbrechen");}
				}
			}
			else if(SpielerInfo[playerid][sFraktion] == 7)
			{
			    if(GetPVarInt(playerid,"OAmtDuty") > 0)
			    {
			        ShowPlayerDialog(playerid,DIALOG_DUTY_EQUIP,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Dienstauswahl","In den Feierabend gehen\nHeilen (100 HP)","Weiter","Abbrechen");
			    }
			    else
			    {
			        ShowPlayerDialog(playerid,DIALOG_DUTY_EQUIP,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Dienstauswahl","In den Dienst gehen\nHeilen (100 HP)","Weiter","Abbrechen");
			    }
			    return 1;
			}
			else NichtBerechtigt
		}
        else if(IsPlayerInRangeOfPoint(playerid,12.0,1593.3000500,-1638.0999800,12.5000000))//LSPD Tor Garage
		{
			if(SpielerInfo[playerid][sFraktion] == 2 || SpielerInfo[playerid][sFraktion] == 6)
			{
			    if(LSPDGarageZ == 0)
			    {
	    			PlayerPlaySound(playerid, 1139, 1593.3000500,-1638.0999800,02.5000000);
					MoveDynamicObject(LSPDGarage, 1593.3000500,-1638.0999800,02.5000000,4.0,0.0000000,0.0000000,180.0000000);
					SetTimer("LSPDGarageT", 5000, false);
				}
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,12.0,1544.3883,-1627.3789,14.1119))//LSPD Schranke Hof
		{
			if(SpielerInfo[playerid][sFraktion] == 2 || SpielerInfo[playerid][sFraktion] == 6 || SpielerInfo[playerid][sFraktion] == 7 || SpielerInfo[playerid][sFraktion] == 5)
			{
   				if(LSPDSchrankeZ == 0)
			    {
				    PlayerPlaySound(playerid, 1139, 1593.3000500,-1638.0999800,02.5000000);
					MoveDynamicObject(LSPDSchranke, 1544.6999500,-1630.9000200,13.1000000+0.01,0.45,0.0000000,360.0000000,270.0000000);
					SetTimer("LSPDSchrankeT", 5000, false);
				}
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,12.0,1106.0683, -1691.4707, 12.9108))//Oamt Schranke Verwahrstelle
		{
			if(SpielerInfo[playerid][sFraktion] == 2 || SpielerInfo[playerid][sFraktion] == 6 || SpielerInfo[playerid][sFraktion] == 7 || GetPVarInt(playerid,"FreikaufSchluessel") == 1)
			{
	   			PlayerPlaySound(playerid, 1139, 1106.0683, -1691.4707, 12.9108);
				MoveDynamicObject(oamtbasemapschranke, 1106.0683, -1691.4707, 12.9108+0.1, 0.45, 0.0000, 0.0000, 90.0000);
				SetTimer("OAmtSchrankeT", 5000, false);
			}
		}
  		else if(IsPlayerInRangeOfPoint(playerid,12.0,-2168.68530, 249.60730, 36.57600))//FBI Tor
		{
			if(SpielerInfo[playerid][sFraktion] == 2 || SpielerInfo[playerid][sFraktion] == 6)
			{
				if(FBITorZ == 0)
			    {
	    			PlayerPlaySound(playerid, 1139, -2168.68530, 249.60730, 36.57600);
					MoveDynamicObject(FBITor, -2168.68530, 249.60730, 30.57600,4.0,0.00000, 0.00000, 90.00000);
					SetTimer("FBITorT", 5000, false);
				}
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,12.0,321.191,-1187.818,75.783))//Russen Tor
		{
			if(SpielerInfo[playerid][sFraktion] == 18)
			{
				if(RussenTorZ == 0)
			    {
	    			PlayerPlaySound(playerid, 1139, 321.191,-1187.818,75.783);
					MoveDynamicObject(RussenTor, 321.191,-1187.818,70.783,4.0,0.000,0.000,38.177);
					SetTimer("RussenTorT", 5000, false);
				}
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,12.0,781.78333, -1384.81799, 12.88760))//News Tor 1
		{
			if(SpielerInfo[playerid][sFraktion] == 2 || SpielerInfo[playerid][sFraktion] == 6 || SpielerInfo[playerid][sFraktion] == 8)
			{
			    PlayerPlaySound(playerid, 1139, 781.78333, -1384.81799, 12.88760);
				MoveDynamicObject(NewsTor[0], 774.87518, -1384.78162, 12.88760,3.0, 0.00000, 0.00000, 180.00000);
				SetTimer("NewsTor1T", 5000, false);
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,12.0,782.37695, -1330.45349, 12.70840))//News Tor 2
		{
			if(SpielerInfo[playerid][sFraktion] == 2 || SpielerInfo[playerid][sFraktion] == 6 || SpielerInfo[playerid][sFraktion] == 8)
			{
			    PlayerPlaySound(playerid, 1139, 782.37695, -1330.45349, 12.70840);
				MoveDynamicObject(NewsTor[1], 774.82001, -1330.23206, 12.70840,3.0, 0.00000, 0.00000, 179.60001);
				SetTimer("NewsTor2T", 5000, false);
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,12.0,671.36200, -1353.85547,1696.4069))//News Tor 2
		{
			if(SpielerInfo[playerid][sFraktion] == 2 || SpielerInfo[playerid][sFraktion] == 6 || SpielerInfo[playerid][sFraktion] == 8)
			{
			    PlayerPlaySound(playerid, 1139, 671.36200, -1353.85547,1696.4069);
				MoveDynamicObject(NewsStudioTor, 671.36200, -1353.85547,1698.88806, 6.0,0.00000, 0.00000, 0.0);
				SetTimer("NewsStudioT", 5000, false);
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,0.7,345.47363, 1827.52173, 2241.95728) || IsPlayerInRangeOfPoint(playerid,0.7,347.63062, 1827.36877, 2241.95728))
		{
		    if(SpielerInfo[playerid][sFraktion] == 2 || SpielerInfo[playerid][sFraktion] == 6)
		    {
				ApplyAnimation(playerid,"heist9","Use_SwipeCard",4.1,false,false,false,false,0,SYNC_ALL);
				SetTimerEx("LspdDoorTimer", 1170, false, "i", playerid);
				return 1;
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,0.7,322.83569, 1836.03772, 2241.97534) || IsPlayerInRangeOfPoint(playerid,0.7,322.67569, 1836.03772, 2241.97534))
		{
		    if(SpielerInfo[playerid][sFraktion] == 2 || SpielerInfo[playerid][sFraktion] == 6)
		    {
				ApplyAnimation(playerid,"heist9","Use_SwipeCard",4.1,false,false,false,false,0,SYNC_ALL);
				SetTimerEx("LspdDoorWKTimer", 1170, false, "i", playerid);
				return 1;
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,0.7,-2458.4773,512.8635,25.0943) || IsPlayerInRangeOfPoint(playerid,0.7,-2458.5254,513.7373,25.0943))
        {
  		    if(SpielerInfo[playerid][sFraktion] == 2 || SpielerInfo[playerid][sFraktion] == 6)
		    {
				ApplyAnimation(playerid,"heist9","Use_SwipeCard",4.1,false,false,false,false,0,SYNC_ALL);
				SetTimerEx("LspdDoorTimer2", 1170, false, "i", playerid);
				return 1;
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,0.7,1467.6787,-1806.5359,-41.9614) || IsPlayerInRangeOfPoint(playerid,0.7,1466.8057,-1808.5967,-41.9614))
        {
  		    if(SpielerInfo[playerid][sFraktion] == 2 || SpielerInfo[playerid][sFraktion] == 6)
		    {
				ApplyAnimation(playerid,"heist9","Use_SwipeCard",4.1,false,false,false,false,0,SYNC_ALL);
				SetTimerEx("LspdDoorTimer3", 1170, false, "i", playerid);
				return 1;
			}
		}
  		else if(IsPlayerInRangeOfPoint(playerid,5.0,1164.5529,-1335.2123,-0.8598))
		{
			if(SpielerInfo[playerid][sFraktion] == 5)
			{
			    if(SpielerInfo[playerid][sRank] >= 6)
			    {
			        if(GetPVarInt(playerid,"MedicDuty") == 0 && GetPVarInt(playerid,"FeuerwehrDuty") == 0)
			        {
			    		ShowPlayerDialog(playerid,DIALOG_SARD_DUTY,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Dienstauswahl","Sanitäter\nFeuerwehr\nHeilen (100 HP)","Weiter","Abbrechen");
					}
					else
					{
	    				ShowPlayerDialog(playerid,DIALOG_DUTY2,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Dienstauswahl","In den Feierabend gehen\nHeilen (100 HP)","Weiter","Abbrechen");
					}
			    }
			    else
			    {
	                if(GetPVarInt(playerid,"MedicDuty") == 0 && GetPVarInt(playerid,"FeuerwehrDuty") == 0)
			        {
				        ShowPlayerDialog(playerid,DIALOG_DUTY_EQUIP,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Dienstauswahl","In den Dienst gehen\nHeilen (100 HP)","Weiter","Abbrechen");
					}
					else
					{
	    				ShowPlayerDialog(playerid,DIALOG_DUTY_EQUIP,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Dienstauswahl","In den Feierabend gehen\nHeilen (100 HP)","Weiter","Abbrechen");
					}
				}
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,5.0,1407.0212,-23.3379,1010.3594))
		{
			if(SpielerInfo[playerid][sFraktion] == 8)
			{
                if(GetPVarInt(playerid,"SanNewsDuty") == 0)
		        {
			        ShowPlayerDialog(playerid,DIALOG_DUTY_EQUIP,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Dienstauswahl","In den Dienst gehen\nHeilen (100 HP)","Weiter","Abbrechen");
				}
				else
				{
    				ShowPlayerDialog(playerid,DIALOG_DUTY_EQUIP,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Dienstauswahl","In den Feierabend gehen\nHeilen (100 HP)","Weiter","Abbrechen");
				}
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,3.0,2504.7148,-2640.4246,13.8623))
		{
		    if(IsPlayerInAnyVehicle(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Im Fahrzeug nicht möglich.");
			if(SpielerInfo[playerid][sNebenjob] != 16)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist kein Langstreckenfahrer");
            if(GetPVarInt(playerid,"LSFDuty") == 0)
	        {
		        ShowPlayerDialog(playerid,DIALOG_JOB_DUTY,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Dienstauswahl","In den Dienst gehen","Weiter","Abbrechen");
			}
			else
			{
				ShowPlayerDialog(playerid,DIALOG_JOB_DUTY,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Dienstauswahl","In den Feierabend gehen","Weiter","Abbrechen");
			}
		}
  		else if(IsPlayerInRangeOfPoint(playerid,3.0,2132.3325,-2282.8867,20.6719))
		{
		    if(IsPlayerInAnyVehicle(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Im Fahrzeug nicht möglich.");
			if(SpielerInfo[playerid][sNebenjob] != 1)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist kein LKW-Fahrer / Trucker.");
            if(GetPVarInt(playerid,"TruckerDuty") == 0)
	        {
		        ShowPlayerDialog(playerid,DIALOG_JOB_DUTY,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Dienstauswahl","In den Dienst gehen","Weiter","Abbrechen");
			}
			else
			{
				ShowPlayerDialog(playerid,DIALOG_JOB_DUTY,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Dienstauswahl","In den Feierabend gehen","Weiter","Abbrechen");
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,3.0,369.0709,-114.6389,1001.4995))
		{
		    if(IsPlayerInAnyVehicle(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Im Fahrzeug nicht möglich.");
			if(SpielerInfo[playerid][sNebenjob] != 2)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist kein Pizzabote.");
            if(GetPVarInt(playerid,"PizzaboteDuty") == 0)
	        {
		        ShowPlayerDialog(playerid,DIALOG_JOB_DUTY,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Dienstauswahl","In den Dienst gehen","Weiter","Abbrechen");
			}
			else
			{
				ShowPlayerDialog(playerid,DIALOG_JOB_DUTY,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Dienstauswahl","In den Feierabend gehen","Weiter","Abbrechen");
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,3.0,1378.4637,-1640.7590,13.5469))
		{
		    if(IsPlayerInAnyVehicle(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Im Fahrzeug nicht möglich.");
		    if(SpielerInfo[playerid][sNebenjob] != 3)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist kein Kehrmaschinenfahrer.");
  			if(GetPVarInt(playerid,"KehrmaschinenDuty") == 0)
	        {
		        ShowPlayerDialog(playerid,DIALOG_JOB_DUTY,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Dienstauswahl","In den Dienst gehen","Weiter","Abbrechen");
			}
			else
			{
				ShowPlayerDialog(playerid,DIALOG_JOB_DUTY,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Dienstauswahl","In den Feierabend gehen","Weiter","Abbrechen");
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,3.0,1957.0295,-2183.6008,13.5469))
		{
		    if(IsPlayerInAnyVehicle(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Im Fahrzeug nicht möglich.");
		    if(SpielerInfo[playerid][sNebenjob] != 4)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist kein Pilot.");
  			if(GetPVarInt(playerid,"PilotDuty") == 0)
	        {
		        ShowPlayerDialog(playerid,DIALOG_JOB_DUTY,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Dienstauswahl","In den Dienst gehen","Weiter","Abbrechen");
			}
			else
			{
				ShowPlayerDialog(playerid,DIALOG_JOB_DUTY,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Dienstauswahl","In den Feierabend gehen","Weiter","Abbrechen");
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,3.0,1523.1068,-2325.8340,13.5469))
		{
		    if(IsPlayerInAnyVehicle(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Im Fahrzeug nicht möglich.");
		    if(SpielerInfo[playerid][sNebenjob] != 5)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist kein Busfahrer.");
  			if(GetPVarInt(playerid,"BusfahrerDuty") == 0)
	        {
		        ShowPlayerDialog(playerid,DIALOG_JOB_DUTY,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Dienstauswahl","In den Dienst gehen","Weiter","Abbrechen");
			}
			else
			{
				ShowPlayerDialog(playerid,DIALOG_JOB_DUTY,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Dienstauswahl","In den Feierabend gehen","Weiter","Abbrechen");
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,3.0,1734.5929,-2060.1526,13.5910))
		{
		    if(IsPlayerInAnyVehicle(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Im Fahrzeug nicht möglich.");
		    if(SpielerInfo[playerid][sNebenjob] != 6)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist kein Müllmann.");
  			if(GetPVarInt(playerid,"MüllmannDuty") == 0)
	        {
		        ShowPlayerDialog(playerid,DIALOG_JOB_DUTY,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Dienstauswahl","In den Dienst gehen","Weiter","Abbrechen");
			}
			else
			{
				ShowPlayerDialog(playerid,DIALOG_JOB_DUTY,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Dienstauswahl","In den Feierabend gehen","Weiter","Abbrechen");
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,3.0,-62.7901,76.2742,3.1172))
		{
		    if(IsPlayerInAnyVehicle(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Im Fahrzeug nicht möglich.");
		    if(SpielerInfo[playerid][sNebenjob] != 7)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist kein Landwirt.");
  			if(GetPVarInt(playerid,"LandwirtDuty") == 0)
	        {
		        ShowPlayerDialog(playerid,DIALOG_JOB_DUTY,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Dienstauswahl","In den Dienst gehen","Weiter","Abbrechen");
			}
			else
			{
				ShowPlayerDialog(playerid,DIALOG_JOB_DUTY,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Dienstauswahl","In den Feierabend gehen","Weiter","Abbrechen");
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,3.0,1789.3868,-1706.7506,13.5509))
		{
		    if(IsPlayerInAnyVehicle(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Im Fahrzeug nicht möglich.");
		    if(SpielerInfo[playerid][sNebenjob] != 10)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist kein Geldlieferant.");
  			if(GetPVarInt(playerid,"GeldlieferantDuty") == 0)
	        {
		        ShowPlayerDialog(playerid,DIALOG_JOB_DUTY,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Dienstauswahl","In den Dienst gehen","Weiter","Abbrechen");
			}
			else
			{
				ShowPlayerDialog(playerid,DIALOG_JOB_DUTY,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Dienstauswahl","In den Feierabend gehen","Weiter","Abbrechen");
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,3.0,2147.0122,-1733.2238,13.5624))
		{
		    if(IsPlayerInAnyVehicle(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Im Fahrzeug nicht möglich.");
		    if(SpielerInfo[playerid][sNebenjob] != 11)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist kein Elektriker.");
  			if(GetPVarInt(playerid,"ElektrikerDuty") == 0)
	        {
		        ShowPlayerDialog(playerid,DIALOG_JOB_DUTY,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Dienstauswahl","In den Dienst gehen","Weiter","Abbrechen");
			}
			else
			{
				ShowPlayerDialog(playerid,DIALOG_JOB_DUTY,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Dienstauswahl","In den Feierabend gehen","Weiter","Abbrechen");
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,3.0,1747.0460,-1944.3030,13.5671))
		{
		    if(IsPlayerInAnyVehicle(playerid))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Im Fahrzeug nicht möglich.");
		    if(SpielerInfo[playerid][sNebenjob] != 14)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist kein Zugfahrer.");
  			if(GetPVarInt(playerid,"ZugfahrerDuty") == 0)
	        {
		        ShowPlayerDialog(playerid,DIALOG_JOB_DUTY,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Dienstauswahl","In den Dienst gehen","Weiter","Abbrechen");
			}
			else
			{
				ShowPlayerDialog(playerid,DIALOG_JOB_DUTY,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Dienstauswahl","In den Feierabend gehen","Weiter","Abbrechen");
			}
		}
		else if(IsPlayerInAnyVehicle(playerid))
		{
 			new TuningID2 = GetFreeTuningID(playerid);
			if(TuningID2 != INVALID_TUNING_ID)
			{
				OpenPlayerTuning(playerid);
			}
		}
	}
	else if(SpielerInfo[playerid][sICPTasteMotor] != 0 && newkeys & KEY:SpielerInfo[playerid][sICPTasteMotor])
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
		    //OnPlayerCommandText(playerid, "/motor");
			PC_EmulateCommand(playerid, "/motor");
		}
	}
	else if(SpielerInfo[playerid][sICPTasteLicht] != 0 && newkeys & KEY:SpielerInfo[playerid][sICPTasteLicht])
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
			//OnPlayerCommandText(playerid, "/licht");
			PC_EmulateCommand(playerid, "/licht");
		}
	}
	else if(SpielerInfo[playerid][sICPTasteCarlock] != 0 && newkeys & KEY:SpielerInfo[playerid][sICPTasteCarlock])
	{
	    //OnPlayerCommandText(playerid, "/carlock");
		PC_EmulateCommand(playerid, "/carlock");
	}
	else if(SpielerInfo[playerid][sICPTasteFlock] != 0 && newkeys & KEY:SpielerInfo[playerid][sICPTasteFlock] && SpielerInfo[playerid][sFraktion] > 0)
	{
	    //OnPlayerCommandText(playerid, "/flock");
		PC_EmulateCommand(playerid, "/flock");
	}
	else if(newkeys & KEY_HANDBRAKE)//Aim Taste
	{
		if(SpielerInfo[playerid][sFraktion] == 2 || SpielerInfo[playerid][sFraktion] == 6)
		{
		    if(GetPlayerWeapon(playerid) == WEAPON:23)
		    {
				if(GetPVarInt(playerid,"TazerSperre") == 1)
				{
				    SetPlayerArmedWeapon(playerid,WEAPON:0);
				    SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Dein Tazer ist noch nicht wieder einsatzbereit.");
				}
		    }
		}
	}
	else if((newkeys & KEY_ACTION)&&(IsPlayerInAnyVehicle(playerid))&&(GetPlayerState(playerid)==PLAYER_STATE_DRIVER))
 	{
 	    if(SpielerInfo[playerid][sFraktion] == 7)
 	    {
	        if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 525)return 1;
	        new Float:pX,Float:pY,Float:pZ;
	        GetPlayerPos(playerid,pX,pY,pZ);
	        new Float:vX,Float:vY,Float:vZ;
	        new Found=0;
	        new vid=0;
	        while((vid<MAX_VEHICLES)&&(!Found))
	        {
	        	vid++;
	         	GetVehiclePos(vid,vX,vY,vZ);
	          	if((floatabs(pX-vX)<7.0)&&(floatabs(pY-vY)<7.0)&&(floatabs(pZ-vZ)<7.0)&&(vid!=GetPlayerVehicleID(playerid)))
	           	{
	            	Found=1;
					if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
	 				{
	     				DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
	         		}
					AttachTrailerToVehicle(vid,GetPlayerVehicleID(playerid));
	       			SendClientMessage(playerid,COLOR_YELLOW,"[Info]: {FFFFFF}Fahrzeug am Haken.");
	            }
	        }
		}
    }
	return 1;
}

public OnPlayerUpdate(playerid)
{
    if(playerMenu[playerid][E_PLAYER_MENU_ID][0] != EOS)
	{
	    new KEY:keys, KEY:updown, KEY:leftright;
		GetPlayerKeys(playerid, keys, updown, leftright);

		#pragma unused leftright
		#pragma unused keys

		if(updown & KEY_DOWN && (GetTickCount() - playerMenu[playerid][E_PLAYER_MENU_TICKCOUNT]) >= 200)
		{
		    new listitem = (playerMenu[playerid][E_PLAYER_MENU_LISTITEM] + (playerMenu[playerid][E_PLAYER_MENU_PAGE] * MENU_MAX_LISTITEMS_PERPAGE));

    		playerMenu[playerid][E_PLAYER_MENU_TICKCOUNT] = GetTickCount();
			PlayerPlaySound(playerid, MENU_SOUND_UPDOWN, 0.0, 0.0, 0.0);

			if((listitem + 1) == playerMenu[playerid][E_PLAYER_MENU_TOTAL_LISTITEMS])
			{
				playerMenu[playerid][E_PLAYER_MENU_LISTITEM] = 0;
				playerMenu[playerid][E_PLAYER_MENU_PAGE] = 0;
			}
			else if((playerMenu[playerid][E_PLAYER_MENU_LISTITEM] + 1) == ((playerMenu[playerid][E_PLAYER_MENU_PAGE] + 1) * MENU_MAX_LISTITEMS_PERPAGE))
			{
				playerMenu[playerid][E_PLAYER_MENU_LISTITEM] = 0;
				playerMenu[playerid][E_PLAYER_MENU_PAGE]++;
			}
			else
			{
				playerMenu[playerid][E_PLAYER_MENU_LISTITEM]++;
			}

			Internal_UpdateListitems(playerid);

			new menuid[32] = "menu_";
			strcat(menuid, playerMenu[playerid][E_PLAYER_MENU_ID]);
			CallLocalFunction(menuid, "iii", playerid, MENU_RESPONSE_DOWN, listitem);
		}
		else if(updown & KEY_UP && (GetTickCount() - playerMenu[playerid][E_PLAYER_MENU_TICKCOUNT]) >= 200)
		{
    		playerMenu[playerid][E_PLAYER_MENU_TICKCOUNT] = GetTickCount();
			PlayerPlaySound(playerid, MENU_SOUND_UPDOWN, 0.0, 0.0, 0.0);

    		if((playerMenu[playerid][E_PLAYER_MENU_LISTITEM] - 1) == -1)
			{
			    if(playerMenu[playerid][E_PLAYER_MENU_PAGE] == 0)
			    {
					playerMenu[playerid][E_PLAYER_MENU_LISTITEM] = ((MENU_MAX_LISTITEMS_PERPAGE - ((MENU_COUNT_PAGES(playerMenu[playerid][E_PLAYER_MENU_TOTAL_LISTITEMS], MENU_MAX_LISTITEMS_PERPAGE) * MENU_MAX_LISTITEMS_PERPAGE) - playerMenu[playerid][E_PLAYER_MENU_TOTAL_LISTITEMS])) - 1);
					playerMenu[playerid][E_PLAYER_MENU_PAGE] = (MENU_COUNT_PAGES(playerMenu[playerid][E_PLAYER_MENU_TOTAL_LISTITEMS], MENU_MAX_LISTITEMS_PERPAGE) - 1);
				}
				else
				{
					playerMenu[playerid][E_PLAYER_MENU_LISTITEM] = (MENU_MAX_LISTITEMS_PERPAGE - 1);
					playerMenu[playerid][E_PLAYER_MENU_PAGE]--;
				}
			}
			else
			{
				playerMenu[playerid][E_PLAYER_MENU_LISTITEM]--;
			}

			Internal_UpdateListitems(playerid);

			new menuid[32] = "menu_";
			strcat(menuid, playerMenu[playerid][E_PLAYER_MENU_ID]);
			CallLocalFunction(menuid, "iii", playerid, MENU_RESPONSE_DOWN, (playerMenu[playerid][E_PLAYER_MENU_LISTITEM] + (playerMenu[playerid][E_PLAYER_MENU_PAGE] * MENU_MAX_LISTITEMS_PERPAGE)));
		}
	}

	if(SpielerInfo[playerid][sLegBroken] > 0)
	{
	    if(IsPlayerInAnyVehicle(playerid))
	    {
	        new Float:playerHPpos[3];
	        GetPlayerPos(playerid,playerHPpos[0],playerHPpos[1],playerHPpos[2]);
	        SetPlayerPos(playerid,playerHPpos[0],playerHPpos[1],playerHPpos[2]+1);
	    }
	    ClearAnimations(playerid, SYNC_ALL);
	}

	new vehicleid = GetPlayerVehicleID(playerid), KEY:keys, KEY:ud, KEY:lr, Float:playerHealth;
	GetPlayerHealth(playerid,playerHealth);
	if(playerHealth > 175){SetPlayerHealth(playerid,175);}
	if(IsPlayerInAnyVehicle(playerid))
	{
		for(new i=0;i<MAX_NAGELBAENDER;i++)
		{
		 	if(NagelBand[i][Erstellt] == true)
		    {
			  	if(IsVehicleInRangeOfPoint(vehicleid,2.0,NagelBand[i][oPosX],NagelBand[i][oPosY],NagelBand[i][oPosZ]))
			   	{
					UpdateVehicleDamageStatus(vehicleid,VEHICLE_PANEL_STATUS:0,VEHICLE_DOOR_STATUS:0,VEHICLE_LIGHT_STATUS:0,VEHICLE_TYRE_STATUS:ReifenPlatt(1,1,1,1));
				}
			}
		}
	}
	new iCurWeap = GetPlayerWeapon(playerid);
    if(iCurWeap != GetPVarInt(playerid, "iCurrentWeapon"))
    {
        OnPlayerChangeWeapon(playerid, GetPVarInt(playerid, "iCurrentWeapon"), iCurWeap);
        SetPVarInt(playerid, "iCurrentWeapon", iCurWeap);
    }
	if(IsPlayerInNoDMZone(playerid) && GetPVarInt(playerid, "InNoDMZone") == 0)
	{
		if(GetPVarInt(playerid,"CopDuty") < 1 && GetPVarInt(playerid,"FBIDuty") < 1)
		{
	    	SetPlayerArmedWeapon(playerid, WEAPON:0);
 		}
		TextDrawShowForPlayer(playerid, NoDMZoneTextdraw);
		SetPVarInt(playerid, "InNoDMZone", 1);
	}
	if(GetPVarInt(playerid, "InNoDMZone") == 1 && !IsPlayerInNoDMZone(playerid))
	{
		TextDrawHideForPlayer(playerid, NoDMZoneTextdraw);
		SetPVarInt(playerid, "InNoDMZone", 0);
	}
	if(GetPlayerWeapon(playerid) == WEAPON:45 || GetPlayerWeapon(playerid) == WEAPON:44)
	{
		GetPlayerKeys(playerid, keys, ud, lr);
		if((keys & KEY_FIRE) && (!IsPlayerInAnyVehicle(playerid)))
		{
			return 0;
		}
	}
	if(Afk[playerid] == 0){lastUpdate[playerid] = GetTickCount();}
	return 1;
}

public OnTrailerUpdate(playerid, vehicleid)
{
    new playervehicleid = GetPlayerVehicleID(playerid);
	new Float:pX, Float:pY, Float:pZ;
	GetVehiclePos(playervehicleid,pX,pY,pZ);
	if(GetPVarInt(playerid,"TrailerUpdate") == 0)
	{
	    if(GetPVarInt(playerid,"TruckerAngebot") == 1)
	    {
			if(vehicleid != SpielerLKWTrailer[playerid])
		    {
				SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Das ist nicht dein Anhänger! Dein Anhänger befindet sich am roten Marker.");
				DetachTrailerFromVehicle(playervehicleid);
    			SetVehiclePos(playervehicleid,pX+3,pY,pZ);
			    LinkVehicleToInterior(playervehicleid,GetPlayerInterior(playerid));
			    SetVehicleVirtualWorld(playervehicleid,GetPlayerVirtualWorld(playerid));
			    PutPlayerInVehicle(playerid, playervehicleid, 0);
		    }
		    else
		    {
				SetPVarInt(playerid,"TrailerUpdate",1);
				DisablePlayerCheckpoint(playerid);
				KeineFunktion
			}
		}
		else if(GetPVarInt(playerid,"TruckerAngebot") == 2)
		{
		    if(vehicleid != SpielerLKWTrailer[playerid])
		    {
				SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Das ist nicht dein Anhänger! Dein Anhänger befindet sich am roten Marker.");
				DetachTrailerFromVehicle(playervehicleid);
 				SetVehiclePos(playervehicleid,pX+3,pY,pZ);
			    LinkVehicleToInterior(playervehicleid,GetPlayerInterior(playerid));
			    SetVehicleVirtualWorld(playervehicleid,GetPlayerVirtualWorld(playerid));
			    PutPlayerInVehicle(playerid, playervehicleid, 0);
		    }
		    else
		    {
		        SetPVarInt(playerid,"TrailerUpdate",1);
		        DisablePlayerCheckpoint(playerid);
				SetPlayerCheckpointEx(playerid,2607.1702,-2187.9561,14.1298,5.0);
				SendClientMessage(playerid,COLOR_YELLOW,"Begebe dich nun zum Hafen um deinen Anhänger aufzufüllen. Der Hafen befindet sich am roten Marker.");
			}
		}
	}
	return 1;
}

public OnPlayerStreamIn(playerid, forplayerid)
{
    if(FrakInfo[SpielerInfo[forplayerid][sFraktion]][fiBnd][SpielerInfo[playerid][sFraktion]] > 0)//Verbündete
    {
     	SetPlayerMarkerForPlayer(forplayerid, playerid, 0x00C300FF);//Grün
        SetPlayerMarkerForPlayer(playerid, forplayerid, 0x00C300FF);//Grün
    }
    else if(SpielerInfo[playerid][sFraktion] > 8 && SpielerInfo[playerid][sFraktion] == SpielerInfo[forplayerid][sFraktion])//Gang & Mafian Mitglieder
    {
     	SetPlayerMarkerForPlayer(forplayerid, playerid, 0xFFDC00FF);//Gelb
        SetPlayerMarkerForPlayer(playerid, forplayerid, 0xFFDC00FF);//Gelb
    }
    else if(SpielerInfo[playerid][sFraktion] == 2 && SpielerInfo[forplayerid][sFraktion] == 2)//Cops
    {
        if(GetPVarInt(playerid,"CopDuty") < 1)SetPlayerMarkerForPlayer(forplayerid, playerid, 0xFFDC00FF);//Gelb OffDuty
        else SetPlayerMarkerForPlayer(forplayerid, playerid, COLOR_BLUE);//Blau

     	if(GetPVarInt(forplayerid,"CopDuty") < 1) SetPlayerMarkerForPlayer(playerid, forplayerid, 0xFFDC00FF);//Gelb OffDuty
        else SetPlayerMarkerForPlayer(playerid, forplayerid, COLOR_BLUE);//Blau
    }
    else if(SpielerInfo[playerid][sFraktion] == 2 && SpielerInfo[forplayerid][sFraktion] == 5 || SpielerInfo[playerid][sFraktion] == 5 && SpielerInfo[forplayerid][sFraktion] == 2)//SAPD und SARD als Verbündete
    {
     	SetPlayerMarkerForPlayer(forplayerid, playerid, 0x00C300FF);//Grün
        SetPlayerMarkerForPlayer(playerid, forplayerid, 0x00C300FF);//Grün
    }
    else if(SpielerInfo[playerid][sFraktion] == 6 && SpielerInfo[forplayerid][sFraktion] == 6)//FBI
    {
     	SetPlayerMarkerForPlayer(forplayerid, playerid, COLOR_BLUE);//Blau
        SetPlayerMarkerForPlayer(playerid, forplayerid, COLOR_BLUE);//Blau
    }
	else if(GetPVarInt(playerid,"CopMaske") == 1 || GetPVarInt(playerid,"FraktionsMaske") == 1 || GetPVarInt(playerid,"GruppenMaske") == 1)
	{
		ShowPlayerNameTagForPlayer(forplayerid, playerid, false);
	}
	return 1;
}

public OnPlayerStreamOut(playerid, forplayerid)
{
    if(GetPVarInt(playerid,"SpecateVon") > 0){UpdateSpectateStatus(playerid, GetPVarInt(playerid,"SpecateVon"));}
	return 1;
}

public OnVehicleStreamIn(vehicleid, forplayerid)
{
	return 1;
}

public OnVehicleStreamOut(vehicleid, forplayerid)
{
	return 1;
}

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	Partie_DialogResponse(playerid, dialogid, response, listitem);
	//ATM_System
	ATM_onDialogResponse(playerid, dialogid, response);
	//LumberjackSystem
	//Log_OnDialogResponse(playerid, dialogid, response, listitem);
	//FurnitureSystem
	Furnitures_DialogResponse(playerid, dialogid, response, listitem);
	//SERVER RESTART SYSTEM
	ServerRestart_OnDialogResponse(playerid, dialogid, response);
	//Player Email Validation
	PlayerEmail_DialogResponse(playerid, dialogid, response, inputtext);
	//BusJob
	BusJob_OnDialogResponse(playerid, dialogid, response, listitem);
	//ItemSystem
	Item_OnDialogResponse(playerid, dialogid, response, listitem);
	//InsuranceSystem
	Insurance_DialogResponse(playerid, dialogid, response, listitem);
	//Groupsystem
	Group_DialogResponse(playerid, dialogid, response, inputtext);
	//VehicleSystem
	Vehicles_OnDialogResponse(playerid, dialogid, response, listitem);
	//BeachBarSystem
	BeachBar_DialogResponse(playerid, dialogid, response, listitem, inputtext);
	//MiningSystem
	//Mining_DialogResponse(playerid, dialogid, response, listitem);
	//FisherJob
	FisherJob_OnDialogResponse(playerid, dialogid, response, listitem);
	//DynamicRobbery
	DynamicRobberyDialog(playerid, dialogid, response, inputtext);
	//CouponSystem
	Coupons_OnDialogResponse(playerid, dialogid, response, listitem);
	//MobilePhoneSystem
	MobilePhone_OnDialogResponse(playerid, dialogid, response, listitem, inputtext);
	PhoneCell_OnDialogResponse(playerid, dialogid, response, inputtext);
	//FastFoodStood
	FastFoodStood_OnDialogResponse(playerid, dialogid, response, listitem, inputtext);

    switch(dialogid)
	{
	    case DIALOG_SELECT_ZEITUNGSSTAND:
		{
			if(response == 1)
			{
			    DeletePVar(playerid, "NewsPaperAmount");
		     	return SendClientMessage(playerid, COLOR_YELLOW, "Du hast die Interaktion abgebrochen.");
			}
			if(response == 0)
			{
			    new string[144], mainstring[512], _counter = 0, _distancevar;
			    if(NewsPaperKiosk[listitem][SlotUsed] == 0)
			    {
			        for(new i = 0; i < MAX_KIOSKS; i++)
					{
					    if(NewsPaperKiosk[i][SlotUsed] == 1)
						{
							_counter++;
						    _distancevar = Func_GetDistance(NEWSPAPER_GET_POS, NewsPaperKiosk[i][nkX], NewsPaperKiosk[i][nkY], NewsPaperKiosk[i][nkZ]);
						    format(string, sizeof(string),"[ID: %i] Verfügbare Zeitungen: %i | Entfernung: %i Meter",
							i, NewsPaperKiosk[i][ZeitungAmount], _distancevar);
						}
						else
						{
						    format(string, sizeof(string),"[ID: %i] Leerer Zeitungsstand");
						}
					    strcat(mainstring, string);
					}
					if(_counter == 0)
					{
					    DeletePVar(playerid, "NewsPaperAmount");
						return SendClientMessage(playerid, COLOR_RED,"[Info]: {FFFFFF}Es existieren derzeit keine Zeitungsstände.");
					}
					SendClientMessage(playerid, COLOR_RED,"[Info]: {FFFFFF}Der ausgewählte Zeitungsstand ist zurzeit nicht verfügbar!");
			        return ShowPlayerDialog(playerid, DIALOG_SELECT_ZEITUNGSSTAND, DIALOG_STYLE_LIST, "Zeitungsstand auswählen", mainstring, "Auswählen", "Abbrechen");
				}
			    ServerLager[it_lager_newspaper] -= GetPVarInt(playerid, "NewsPaperAmount");
			    format(string, sizeof(string), "{FF6600}Interglobal Televison - Lager\n{FFCC99}Druckerfarbe: %i\nDruckerpapier: %i\nZeitungen: %i",
				ServerLager[it_lager_farbe], ServerLager[it_lager_papier], ServerLager[it_lager_newspaper]);
				UpdateDynamic3DTextLabelText(ServerLager[it_lager_label], COLOR_WHITE, string);
				format(string, sizeof(string), "{FF6600}Interglobal Televison - Lager\n{FFCC99}Zeitungen: %i\n/getnewspaper",ServerLager[it_lager_newspaper]);
		        UpdateDynamic3DTextLabelText(ServerLager[it_newspaper_lager_label], COLOR_WHITE, string);
				SetPlayerCheckpointEx(playerid,NewsPaperKiosk[listitem][nkX], NewsPaperKiosk[listitem][nkY], NewsPaperKiosk[listitem][nkZ],5.0);
				format(string, sizeof(string), "Du hast nun %i Zeitungen in deinem Inventar. Der ausgewählte Zeitungsstand (ID: %i) wurde auf der Karte markiert.",
				GetPVarInt(playerid, "NewsPaperPlace"), listitem);
				SetPVarInt(playerid, "NewsDistance", Func_GetDistance(NEWSPAPER_GET_POS, NewsPaperKiosk[listitem][nkX], NewsPaperKiosk[listitem][nkY], NewsPaperKiosk[listitem][nkZ]));
				SetPVarInt(playerid, "NewsAuslieferung", 1);
			    return SendClientMessage(playerid, COLOR_YELLOW, string);
			}
		}
	    case DIALOG_NEWSPAPER_NEWLINE:
	    {
	        if(response == 0) ShowNewsPaperCreation(playerid);
	        if(response == 1)
	        {
				new news_var = GetPVarInt(playerid, "NewNewspaper"), freeSlot = getNextFreeLine(news_var);
				if(strlen(inputtext) < 8 || strlen(inputtext) > 64)
	            {
	                SendClientMessage(playerid, COLOR_YELLOW, "Ungültige Texteingabe.");
	                return ShowPlayerDialog(playerid, DIALOG_NEWSPAPER_NEWLINE, DIALOG_STYLE_INPUT, NewsPaper[news_var][Title], "Gib den Text für die Zeile ein:\n(maximal 64 Zeichen)", "Absenden", "Zurück");
				}
				if(freeSlot == -1)
				{
                    SendClientMessage(playerid, COLOR_YELLOW, "Fehler bei der Erstellung!");
                    return ShowNewsPaperCreation(playerid);
				}
				strcat(NewsPaperLines[news_var][freeSlot], inputtext);
				NewsPaper[news_var][Lines]++;
				SendClientMessage(playerid, COLOR_YELLOW, "Neue Zeile wurde hinzugefügt!");
	            return ShowNewsPaperCreation(playerid);
			}
		}
	    case DIALOG_CREATION_NEWSPAPER:
	    {
	        new news_var = GetPVarInt(playerid, "NewNewspaper");
	        if(response == 0)
	        {
	            if(NewsPaper[news_var][SlotUsed] == 1)
	            {
	                NewsPaper[news_var][SlotUsed] = 0;
			    	strdel(NewsPaper[news_var][Title], 0, 32);
			    	for(new i = 0; i < NewsPaper[news_var][Lines]; i++)
				 	{
				 	    if(NewsPaperLine[news_var][i] == 0)continue;
	 					strdel(NewsPaperLines[news_var][i], 0, 32);
					}
				}
	            DeletePVar(playerid, "NewNewspaper");
	            return SendClientMessage(playerid, COLOR_YELLOW, "Du hast die Interaktion abgebrochen.");
			}
			if(response == 1)
			{
			    new string[256];
			    if(listitem == 0 && NewsPaper[news_var][Lines] != MAX_LINES_NEWSPAPER)
			    {
			        return ShowPlayerDialog(playerid, DIALOG_NEWSPAPER_NEWLINE, DIALOG_STYLE_INPUT, NewsPaper[news_var][Title], "Gib den Text für die Zeile ein:\n(maximal 64 Zeichen)", "Absenden", "Zurück");
				}
				else if(listitem == NewsPaper[news_var][Lines]+1)
				{
     				mysql_format(sqlHandle, string, sizeof(string), "INSERT INTO `newspaper` (`title`, `lines`) VALUES ('%s', '%d')",
			 		NewsPaper[news_var][Title], NewsPaper[news_var][Lines]);
			 		mysql_tquery(sqlHandle, string);
			 		new dbid = mysql_GetIntEx("SELECT LAST_INSERT_ID() FROM `newspaper` LIMIT 1;");
					for(new i = 0; i < MAX_LINES_NEWSPAPER; i++)
				 	{
				 	    if(NewsPaperLine[news_var][i] == 0)continue;
				 	    format(string, sizeof(string), "INSERT INTO `newspaper_lines` (`text`, `newspaperid`) VALUES ('%s', '%d')",
			 			NewsPaperLines[news_var][i], dbid);
						mysql_tquery(sqlHandle, string);
					}
					DeletePVar(playerid, "NewNewspaper");
					return SendClientMessage(playerid, COLOR_YELLOW, "Die Zeitung wurde erfolgreich erstellt und kann zum Verkauf ausgewählt werden (/newspaper select).");
				}
				else
				{
				    return ShowNewsPaperCreation(playerid);
				}
			}
		}
	    case DIALOG_NEW_NEWSPAPER:
	    {
	        if(response == 0)
	        {
	            DeletePVar(playerid, "NewNewspaper");
	            return SendClientMessage(playerid, COLOR_YELLOW, "Du hast die Interaktion abgebrochen.");
			}
			if(response == 1)
			{
			    if(strlen(inputtext) < 8 || strlen(inputtext) > 32)return ShowPlayerDialog(playerid, DIALOG_NEW_NEWSPAPER, DIALOG_STYLE_INPUT, "IT - Newspaper", "Gib den gewünschten Titel ein:\n(maximal 32 Zeichen)", "Auswählen", "Schließen");
			    new news_var = GetPVarInt(playerid, "NewNewspaper");
			    NewsPaper[news_var][SlotUsed] = 1;
			    format(NewsPaper[news_var][Title], 32, inputtext);
			    return ShowNewsPaperCreation(playerid);
			}
		}
	    case DIALOG_SELECT_NEWSPAPER:
	    {
	        if(response == 0)
	        {
	            DeletePVar(playerid, "SelectNewspaper");
	            return SendClientMessage(playerid, COLOR_YELLOW, "Du hast die Interaktion abgebrochen.");
			}
			if(response == 1)
			{
				new selnews = GetPVarInt(playerid, "SelectNewspaper"), string[144];
				if(NewsPaper[selnews][SlotUsed] == 0)return SendClientMessage(playerid, COLOR_YELLOW,"Das Auswählen der Zeitung ist fehlgeschlagen.");
				if(ServerLager[it_lager_newspaper_id] == NewsPaper[selnews][dbID])return SendClientMessage(playerid, COLOR_YELLOW,"Die gewünschte Zeitung ist bereits ausgewählt.");
				ServerLager[it_lager_newspaper] = 0;
				ServerLager[it_lager_newspaper_id] = NewsPaper[selnews][dbID];
				format(string, sizeof(string), "{FF6600}Interglobal Televison - Lager\n{FFCC99}Druckerfarbe: %i\nDruckerpapier: %i\nZeitungen: %i",
				ServerLager[it_lager_farbe], ServerLager[it_lager_papier], ServerLager[it_lager_newspaper]);
				UpdateDynamic3DTextLabelText(ServerLager[it_lager_label], COLOR_WHITE, string);
				format(string, sizeof(string), "{FF6600}Interglobal Televison - Lager\n{FFCC99}Zeitungen: %i\n/getnewspaper",ServerLager[it_lager_newspaper]);
                UpdateDynamic3DTextLabelText(ServerLager[it_newspaper_lager_label], COLOR_WHITE, string);
                DeletePVar(playerid, "SelectNewspaper");
			    format(string, sizeof(string), "Du hast erfolgreich die Zeitung mit der ID %i (dbID: %i) zum Verkauf ausgewählt.", selnews, NewsPaper[selnews][dbID]);
			    return SendClientMessage(playerid, COLOR_YELLOW, string);
			}
		}
	    case DIALOG_DELETE_NEWSPAPER:
	    {
	        if(response == 0)
	        {
	            DeletePVar(playerid, "ChoosenNewspaper");
	            return SendClientMessage(playerid, COLOR_YELLOW, "Du hast die Interaktion abgebrochen.");
			}
			if(response == 1)
			{
			    new _newsp = GetPVarInt(playerid, "ChoosenNewspaper"), string[256];
			    if(NewsPaper[_newsp][SlotUsed] == 0)return SendClientMessage(playerid, COLOR_YELLOW,"Das Löschen der Zeitung ist fehlgeschlagen.");
			    mysql_format(sqlHandle, string, sizeof(string),"DELETE FROM `newspaper` WHERE `id` = '%d'",
				NewsPaper[_newsp][dbID]);
				mysql_tquery(sqlHandle, string);
				mysql_format(sqlHandle, string, sizeof(string),"DELETE FROM `newspaper_lines` WHERE `newspaperid` = '%d'",
				NewsPaper[_newsp][dbID]);
				mysql_tquery(sqlHandle, string);

				if(ServerLager[it_lager_newspaper_id] == NewsPaper[_newsp][dbID])
				{
					ServerLager[it_lager_newspaper] = 0;
					ServerLager[it_lager_newspaper_id] = -1;
					format(string, sizeof(string), "{FF6600}Interglobal Televison - Lager\n{FFCC99}Druckerfarbe: %i\nDruckerpapier: %i\nZeitungen: %i",
					ServerLager[it_lager_farbe], ServerLager[it_lager_papier], ServerLager[it_lager_newspaper]);
					UpdateDynamic3DTextLabelText(ServerLager[it_lager_label], COLOR_WHITE, string);
					format(string, sizeof(string), "{FF6600}Interglobal Televison - Lager\n{FFCC99}Zeitungen: %i\n/getnewspaper",ServerLager[it_lager_newspaper]);
	                UpdateDynamic3DTextLabelText(ServerLager[it_newspaper_lager_label], COLOR_WHITE, string);
				}
				NewsPaper[_newsp][SlotUsed] = 0;
				NewsPaper[_newsp][dbID] = -1;
				strdel(NewsPaper[_newsp][Title], 0, 32);
				for(new i = 0; i < NewsPaper[_newsp][Lines]; i++)
				{
				    if(NewsPaperLine[_newsp][i] == 0)continue;
					strdel(NewsPaperLines[_newsp][i], 0, 64);
					NewsPaperLine[_newsp][i] = 0;
				}
				NewsPaper[_newsp][Lines] = 0;
				DeletePVar(playerid, "ChoosenNewspaper");
				format(string, sizeof(string), "Du hast erfolgreich die Zeitung mit der ID %i gelöscht.", _newsp);
			    return SendClientMessage(playerid, COLOR_YELLOW, string);
			}
		}
	    case DIALOG_REGSTEP1:
		{
		    if(response==0){Kick(playerid);}//Zurück
		    if(response==1)//Weiter
		    {
		        if(strlen(inputtext) < 8 || strlen(inputtext) > 24)
		        {
		            new reggstring[320];
					format(reggstring,sizeof(reggstring),"{FFFFFF}Willkommen auf "SERV_NAME" {007DFF}%s{FFFFFF}.\nBitte erstelle dir einen Account. Mit diesem wirst du dann am Spiel teilhaben können.\nWähle für deinen Account ein sicheres Passwort, es muss zwischen {FE0000}8 und 24 Zeichen{FFFFFF} lang sein.",SpielerInfo[playerid][sName]);
		    		ShowPlayerDialog(playerid,DIALOG_REGSTEP1,DIALOG_STYLE_PASSWORD,"{007DFF}"SERV_NAME"{FFFFFF} - Account erstellen 1/4",reggstring,"Erstellen","");
		        }
		        else
		        {
					bcrypt_hash(playerid, "OnPasswordHashed",inputtext, BCRYPT_COST);
		            SetPVarString(playerid,"Passwort",inputtext);
		            SetPVarInt(playerid,"LoggedIn",1);
		            ShowPlayerDialog(playerid,DIALOG_REGSTEP2,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Account erstellen 2/4","{FFFFFF}Bitte gebe in der unteren Box eine gültige E-Mail Adresse ein. Du erhälst Mails von "SERV_NAME".","Absenden","");
		        }
		    }
		}
		case DIALOG_REGSTEP2:
		{
		    if(response==1)//Weiter
		    {
		        if(strlen(inputtext) < 1)
		        {
		            ShowPlayerDialog(playerid,DIALOG_REGSTEP2,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Account erstellen 2/4","{FFFFFF}Bitte gebe in der unteren Box eine gültige E-Mail Adresse ein. Du erhälst Mails von "SERV_NAME".","Absenden","");
		        }
		        else
		        {
          			if(strfind(inputtext, "@", true) != -1)
          			{
          			    new altgstring[295], email[32], password[128];
          			    GetPVarString(playerid,"Passwort",password,128);
          			    format(email,sizeof(email),"%s",inputtext);
          			    SpielerInfo[playerid][sEmail] = email;
          			    mysql_SetString("accounts", "EMail", SpielerInfo[playerid][sEmail], "Name", SpielerInfo[playerid][sName]);
          			    format(altgstring,sizeof(altgstring),"{FFFFFF}Deine Email Adresse ist: {007DFF}%s{FFFFFF}\nDamit dein Account weiter vervollständigt ist, gebe nun bitte dein Geburtsdatum an. Daraus wird dann dein Alter berechnet.\nUm dein korrektes Alter zu berechnen verwende das Format TT.MM.JJJJ (Tag.Monat.Jahr).",SpielerInfo[playerid][sEmail]);
          			    ShowPlayerDialog(playerid,DIALOG_REGSTEP3,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Account erstellen 3/4",altgstring,"Weiter","");
						DeletePVar(playerid,"Passwort");
					}
             		else ShowPlayerDialog(playerid,DIALOG_REGSTEP2,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Account erstellen 2/4","{FFFFFF}Bitte gebe in der unteren Box eine gültige E-Mail Adresse ein. Du erhälst Mails von "SERV_NAME".\n\n{FFFFFF}Die Email-Adresse ist {FE0000}ungültig{FFFFFF} oder nicht registriert.","Absenden","");
		        }
		    }
		}
		case DIALOG_REGSTEP3:
		{
		    if(response==1)//Weiter
		    {
		        new altgstring[350];
		        format(altgstring,sizeof(altgstring),"{FFFFFF}Deine Email Adresse ist: {007DFF}%s{FFFFFF}\nDamit dein Account weiter vervollständigt ist, gebe nun bitte dein Geburtsdatum an. Daraus wird dann dein Alter berechnet.\nUm dein korrektes Alter zu berechnen verwende das Format TT.MM.JJJJ (Tag.Monat.Jahr).",SpielerInfo[playerid][sEmail]);
		        if(strlen(inputtext) < 1)
		        {
		            ShowPlayerDialog(playerid,DIALOG_REGSTEP3,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Account erstellen 3/4",altgstring,"Weiter","");
		        }
		        else
		        {
		            new var[16];
		            format(var,sizeof(var),"%s",inputtext);
		            new alter = GetAge(var);
		            if(alter > 7 && alter < 99)
		            {
						mysql_SetInt("accounts", "Alter", alter, "Name", SpielerInfo[playerid][sName]);
				        format(altgstring,sizeof(altgstring),"{FFFFFF}Du bist also {007DFF}%d{FFFFFF} Jahre alt.\nDamit dein Account weiter vervollständigt ist, brauchen wir noch dein Geschlecht.",alter);
            			ShowPlayerDialog(playerid,DIALOG_REGSTEP4,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Account erstellen 4/4",altgstring,"Männlich","Weiblich");
		            }
		            else
		            {
		        		format(altgstring,sizeof(altgstring),"{FFFFFF}Deine Email Adresse ist: {007DFF}%s{FFFFFF}\nDamit dein Account weiter vervollständigt ist, gebe nun bitte dein Geburtsdatum an. Daraus wird dann dein Alter berechnet.\nUm dein korrektes Alter zu berechnen verwende das Format TT.MM.JJJJ (Tag.Monat.Jahr).\n\nBitte gebe dein {FE0000}korrektes Geburtsdatum{FFFFFF} ein.",SpielerInfo[playerid][sEmail]);
                        ShowPlayerDialog(playerid,DIALOG_REGSTEP3,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Account erstellen 3/4",altgstring,"Weiter","");
					}
		        }
		    }
		}
		case DIALOG_REGSTEP4:
		{
		    if(response==1)//Männlich
		    {
		        KillTimer(CamFahrten[playerid]);
		        StopAudioStreamForPlayer(playerid);
		        SendClientMessage(playerid,COLOR_WHITE,"{FFFFFF}Du bist also {007DFF}Männlich{FFFFFF}.");
		        SendClientMessage(playerid,COLOR_YELLOW,"Das "SERV_NAME" Team wünscht dir viel Spaß und Erfolg.");
		        SendClientMessage(playerid,COLOR_YELLOW,"[Information]: Mit '/newb' kannst du Fragen an das Team stellen, ohne ein Ticket eröffnen zu müssen.");
		        SendClientMessage(playerid,COLOR_YELLOW,"[Information]: mit /startbonus kannst du dein Startbonus abholen.");
		        SendClientMessage(playerid,COLOR_YELLOW,"[Information]: mit /icp kannst du deine Einstellungen ändern");
	            SpielerInfo[playerid][sGeschlecht] = 1;
	            mysql_SetInt("accounts", "Geschlecht", 1, "Name", SpielerInfo[playerid][sName]);
	            mysql_SetInt("accounts", "KnastSkin", 62, "Name", SpielerInfo[playerid][sName]);
	            mysql_SetInt("accounts", "SkinID", 26, "Name", SpielerInfo[playerid][sName]);
	            mysql_SetInt("accounts", "Stadt", 1, "Name", SpielerInfo[playerid][sName]);
	            SpielerInfo[playerid][sStadt] = 1;
	            PlayerTextDrawShow(playerid, EXPInfo[playerid]);
	            LoadEXPStatus(playerid);
				TogglePlayerSpectating(playerid,false);
	            SpawnPlayerEx(playerid);
				if(GlobalVars[EasterEvent] == true)
				{
					updatePlayerEggTextdraws(playerid);
				}
	            TextDrawHideForPlayer(playerid, LoginScreen[0]);
				TextDrawHideForPlayer(playerid, LoginScreen[1]);
				TextDrawHideForPlayer(playerid, LoginScreen[2]);
				TextDrawHideForPlayer(playerid, LoginScreen[3]);
				TextDrawHideForPlayer(playerid, LoginScreen[4]);
				TextDrawHideForPlayer(playerid, LoginScreen[5]);
				SpielerInfo[playerid][sTutorial] = 4;
				GivePlayerMoneyEx(playerid,3500);
		    }
		    else if(response==0)//Weiblich
		    {
      			KillTimer(CamFahrten[playerid]);
		        StopAudioStreamForPlayer(playerid);
		        SendClientMessage(playerid,COLOR_WHITE,"{FFFFFF}Du bist also {007DFF}Weiblich{FFFFFF}.");
		        SendClientMessage(playerid,COLOR_YELLOW,"Das "SERV_NAME" Team wünscht dir viel Spaß und Erfolg.");
		        SendClientMessage(playerid,COLOR_YELLOW,"[Information]: Mit '/newb' kannst du Fragen an das Team stellen, ohne ein Ticket eröffnen zu müssen.");
		        SendClientMessage(playerid,COLOR_YELLOW,"[Information]: mit /startbonus kannst du dein neuling geeschenke abhollen.");
		        SendClientMessage(playerid,COLOR_YELLOW,"[Information]: mit /icp kannst du deine einstellungen wie du wilst einstellen.");
      			SetPlayerCheckpointEx(playerid,1480.9572,-1743.6293,13.5469,5.0);
	            SpielerInfo[playerid][sGeschlecht] = 2;
	            mysql_SetInt("accounts", "Geschlecht", 2, "Name", SpielerInfo[playerid][sName]);
	            mysql_SetInt("accounts", "KnastSkin", 191, "Name", SpielerInfo[playerid][sName]);
				mysql_SetInt("accounts", "SkinID", 193, "Name", SpielerInfo[playerid][sName]);
				mysql_SetInt("accounts", "Stadt", 1, "Name", SpielerInfo[playerid][sName]);
	            SpielerInfo[playerid][sStadt] = 1;
	            PlayerTextDrawShow(playerid, EXPInfo[playerid]);
	            LoadEXPStatus(playerid);
				TogglePlayerSpectating(playerid,false);
	            SpawnPlayerEx(playerid);
	            TextDrawHideForPlayer(playerid, LoginScreen[0]);
				TextDrawHideForPlayer(playerid, LoginScreen[1]);
				TextDrawHideForPlayer(playerid, LoginScreen[2]);
				TextDrawHideForPlayer(playerid, LoginScreen[3]);
				TextDrawHideForPlayer(playerid, LoginScreen[4]);
				TextDrawHideForPlayer(playerid, LoginScreen[5]);
				SpielerInfo[playerid][sTutorial] = 4;
				GivePlayerMoneyEx(playerid,3500);
		    }
		}
		case DIALOG_CREATE_STREETSIGN:
		{
			if(response==0){}//Abbrechen
			else if(response==1)//Erstellen
			{
			    //ShowPlayerDialog(playerid,DIALOG_CREATE_STREETSIGN,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Straßenschilder","Vorfahrt gewähren\nRadarkontrolle\nSpeed Limit 30\nSpeed Limit 50\nSpeed Limit aufgehoben\nWiderrechtlich parkend wird abgeschleppt\nStop\nDurchfahrt verboten\nNur Links abbiegen\nNur rechts abbiegen","Erstellen","Zurück");
                new Float:x,Float:y,Float:z,Float:a, string[80];
				GetPlayerPos(playerid,x,y,z);
			  	GetPlayerFacingAngle(playerid,a);
				switch(listitem)
				{
					case 0:{AddSchild(playerid,19976,x,y,z-1.5,a);}
					case 1:{AddSchild(playerid,19979,x,y,z-1.5,a);}
					case 2:{AddSchild(playerid,19987,x,y,z-1.5,a);}
					case 3:{AddSchild(playerid,19991,x,y,z-1.5,a);}
					case 4:{AddSchild(playerid,11699,x,y,z-1.5,a);}
					case 5:{AddSchild(playerid,19978,x,y,z-1.5,a);}
					case 6:{AddSchild(playerid,19966,x,y,z-1.5,a);}
					case 7:{AddSchild(playerid,19967,x,y,z-1.5,a);}
					case 8:{AddSchild(playerid,19955,x,y,z-1.5,a);}
					case 9:{AddSchild(playerid,19956,x,y,z-1.5,a);}
				}
				format(string,sizeof(string),"* %s %s baut ein Straßenschild auf.",RangName(playerid),SpielerInfo[playerid][sName]);
				ProxDetector(12, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
		}
		case DIALOG_GIVEALL:
		{
		    if(response==0){}//Abbrechen
		    else if(response==1)//Weiter
		    {
				switch(listitem)
				{
				    case 0://Geld
				    {
				        ShowPlayerDialog(playerid,DIALOG_GIVEALL_MONEY,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Geschenk an Alle - Geld","Wie viel Geld soll jedem Spieler geschenkt werden?","Schenken","Zurück");
				    }
				    case 1://EXP
				    {
				        ShowPlayerDialog(playerid,DIALOG_GIVEALL_EXP,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Geschenk an Alle - EXP","Wie viele EXP sollen jedem Spieler geschenkt werden?","Schenken","Zurück");
				    }
				    case 2://PayDay
				    {
				        ShowPlayerDialog(playerid,DIALOG_GIVEALL_PAYDAY,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Geschenk an Alle - PayDay","Bist du sicher dass du jedem Spieler der nicht AFK gemeldet ist\neinen PayDay schenken möchtest?","Schenken","Zurück");
				    }
				}
		    }
		}
		case DIALOG_GIVEALL_MONEY:
		{
		    if(response==0)//Zurück
		    {
		        ShowPlayerDialog(playerid,DIALOG_GIVEALL,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Geschenk an Alle","Geld\nEXP\nPayDay","Weiter","Abbrechen");
		    }
		    else if(response==1)//Schenken
		    {
		        if(strlen(inputtext) > 0 && IsNumeric(inputtext))
		        {
		            new giveallstring[128], amount = strval(inputtext);
		            format(giveallstring,sizeof(giveallstring),"["SERV_STAG"-Geschenk]: %s %s hat jedem Spieler $%d auf die Hand gegeben!",AdminName(playerid),SpielerInfo[playerid][sName],amount);
		            SendClientMessageToAll(COLOR_SUPER,giveallstring);
		            foreach(new i : Player){GivePlayerMoneyEx(i,amount);}
		        }
		        else ShowPlayerDialog(playerid,DIALOG_GIVEALL_MONEY,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Geschenk an Alle - Geld","Wie viel Geld soll jedem Spieler geschenkt werden?\n\nBitte gebe einen gültigen Betrag an.","Schenken","Zurück");
		    }
		}
		case DIALOG_GIVEALL_EXP:
		{
		    if(response==0)//Zurück
		    {
		        ShowPlayerDialog(playerid,DIALOG_GIVEALL,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Geschenk an Alle","Geld\nEXP\nPayDay","Weiter","Abbrechen");
		    }
		    else if(response==1)//Schenken
		    {
		        if(strlen(inputtext) > 0 && IsNumeric(inputtext))
		        {
		            new giveallstring[128], amount = strval(inputtext);
		            format(giveallstring,sizeof(giveallstring),"["SERV_STAG"-Geschenk]: %s %s hat jedem Spieler %d EXP geschenkt!",AdminName(playerid),SpielerInfo[playerid][sName],amount);
		            SendClientMessageToAll(COLOR_SUPER,giveallstring);
		            foreach(new i : Player){GivePlayerEXP(i,amount);}
		        }
		        else ShowPlayerDialog(playerid,DIALOG_GIVEALL_EXP,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Geschenk an Alle - EXP","Wie viele EXP sollen jedem Spieler geschenkt werden?\n\nBitte gebe einen gültigen Betrag an.","Schenken","Zurück");
		    }
		}
		case DIALOG_GIVEALL_PAYDAY:
		{
		    if(response==0)//Zurück
		    {
		        ShowPlayerDialog(playerid,DIALOG_GIVEALL,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Geschenk an Alle","Geld\nEXP\nPayDay","Weiter","Abbrechen");
		    }
		    else if(response==1)//Schenken
		    {
		        foreach(new i : Player)
		        {
			        if(Afk[i] > 0)continue;
	    			SpielerInfo[i][sPayDay] = 44;
	    			PayDay(i);
				}
				new giveallstring[128];
    			format(giveallstring,sizeof(giveallstring),"["SERV_STAG"-Geschenk]: %s %s hat jedem Spieler einen PayDay geschenkt!",AdminName(playerid),SpielerInfo[playerid][sName]);
    			SendClientMessageToAll(COLOR_SUPER,giveallstring);
		    }
		}
		case DIALOG_LOGIN:
		{
  			if(response==0){Kick(playerid);}//Zurück
		    if(response==1)//Weiter
		    {
		        if(strlen(inputtext) < 8)
		        {
					new logingstring[340];
	            	format(logingstring,sizeof(logingstring),"{FFFFFF}Willkommen zurück auf "SERV_NAME" {007DFF}%s{FFFFFF}.\nIn unserer Datenbank wurde dein Account gefunden. Bitte logge dich ein indem du das Passwort\neingibst was du bei deiner Registration gewählt hattest. Bei Fragen wende dich an unser Team.\n\n{FE0000}Passwort und Accountname stimmen nicht überein.",SpielerInfo[playerid][sName]);
	            	ShowPlayerDialog(playerid,DIALOG_LOGIN,DIALOG_STYLE_PASSWORD,"{007DFF}"SERV_NAME"{FFFFFF} - Einloggen",logingstring,"Weiter","");
		        }
				new sqlquery[130];
				mysql_format(sqlHandle, sqlquery, sizeof(sqlquery), "SELECT `Passwort` FROM `accounts` WHERE `Name` = '%s'", SpielerInfo[playerid][sName]);
    			mysql_tquery(sqlHandle, sqlquery, "onCheckPlayerPassword", "is", playerid, inputtext);
		        return 1;
			}
		}
		case DIALOG_FAHRSCHULE:
		{
  			if(response==0){}//Zurück
		    if(response==1)//Weiter
		    {
		    	switch(listitem)
		    	{
		        	case 0://Autoschein
					{
		        	    if(SpielerInfo[playerid][sCarLic] == 1 || GetPVarInt(playerid,"Theori"))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt bereits einen Autoschein.");
		        	    ShowPlayerDialog(playerid,DIALOG_FSCHEIN_INFOS,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Autoschein","{FFFFFF}Möchtest du den Autoschein für {FF0000}1000${FFFFFF} machen ?","Ja","Nein");
		        	    SetPVarInt(playerid,"FScheinAuswahl",1);
					}
 					case 1://Flugschein
		        	{
		        	    if(GetPlayerScore(playerid) < 4)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du kannst den Flugschein erst ab Level 4 machen.");
		        	    if(SpielerInfo[playerid][sFlugLic] == 1 || GetPVarInt(playerid,"Theori"))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt bereits einen Flugschein.");
		        	    ShowPlayerDialog(playerid,DIALOG_FSCHEIN_INFOS,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Flugschein","{FFFFFF}Möchtest du den Flugschein für {FF0000}3000${FFFFFF} machen ?","Ja","Nein");
                        SetPVarInt(playerid,"FScheinAuswahl",2);
					}
					case 2://LKWschein
		        	{
		        	    if(SpielerInfo[playerid][sTruckLic] == 1 || GetPVarInt(playerid,"Theori"))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt bereits einen LKWschein.");
		        	    ShowPlayerDialog(playerid,DIALOG_FSCHEIN_INFOS,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - LKWschein","{FFFFFF}Möchtest du den LKWschein für {FF0000}2000${FFFFFF} machen ?","Ja","Nein");
                        SetPVarInt(playerid,"FScheinAuswahl",3);
					}
 					case 3://Motorradschein
		        	{
		        	    if(GetPlayerScore(playerid) < 4)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du kannst den Motorradschein erst ab Level 5 machen.");
		        	    if(SpielerInfo[playerid][sBikeLic] == 1 || GetPVarInt(playerid,"Theori"))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt bereits einen Motorradschein.");
		        	    ShowPlayerDialog(playerid,DIALOG_FSCHEIN_INFOS,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Motorradschein","{FFFFFF}Möchtest du den Motorradschein für {FF0000}800${FFFFFF} machen ?","Ja","Nein");
                        SetPVarInt(playerid,"FScheinAuswahl",4);
					}
					case 4://Bootschein
		        	{
		        	    if(SpielerInfo[playerid][sBootLic] == 1 || GetPVarInt(playerid,"Theori"))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt bereits einen Bootschein.");
		        	    ShowPlayerDialog(playerid,DIALOG_FSCHEIN_INFOS,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Motorradschein","{FFFFFF}Möchtest du den Bootschein für {FF0000}600${FFFFFF} machen ?","Ja","Nein");
                        SetPVarInt(playerid,"FScheinAuswahl",5);
					}
				}
		    }
		}
		case DIALOG_FSCHEIN_INFOS:
		{
  			if(response==0){DeletePVar(playerid,"FScheinAuswahl");}//Zurück
		    if(response==1)//Weiter
		    {
		        if(SpielerInfo[playerid][sPerso] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt keinen Personalausweis. Begebe dich zu Stadthalle und beantrage dort deinen Personalausweis.");
		        if(GetPVarInt(playerid,"FScheinAuswahl") == 1)//Autoschein
		        {
					if(GetPlayerMoneyEx(playerid) < 1000)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld dabei.");
					SetPVarInt(playerid,"FSchein",1);
					GivePlayerMoneyEx(playerid,-1000);
					SetPVarInt(playerid,"TheroiGekostet",1000);
				}
    			else if(GetPVarInt(playerid,"FScheinAuswahl") == 2)//Flugschein
		        {
					if(GetPlayerMoneyEx(playerid) < 3000)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld dabei.");
					SetPVarInt(playerid,"FSchein",2);
					GivePlayerMoneyEx(playerid,-3000);
					SetPVarInt(playerid,"TheroiGekostet",3000);
				}
    			else if(GetPVarInt(playerid,"FScheinAuswahl") == 3)//LKWschein
		        {
					if(GetPlayerMoneyEx(playerid) < 2000)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld dabei.");
					SetPVarInt(playerid,"FSchein",3);
					GivePlayerMoneyEx(playerid,-2000);
					SetPVarInt(playerid,"TheroiGekostet",2000);
				}
 				else if(GetPVarInt(playerid,"FScheinAuswahl") == 4)//Motorradschein
		        {
					if(GetPlayerMoneyEx(playerid) < 800)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld dabei.");
					SetPVarInt(playerid,"FSchein",4);
					GivePlayerMoneyEx(playerid,-800);
					SetPVarInt(playerid,"TheroiGekostet",800);
				}
				else if(GetPVarInt(playerid,"FScheinAuswahl") == 5)//Bootschein
		        {
					if(GetPlayerMoneyEx(playerid) < 600)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld dabei.");
					SetPVarInt(playerid,"FSchein",5);
					SetPVarInt(playerid,"FahrschulStunde",1);
					GivePlayerMoneyEx(playerid,-600);
					SetPVarInt(playerid,"TheroiGekostet",600);
					CreateFCar(playerid,5);
					schulung[playerid] = 5;
					SetPlayerCheckpointEx(playerid,-3078.3984,631.2441,0.4050,5.0);
					SendClientMessage(playerid, COLOR_YELLOW, "Der erste Checkpoint wurde gesetzt. Fahr vorsichtig.");
					SendClientMessage(playerid,COLOR_INFO,"* Du kannst den Motor mit '/motor' anmachen.");
					return 1;
				}

				new line[4][164];
				new str[564];
				SetPVarInt(playerid,"Theori",1);
				DeletePVar(playerid,"FScheinAuswahl");
				SetPlayerPos(playerid,2115.1809,-3873.2688,819.6503);
				SetPlayerFacingAngle(playerid,90.8580);
				TogglePlayerControllable(playerid,false);

				if(GetPVarInt(playerid,"FSchein") == 1 || GetPVarInt(playerid,"FSchein") == 3 || GetPVarInt(playerid,"FSchein") == 4)
				{
					format(line[0],164,"{FF0000}~ Willkommen ~");
					format(line[1],164,"{FFFFFF}Willkommen zum Theoretischen Teil der San Andreas Fahrprüfung.");
					format(line[2],164,"{FFFFFF}Normalerweise ist dein Verhalten im Straßenverkehr immer von der Situation abhängig.");
					format(line[3],164,"{FFFFFF}Dennoch werden wir dir zunächst die Grundlagen erklären.");
					format(str,sizeof str,"%s\n\n%s\n%s\n%s",line[0],line[1],line[2],line[3]);
					ShowPlayerDialog(playerid,DIALOG_FSCHULE_THEORI,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Fahrschule",str,"Weiter","");
				}
				else if(GetPVarInt(playerid,"FSchein") == 2)
				{
					format(line[0],164,"{FF0000}~ Willkommen ~");
					format(line[1],164,"{FFFFFF}Willkommen zum Theoretischen Teil der San Andreas Flugprüfung.");
					format(line[2],164,"{FFFFFF}Normalerweise ist dein Verhalten im Flugverkehr immer von der Situation abhängig.");
					format(line[3],164,"{FFFFFF}Dennoch werden wir dir zunächst die Grundlagen erklären.");
					format(str,sizeof str,"%s\n\n%s\n%s\n%s",line[0],line[1],line[2],line[3]);
					ShowPlayerDialog(playerid,DIALOG_FSCHULE_THEORI,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Fahrschule",str,"Weiter","");
				}
		    }
	    }
  		case DIALOG_ADMIN_PANEL:
		{
		    if(response==0){DeletePVar(playerid,"ClickedPlayer");}
			else if(response==1)//Weiter
			{
			    new string[464];
			    switch(listitem)
			    {
			        case 0://Spielerstatistik
			        {
						ShowStats(playerid,GetPVarInt(playerid,"ClickedPlayer"));
					}
					case 1://Verbindungsinformationen
					{
						new stats[400+1];
	        			GetPlayerNetworkStats(GetPVarInt(playerid,"ClickedPlayer"), stats, sizeof(stats));
	        			ShowPlayerDialog(playerid,9982,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Verbindungsübersicht | ACHECK",stats,"OK","");
					}
			        case 2://Spieler Kicken
			        {
			            if(SpielerInfo[playerid][sAdmin] < SpielerInfo[GetPVarInt(playerid,"ClickedPlayer")][sAdmin])return NichtBerechtigt
						format(string,sizeof(string),"{FFFFFF}{FFFFFF}Bitte gebe unten einen Grund an,\nwarum der Spieler {FE0000}%s{FFFFFF} vom Server gekickt werden soll.",SpielerInfo[GetPVarInt(playerid,"ClickedPlayer")][sName]);
						ShowPlayerDialog(playerid,DIALOG_APANEL_KICK_GRUND,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Grund",string,"Weiter","Abbrechen");
					}
			        case 3://Spieler Bannen
			        {
			            if(SpielerInfo[playerid][sAdmin] < SpielerInfo[GetPVarInt(playerid,"ClickedPlayer")][sAdmin])return NichtBerechtigt
						format(string,sizeof(string),"{FFFFFF}{FFFFFF}Bitte gebe unten einen Grund an,\nwarum der Spieler {FE0000}%s{FFFFFF} vom Server permanent gebannt werden soll.",SpielerInfo[GetPVarInt(playerid,"ClickedPlayer")][sName]);
						ShowPlayerDialog(playerid,DIALOG_APANEL_BANN_GRUND,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Grund",string,"Weiter","Abbrechen");
			        }
			        case 4://Spieler Timebannen
			        {
			            if(SpielerInfo[playerid][sAdmin] < SpielerInfo[GetPVarInt(playerid,"ClickedPlayer")][sAdmin])return NichtBerechtigt
						format(string,sizeof(string),"{FFFFFF}{FFFFFF}Bitte gebe unten einen Grund an,\nwarum der Spieler {FE0000}%s{FFFFFF} vom Server Zeit gebannt werden soll.",SpielerInfo[GetPVarInt(playerid,"ClickedPlayer")][sName]);
						ShowPlayerDialog(playerid,DIALOG_APANEL_TIMEBANN_GRUND,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Grund",string,"Weiter","Abbrechen");
			        }
			    }
			}
		}
		case DIALOG_APANEL_KICK_GRUND:
		{
  			if(response==0){DeletePVar(playerid,"ClickedPlayer");}//Zurück
		    if(response==1)//Weiter
		    {
		        new string[340];
     			if(strlen(inputtext) < 1 || strlen(inputtext) > 64)
		        {
					format(string,sizeof(string),"{FFFFFF}{FFFFFF}Bitte gebe unten einen Grund an,\nwarum der Spieler {FE0000}%s{FFFFFF} vom Server gekickt werden soll.\n\n{FE0000}Du musst einen Grund eingeben der maximal64 Zeichen lang sein darf.",SpielerInfo[GetPVarInt(playerid,"ClickedPlayer")][sName]);
					ShowPlayerDialog(playerid,DIALOG_APANEL_KICK_GRUND,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Grund",string,"Weiter","Abbrechen");
				}
				else
				{
					format(string,sizeof(string),"{FFFFFF}Bist du sicher, dass du den Spieler {FE0000}%s{FFFFFF} vom Server kicken möchtest ?",SpielerInfo[GetPVarInt(playerid,"ClickedPlayer")][sName]);
					ShowPlayerDialog(playerid,DIALOG_APANEL_KICK,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Bestätigung",string,"Ja","Nein");
	                SetPVarString(playerid,"KickGrund",inputtext);
				}
			}
	    }
   		case DIALOG_APANEL_KICK:
		{
  			if(response==0)//Nein
  			{
			  DeletePVar(playerid,"ClickedPlayer");
			  DeletePVar(playerid,"KickGrund");
			}
		    if(response==1)//Ja
		    {
				new Grund[64], string[128];
				GetPVarString(playerid,"KickGrund",Grund,64);
				format(string,128,"%s %s hat dich vom Server gekickt. Grund: %s",AdminName(playerid),SpielerInfo[playerid][sName],Grund);
				SendClientMessage(GetPVarInt(playerid,"ClickedPlayer"),COLOR_RED,string);
				format(string,128,"%s wurde von %s %s gekickt. Grund: %s",SpielerInfo[GetPVarInt(playerid,"ClickedPlayer")][sName],AdminName(playerid),SpielerInfo[playerid][sName],Grund);
				SendICPMsg(string);
				KickPlayer(GetPVarInt(playerid,"ClickedPlayer"),string);
				DeletePVar(playerid,"KickGrund");
				DeletePVar(playerid,"ClickedPlayer");
			}
	    }
   		case DIALOG_APANEL_BANN_GRUND:
		{
  			if(response==0){DeletePVar(playerid,"ClickedPlayer");}//Zurück
		    if(response==1)//Weiter
		    {
      			new string[340];
     			if(strlen(inputtext) < 1 || strlen(inputtext) > 64)
		        {
					format(string,sizeof(string),"{FFFFFF}{FFFFFF}Bitte gebe unten einen Grund an,\nwarum der Spieler {FE0000}%s{FFFFFF} vom Server permanent gebannt werden soll.\n\n{FE0000}Du musst einen Grund eingeben der maximal64 Zeichen lang sein darf.",SpielerInfo[GetPVarInt(playerid,"ClickedPlayer")][sName]);
					ShowPlayerDialog(playerid,DIALOG_APANEL_BANN_GRUND,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Grund",string,"Weiter","Abbrechen");
		        }
		        else
		        {
					format(string,sizeof(string),"{FFFFFF}Bist du sicher, dass du den Spieler {FE0000}%s{FFFFFF} vom Server permanent bannen möchtest ?",SpielerInfo[GetPVarInt(playerid,"ClickedPlayer")][sName]);
					ShowPlayerDialog(playerid,DIALOG_APANEL_BANN,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Bestätigung",string,"Ja","Nein");
	                SetPVarString(playerid,"BannGrund",inputtext);
                }
			}
	    }
   		case DIALOG_APANEL_BANN:
		{
  			if(response==0)//Nein
  			{
			  DeletePVar(playerid,"ClickedPlayer");
			  DeletePVar(playerid,"BannGrund");
			}
		    if(response==1)//Ja
		    {
				new Grund[64], string[128];
				GetPVarString(playerid,"BannGrund",Grund,64);
                format(string,128,"%s wurde von %s %s permanent gebannt: Grund: %s",SpielerInfo[GetPVarInt(playerid,"ClickedPlayer")][sName],AdminName(playerid),SpielerInfo[playerid][sName],Grund);
				SendICPMsg(string);
				CreateServerLogEntry("BAN_LOG", string);
				format(string,128,"%s %s hat dich permanent gebannt. Grund: %s",AdminName(playerid),SpielerInfo[playerid][sName],Grund);
				SendClientMessage(GetPVarInt(playerid,"ClickedPlayer"),COLOR_RED,string);
				BanPlayer(GetPVarInt(playerid,"ClickedPlayer"),SpielerInfo[playerid][sName],Grund);
				DeletePVar(playerid,"BannGrund");
				DeletePVar(playerid,"ClickedPlayer");
			}
	    }
   		case DIALOG_APANEL_TIMEBANN_GRUND:
		{
  			if(response==0){DeletePVar(playerid,"ClickedPlayer");}//Zurück
		    if(response==1)//Weiter
		    {
      			new string[340];
     			if(strlen(inputtext) < 1 || strlen(inputtext) > 64)
		        {
					format(string,sizeof(string),"{FFFFFF}{FFFFFF}Bitte gebe unten einen Grund an,\nwarum der Spieler {FE0000}%s{FFFFFF} vom Server Zeit gebannt werden soll.\n\n{FE0000}Du musst einen Grund eingeben der maximal64 Zeichen lang sein darf.",SpielerInfo[GetPVarInt(playerid,"ClickedPlayer")][sName]);
					ShowPlayerDialog(playerid,DIALOG_APANEL_TIMEBANN_GRUND,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Grund",string,"Weiter","Abbrechen");
		        }
		        else
		        {
					format(string,sizeof(string),"{FFFFFF}Wie lange soll der %s vom Server gebannt werden ?\n{FE0000}Angaben in Minuten (5-1440)",SpielerInfo[GetPVarInt(playerid,"ClickedPlayer")][sName]);
					ShowPlayerDialog(playerid,DIALOG_APANEL_TIMEBANN_MINUTEN,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Minuten",string,"Weiter","Abbrechen");
	                SetPVarString(playerid,"TimeBannGrund",inputtext);
                }
			}
	    }
 		case DIALOG_APANEL_TIMEBANN_MINUTEN:
		{
  			if(response==0)//Abbrechen
  			{
			  DeletePVar(playerid,"ClickedPlayer");
			  DeletePVar(playerid,"TimeBannGrund");
			}
		    if(response==1)//Weiter
		    {
      			new string[340];
				if(strlen(inputtext) > 1 && strlen(inputtext) < 4 && IsNumeric(inputtext))
				{
					SetPVarInt(playerid,"TimeBann",strval(inputtext));
					format(string,sizeof(string),"{FFFFFF}Bist du sicher, dass du den Spieler {FE0000}%s{FFFFFF} für %d Minuten vom Server permanent bannen möchtest ?",SpielerInfo[GetPVarInt(playerid,"ClickedPlayer")][sName],strval(inputtext));
					ShowPlayerDialog(playerid,DIALOG_APANEL_TIMEBANN,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Grund",string,"Weiter","Abbrechen");
		        }
		        else
		        {
					format(string,sizeof(string),"{FFFFFF}Wie lange soll der %s vom Server gebannt werden ?\n{FE0000}Angaben in Minuten (5-1440)",SpielerInfo[GetPVarInt(playerid,"ClickedPlayer")][sName]);
					ShowPlayerDialog(playerid,DIALOG_APANEL_TIMEBANN_MINUTEN,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Minuten",string,"Weiter","Abbrechen");
                }
			}
	    }
   		case DIALOG_APANEL_TIMEBANN:
		{
  			if(response==0)//Nein
  			{
			  DeletePVar(playerid,"ClickedPlayer");
			  DeletePVar(playerid,"TimeBannGrund");
			  DeletePVar(playerid,"TimeBann");
  			}
		    if(response==1)//Ja
		    {
				new Grund[64], string[128];
				GetPVarString(playerid,"TimeBannGrund",Grund,64);
				format(string,128,"%s %s hat den %s für %d Minuten gebannt. Grund: %s",AdminName(playerid),SpielerInfo[playerid][sName],SpielerInfo[GetPVarInt(playerid,"ClickedPlayer")][sName],GetPVarInt(playerid,"TimeBann"),Grund);
			    SendICPMsg(string);
			    CreateServerLogEntry("TBAN_LOG", string);
			    format(string,128,"%s %s hat dich für %d Minuten gebannt. Grund: %s",AdminName(playerid),SpielerInfo[playerid][sName],GetPVarInt(playerid,"TimeBann"),Grund);
			    SendClientMessage(GetPVarInt(playerid,"ClickedPlayer"),COLOR_RED,string);
		        TBanPlayer(GetPVarInt(playerid,"ClickedPlayer"),GetPVarInt(playerid,"TimeBann"),SpielerInfo[playerid][sName],Grund);
				DeletePVar(playerid,"TimeBann");
				DeletePVar(playerid,"BannGrund");
				DeletePVar(playerid,"ClickedPlayer");
			}
	    }
	    case DIALOG_SPAWNCHANGE:
	    {
	        if(response==0){}//Zurück
			else if(response==1)//Weiter
			{
			    switch(listitem)
			    {
			        case 0://Zivispawn
			        {
						SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du spawnst ab sofort am Zivispawn.");
						SpielerInfo[playerid][sSpawn] = 0;
					}
     				case 1://Fraktion
			        {
						if(SpielerInfo[playerid][sFraktion] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du gehörst keiner Fraktion an.");
						SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du spawnst ab sofort an deiner Fraktion.");
						SpielerInfo[playerid][sSpawn] = 1;
					}
 					case 2://Haus/Wohnung
			        {
			            if(SpielerInfo[playerid][sHaus] != 0 || SpielerInfo[playerid][sMieter] != 0)
			            {
							if(SpielerInfo[playerid][sHaus] > 0){SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du spawnst ab sofort in deinem Haus.");}
							if(SpielerInfo[playerid][sMieter] > 0){SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du spawnst ab sofort in deiner Wohnung.");}
							SpielerInfo[playerid][sSpawn] = 2;
						}
						else SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt kein(e) Haus/Wohnung.");
			        }
 					case 3://Gruppe
			        {
			            if(SpielerInfo[playerid][sGHaus] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Deine Gruppe besitzt derzeit kein Haus.");
						SpielerInfo[playerid][sSpawn] = 3;
						SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du spawnst ab sofort im Gruppenhaus.");
			        }
				}
			}
		}
		case DIALOG_SARD_DUTY:
	    {
	        if(response==0){}//Zurück
			else if(response==1)//Weiter
			{
			    switch(listitem)
			    {
			        case 0://Sanitäter
			        {
						SetPVarInt(playerid,"MedicDienst",1);
      					ShowPlayerDialog(playerid,DIALOG_DUTY2,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Dienstauswahl","In den Dienst gehen","Weiter","Abbrechen");
			        }
			        case 1://Feuerwehr
			        {
                        SetPVarInt(playerid,"FireDienst",1);
                        ShowPlayerDialog(playerid,DIALOG_DUTY2,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Dienstauswahl","In den Dienst gehen","Weiter","Abbrechen");
			        }
			        case 2://Heilen (100 HP)
					{
					    new Float:playerHP;
					    GetPlayerHealth(playerid,playerHP);
					    if(playerHP > 99)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Deine HP sind bereits voll.");
					    SetPlayerHealth(playerid, 100.0);
					    SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Du hast dich auf 100 HP geheilt.");
					    GovVars[govKasse] -= 150;
					}
				}
			}
		}
		case DIALOG_DUTY2:
	    {
     		if(response==0){}//Zurück
			else if(response==1)//Weiter
			{
			    switch(listitem)
			    {
			        case 0://Dienst betreten/verlassen
			        {
           				new string[200];
						if(SpielerInfo[playerid][sFraktion] == 5)
						{
							if(GetPVarInt(playerid,"MedicDienst") == 1)
							{
						        if(GetPVarInt(playerid,"MedicDuty") == 1)
						        {
                                    DeletePVar(playerid,"MedicDienst");
						            DeletePVar(playerid,"MedicDuty");
						            MedicDuty--;
									SetPlayerSkin(playerid,mysql_GetInt("accounts", "SkinID", "Name", SpielerInfo[playerid][sName]));
							        ResetPlayerWeapons(playerid);
							        SetPlayerColor(playerid,COLOR_WHITE);
							        SetPlayerColor(playerid, GetPlayerColor(playerid) & 0xFFFFFF00);
							        format(string,128,"%s %s legt seine Dienstmarke in den Spind und tritt den Feierabend an.",RangName(playerid),SpielerInfo[playerid][sName]);
							        ProxDetector(10.0, playerid, string, 0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF);
							        return 1;
							    }
							    else
							    {
							        new skinid[3];
							        format(skinid,sizeof(skinid),"%d",SpielerInfo[playerid][sFraktion]);
							        format(string,sizeof(string),"Rang%d",SpielerInfo[playerid][sRank]);
					   				SetPlayerSkin(playerid,mysql_GetInt("skinordnung", string, "frakid", skinid));
									SetPlayerColor(playerid,COLOR_RED);
									SetPlayerColor(playerid, GetPlayerColor(playerid) & 0xFFFFFF00);
								    SetPVarInt(playerid,"MedicDuty",1);
								    GivePlayerWeapon(playerid,WEAPON:3,1);
									GivePlayerWeapon(playerid,WEAPON:41,99999);
								    MedicDuty++;
								    format(string,128,"%s %s nimmt seine Dienstmarke aus dem Spind und meldet sich zum Dienst.",RangName(playerid),SpielerInfo[playerid][sName]);
								    ProxDetector(10.0, playerid, string, 0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF);
								    return 1;
								}
							}
							if(GetPVarInt(playerid,"FireDienst") == 1)
							{
								if(GetPVarInt(playerid,"FeuerwehrDuty") == 1)
						        {
						            DeletePVar(playerid,"FireDienst");
						            DeletePVar(playerid,"FeuerwehrDuty");
									SetPlayerSkin(playerid,mysql_GetInt("accounts", "SkinID", "Name", SpielerInfo[playerid][sName]));
							        ResetPlayerWeapons(playerid);
							        SetPlayerColor(playerid,COLOR_WHITE);
							        SetPlayerColor(playerid, GetPlayerColor(playerid) & 0xFFFFFF00);
							        format(string,128,"%s %s legt seine Dienstmarke in den Spind und tritt den Feierabend an.",RangName(playerid),SpielerInfo[playerid][sName]);
							        ProxDetector(10.0, playerid, string, 0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF);
							        return 1;
							    }
							    else
							    {
							        new skinid[3];
							        format(skinid,sizeof(skinid),"%d",SpielerInfo[playerid][sFraktion]);
							        format(string,sizeof(string),"TRang%d",SpielerInfo[playerid][sRank]);
					   				SetPlayerSkin(playerid,mysql_GetInt("skinordnung", string, "frakid", skinid));
									SetPlayerColor(playerid,COLOR_RED);
									SetPlayerColor(playerid, GetPlayerColor(playerid) & 0xFFFFFF00);
								    SetPVarInt(playerid,"FeuerwehrDuty",1);
								    GivePlayerWeapon(playerid,WEAPON:3,1);
									GivePlayerWeapon(playerid,WEAPON:42,99999);
								    format(string,128,"%s %s nimmt seine Dienstmarke aus dem Spind und meldet sich zum Dienst.",RangName(playerid),SpielerInfo[playerid][sName]);
								    ProxDetector(10.0, playerid, string, 0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF);
								    return 1;
								}
							}
						}
					}
					case 1://Heilen (100 HP)
					{
					    new Float:playerHP;
					    GetPlayerHealth(playerid,playerHP);
					    if(playerHP > 99)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Deine HP sind bereits voll.");
					    SetPlayerHealth(playerid, 100.0);
					    SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Du hast dich auf 100 HP geheilt.");
					    GovVars[govKasse] -= 150;
					    return 1;
					}
				}
   			}
		}
		case DIALOG_DUTY_EQUIP:
	    {
	        if(response==0){}//Zurück
			else if(response==1)//Weiter
			{
			    switch(listitem)
			    {
			        case 0://Dienst betreten/verlassen
			        {
                        new string[200];
                        if(SpielerInfo[playerid][sFraktion] == 2)
                        {
					        if(GetPVarInt(playerid,"CopDuty") == 1)
					        {
					            DeletePVar(playerid,"CopDuty");
					            CopDuty--;
								SetPlayerSkin(playerid,mysql_GetInt("accounts", "SkinID", "Name", SpielerInfo[playerid][sName]));
						        ResetPlayerWeapons(playerid);
						        SetPlayerArmour(playerid,0);
						        SetPlayerColor(playerid,COLOR_WHITE);
						        SetPlayerColor(playerid, GetPlayerColor(playerid) & 0xFFFFFF00);
						        format(string,128,"%s %s legt seine Dienstmarke in den Spint und tritt den Feierabend an.",RangName(playerid),SpielerInfo[playerid][sName]);
						        ProxDetector(10.0, playerid, string, 0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF);
						    }
						    else
						    {
						        new skinid[3];
						        format(skinid,sizeof(skinid),"%d",SpielerInfo[playerid][sFraktion]);
						        format(string,sizeof(string),"Rang%d",SpielerInfo[playerid][sRank]);
						        if(GetPVarInt(playerid,"UniformGewollt") > 0){SetPlayerSkin(playerid,GetPVarInt(playerid,"UniformGewollt"));}
				   				else {SetPlayerSkin(playerid,mysql_GetInt("skinordnung", string, "frakid", skinid));}
								SetPlayerColor(playerid,COLOR_BLUE);
								SetPlayerColor(playerid, GetPlayerColor(playerid) & 0xFFFFFF00);
							    SetPVarInt(playerid,"CopDuty",1);
							    CopDuty++;
							    format(string,128,"%s %s nimmt seine Dienstmarke aus dem Spint und meldet sich zum Dienst.",RangName(playerid),SpielerInfo[playerid][sName]);
							    ProxDetector(10.0, playerid, string, 0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF);
							}
						}
      					else if(SpielerInfo[playerid][sFraktion] == 6)
                        {
					        if(GetPVarInt(playerid,"FBIDuty") == 1)
					        {
					            DeletePVar(playerid,"FBIDuty");
					            FBIDuty--;
								SetPlayerSkin(playerid,mysql_GetInt("accounts", "SkinID", "Name", SpielerInfo[playerid][sName]));
						        ResetPlayerWeapons(playerid);
						        SetPlayerArmour(playerid,0);
						        SetPlayerColor(playerid,COLOR_WHITE);
						        SetPlayerColor(playerid, GetPlayerColor(playerid) & 0xFFFFFF00);
						        format(string,128,"%s %s legt seine Dienstmarke in den Spint und tritt den Feierabend an.",RangName(playerid),SpielerInfo[playerid][sName]);
						        ProxDetector(10.0, playerid, string, 0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF);
						    }
						    else
						    {
						        new skinid[3];
						        format(skinid,sizeof(skinid),"%d",SpielerInfo[playerid][sFraktion]);
						        format(string,sizeof(string),"Rang%d",SpielerInfo[playerid][sRank]);
				   				SetPlayerSkin(playerid,mysql_GetInt("skinordnung", string, "frakid", skinid));
								SetPlayerColor(playerid,COLOR_BLUE);
								SetPlayerColor(playerid, GetPlayerColor(playerid) & 0xFFFFFF00);
							    SetPVarInt(playerid,"FBIDuty",1);
							    FBIDuty++;
							    format(string,128,"%s %s nimmt seine Dienstmarke aus dem Spint und meldet sich zum Dienst.",RangName(playerid),SpielerInfo[playerid][sName]);
							    ProxDetector(10.0, playerid, string, 0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF);
							}
						}
						else if(SpielerInfo[playerid][sFraktion] == 5)
						{
							if(SpielerInfo[playerid][sTeam] == 0)
							{
						        if(GetPVarInt(playerid,"MedicDuty") == 1)
						        {
						            DeletePVar(playerid,"MedicDuty");
						            MedicDuty--;
									SetPlayerSkin(playerid,mysql_GetInt("accounts", "SkinID", "Name", SpielerInfo[playerid][sName]));
							        ResetPlayerWeapons(playerid);
							        SetPlayerColor(playerid,COLOR_WHITE);
							        SetPlayerColor(playerid, GetPlayerColor(playerid) & 0xFFFFFF00);
							        format(string,128,"%s %s legt seine Dienstmarke in den Spind und tritt den Feierabend an.",RangName(playerid),SpielerInfo[playerid][sName]);
							        ProxDetector(10.0, playerid, string, 0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF);
							        return 1;
							    }
							    else
							    {
							        new skinid[3];
							        format(skinid,sizeof(skinid),"%d",SpielerInfo[playerid][sFraktion]);
							        format(string,sizeof(string),"Rang%d",SpielerInfo[playerid][sRank]);
					   				SetPlayerSkin(playerid,mysql_GetInt("skinordnung", string, "frakid", skinid));
									SetPlayerColor(playerid,COLOR_RED);
									SetPlayerColor(playerid, GetPlayerColor(playerid) & 0xFFFFFF00);
								    SetPVarInt(playerid,"MedicDuty",1);
								    GivePlayerWeapon(playerid,WEAPON:3,1);
									GivePlayerWeapon(playerid,WEAPON:41,99999);
								    MedicDuty++;
								    format(string,128,"%s %s nimmt seine Dienstmarke aus dem Spind und meldet sich zum Dienst.",RangName(playerid),SpielerInfo[playerid][sName]);
								    ProxDetector(10.0, playerid, string, 0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF);
								    return 1;
								}
							}
							else if(SpielerInfo[playerid][sTeam] == 1)
							{
								if(GetPVarInt(playerid,"FeuerwehrDuty") == 1)
						        {
						            DeletePVar(playerid,"FeuerwehrDuty");
									SetPlayerSkin(playerid,mysql_GetInt("accounts", "SkinID", "Name", SpielerInfo[playerid][sName]));
							        ResetPlayerWeapons(playerid);
							        SetPlayerColor(playerid,COLOR_WHITE);
							        SetPlayerColor(playerid, GetPlayerColor(playerid) & 0xFFFFFF00);
							        format(string,128,"%s %s legt seine Dienstmarke in den Spind und tritt den Feierabend an.",RangName(playerid),SpielerInfo[playerid][sName]);
							        ProxDetector(10.0, playerid, string, 0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF);
							        return 1;
							    }
							    else
							    {
							        new skinid[3];
							        format(skinid,sizeof(skinid),"%d",SpielerInfo[playerid][sFraktion]);
							        format(string,sizeof(string),"TRang%d",SpielerInfo[playerid][sRank]);
					   				SetPlayerSkin(playerid,mysql_GetInt("skinordnung", string, "frakid", skinid));
									SetPlayerColor(playerid,COLOR_RED);
									SetPlayerColor(playerid, GetPlayerColor(playerid) & 0xFFFFFF00);
								    SetPVarInt(playerid,"FeuerwehrDuty",1);
								    GivePlayerWeapon(playerid,WEAPON:3,1);
									GivePlayerWeapon(playerid,WEAPON:42,99999);
								    format(string,128,"%s %s nimmt seine Dienstmarke aus dem Spind und meldet sich zum Dienst.",RangName(playerid),SpielerInfo[playerid][sName]);
								    ProxDetector(10.0, playerid, string, 0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF);
								    return 1;
								}
							}
						}
						else if(SpielerInfo[playerid][sFraktion] == 7)
						{
					        if(GetPVarInt(playerid,"OAmtDuty") == 1)
					        {
					            DeletePVar(playerid,"OAmtDuty");
								SetPlayerSkin(playerid,mysql_GetInt("accounts", "SkinID", "Name", SpielerInfo[playerid][sName]));
						        ResetPlayerWeapons(playerid);
						        SetPlayerColor(playerid,COLOR_WHITE);
						        SetPlayerColor(playerid, GetPlayerColor(playerid) & 0xFFFFFF00);
						        format(string,128,"%s %s legt seine Dienstmarke in den Spint und tritt den Feierabend an.",RangName(playerid),SpielerInfo[playerid][sName]);
						        ProxDetector(10.0, playerid, string, 0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF);
						        OAmtDuty--;
						        return 1;
						    }
						    else
						    {
						        new skinid[3];
						        format(skinid,sizeof(skinid),"%d",SpielerInfo[playerid][sFraktion]);
						        format(string,sizeof(string),"Rang%d",SpielerInfo[playerid][sRank]);
				   				SetPlayerSkin(playerid,mysql_GetInt("skinordnung", string, "frakid", skinid));
								SetPlayerColor(playerid,COLOR_WHITE);
								SetPlayerColor(playerid, GetPlayerColor(playerid) & 0xFFFFFF00);
							    SetPVarInt(playerid,"OAmtDuty",1);
								GivePlayerWeapon(playerid,WEAPON:3,1);
							    OAmtDuty++;
							    format(string,128,"%s %s nimmt seine Dienstmarke aus dem Spint und meldet sich zum Dienst.",RangName(playerid),SpielerInfo[playerid][sName]);
							    ProxDetector(10.0, playerid, string, 0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF);
							    return 1;
							}
						}
						else if(SpielerInfo[playerid][sFraktion] == 8)
						{
					        if(GetPVarInt(playerid,"SanNewsDuty") == 1)
					        {
					            DeletePVar(playerid,"SanNewsDuty");
					            SanNewsDuty--;
								SetPlayerSkin(playerid,mysql_GetInt("accounts", "SkinID", "Name", SpielerInfo[playerid][sName]));
						        ResetPlayerWeapons(playerid);
						        SetPlayerColor(playerid,COLOR_WHITE);
						        SetPlayerColor(playerid, GetPlayerColor(playerid) & 0xFFFFFF00);
						        format(string,128,"%s %s legt seine Sachen in den Spint und tritt den Feierabend an.",RangName(playerid),SpielerInfo[playerid][sName]);
						        ProxDetector(10.0, playerid, string, 0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF);
						        return 1;
						    }
						    else
						    {
						        new skinid[3];
						        format(skinid,sizeof(skinid),"%d",SpielerInfo[playerid][sFraktion]);
						        format(string,sizeof(string),"Rang%d",SpielerInfo[playerid][sRank]);
				   				SetPlayerSkin(playerid,mysql_GetInt("skinordnung", string, "frakid", skinid));
								SetPlayerColor(playerid,COLOR_NEWS);
								SetPlayerColor(playerid, GetPlayerColor(playerid) & 0xFFFFFF00);
							    SetPVarInt(playerid,"SanNewsDuty",1);
								GivePlayerWeapon(playerid,WEAPON:43,99999);
							    SanNewsDuty++;
							    format(string,128,"%s %s nimmt seine Sachen aus dem Spint und meldet sich zum Dienst.",RangName(playerid),SpielerInfo[playerid][sName]);
							    ProxDetector(10.0, playerid, string, 0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF);
							    return 1;
							}
						}
					}
     				case 1://Ausrüsten & Undercover
					{
					    if(SpielerInfo[playerid][sFraktion] == 2 && GetPVarInt(playerid,"CopDuty") == 0)
					    {
					        if(GetPVarInt(playerid,"CopUndercover") > 0)
					        {
					            SetPlayerName(playerid,SpielerInfo[playerid][sName]);
					            SpielerInfo[playerid][sHandy] = GetPVarInt(playerid,"RealHandyNummer");
					            SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Du bist nicht mehr im Undercover-Dienst.");
					            DeletePVar(playerid,"CopUndercover");
					            return 1;
					        }
					        new XXquerystring[400], XXUndercover1var[25][10];
			                mysql_format(sqlHandle, XXquerystring, sizeof(XXquerystring),"SELECT Undercover1, Undercover2, Undercover3, Undercover4, Undercover5, Undercover6, Undercover7, Undercover8, Undercover9, Undercover10 FROM `frakinfos` WHERE `FID` = '2'");
					   	 	new Cache:result = mysql_query(sqlHandle, XXquerystring);
							

							cache_get_value_name(0, "Undercover1",XXUndercover1var[0]);
							cache_get_value_name(0, "Undercover2",XXUndercover1var[1]);
							cache_get_value_name(0, "Undercover3",XXUndercover1var[2]);
							cache_get_value_name(0, "Undercover4",XXUndercover1var[3]);
							cache_get_value_name(0, "Undercover5",XXUndercover1var[4]);
							cache_get_value_name(0, "Undercover6",XXUndercover1var[5]);
							cache_get_value_name(0, "Undercover7",XXUndercover1var[6]);
							cache_get_value_name(0, "Undercover8",XXUndercover1var[7]);
							cache_get_value_name(0, "Undercover9",XXUndercover1var[8]);
							cache_get_value_name(0, "Undercover10",XXUndercover1var[9]);
						    
						    cache_delete(result);
						    format(XXquerystring,sizeof(XXquerystring),"%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s",
							XXUndercover1var[0],XXUndercover1var[1],XXUndercover1var[2],XXUndercover1var[3],XXUndercover1var[4],XXUndercover1var[5],XXUndercover1var[6],XXUndercover1var[7],XXUndercover1var[8],XXUndercover1var[9]);
			            	ShowPlayerDialog(playerid,DIALOG_FRAKV_UCMPICK,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",XXquerystring,"Weiter","Zurück");
			            	return 1;
					    }
					    if(SpielerInfo[playerid][sFraktion] == 2 || SpielerInfo[playerid][sFraktion] == 6)
					    {
					   		if(SpielerInfo[playerid][sFraktion] == 2 && GetPVarInt(playerid,"CopDuty") == 0 && GetPVarInt(playerid,"CopUndercover") == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du musst erst in den Dienst gehen um dich ausrüsten zu können.");
					   		else if(SpielerInfo[playerid][sFraktion] == 6 && GetPVarInt(playerid,"FBIDuty") == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du musst erst in den Dienst gehen um dich ausrüsten zu können.");
						    if(GetPVarInt(playerid,"PDEquipt") == 1)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du kannst dich nur alle 3 Minuten ausrüsten.");
							new string[128], fid[11];
							format(fid,sizeof(fid),"%d",SpielerInfo[playerid][sFraktion]);
							format(string,sizeof(string),"%s\n%s\n%s",mysql_GetString("frakequip", "Equip1Name", "frakid", fid),mysql_GetString("frakequip", "Equip2Name", "frakid", fid),mysql_GetString("frakequip", "Equip3Name", "frakid", fid));
							ShowPlayerDialog(playerid,DIALOG_PDEQUIP,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - LSPD Ausrüstung",string,"Ausrüsten","Abbrechen");
						}
						else
						{
						    new Float:playerHP;
						    GetPlayerHealth(playerid,playerHP);
						    if(playerHP > 99)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Deine HP sind bereits voll.");
						    SetPlayerHealth(playerid, 100.0);
						    SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Du hast dich auf 100 HP geheilt.");
						    GovVars[govKasse] -= 150;
						}
					}
					case 2://Heilen
					{
					    new Float:playerHP;
					    GetPlayerHealth(playerid,playerHP);
					    if(playerHP > 99)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Deine HP sind bereits voll.");
					    SetPlayerHealth(playerid, 100.0);
					    SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Du hast dich auf 100 HP geheilt.");
					    GovVars[govKasse] -= 150;
					}
				}
			}
		}
		case DIALOG_JOB_DUTY:
	    {
	        if(response==0){}//Zurück
			else if(response==1)//Weiter
			{
			    switch(listitem)
			    {
			        case 0://Dienst betreten/verlassen
			        {
           				new string[200], skinid[3];
                        if(SpielerInfo[playerid][sNebenjob] == 1)
                        {
					        if(GetPVarInt(playerid,"TruckerDuty") == 1)
					        {
								if(SpielerInfo[playerid][sFraktion] < 9)
								{
								    SetPlayerSkin(playerid,mysql_GetInt("accounts", "SkinID", "Name", SpielerInfo[playerid][sName]));
								}
								else if(SpielerInfo[playerid][sFraktion] >= 9 && SpielerInfo[playerid][sFraktion] < 19)//Gang
						  		{
									format(skinid,sizeof(skinid),"%d",SpielerInfo[playerid][sFraktion]);
									format(string,sizeof(string),"Rang%d",SpielerInfo[playerid][sRank]);
									SetPlayerSkin(playerid,mysql_GetInt("skinordnung", string, "frakid", skinid));
								}
								DeletePVar(playerid,"TruckerDuty");
								DeleteJobFahrzeug(playerid);
						        format(string,128,"%s legt seine Arbeitskleidung in den Spint und tritt den Feierabend an.",SpielerInfo[playerid][sName]);
						        ProxDetector(10.0, playerid, string, 0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF);
						    }
						    else
						    {
		        				if(GetPVarInt(playerid,"CopDuty") == 1 || GetPVarInt(playerid,"FBIDuty") == 1 || GetPVarInt(playerid,"MedicDuty") == 1 ||
								GetPVarInt(playerid,"FeuerwehrDuty") == 1 || GetPVarInt(playerid,"SanNewsDuty") == 1)
					        	{
					        	    SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist noch als Beamter im Dienst.");
					        	}
					        	else
					        	{
									if(SpielerInfo[playerid][sGeschlecht] == 1) { //Männlich
										format(string,128,"%s nimmt seine Arbeitskleidung aus dem Spint und meldet sich zum Dienst.",SpielerInfo[playerid][sName]);
										SetPlayerSkin(playerid,202);
									} else { //Weiblich
										format(string,128,"%s nimmt ihre Arbeitskleidung aus dem Spint und meldet sich zum Dienst.",SpielerInfo[playerid][sName]);
										SetPlayerSkin(playerid,201);
									}
								    SetPVarInt(playerid,"TruckerDuty",1);
								    
								    ProxDetector(10.0, playerid, string, 0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF);
								}
							}
						}
						else if(SpielerInfo[playerid][sNebenjob] == 2)
                        {
					        if(GetPVarInt(playerid,"PizzaboteDuty") == 1)
					        {
								if(SpielerInfo[playerid][sFraktion] < 9)
								{
								    SetPlayerSkin(playerid,mysql_GetInt("accounts", "SkinID", "Name", SpielerInfo[playerid][sName]));
								}
								else if(SpielerInfo[playerid][sFraktion] >= 9 && SpielerInfo[playerid][sFraktion] < 19)//Gang
						  		{
									format(skinid,sizeof(skinid),"%d",SpielerInfo[playerid][sFraktion]);
									format(string,sizeof(string),"Rang%d",SpielerInfo[playerid][sRank]);
									SetPlayerSkin(playerid,mysql_GetInt("skinordnung", string, "frakid", skinid));
								}
					            DeletePVar(playerid,"PizzaboteDuty");
					            DeleteJobFahrzeug(playerid);
						        format(string,128,"%s legt seine Arbeitskleidung in den Spint und tritt den Feierabend an.",SpielerInfo[playerid][sName]);
						        ProxDetector(10.0, playerid, string, 0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF);
						    }
						    else
						    {
		        				if(GetPVarInt(playerid,"CopDuty") == 1 || GetPVarInt(playerid,"FBIDuty") == 1 || GetPVarInt(playerid,"MedicDuty") == 1 ||
								GetPVarInt(playerid,"FeuerwehrDuty") == 1 || GetPVarInt(playerid,"SanNewsDuty") == 1)
					        	{
					        	    SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist noch als Beamter im Dienst.");
					        	}
					        	else
					        	{
									SetPlayerSkin(playerid,155);
								    SetPVarInt(playerid,"PizzaboteDuty",1);
								    format(string,128,"%s nimmt seine Arbeitskleidung aus dem Spint und meldet sich zum Dienst.",SpielerInfo[playerid][sName]);
								    ProxDetector(10.0, playerid, string, 0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF);
								}
							}
						}
						else if(SpielerInfo[playerid][sNebenjob] == 3)
                        {
					        if(GetPVarInt(playerid,"KehrmaschinenDuty") == 1)
					        {
								if(SpielerInfo[playerid][sFraktion] < 9)
								{
								    SetPlayerSkin(playerid,mysql_GetInt("accounts", "SkinID", "Name", SpielerInfo[playerid][sName]));
								}
								else if(SpielerInfo[playerid][sFraktion] >= 9 && SpielerInfo[playerid][sFraktion] < 19)//Gang
						  		{
									format(skinid,sizeof(skinid),"%d",SpielerInfo[playerid][sFraktion]);
									format(string,sizeof(string),"Rang%d",SpielerInfo[playerid][sRank]);
									SetPlayerSkin(playerid,mysql_GetInt("skinordnung", string, "frakid", skinid));
								}
					            DeletePVar(playerid,"KehrmaschinenDuty");
					            DeleteJobFahrzeug(playerid);
						        format(string,128,"%s legt seine Arbeitskleidung in den Spint und tritt den Feierabend an.",SpielerInfo[playerid][sName]);
						        ProxDetector(10.0, playerid, string, 0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF);
						    }
						    else
						    {
		        				if(GetPVarInt(playerid,"CopDuty") == 1 || GetPVarInt(playerid,"FBIDuty") == 1 || GetPVarInt(playerid,"MedicDuty") == 1 ||
								GetPVarInt(playerid,"FeuerwehrDuty") == 1 || GetPVarInt(playerid,"SanNewsDuty") == 1)
								{
					        	    SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist noch als Beamter im Dienst.");
					        	}
					        	else
					        	{
									SetPlayerSkin(playerid,260);
								    SetPVarInt(playerid,"KehrmaschinenDuty",1);
								    format(string,128,"%s nimmt seine Arbeitskleidung aus dem Spint und meldet sich zum Dienst.",SpielerInfo[playerid][sName]);
								    ProxDetector(10.0, playerid, string, 0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF);
								}
							}
						}
						else if(SpielerInfo[playerid][sNebenjob] == 4)
                        {
					        if(GetPVarInt(playerid,"PilotDuty") == 1)
					        {
								if(SpielerInfo[playerid][sFraktion] < 9)
								{
								    SetPlayerSkin(playerid,mysql_GetInt("accounts", "SkinID", "Name", SpielerInfo[playerid][sName]));
								}
								else if(SpielerInfo[playerid][sFraktion] >= 9 && SpielerInfo[playerid][sFraktion] < 19)//Gang
						  		{
									format(skinid,sizeof(skinid),"%d",SpielerInfo[playerid][sFraktion]);
									format(string,sizeof(string),"Rang%d",SpielerInfo[playerid][sRank]);
									SetPlayerSkin(playerid,mysql_GetInt("skinordnung", string, "frakid", skinid));
								}
					            DeletePVar(playerid,"PilotDuty");
					            DeleteJobFahrzeug(playerid);
						        format(string,128,"%s legt seine Arbeitskleidung in den Spint und tritt den Feierabend an.",SpielerInfo[playerid][sName]);
						        ProxDetector(10.0, playerid, string, 0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF);
						    }
						    else
						    {
		        				if(GetPVarInt(playerid,"CopDuty") == 1 || GetPVarInt(playerid,"FBIDuty") == 1 || GetPVarInt(playerid,"MedicDuty") == 1 ||
								GetPVarInt(playerid,"FeuerwehrDuty") == 1 || GetPVarInt(playerid,"SanNewsDuty") == 1)
								{
					        	    SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist noch als Beamter im Dienst.");
					        	}
					        	else
					        	{
									SetPlayerSkin(playerid,61);
								    SetPVarInt(playerid,"PilotDuty",1);
								    format(string,128,"%s nimmt seine Arbeitskleidung aus dem Spint und meldet sich zum Dienst.",SpielerInfo[playerid][sName]);
								    ProxDetector(10.0, playerid, string, 0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF);
								}
								GivePlayerWeapon(playerid, WEAPON:46, 1);
							}
						}
						else if(SpielerInfo[playerid][sNebenjob] == 5)
                        {
					        if(GetPVarInt(playerid,"BusfahrerDuty") == 1)
					        {
								if(SpielerInfo[playerid][sFraktion] < 9)
								{
								    SetPlayerSkin(playerid,mysql_GetInt("accounts", "SkinID", "Name", SpielerInfo[playerid][sName]));
								}
								else if(SpielerInfo[playerid][sFraktion] >= 9 && SpielerInfo[playerid][sFraktion] < 19)//Gang
						  		{
									format(skinid,sizeof(skinid),"%d",SpielerInfo[playerid][sFraktion]);
									format(string,sizeof(string),"Rang%d",SpielerInfo[playerid][sRank]);
									SetPlayerSkin(playerid,mysql_GetInt("skinordnung", string, "frakid", skinid));
								}
					            DeletePVar(playerid,"BusfahrerDuty");
					            DeleteJobFahrzeug(playerid);
						        format(string,128,"%s legt seine Arbeitskleidung in den Spint und tritt den Feierabend an.",SpielerInfo[playerid][sName]);
						        ProxDetector(10.0, playerid, string, 0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF);
						    }
						    else
						    {
		        				if(GetPVarInt(playerid,"CopDuty") == 1 || GetPVarInt(playerid,"FBIDuty") == 1 || GetPVarInt(playerid,"MedicDuty") == 1 ||
								GetPVarInt(playerid,"FeuerwehrDuty") == 1 || GetPVarInt(playerid,"SanNewsDuty") == 1)
								{
					        	    SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist noch als Beamter im Dienst.");
					        	}
					        	else
					        	{
									SetPlayerSkin(playerid,253);
								    SetPVarInt(playerid,"BusfahrerDuty",1);
								    format(string,128,"%s nimmt seine Arbeitskleidung aus dem Spint und meldet sich zum Dienst.",SpielerInfo[playerid][sName]);
								    ProxDetector(10.0, playerid, string, 0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF);
								}
							}
						}
						else if(SpielerInfo[playerid][sNebenjob] == 6)
                        {
					        if(GetPVarInt(playerid,"MüllmannDuty") == 1)
					        {
								if(SpielerInfo[playerid][sFraktion] < 9 || SpielerInfo[playerid][sFraktion] == 19)
								{
								    SetPlayerSkin(playerid,mysql_GetInt("accounts", "SkinID", "Name", SpielerInfo[playerid][sName]));
								}
								else if(SpielerInfo[playerid][sFraktion] >= 9 && SpielerInfo[playerid][sFraktion] < 19)//Gang
						  		{
									format(skinid,sizeof(skinid),"%d",SpielerInfo[playerid][sFraktion]);
									format(string,sizeof(string),"Rang%d",SpielerInfo[playerid][sRank]);
									SetPlayerSkin(playerid,mysql_GetInt("skinordnung", string, "frakid", skinid));
								}
					            DeletePVar(playerid,"MüllmannDuty");
					            DeleteJobFahrzeug(playerid);
						        format(string,128,"%s legt seine Arbeitskleidung in den Spint und tritt den Feierabend an.",SpielerInfo[playerid][sName]);
						        ProxDetector(10.0, playerid, string, 0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF);
						    }
						    else
						    {
		        				if(GetPVarInt(playerid,"CopDuty") == 1 || GetPVarInt(playerid,"FBIDuty") == 1 || GetPVarInt(playerid,"MedicDuty") == 1 ||
								GetPVarInt(playerid,"FeuerwehrDuty") == 1 || GetPVarInt(playerid,"SanNewsDuty") == 1)
								{
					        	    SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist noch als Beamter im Dienst.");
					        	}
					        	else
					        	{
									SetPlayerSkin(playerid,15);
								    SetPVarInt(playerid,"MüllmannDuty",1);
								    format(string,128,"%s nimmt seine Arbeitskleidung aus dem Spint und meldet sich zum Dienst.",SpielerInfo[playerid][sName]);
								    ProxDetector(10.0, playerid, string, 0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF);
								}
							}
						}
						else if(SpielerInfo[playerid][sNebenjob] == 7)
                        {
					        if(GetPVarInt(playerid,"LandwirtDuty") == 1)
					        {
								if(SpielerInfo[playerid][sFraktion] < 9 || SpielerInfo[playerid][sFraktion] == 19)
								{
								    SetPlayerSkin(playerid,mysql_GetInt("accounts", "SkinID", "Name", SpielerInfo[playerid][sName]));
								}
								else if(SpielerInfo[playerid][sFraktion] >= 9 && SpielerInfo[playerid][sFraktion] < 19)//Gang
						  		{
									format(skinid,sizeof(skinid),"%d",SpielerInfo[playerid][sFraktion]);
									format(string,sizeof(string),"Rang%d",SpielerInfo[playerid][sRank]);
									SetPlayerSkin(playerid,mysql_GetInt("skinordnung", string, "frakid", skinid));
								}
					            DeletePVar(playerid,"LandwirtDuty");
					            DeleteJobFahrzeug(playerid);
						        format(string,128,"%s legt seine Arbeitskleidung in den Spint und tritt den Feierabend an.",SpielerInfo[playerid][sName]);
						        ProxDetector(10.0, playerid, string, 0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF);
						    }
						    else
						    {
		        				if(GetPVarInt(playerid,"CopDuty") == 1 || GetPVarInt(playerid,"FBIDuty") == 1 || GetPVarInt(playerid,"MedicDuty") == 1 ||
								GetPVarInt(playerid,"FeuerwehrDuty") == 1 || GetPVarInt(playerid,"SanNewsDuty") == 1)
								{
					        	    SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist noch als Beamter im Dienst.");
					        	}
					        	else
					        	{
									SetPlayerSkin(playerid,161);
								    SetPVarInt(playerid,"LandwirtDuty",1);
								    SendClientMessage(playerid,COLOR_INFO,"Hinweis: Steige auf einer der Traktoren um den Job zu starten.");
								    format(string,128,"%s nimmt seine Arbeitskleidung aus dem Spint und meldet sich zum Dienst.",SpielerInfo[playerid][sName]);
								    ProxDetector(10.0, playerid, string, 0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF);
								}
							}
						}
      					else if(SpielerInfo[playerid][sNebenjob] == 10)
                        {
                            if(GetPVarInt(playerid,"GeldlieferantAbgabe") > 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: Beende deinen Auftrag erst mit '/beenden' um in den Feierabend gehen zu können.");
					        if(GetPVarInt(playerid,"GeldlieferantDuty") == 1)
					        {
								if(SpielerInfo[playerid][sFraktion] < 9 || SpielerInfo[playerid][sFraktion] == 19)
								{
								    SetPlayerSkin(playerid,mysql_GetInt("accounts", "SkinID", "Name", SpielerInfo[playerid][sName]));
								}
								else if(SpielerInfo[playerid][sFraktion] >= 9 && SpielerInfo[playerid][sFraktion] < 19)//Gang
						  		{
									format(skinid,sizeof(skinid),"%d",SpielerInfo[playerid][sFraktion]);
									format(string,sizeof(string),"Rang%d",SpielerInfo[playerid][sRank]);
									SetPlayerSkin(playerid,mysql_GetInt("skinordnung", string, "frakid", skinid));
								}
					            DeletePVar(playerid,"GeldlieferantDuty");
					            DeleteJobFahrzeug(playerid);
						        format(string,128,"%s legt seine Arbeitskleidung in den Spint und tritt den Feierabend an.",SpielerInfo[playerid][sName]);
						        ProxDetector(10.0, playerid, string, 0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF);
						    }
						    else
						    {
		        				if(GetPVarInt(playerid,"CopDuty") == 1 || GetPVarInt(playerid,"FBIDuty") == 1 || GetPVarInt(playerid,"MedicDuty") == 1 ||
								GetPVarInt(playerid,"FeuerwehrDuty") == 1 || GetPVarInt(playerid,"SanNewsDuty") == 1)
								{
					        	    SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist noch als Beamter im Dienst.");
					        	}
					        	else
					        	{
									SetPlayerSkin(playerid,164);
								    SetPVarInt(playerid,"GeldlieferantDuty",1);
								    SendClientMessage(playerid,COLOR_INFO,"Hinweis: Steige in einer der Geldtransporter hinter der Bank ein, um den Job zu starten.");
								    format(string,128,"%s nimmt seine Arbeitskleidung aus dem Spint und meldet sich zum Dienst.",SpielerInfo[playerid][sName]);
								    ProxDetector(10.0, playerid, string, 0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF);
								}
							}
						}
						else if(SpielerInfo[playerid][sNebenjob] == 11)
                        {
					        if(GetPVarInt(playerid,"ElektrikerDuty") == 1)
					        {
					            if(GetPVarInt(playerid,"ElektrikerAbgabe") > 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: Beende deinen Auftrag erst mit '/beenden' um in den Feierabend gehen zu können.");
								if(SpielerInfo[playerid][sFraktion] < 9 || SpielerInfo[playerid][sFraktion] == 19)
								{
								    SetPlayerSkin(playerid,mysql_GetInt("accounts", "SkinID", "Name", SpielerInfo[playerid][sName]));
								}
								else if(SpielerInfo[playerid][sFraktion] >= 9 && SpielerInfo[playerid][sFraktion] < 19)//Gang
						  		{
									format(skinid,sizeof(skinid),"%d",SpielerInfo[playerid][sFraktion]);
									format(string,sizeof(string),"Rang%d",SpielerInfo[playerid][sRank]);
									SetPlayerSkin(playerid,mysql_GetInt("skinordnung", string, "frakid", skinid));
								}
					            DeletePVar(playerid,"ElektrikerDuty");
					            DeleteJobFahrzeug(playerid);
						        format(string,128,"%s legt seine Arbeitskleidung in den Spint und tritt den Feierabend an.",SpielerInfo[playerid][sName]);
						        ProxDetector(10.0, playerid, string, 0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF);
						    }
						    else
						    {
		        				if(GetPVarInt(playerid,"CopDuty") == 1 || GetPVarInt(playerid,"FBIDuty") == 1 || GetPVarInt(playerid,"MedicDuty") == 1 ||
								GetPVarInt(playerid,"FeuerwehrDuty") == 1 || GetPVarInt(playerid,"SanNewsDuty") == 1)
								{
					        	    SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist noch als Beamter im Dienst.");
					        	}
					        	else
					        	{
									SetPlayerSkin(playerid,27);
								    SetPVarInt(playerid,"ElektrikerDuty",1);
								    SendClientMessage(playerid,COLOR_INFO,"Hinweis: Steige in einer der Elektrikerfahrzeuge ein, um den Job zu starten.");
								    format(string,128,"%s nimmt seine Arbeitskleidung aus dem Spint und meldet sich zum Dienst.",SpielerInfo[playerid][sName]);
								    ProxDetector(10.0, playerid, string, 0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF);
								}
							}
						}
						else if(SpielerInfo[playerid][sNebenjob] == 14)
                        {
					        if(GetPVarInt(playerid,"ZugfahrerDuty") == 1)
					        {
								if(SpielerInfo[playerid][sFraktion] < 9 || SpielerInfo[playerid][sFraktion] == 19)
								{
								    SetPlayerSkin(playerid,mysql_GetInt("accounts", "SkinID", "Name", SpielerInfo[playerid][sName]));
								}
								else if(SpielerInfo[playerid][sFraktion] >= 9 && SpielerInfo[playerid][sFraktion] < 19)//Gang
						  		{
									format(skinid,sizeof(skinid),"%d",SpielerInfo[playerid][sFraktion]);
									format(string,sizeof(string),"Rang%d",SpielerInfo[playerid][sRank]);
									SetPlayerSkin(playerid,mysql_GetInt("skinordnung", string, "frakid", skinid));
								}
					            DeletePVar(playerid,"ZugfahrerDuty");
					            DeleteJobFahrzeug(playerid);
						        format(string,128,"%s legt seine Arbeitskleidung in den Spint und tritt den Feierabend an.",SpielerInfo[playerid][sName]);
						        ProxDetector(10.0, playerid, string, 0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF);
						    }
						    else
						    {
		        				if(GetPVarInt(playerid,"CopDuty") == 1 || GetPVarInt(playerid,"FBIDuty") == 1 || GetPVarInt(playerid,"MedicDuty") == 1 ||
								GetPVarInt(playerid,"FeuerwehrDuty") == 1 || GetPVarInt(playerid,"SanNewsDuty") == 1 || GetPVarInt(playerid,"OAmtDuty") == 1)
								{
					        	    SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist noch als Beamter im Dienst.");
					        	}
					        	else
					        	{
					        	    //return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Der Zugfahrer-Job ist vorübergehend deaktiviert.");
					        	    if(BlockedZugDuty == true)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Ein anderer Zugfahrer ist gerade in den Dienst gegangen, bitte warte 7 Sekunden.");
									SetPlayerSkin(playerid,255);
								    SetPVarInt(playerid,"ZugfahrerDuty",1);
								    format(string,128,"%s nimmt seine Arbeitskleidung aus dem Spint und meldet sich zum Dienst.",SpielerInfo[playerid][sName]);
								    ProxDetector(10.0, playerid, string, 0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF);

								    SetPlayerFacingAngle(playerid,89.9388);

								    new zugvehicle = 0, bool:merker = false;
								    for(new i = 1; i < MAX_VEHICLES; i++)
									{
									    if(GetVehicleModel(i) < 1)
									    {
									        if(GetVehicleModel(i+1) < 1 && GetVehicleModel(i+2) < 1 && GetVehicleModel(i+3) < 1)
									        {
										        zugvehicle = AddStaticVehicleEx(537,1777.6743,-1953.8064,15.0995,-269.9388,1,1,-1);
										        FahrzeugInfo[zugvehicle][fTank] = VehicleData[GetVehicleModel(zugvehicle)-400][vehLiter];
										        SpielerInfo[playerid][sZugID][0] = zugvehicle;
										        merker = true;
										        break;
											}
											else
										    {
										        new hooked_train = CreateVehicle(594, 1715.2961, -1911.9977, 13.5665, 0.0, 0, 0, -1, false);
												hooked_trainspawn[hooked_train] = 1;
												SetTimerEx("DestroyHookedTrainSpawn", 1500, false, "i", hooked_train);
										    }
										}
									}
									if(merker == false)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Vorgang nicht möglich. Bitte wende dich an das Team (INTERNAL_MAX_STACK_2K_NC).");

								    SetPVarInt(playerid,"ZugFahrerVehicle",zugvehicle);

            						new tmpcarxx = SpielerInfo[playerid][sZugID][0];
								    if(GetVehicleModel(tmpcarxx+1) == 569)//Los Santos Trailer
								    {
								        SpielerInfo[playerid][sZugID][1] = tmpcarxx+1;
										FahrzeugInfo[tmpcarxx+1][fAttachedObject][0] = CreateDynamicObject(2932, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
										AttachDynamicObjectToVehicle(FahrzeugInfo[tmpcarxx+1][fAttachedObject][0], tmpcarxx+1, 0.000000, 4.130549, 0.400499, 0.000000, 0.000000, 0.000000); //Object Model: 2932 |
										SetDynamicObjectMaterialText(FahrzeugInfo[tmpcarxx+1][fAttachedObject][0], 0, " {FFFFFF}redv-reallife.de", OBJECT_MATERIAL_SIZE_256x128, "Arial", 42, 0, 0, 0x00216FFF, 1);
										SetDynamicObjectMaterial(FahrzeugInfo[tmpcarxx+1][fAttachedObject][0], 1, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	                                    FahrzeugInfo[tmpcarxx+1][fJobFahrer] = playerid;

										FahrzeugInfo[tmpcarxx+1][fAttachedObject][1] = CreateDynamicObject(2932, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
										AttachDynamicObjectToVehicle(FahrzeugInfo[tmpcarxx+1][fAttachedObject][1], tmpcarxx+1, 0.000000, -4.034541, 0.400499, 0.000000, 0.000000, 0.000000); //Object Model: 2932 |
										SetDynamicObjectMaterialText(FahrzeugInfo[tmpcarxx+1][fAttachedObject][1], 0, " {FFFFFF}Los Santos", OBJECT_MATERIAL_SIZE_256x128, "Arial", 42, 0, 0, 0x00216FFF, 1);
										SetDynamicObjectMaterial(FahrzeugInfo[tmpcarxx+1][fAttachedObject][1], 1, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
									}
                                    if(GetVehicleModel(tmpcarxx+2) == 569)//Las Venturas Trailer
								    {
								        SpielerInfo[playerid][sZugID][2] = tmpcarxx+2;
							        	FahrzeugInfo[tmpcarxx+2][fAttachedObject][0] = CreateDynamicObject(2932, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
										AttachDynamicObjectToVehicle(FahrzeugInfo[tmpcarxx+2][fAttachedObject][0], tmpcarxx+2, 0.000000, 4.180551, 0.400499, 0.000000, 0.000000, 0.000000); //Object Model: 2932 |
										SetDynamicObjectMaterialText(FahrzeugInfo[tmpcarxx+2][fAttachedObject][0], 0, " {FFFFFF}redv-reallife.de", OBJECT_MATERIAL_SIZE_256x128, "Arial", 42, 0, 0, 0x00216FFF, 1);
										SetDynamicObjectMaterial(FahrzeugInfo[tmpcarxx+2][fAttachedObject][0], 1, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
										FahrzeugInfo[tmpcarxx+2][fJobFahrer] = playerid;

										FahrzeugInfo[tmpcarxx+2][fAttachedObject][1] = CreateDynamicObject(2932, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
										AttachDynamicObjectToVehicle(FahrzeugInfo[tmpcarxx+2][fAttachedObject][1], tmpcarxx+2, 0.000000, -4.084543, 0.400499, 0.000000, 0.000000, 0.000000); //Object Model: 2932 |
										SetDynamicObjectMaterialText(FahrzeugInfo[tmpcarxx+2][fAttachedObject][1], 0, " {FFFFFF}Las Venturas", OBJECT_MATERIAL_SIZE_256x128, "Arial", 42, 0, 0, 0x00216FFF, 1);
										SetDynamicObjectMaterial(FahrzeugInfo[tmpcarxx+2][fAttachedObject][1], 1, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
									}
									if(GetVehicleModel(tmpcarxx+3) == 569)//San Fierro Trailer
								    {
								        SpielerInfo[playerid][sZugID][3] = tmpcarxx+3;
							        	FahrzeugInfo[tmpcarxx+3][fAttachedObject][0] = CreateDynamicObject(2932, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
										AttachDynamicObjectToVehicle(FahrzeugInfo[tmpcarxx+3][fAttachedObject][0], tmpcarxx+3, 0.000000, 4.230553, 0.400499, 0.000000, 0.000000, 0.000000); //Object Model: 2932 |
										SetDynamicObjectMaterialText(FahrzeugInfo[tmpcarxx+3][fAttachedObject][0], 0, " {FFFFFF}redv-reallife.de", OBJECT_MATERIAL_SIZE_256x128, "Arial", 42, 0, 0, 0x00216FFF, 1);
										SetDynamicObjectMaterial(FahrzeugInfo[tmpcarxx+3][fAttachedObject][0], 1, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
										FahrzeugInfo[tmpcarxx+3][fJobFahrer] = playerid;

										FahrzeugInfo[tmpcarxx+3][fAttachedObject][1] = CreateDynamicObject(2932, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
										AttachDynamicObjectToVehicle(FahrzeugInfo[tmpcarxx+3][fAttachedObject][1], tmpcarxx+3, 0.000000, -4.134545, 0.400499, 0.000000, 0.000000, 0.000000); //Object Model: 2932 |
										SetDynamicObjectMaterialText(FahrzeugInfo[tmpcarxx+3][fAttachedObject][1], 0, " {FFFFFF}San Fierro", OBJECT_MATERIAL_SIZE_256x128, "Arial", 42, 0, 0, 0x00216FFF, 1);
										SetDynamicObjectMaterial(FahrzeugInfo[tmpcarxx+3][fAttachedObject][1], 1, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
									}
									SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Fahre nun die einzelnen Bahnhöfe ab um deine Container entladen zu lassen.");
									SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Achte darauf deinen Triebwagen an jedem Bahnhof zum stillstand zu bringen.");

    								FahrzeugInfo[tmpcarxx][fJobFahrer] = playerid;
    								TogglePlayerControllable(playerid, false);
    								SetTimerEx("PortInZug",1500,false,"ii",playerid,tmpcarxx);

									SetPlayerCheckpointEx(playerid, 1394.7555,2632.2500,12.3495, 7.0);
									BlockedZugDuty = true;
									SetTimer("BlockedZugDutyT",7000,false);
								}
							}
						}
						else if(SpielerInfo[playerid][sNebenjob] == 16)
						{
						    if(GetPVarInt(playerid,"LSFDuty") == 1)
					        {
								if(SpielerInfo[playerid][sFraktion] < 9 || SpielerInfo[playerid][sFraktion] == 19)
								{
								    SetPlayerSkin(playerid,mysql_GetInt("accounts", "SkinID", "Name", SpielerInfo[playerid][sName]));
								}
								else if(SpielerInfo[playerid][sFraktion] >= 9 && SpielerInfo[playerid][sFraktion] < 19)//Gang
						  		{
									format(skinid,sizeof(skinid),"%d",SpielerInfo[playerid][sFraktion]);
									format(string,sizeof(string),"Rang%d",SpielerInfo[playerid][sRank]);
									SetPlayerSkin(playerid,mysql_GetInt("skinordnung", string, "frakid", skinid));
								}
								DeleteJobFahrzeug(playerid);
					            DeletePVar(playerid,"LSFDuty");
					            DeletePVar(playerid,"LSFDutyArbeitet");
					            DeletePVar(playerid,"LSFSchmuggel");
						        format(string,128,"%s legt seine Arbeitskleidung in den Spint und tritt den Feierabend an.",SpielerInfo[playerid][sName]);
						        ProxDetector(10.0, playerid, string, 0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF);
						    }
						    else
						    {
		        				if(GetPVarInt(playerid,"CopDuty") == 1 || GetPVarInt(playerid,"FBIDuty") == 1 || GetPVarInt(playerid,"MedicDuty") == 1 ||
								GetPVarInt(playerid,"FeuerwehrDuty") == 1 || GetPVarInt(playerid,"SanNewsDuty") == 1)
								{
					        	    SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist noch als Beamter im Dienst.");
					        	}
					        	else
					        	{
									SetPlayerSkin(playerid,34);
								    SetPVarInt(playerid,"LSFDuty",1);
								    SendClientMessage(playerid,COLOR_INFO,"Hinweis: Steige in eine der Trucks ein, um den Job zu starten.");
								    format(string,128,"%s nimmt seine Arbeitskleidung aus dem Spint und meldet sich zum Dienst.",SpielerInfo[playerid][sName]);
								    ProxDetector(10.0, playerid, string, 0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF,0xB400FFFF);
								}
							}
						}
			        }
				}
			}
		}
		case DIALOG_FRAKV_SKINR:
		{
		    if(response==0)//Zurück
			{
		      	ShowFrakVerwaltung(playerid);
			}
			else if(response==1)//Weiter
			{
			    switch(listitem)
				{
				    case 0://Rang 1
				    {
				        SetPVarInt(playerid,"Skinordnung",1);
						ShowPlayerDialog(playerid,-1,DIALOG_STYLE_MSGBOX,"Close","Close","Close","");
				    }
				    case 1://Rang 2
				    {
	       				SetPVarInt(playerid,"Skinordnung",2);
						ShowPlayerDialog(playerid,-1,DIALOG_STYLE_MSGBOX,"Close","Close","Close","");
				    }
				    case 2://Rang 3
				    {
	                    SetPVarInt(playerid,"Skinordnung",3);
						ShowPlayerDialog(playerid,-1,DIALOG_STYLE_MSGBOX,"Close","Close","Close","");
				    }
					case 3://Rang 4
				    {
	                	SetPVarInt(playerid,"Skinordnung",4);
						ShowPlayerDialog(playerid,-1,DIALOG_STYLE_MSGBOX,"Close","Close","Close","");
				    }
				    case 4://Rang 5
				    {
	                    SetPVarInt(playerid,"Skinordnung",5);
						ShowPlayerDialog(playerid,-1,DIALOG_STYLE_MSGBOX,"Close","Close","Close","");
					}
				    case 5://Rang 6
				    {
	                    SetPVarInt(playerid,"Skinordnung",6);
						ShowPlayerDialog(playerid,-1,DIALOG_STYLE_MSGBOX,"Close","Close","Close","");
				    }
				    case 6://Rang 7
				    {
	                    SetPVarInt(playerid,"Skinordnung",7);
						ShowPlayerDialog(playerid,-1,DIALOG_STYLE_MSGBOX,"Close","Close","Close","");
				    }
				    case 7://Skinordnung ausschalten
				    {
				        FrakInfo[SpielerInfo[playerid][sFraktion]][fiSkinordnung] = 0;
				        SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Die Skinordnung ist absofort deaktiviert.");
				        SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Mitglieder deiner Fraktion können nun jeden beliebigen Skin tragen. Auch Nicht-Fraktionsskins.");
      					ShowPlayerDialog(playerid,DIALOG_TOG_SKINORDNUNG,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","{FFFFFF}Skinordnung einschalten","Weiter","Zurück");
      					return 1;
				    }
				}
				if(SpielerInfo[playerid][sFraktion] == 1){ShowModelSelectionMenu(playerid, SkinordnungGovernment, "Skinordnung");}
			    if(SpielerInfo[playerid][sFraktion] == 2){ShowModelSelectionMenu(playerid, SkinordnungSAPD, "Skinordnung");}
			    if(SpielerInfo[playerid][sFraktion] == 3){ShowModelSelectionMenu(playerid, SkinordnungSFPD, "Skinordnung");}
			    if(SpielerInfo[playerid][sFraktion] == 5){ShowModelSelectionMenu(playerid, SkinordnungMEDIC, "Skinordnung");}
			    if(SpielerInfo[playerid][sFraktion] == 6){ShowModelSelectionMenu(playerid, SkinordnungFBI, "Skinordnung");}
			    if(SpielerInfo[playerid][sFraktion] == 7){ShowModelSelectionMenu(playerid, SkinordnungOrdnungsamt, "Skinordnung");}
			    if(SpielerInfo[playerid][sFraktion] == 8){ShowModelSelectionMenu(playerid, SkinordnungSanNews, "Skinordnung");}
			    if(SpielerInfo[playerid][sFraktion] == 9){ShowModelSelectionMenu(playerid, SkinordnungGrove, "Skinordnung");}
			    if(SpielerInfo[playerid][sFraktion] == 10){ShowModelSelectionMenu(playerid, SkinordnungBallas, "Skinordnung");}
			    if(SpielerInfo[playerid][sFraktion] == 11){ShowModelSelectionMenu(playerid, SkinordnungVagos, "Skinordnung");}
			    if(SpielerInfo[playerid][sFraktion] == 12){ShowModelSelectionMenu(playerid, SkinordnungAztecas, "Skinordnung");}
			    if(SpielerInfo[playerid][sFraktion] == 13){ShowModelSelectionMenu(playerid, SkinordnungRifa, "Skinordnung");}
			    if(SpielerInfo[playerid][sFraktion] == 14){ShowModelSelectionMenu(playerid, SkinordnungTriads, "Skinordnung");}
			    if(SpielerInfo[playerid][sFraktion] == 15){ShowModelSelectionMenu(playerid, SkinordnungDaNangBoys, "Skinordnung");}
			    if(SpielerInfo[playerid][sFraktion] == 16){ShowModelSelectionMenu(playerid, SkinordnungBikers, "Skinordnung");}
			    if(SpielerInfo[playerid][sFraktion] == 17){ShowModelSelectionMenu(playerid, SkinordnungItalia, "Skinordnung");}
			    if(SpielerInfo[playerid][sFraktion] == 18){ShowModelSelectionMenu(playerid, SkinordnungRussia, "Skinordnung");}
			}
		}
		case DIALOG_TOG_SKINORDNUNG:
		{
		    if(response==0)//Zurück
		    {
				ShowFrakVerwaltung(playerid);
		    }
		    else if(response==1)
		    {
		        switch(listitem)
		        {
		            case 0://Skinordnung einschalten
		            {
		                FrakInfo[SpielerInfo[playerid][sFraktion]][fiSkinordnung] = 1;
		                new r1[32], r2[32], r3[32], r4[32], r5[32], r6[32], r7[24], ranklist[145];
						format(ranklist,sizeof(ranklist),"%d",SpielerInfo[playerid][sFraktion]);
						format(r1,sizeof(r1),"%s",mysql_GetString("rangnamen", "1", "frakid", ranklist));
						format(r2,sizeof(r2),"%s",mysql_GetString("rangnamen", "2", "frakid", ranklist));
						format(r3,sizeof(r3),"%s",mysql_GetString("rangnamen", "3", "frakid", ranklist));
						format(r4,sizeof(r4),"%s",mysql_GetString("rangnamen", "4", "frakid", ranklist));
						format(r5,sizeof(r5),"%s",mysql_GetString("rangnamen", "5", "frakid", ranklist));
						format(r6,sizeof(r6),"%s",mysql_GetString("rangnamen", "6", "frakid", ranklist));
						format(r7,sizeof(r7),"%s",mysql_GetString("rangnamen", "7", "frakid", ranklist));
						format(ranklist,sizeof(ranklist),"%s\n%s\n%s\n%s\n%s\n%s\n%s\n{007DFF}Skinordnung ausschalten",r1,r2,r3,r4,r5,r6,r7);
						ShowPlayerDialog(playerid,DIALOG_FRAKV_SKINR,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",ranklist,"Weiter","Zurück");
						SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Die Skinordnung ist absofort aktiviert.");
						SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Mitglieder deiner Fraktion bekommen beim Spawn nun einen von dir eingestellten Skin zugewiesen.");
		            }
		        }
		    }
		}
		case DIALOG_FRAKV:
		{
		    if(response==0){}//Abbrechen
			else if(response==1)//Weiter
			{
			    switch(listitem)
			    {
			        case 0://Rangnamen
			        {
						new r1[32], r2[32], r3[32], r4[32], r5[32], r6[32], r7[24], ranklist[145];
						format(ranklist,sizeof(ranklist),"%d",SpielerInfo[playerid][sFraktion]);
						format(r1,sizeof(r1),"%s",mysql_GetString("rangnamen", "1", "frakid", ranklist));
						format(r2,sizeof(r2),"%s",mysql_GetString("rangnamen", "2", "frakid", ranklist));
						format(r3,sizeof(r3),"%s",mysql_GetString("rangnamen", "3", "frakid", ranklist));
						format(r4,sizeof(r4),"%s",mysql_GetString("rangnamen", "4", "frakid", ranklist));
						format(r5,sizeof(r5),"%s",mysql_GetString("rangnamen", "5", "frakid", ranklist));
						format(r6,sizeof(r6),"%s",mysql_GetString("rangnamen", "6", "frakid", ranklist));
						format(r7,sizeof(r7),"%s",mysql_GetString("rangnamen", "7", "frakid", ranklist));
						format(ranklist,sizeof(ranklist),"%s\n%s\n%s\n%s\n%s\n%s\n%s",r1,r2,r3,r4,r5,r6,r7);
						ShowPlayerDialog(playerid,DIALOG_FRAKV_RANGS,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",ranklist,"Weiter","Zurück");
					}
			        case 1://Skinordnung
			        {
			            if(SpielerInfo[playerid][sFraktion] == 19)
			            {
                            ShowPlayerDialog(playerid,DIALOG_FRAKV_FAHRZEUG,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Fahrzeugzugriff\nFahrzeuge respawnen (2750$)","Weiter","Zurück");
						}
						else
						{
						    if(FrakInfo[SpielerInfo[playerid][sFraktion]][fiSkinordnung] < 1)
							{
							    ShowPlayerDialog(playerid,DIALOG_TOG_SKINORDNUNG,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","{FFFFFF}Skinordnung einschalten","Weiter","Zurück");
							}
							else
							{
								new r1[32], r2[32], r3[32], r4[32], r5[32], r6[32], r7[24], ranklist[145];
								format(ranklist,sizeof(ranklist),"%d",SpielerInfo[playerid][sFraktion]);
								format(r1,sizeof(r1),"%s",mysql_GetString("rangnamen", "1", "frakid", ranklist));
								format(r2,sizeof(r2),"%s",mysql_GetString("rangnamen", "2", "frakid", ranklist));
								format(r3,sizeof(r3),"%s",mysql_GetString("rangnamen", "3", "frakid", ranklist));
								format(r4,sizeof(r4),"%s",mysql_GetString("rangnamen", "4", "frakid", ranklist));
								format(r5,sizeof(r5),"%s",mysql_GetString("rangnamen", "5", "frakid", ranklist));
								format(r6,sizeof(r6),"%s",mysql_GetString("rangnamen", "6", "frakid", ranklist));
								format(r7,sizeof(r7),"%s",mysql_GetString("rangnamen", "7", "frakid", ranklist));
								format(ranklist,sizeof(ranklist),"%s\n%s\n%s\n%s\n%s\n%s\n%s\n{FFFFFF}Skinordnung ausschalten",r1,r2,r3,r4,r5,r6,r7);
								ShowPlayerDialog(playerid,DIALOG_FRAKV_SKINR,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",ranklist,"Weiter","Zurück");
							}
						}
					}
     				case 2://Fahrzeugverwaltung
			        {
           				if(SpielerInfo[playerid][sFraktion] == 19)
			            {
					    	ShowPlayerDialog(playerid,DIALOG_FRAKV_GEHALT,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Gehalt pro Rang","Weiter","Zurück");
					    }
					    else
					    {
					        ShowPlayerDialog(playerid,DIALOG_FRAKV_FAHRZEUG,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Fahrzeugzugriff\nFahrzeuge respawnen (2750$)","Weiter","Zurück");
					    }
			        }
			        case 3://Equipt-Verwaltung oder Freikaufpreise festlegen
			        {
			            if(SpielerInfo[playerid][sFraktion] == 2 || SpielerInfo[playerid][sFraktion] == 6)
			            {
		  					new string[128], fid[11];
							format(fid,sizeof(fid),"%d",SpielerInfo[playerid][sFraktion]);
							format(string,sizeof(string),"%s\n%s\n%s",mysql_GetString("frakequip", "Equip1Name", "frakid", fid),mysql_GetString("frakequip", "Equip2Name", "frakid", fid),mysql_GetString("frakequip", "Equip3Name", "frakid", fid));
	  						ShowPlayerDialog(playerid,DIALOG_FRAKV_EQUIP,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",string,"Weiter","Zurück");
						}
						else if(SpielerInfo[playerid][sFraktion] > 3)
						{
						    ShowPlayerDialog(playerid,DIALOG_FRAKV_GEHALT,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Gehalt pro Rang","Weiter","Zurück");
						}
					}
			        case 4://Gehaltverwaltung & Base Zugang
			        {
			            if(SpielerInfo[playerid][sFraktion] == 2 || SpielerInfo[playerid][sFraktion] == 5 || SpielerInfo[playerid][sFraktion] == 6)
			            {
			            	ShowPlayerDialog(playerid,DIALOG_FRAKV_GEHALT,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Gehalt pro Rang","Weiter","Zurück");
						}
						else if(SpielerInfo[playerid][sFraktion] > 8 && SpielerInfo[playerid][sFraktion] != 19)
						{
							if(FrakInfo[SpielerInfo[playerid][sFraktion]][fiBaseZugang] > 0)//Base ist noch Auf
							{
							    FrakInfo[SpielerInfo[playerid][sFraktion]][fiBaseZugang] = 0;//Base geht zu
								ShowFrakVerwaltung(playerid);
							}
							else //Base ist noch zu
							{
							    FrakInfo[SpielerInfo[playerid][sFraktion]][fiBaseZugang] = 1;//Base geht auf
								ShowFrakVerwaltung(playerid);
							}
						}
					}
					case 5://Bündnisse & Undercover Management
					{
					    if(SpielerInfo[playerid][sFraktion] == 2 || SpielerInfo[playerid][sFraktion] == 6)
			            {
			                new querystring[400], Undercover1var[25][10];
			                mysql_format(sqlHandle, querystring, sizeof(querystring),"SELECT Undercover1, Undercover2, Undercover3, Undercover4, Undercover5, Undercover6, Undercover7, Undercover8, Undercover9, Undercover10 FROM `frakinfos` WHERE `FID` = '2'");
					   	 	new Cache:result = mysql_query(sqlHandle, querystring);

							cache_get_value_name(0, "Undercover1",Undercover1var[0]);
							cache_get_value_name(0, "Undercover2",Undercover1var[1]);
							cache_get_value_name(0, "Undercover3",Undercover1var[2]);
							cache_get_value_name(0, "Undercover4",Undercover1var[3]);
							cache_get_value_name(0, "Undercover5",Undercover1var[4]);
							cache_get_value_name(0, "Undercover6",Undercover1var[5]);
							cache_get_value_name(0, "Undercover7",Undercover1var[6]);
							cache_get_value_name(0, "Undercover8",Undercover1var[7]);
							cache_get_value_name(0, "Undercover9",Undercover1var[8]);
							cache_get_value_name(0, "Undercover10",Undercover1var[9]);
						    
						    cache_delete(result);
						    format(querystring,sizeof(querystring),"%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s",
							Undercover1var[0],Undercover1var[1],Undercover1var[2],Undercover1var[3],Undercover1var[4],Undercover1var[5],Undercover1var[6],Undercover1var[7],Undercover1var[8],Undercover1var[9]);
			            	ShowPlayerDialog(playerid,DIALOG_FRAKV_UCM,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",querystring,"Weiter","Zurück");
			            	return 1;
						}
					    new NEWstring[11][264], str[1023];
						new fraktion = SpielerInfo[playerid][sFraktion];
					    format(NEWstring[1],70,"%s\t%s",FrakName(9),JaNein(FrakInfo[fraktion][fiBnd][9]));
					    format(NEWstring[2],70,"%s\t%s",FrakName(10),JaNein(FrakInfo[fraktion][fiBnd][10]));
					    format(NEWstring[3],70,"%s\t%s",FrakName(11),JaNein(FrakInfo[fraktion][fiBnd][11]));
					    format(NEWstring[4],70,"%s\t%s",FrakName(12),JaNein(FrakInfo[fraktion][fiBnd][12]));
					    format(NEWstring[5],70,"%s\t%s",FrakName(13),JaNein(FrakInfo[fraktion][fiBnd][13]));
					    format(NEWstring[6],70,"%s\t%s",FrakName(14),JaNein(FrakInfo[fraktion][fiBnd][14]));
					    format(NEWstring[7],70,"%s\t%s",FrakName(15),JaNein(FrakInfo[fraktion][fiBnd][15]));
					    format(NEWstring[8],70,"%s\t%s",FrakName(16),JaNein(FrakInfo[fraktion][fiBnd][16]));
					    format(NEWstring[9],70,"%s\t%s",FrakName(17),JaNein(FrakInfo[fraktion][fiBnd][17]));
					    format(NEWstring[10],70,"%s\t%s",FrakName(18),JaNein(FrakInfo[fraktion][fiBnd][18]));
					    format(str,sizeof(str),"%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s",NEWstring[1],NEWstring[2],NEWstring[3],NEWstring[4],NEWstring[5],NEWstring[6],NEWstring[7],NEWstring[8],NEWstring[9],NEWstring[10]);
						ShowPlayerDialog(playerid,DIALOG_FRAKV_BND,DIALOG_STYLE_TABLIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",str,"Weiter","Zurück");
					}
					case 6://Gangupgrades
					{
         				new upgstring[1024], frakID = SpielerInfo[playerid][sFraktion], headstring[128];
					    format(headstring,sizeof(headstring),"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung | %d Gangpunkte",FrakInfo[frakID][fiGangpunkte]);

					    format(upgstring,sizeof(upgstring),"Beschreibung\tVorhanden\n\
						Drogenpflanzen wachsen in 20 statt 25 Minuten\t%s\n\
						100$ Rabatt ab 1.000$ Einkauf im Ammunation\t%s\n\
						25 Prozent Weste beim benutzen von /baseheal\t%s\n\
						Statt bis 3k bis 5k pro Stunde für Geldgebiete\t%s\n",JaNein(FrakInfo[frakID][fiDrogenUpgrade]),JaNein(FrakInfo[frakID][fiAmmunationUpgrade]),JaNein(FrakInfo[frakID][fiBasehealUpgrade]),JaNein(FrakInfo[frakID][fiGangzonenUpgrade]));
						format(upgstring,sizeof(upgstring),"%s9000 Materialien statt 7000 pro Matstransport\t%s",upgstring,JaNein(FrakInfo[frakID][fiMatsUpgrade]));

					    ShowPlayerDialog(playerid,DIALOG_FRAKV_GANGUPGRADE,DIALOG_STYLE_TABLIST_HEADERS,headstring,upgstring,"Weiter","Zurück");
					}
					case 7://Befehle Management
					{
					    new befehlestring[600], frakID = SpielerInfo[playerid][sFraktion];
					    format(befehlestring,sizeof(befehlestring),"Befehl\tAb Rang\n\
						/kidnap\t%d\n\
						/selldrugs\t%d\n\
						/gangfight\t%d\n\
						/baseheal\t%d\n\
						/maske\t%d",FrakInfo[frakID][fiKidnapCMD],FrakInfo[frakID][fiSelldrugsCMD],FrakInfo[frakID][fiGangfightCMD],FrakInfo[frakID][fiBasehealCMD],FrakInfo[frakID][fiMaskeCMD]);
                        ShowPlayerDialog(playerid,DIALOG_FRAKV_CMD_SET,DIALOG_STYLE_TABLIST_HEADERS,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung | Befehle",befehlestring,"Weiter","Zurück");
					}
			    }
			}
		}
		case DIALOG_FRAKV_CMD_SET:
		{
			if(response==0){ShowFrakVerwaltung(playerid);}//Zurück
			else if(response==1)
			{
		        switch(listitem)
		        {
		            case 0://KidnapCMD
		            {
		                SetPVarInt(playerid,"FrakVCMD",1);
		                ShowPlayerDialog(playerid,DIALOG_FRAKV_CMD_SET2,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung | Befehle","Ab welchem Rang soll der Befehl '/kidnap' verfügbar sein?","Weiter","Zurück");
		            }
		            case 1://SelldrugsCMD
		            {
		                SetPVarInt(playerid,"FrakVCMD",2);
		                ShowPlayerDialog(playerid,DIALOG_FRAKV_CMD_SET2,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung | Befehle","Ab welchem Rang soll der Befehl '/selldrugs' verfügbar sein?","Weiter","Zurück");
		            }
		            case 2://GangfightCMD
		            {
		                SetPVarInt(playerid,"FrakVCMD",3);
		                ShowPlayerDialog(playerid,DIALOG_FRAKV_CMD_SET2,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung | Befehle","Ab welchem Rang soll der Befehl '/gangfight' verfügbar sein?","Weiter","Zurück");
		            }
		            case 3://BasehealCMD
		            {
		                SetPVarInt(playerid,"FrakVCMD",4);
		                ShowPlayerDialog(playerid,DIALOG_FRAKV_CMD_SET2,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung | Befehle","Ab welchem Rang soll der Befehl '/baseheal' verfügbar sein?","Weiter","Zurück");
		            }
		            case 4://MaskeCMD
		            {
		                SetPVarInt(playerid,"FrakVCMD",5);
		                ShowPlayerDialog(playerid,DIALOG_FRAKV_CMD_SET2,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung | Befehle","Ab welchem Rang soll der Befehl '/maske' verfügbar sein?","Weiter","Zurück");
		            }
		        }
			}
		}
		case DIALOG_FRAKV_CMD_SET2:
		{
		    if(response==0)//Zurück
		    {
		    	new befehlestring[300], frakID = SpielerInfo[playerid][sFraktion];
			    format(befehlestring,sizeof(befehlestring),"Befehl\tAb Rang\n\
				/kidnap\t%d\n\
				/selldrugs\t%d\n\
				/gangfight\t%d\n\
				/baseheal\t%d\n\
				/maske\t%d",FrakInfo[frakID][fiKidnapCMD],FrakInfo[frakID][fiSelldrugsCMD],FrakInfo[frakID][fiGangfightCMD],FrakInfo[frakID][fiBasehealCMD],FrakInfo[frakID][fiMaskeCMD]);
                ShowPlayerDialog(playerid,DIALOG_FRAKV_CMD_SET,DIALOG_STYLE_TABLIST_HEADERS,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung | Befehle",befehlestring,"Weiter","Zurück");
			}
			else if(response==1)
		    {
		        if(GetPVarInt(playerid,"FrakVCMD") == 1)//KidnapCMD
		        {
		            if(!IsNumeric(inputtext))return ShowPlayerDialog(playerid,DIALOG_FRAKV_CMD_SET2,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung | Befehle","Ab welchem Rang soll der Befehl '/kidnap' verfügbar sein?","Weiter","Zurück");
		            if(strval(inputtext) < 0)return ShowPlayerDialog(playerid,DIALOG_FRAKV_CMD_SET2,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung | Befehle","Ab welchem Rang soll der Befehl '/kidnap' verfügbar sein?","Weiter","Zurück");
		            new str[128];
		            format(str,sizeof(str),"[FrakV]: {FFFFFF}Du hast den Befehl '/kidnap' ab Rang '%d' verfügbar gemacht.",strval(inputtext));
		            SendClientMessage(playerid,COLOR_SUPER,str);
		            FrakInfo[SpielerInfo[playerid][sFraktion]][fiKidnapCMD] = strval(inputtext);
		            ShowFrakVerwaltung(playerid);
					SaveFrakInfoById(SpielerInfo[playerid][sFraktion]);
		            DeletePVar(playerid,"FrakVCMD");
		        }
		        else if(GetPVarInt(playerid,"FrakVCMD") == 2)//Selldrugs
		        {
		            if(!IsNumeric(inputtext))return ShowPlayerDialog(playerid,DIALOG_FRAKV_CMD_SET2,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung | Befehle","Ab welchem Rang soll der Befehl '/selldrugs' verfügbar sein?","Weiter","Zurück");
		            if(strval(inputtext) < 0)return ShowPlayerDialog(playerid,DIALOG_FRAKV_CMD_SET2,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung | Befehle","Ab welchem Rang soll der Befehl '/selldrugs' verfügbar sein?","Weiter","Zurück");
		            new str[128];
		            format(str,sizeof(str),"[FrakV]: {FFFFFF}Du hast den Befehl '/selldrugs' ab Rang '%d' verfügbar gemacht.",strval(inputtext));
		            SendClientMessage(playerid,COLOR_SUPER,str);
		            FrakInfo[SpielerInfo[playerid][sFraktion]][fiSelldrugsCMD] = strval(inputtext);
		            ShowFrakVerwaltung(playerid);
					SaveFrakInfoById(SpielerInfo[playerid][sFraktion]);
		            DeletePVar(playerid,"FrakVCMD");
		        }
		        else if(GetPVarInt(playerid,"FrakVCMD") == 3)//Gangfight
		        {
		            if(!IsNumeric(inputtext))return ShowPlayerDialog(playerid,DIALOG_FRAKV_CMD_SET2,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung | Befehle","Ab welchem Rang soll der Befehl '/gangfight' verfügbar sein?","Weiter","Zurück");
		            if(strval(inputtext) < 0)return ShowPlayerDialog(playerid,DIALOG_FRAKV_CMD_SET2,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung | Befehle","Ab welchem Rang soll der Befehl '/gangfight' verfügbar sein?","Weiter","Zurück");
		            new str[128];
		            format(str,sizeof(str),"[FrakV]: {FFFFFF}Du hast den Befehl '/gangfight' ab Rang '%d' verfügbar gemacht.",strval(inputtext));
		            SendClientMessage(playerid,COLOR_SUPER,str);
		            FrakInfo[SpielerInfo[playerid][sFraktion]][fiGangfightCMD] = strval(inputtext);
		            ShowFrakVerwaltung(playerid);
					SaveFrakInfoById(SpielerInfo[playerid][sFraktion]);
		            DeletePVar(playerid,"FrakVCMD");
		        }
		        else if(GetPVarInt(playerid,"FrakVCMD") == 4)//Baseheal
		        {
		            if(!IsNumeric(inputtext))return ShowPlayerDialog(playerid,DIALOG_FRAKV_CMD_SET2,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung | Befehle","Ab welchem Rang soll der Befehl '/baseheal' verfügbar sein?","Weiter","Zurück");
		            if(strval(inputtext) < 0)return ShowPlayerDialog(playerid,DIALOG_FRAKV_CMD_SET2,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung | Befehle","Ab welchem Rang soll der Befehl '/baseheal' verfügbar sein?","Weiter","Zurück");
		            new str[128];
		            format(str,sizeof(str),"[FrakV]: {FFFFFF}Du hast den Befehl '/baseheal' ab Rang '%d' verfügbar gemacht.",strval(inputtext));
		            SendClientMessage(playerid,COLOR_SUPER,str);
		            FrakInfo[SpielerInfo[playerid][sFraktion]][fiBasehealCMD] = strval(inputtext);
		            ShowFrakVerwaltung(playerid);
					SaveFrakInfoById(SpielerInfo[playerid][sFraktion]);
		            DeletePVar(playerid,"FrakVCMD");
		        }
		        else if(GetPVarInt(playerid,"FrakVCMD") == 5)//Maske
		        {
		            if(!IsNumeric(inputtext))return ShowPlayerDialog(playerid,DIALOG_FRAKV_CMD_SET2,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung | Befehle","Ab welchem Rang soll der Befehl '/maske' verfügbar sein?","Weiter","Zurück");
		            if(strval(inputtext) < 0)return ShowPlayerDialog(playerid,DIALOG_FRAKV_CMD_SET2,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung | Befehle","Ab welchem Rang soll der Befehl '/maske' verfügbar sein?","Weiter","Zurück");
		            new str[128];
		            format(str,sizeof(str),"[FrakV]: {FFFFFF}Du hast den Befehl '/maske' ab Rang '%d' verfügbar gemacht.",strval(inputtext));
		            SendClientMessage(playerid,COLOR_SUPER,str);
		            FrakInfo[SpielerInfo[playerid][sFraktion]][fiMaskeCMD] = strval(inputtext);
		            ShowFrakVerwaltung(playerid);
					SaveFrakInfoById(SpielerInfo[playerid][sFraktion]);
		            DeletePVar(playerid,"FrakVCMD");
		        }
			}
		}
		case DIALOG_FRAKV_GANGUPGRADE:
		{
		    if(response==0){ShowFrakVerwaltung(playerid);}//Zurück
		    else if(response==1)
		    {
		        new frakID = SpielerInfo[playerid][sFraktion];
		        switch(listitem)
		        {
		            case 0://Drogenpflanzen wachsen in 20 statt 25 Minuten
		            {
		                if(FrakInfo[frakID][fiDrogenUpgrade] > 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Deine Gang besitzt dieses Upgrade bereits.");
						SetPVarInt(playerid,"GangupgradeWant",1);
						ShowPlayerDialog(playerid,DIALOG_FRAKV_GANGUPGRADE2,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Willst du das Upgrade {007DFF}Drogen wachsen in 20 statt 25 Minuten{FFFFFF} wirklich für {007DFF}100 Gangpunkte{FFFFFF} kaufen?","Kaufen","Zurück");
		            }
		            case 1://100$ Rabatt ab 1.000$ Einkauf im Ammunation
		            {
		                if(FrakInfo[frakID][fiAmmunationUpgrade] > 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Deine Gang besitzt dieses Upgrade bereits.");
						SetPVarInt(playerid,"GangupgradeWant",2);
						ShowPlayerDialog(playerid,DIALOG_FRAKV_GANGUPGRADE2,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Willst du das Upgrade {007DFF}100$ Rabatt ab 1.000$ Einkauf im Ammunation{FFFFFF} wirklich für {007DFF}50 Gangpunkte{FFFFFF} kaufen?","Kaufen","Zurück");
		            }
		            case 2://25 Prozent Weste beim benutzen von /baseheal
		            {
		                if(FrakInfo[frakID][fiBasehealUpgrade] > 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Deine Gang besitzt dieses Upgrade bereits.");
						SetPVarInt(playerid,"GangupgradeWant",3);
						ShowPlayerDialog(playerid,DIALOG_FRAKV_GANGUPGRADE2,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Willst du das Upgrade {007DFF}25 Prozent Weste beim benutzen von /baseheal{FFFFFF} wirklich für {007DFF}150 Gangpunkte{FFFFFF} kaufen?","Kaufen","Zurück");
		            }
		            case 3://Statt bis 3k bis 5k pro Stunde für Geldgebiete
		            {
		                if(FrakInfo[frakID][fiGangzonenUpgrade] > 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Deine Gang besitzt dieses Upgrade bereits.");
						SetPVarInt(playerid,"GangupgradeWant",4);
						ShowPlayerDialog(playerid,DIALOG_FRAKV_GANGUPGRADE2,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Willst du das Upgrade {007DFF}Statt bis 3k bis 5k pro Stunde für Geldgebiete{FFFFFF} wirklich für {007DFF}50 Gangpunkte{FFFFFF} kaufen?","Kaufen","Zurück");
		            }
		            case 4://9000 Materialien statt 7000 pro Matstransport
		            {
		                if(FrakInfo[frakID][fiGangzonenUpgrade] > 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Deine Gang besitzt dieses Upgrade bereits.");
						SetPVarInt(playerid,"GangupgradeWant",5);
						ShowPlayerDialog(playerid,DIALOG_FRAKV_GANGUPGRADE2,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Willst du das Upgrade {007DFF}9000 Materialien statt 7000 pro Matstransport{FFFFFF} wirklich für {007DFF}125 Gangpunkte{FFFFFF} kaufen?","Kaufen","Zurück");
		            }
		        }
		    }
		}
		case DIALOG_FRAKV_GANGUPGRADE2:
		{
		    if(response==0)//Zurück
		    {
          		new upgstring[1024], frakID = SpielerInfo[playerid][sFraktion], headstring[128];
			    format(headstring,sizeof(headstring),"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung | %d Gangpunkte",FrakInfo[frakID][fiGangpunkte]);

			    format(upgstring,sizeof(upgstring),"Beschreibung\tVorhanden\n\
				Drogenpflanzen wachsen in 20 statt 25 Minuten\t%s\n\
				100$ Rabatt ab 1.000$ Einkauf im Ammunation\t%s\n\
				25 Prozent Weste beim benutzen von /baseheal\t%s\n\
				Statt bis 3k bis 5k pro Stunde für Geldgebiete\t%s\n",JaNein(FrakInfo[frakID][fiDrogenUpgrade]),JaNein(FrakInfo[frakID][fiAmmunationUpgrade]),JaNein(FrakInfo[frakID][fiBasehealUpgrade]),JaNein(FrakInfo[frakID][fiGangzonenUpgrade]));
				format(upgstring,sizeof(upgstring),"%s9000 Materialien statt 7000 pro Matstransport\t%s",upgstring,JaNein(FrakInfo[frakID][fiMatsUpgrade]));

			    ShowPlayerDialog(playerid,DIALOG_FRAKV_GANGUPGRADE,DIALOG_STYLE_TABLIST_HEADERS,headstring,upgstring,"Weiter","Zurück");
		    }
		    else if(response==1)
		    {
		        new frakID = SpielerInfo[playerid][sFraktion];
				if(GetPVarInt(playerid,"GangupgradeWant") == 1)
				{
				    if(FrakInfo[frakID][fiGangpunkte] < 100)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}So viele Gangpunkte hat deine Fraktion nicht.");
				    FrakInfo[frakID][fiDrogenUpgrade] = 1;
				    FrakInfo[frakID][fiGangpunkte] -= 100;
				    foreach(new i : Player)
				    {
				        if(SpielerInfo[i][sFraktion] == frakID)
				        {
				            SendClientMessage(i,COLOR_SUPER,"[Gangupgrade]: {FFFFFF}'Drogen wachsen in 20 statt 25 Minuten' wurde gekauft!");
				        }
				    }
				}
				else if(GetPVarInt(playerid,"GangupgradeWant") == 2)
				{
				    if(FrakInfo[frakID][fiGangpunkte] < 50)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}So viele Gangpunkte hat deine Fraktion nicht.");
				    FrakInfo[frakID][fiAmmunationUpgrade] = 1;
				    FrakInfo[frakID][fiGangpunkte] -= 50;
				    foreach(new i : Player)
				    {
				        if(SpielerInfo[i][sFraktion] == frakID)
				        {
				            SendClientMessage(i,COLOR_SUPER,"[Gangupgrade]: {FFFFFF}'100$ Rabatt ab 1.000$ Einkauf im Ammunation' wurde gekauft!");
				        }
				    }
				}
				else if(GetPVarInt(playerid,"GangupgradeWant") == 3)
				{
				    if(FrakInfo[frakID][fiGangpunkte] < 150)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}So viele Gangpunkte hat deine Fraktion nicht.");
				    FrakInfo[frakID][fiBasehealUpgrade] = 1;
				    FrakInfo[frakID][fiGangpunkte] -= 150;
				    foreach(new i : Player)
				    {
				        if(SpielerInfo[i][sFraktion] == frakID)
				        {
				            SendClientMessage(i,COLOR_SUPER,"[Gangupgrade]: {FFFFFF}'25 Prozent Weste beim benutzen von /baseheal' wurde gekauft!");
				        }
				    }
				}
				else if(GetPVarInt(playerid,"GangupgradeWant") == 4)
				{
				    if(FrakInfo[frakID][fiGangpunkte] < 50)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}So viele Gangpunkte hat deine Fraktion nicht.");
				    FrakInfo[frakID][fiGangzonenUpgrade] = 1;
				    FrakInfo[frakID][fiGangpunkte] -= 50;
				    foreach(new i : Player)
				    {
				        if(SpielerInfo[i][sFraktion] == frakID)
				        {
				            SendClientMessage(i,COLOR_SUPER,"[Gangupgrade]: {FFFFFF}'Statt bis 3k bis 5k pro Stunde für Geldgebiete' wurde gekauft!");
				        }
				    }
				}
				else if(GetPVarInt(playerid,"GangupgradeWant") == 5)
				{
				    if(FrakInfo[frakID][fiGangpunkte] < 125)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}So viele Gangpunkte hat deine Fraktion nicht.");
				    FrakInfo[frakID][fiMatsUpgrade] = 1;
				    FrakInfo[frakID][fiGangpunkte] -= 125;
				    foreach(new i : Player)
				    {
				        if(SpielerInfo[i][sFraktion] == frakID)
				        {
				            SendClientMessage(i,COLOR_SUPER,"[Gangupgrade]: {FFFFFF}'9000 Materialien statt 7000 pro Matstransport' wurde gekauft!");
				        }
				    }
				}
		    }
		}
		case DIALOG_FRAKV_BND:
		{
		    if(response==0){ShowFrakVerwaltung(playerid);}//Zurück
		    else if(response==1)//Weiter
		    {
		        new AndereFrak = listitem+9, bndstr[128];
		        if(SpielerInfo[playerid][sFraktion] == AndereFrak)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Bündniss-Einstellungen mit der eigenen Fraktion sind nicht möglich.");
				if(FrakInfo[SpielerInfo[playerid][sFraktion]][fiBnd][AndereFrak] > 0)
				{
				    FrakInfo[SpielerInfo[playerid][sFraktion]][fiBnd][AndereFrak] = 0;
				    FrakInfo[AndereFrak][fiBnd][SpielerInfo[playerid][sFraktion]] = 0;
				    format(bndstr,sizeof(bndstr),"[Bündniss]: {FFFFFF}Ihr habt das Bündniss mit der Fraktion '%s' beendet.",FrakName(AndereFrak));
				    foreach(new i : Player)
				    {
				        if(SpielerInfo[i][sFraktion] == SpielerInfo[playerid][sFraktion])
				        {
				            SendClientMessage(i,COLOR_GANGFIGHT,bndstr);
				        }
				    }

				    format(bndstr,sizeof(bndstr),"[Bündniss]: {FFFFFF}Die Fraktion '%s' hat das Bündniss mit euch beendet!",FrakName(SpielerInfo[playerid][sFraktion]));

				    foreach(new i : Player)
				    {
				        if(SpielerInfo[i][sFraktion] == AndereFrak)
				        {
				            SendClientMessage(i,COLOR_GANGFIGHT,bndstr);
				            foreach(new x : Player)
				            {
				                if(SpielerInfo[x][sFraktion] == SpielerInfo[playerid][sFraktion])
				                {
				                    SetPlayerMarkerForPlayer(i, x, 0xFFFFFF00);//Durchsichtig
				                    SetPlayerMarkerForPlayer(x, i, 0xFFFFFF00);//Durchsichtig
				                }
				                if(GetPVarInt(i,"FraktionsMaske") == 1 || GetPVarInt(i,"GruppenMaske") == 1)
								{
									ShowPlayerNameTagForPlayer(x, i, false);
								}
								if(GetPVarInt(x,"FraktionsMaske") == 1 || GetPVarInt(x,"GruppenMaske") == 1)
								{
									ShowPlayerNameTagForPlayer(i, x, false);
								}
				            }
				        }
				    }
				}
				else
				{
					new merker = 0;
					foreach(new i : Player)
			        {
			            if(SpielerInfo[i][sFraktion] == AndereFrak && SpielerInfo[i][sRank] > 6)
			            {
			                merker = i;
			                break;
			            }
			        }
			        if(merker < 1)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Der Leader der anderen Fraktion muss online sein um ein Bündniss anfragen zu können.");
					format(bndstr,sizeof(bndstr),"[Bündniss]: {FFFFFF}Du hast der Fraktion '%s' eine Bündniss-Anfrage geschickt.",FrakName(AndereFrak));
					SendClientMessage(playerid,COLOR_GANGFIGHT,bndstr);
					format(bndstr,sizeof(bndstr),"[Bündniss]: {FFFFFF}Die Fraktion '%s' hat dir eine Bündniss-Anfrage geschickt.",FrakName(SpielerInfo[playerid][sFraktion]));
					SendClientMessage(merker,COLOR_GANGFIGHT,bndstr);
					SendClientMessage(merker,COLOR_GANGFIGHT,"[Bündniss]: {FFFFFF}Du kannst das Bündniss mit '/accept bündniss' annehmen.");
					SetPVarInt(merker,"BNDAnfrage",playerid);
				}
			}
		}
		case DIALOG_SARDV:
		{
		    if(response==0){}//Abbrechen
			else if(response==1)//Weiter
			{
			    switch(listitem)
			    {
       				case 0://Sanitäter - Rangname
			        {
			            SetPVarInt(playerid,"FrakV",1);
 						new r1[32], r2[32], r3[32], r4[32], r5[32], r6[32], r7[24], ranklist[145];
						format(ranklist,sizeof(ranklist),"%d",SpielerInfo[playerid][sFraktion]);
						format(r1,sizeof(r1),"%s",mysql_GetString("rangnamen", "1", "frakid", ranklist));
						format(r2,sizeof(r2),"%s",mysql_GetString("rangnamen", "2", "frakid", ranklist));
						format(r3,sizeof(r3),"%s",mysql_GetString("rangnamen", "3", "frakid", ranklist));
						format(r4,sizeof(r4),"%s",mysql_GetString("rangnamen", "4", "frakid", ranklist));
						format(r5,sizeof(r5),"%s",mysql_GetString("rangnamen", "5", "frakid", ranklist));
						format(r6,sizeof(r6),"%s",mysql_GetString("rangnamen", "6", "frakid", ranklist));
						format(r7,sizeof(r7),"%s",mysql_GetString("rangnamen", "7", "frakid", ranklist));
						format(ranklist,sizeof(ranklist),"%s\n%s\n%s\n%s\n%s\n%s\n%s",r1,r2,r3,r4,r5,r6,r7);
						ShowPlayerDialog(playerid,DIALOG_SARDV_RANGS,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",ranklist,"Weiter","Zurück");
			        }
    				case 1://Feuerwehr - Rangname
			        {
           				SetPVarInt(playerid,"FrakV",2);
  						new r1[32], r2[32], r3[32], r4[32], r5[32], r6[32], r7[24], ranklist[145];
						format(ranklist,sizeof(ranklist),"%d",SpielerInfo[playerid][sFraktion]);
						format(r1,sizeof(r1),"%s",mysql_GetString("rangnamen", "T1", "frakid", ranklist));
						format(r2,sizeof(r2),"%s",mysql_GetString("rangnamen", "T2", "frakid", ranklist));
						format(r3,sizeof(r3),"%s",mysql_GetString("rangnamen", "T3", "frakid", ranklist));
						format(r4,sizeof(r4),"%s",mysql_GetString("rangnamen", "T4", "frakid", ranklist));
						format(r5,sizeof(r5),"%s",mysql_GetString("rangnamen", "T5", "frakid", ranklist));
						format(r6,sizeof(r6),"%s",mysql_GetString("rangnamen", "T6", "frakid", ranklist));
						format(r7,sizeof(r7),"%s",mysql_GetString("rangnamen", "T7", "frakid", ranklist));
						format(ranklist,sizeof(ranklist),"%s\n%s\n%s\n%s\n%s\n%s\n%s",r1,r2,r3,r4,r5,r6,r7);
						ShowPlayerDialog(playerid,DIALOG_SARDV_RANGS,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",ranklist,"Weiter","Zurück");
			        }
       				case 2://Sanitäter - Skinordnung
			        {
       					SetPVarInt(playerid,"FrakV",1);
						new r1[32], r2[32], r3[32], r4[32], r5[32], r6[32], r7[24], ranklist[145];
						format(ranklist,sizeof(ranklist),"%d",SpielerInfo[playerid][sFraktion]);
						format(r1,sizeof(r1),"%s",mysql_GetString("rangnamen", "1", "frakid", ranklist));
						format(r2,sizeof(r2),"%s",mysql_GetString("rangnamen", "2", "frakid", ranklist));
						format(r3,sizeof(r3),"%s",mysql_GetString("rangnamen", "3", "frakid", ranklist));
						format(r4,sizeof(r4),"%s",mysql_GetString("rangnamen", "4", "frakid", ranklist));
						format(r5,sizeof(r5),"%s",mysql_GetString("rangnamen", "5", "frakid", ranklist));
						format(r6,sizeof(r6),"%s",mysql_GetString("rangnamen", "6", "frakid", ranklist));
						format(r7,sizeof(r7),"%s",mysql_GetString("rangnamen", "7", "frakid", ranklist));
						format(ranklist,sizeof(ranklist),"%s\n%s\n%s\n%s\n%s\n%s\n%s",r1,r2,r3,r4,r5,r6,r7);
						ShowPlayerDialog(playerid,DIALOG_SARDV_SKINR,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",ranklist,"Weiter","Zurück");
			        }
    				case 3://Feuerwehr - Skinordnung
			        {
       					SetPVarInt(playerid,"FrakV",2);
						new r1[32], r2[32], r3[32], r4[32], r5[32], r6[32], r7[24], ranklist[145];
						format(ranklist,sizeof(ranklist),"%d",SpielerInfo[playerid][sFraktion]);
						format(r1,sizeof(r1),"%s",mysql_GetString("rangnamen", "T1", "frakid", ranklist));
						format(r2,sizeof(r2),"%s",mysql_GetString("rangnamen", "T2", "frakid", ranklist));
						format(r3,sizeof(r3),"%s",mysql_GetString("rangnamen", "T3", "frakid", ranklist));
						format(r4,sizeof(r4),"%s",mysql_GetString("rangnamen", "T4", "frakid", ranklist));
						format(r5,sizeof(r5),"%s",mysql_GetString("rangnamen", "T5", "frakid", ranklist));
						format(r6,sizeof(r6),"%s",mysql_GetString("rangnamen", "T6", "frakid", ranklist));
						format(r7,sizeof(r7),"%s",mysql_GetString("rangnamen", "T7", "frakid", ranklist));
						format(ranklist,sizeof(ranklist),"%s\n%s\n%s\n%s\n%s\n%s\n%s",r1,r2,r3,r4,r5,r6,r7);
						ShowPlayerDialog(playerid,DIALOG_SARDV_SKINR,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",ranklist,"Weiter","Zurück");
			        }
					case 4://Fahrzeugverwaltung
			        {
			        	ShowPlayerDialog(playerid,DIALOG_FRAKV_FAHRZEUG,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Fahrzeugzugriff\nFahrzeuge respawnen (2750$)","Weiter","Zurück");
			        }
 					case 5://Gehalt
			        {
			            ShowPlayerDialog(playerid,DIALOG_SARDV_GEHALT2,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Sanitäter Gehalt\nFeuerwehr Gehalt","Weiter","Zurück");
					}
			    }
			}
		}
		case DIALOG_SARDV_GEHALT2:
		{
		    if(response==0){ShowPlayerDialog(playerid,DIALOG_SARDV,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Sanitäter | Rangnamen bearbeiten\nFeuerwehr | Rangnamen bearbeiten\nSanitäter | Skinordnung festlegen\nFeuerwehr | Skinordnung festlegen\nFahrzeugverwaltung\nGehaltverwaltung","Weiter","Abbrechen");}//Zurück
			else if(response==1)//Weiter
			{
			    switch(listitem)
			    {
       				case 0://Sanitäter - Gehalt
			        {
			            SetPVarInt(playerid,"FrakV",1);
			            ShowPlayerDialog(playerid,DIALOG_SARDV_GEHALT,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Gehalt pro Rang","Weiter","Zurück");
			        }
					case 1://Feuerwehr - Gehalt
			        {
			            SetPVarInt(playerid,"FrakV",2);
                        ShowPlayerDialog(playerid,DIALOG_SARDV_GEHALT,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Gehalt pro Rang","Weiter","Zurück");
			        }
				}
			}
		}
		case DIALOG_SARDV_GEHALT:
		{
		    if(response==0)//Zurück
		    {
				ShowPlayerDialog(playerid,DIALOG_SARDV,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Sanitäter | Rangnamen bearbeiten\nFeuerwehr | Rangnamen bearbeiten\nSanitäter | Skinordnung festlegen\nFeuerwehr | Skinordnung festlegen\nFahrzeugverwaltung\nGehaltverwaltung","Weiter","Abbrechen");
		    }
		    else if(response==1)//Weiter
		    {
		        switch(listitem)
		        {
		            case 0://Gehalt pro Rang
		            {
    		        	if(GetPVarInt(playerid,"FrakV") == 1)
		        		{
							new r1[32], r2[32], r3[32], r4[32], r5[32], r6[32], r7[24], ranklist[145];
							format(ranklist,sizeof(ranklist),"%d",SpielerInfo[playerid][sFraktion]);
							format(r1,sizeof(r1),"%s",mysql_GetString("rangnamen", "1", "frakid", ranklist));
							format(r2,sizeof(r2),"%s",mysql_GetString("rangnamen", "2", "frakid", ranklist));
							format(r3,sizeof(r3),"%s",mysql_GetString("rangnamen", "3", "frakid", ranklist));
							format(r4,sizeof(r4),"%s",mysql_GetString("rangnamen", "4", "frakid", ranklist));
							format(r5,sizeof(r5),"%s",mysql_GetString("rangnamen", "5", "frakid", ranklist));
							format(r6,sizeof(r6),"%s",mysql_GetString("rangnamen", "6", "frakid", ranklist));
							format(r7,sizeof(r7),"%s",mysql_GetString("rangnamen", "7", "frakid", ranklist));
							format(ranklist,sizeof(ranklist),"%s\n%s\n%s\n%s\n%s\n%s\n%s",r1,r2,r3,r4,r5,r6,r7);
							ShowPlayerDialog(playerid,DIALOG_FRAKV_GEHALT_R,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",ranklist,"Weiter","Zurück");
						}
     					else if(GetPVarInt(playerid,"FrakV") == 2)
		        		{
							new r1[32], r2[32], r3[32], r4[32], r5[32], r6[32], r7[24], ranklist[145];
							format(ranklist,sizeof(ranklist),"%d",SpielerInfo[playerid][sFraktion]);
							format(r1,sizeof(r1),"%s",mysql_GetString("rangnamen", "T1", "frakid", ranklist));
							format(r2,sizeof(r2),"%s",mysql_GetString("rangnamen", "T2", "frakid", ranklist));
							format(r3,sizeof(r3),"%s",mysql_GetString("rangnamen", "T3", "frakid", ranklist));
							format(r4,sizeof(r4),"%s",mysql_GetString("rangnamen", "T4", "frakid", ranklist));
							format(r5,sizeof(r5),"%s",mysql_GetString("rangnamen", "T5", "frakid", ranklist));
							format(r6,sizeof(r6),"%s",mysql_GetString("rangnamen", "T6", "frakid", ranklist));
							format(r7,sizeof(r7),"%s",mysql_GetString("rangnamen", "T7", "frakid", ranklist));
							format(ranklist,sizeof(ranklist),"%s\n%s\n%s\n%s\n%s\n%s\n%s",r1,r2,r3,r4,r5,r6,r7);
							ShowPlayerDialog(playerid,DIALOG_FRAKV_GEHALT_R,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",ranklist,"Weiter","Zurück");
		        		}
		            }
				}
		    }
		}
		case DIALOG_SARDV_GEHALT_ER:
		{
		    if(response==0)//Zurück
		    {
	        	if(GetPVarInt(playerid,"FrakV") == 1)
        		{
					new r1[32], r2[32], r3[32], r4[32], r5[32], r6[32], r7[24], ranklist[145];
					format(ranklist,sizeof(ranklist),"%d",SpielerInfo[playerid][sFraktion]);
					format(r1,sizeof(r1),"%s",mysql_GetString("rangnamen", "1", "frakid", ranklist));
					format(r2,sizeof(r2),"%s",mysql_GetString("rangnamen", "2", "frakid", ranklist));
					format(r3,sizeof(r3),"%s",mysql_GetString("rangnamen", "3", "frakid", ranklist));
					format(r4,sizeof(r4),"%s",mysql_GetString("rangnamen", "4", "frakid", ranklist));
					format(r5,sizeof(r5),"%s",mysql_GetString("rangnamen", "5", "frakid", ranklist));
					format(r6,sizeof(r6),"%s",mysql_GetString("rangnamen", "6", "frakid", ranklist));
					format(r7,sizeof(r7),"%s",mysql_GetString("rangnamen", "7", "frakid", ranklist));
					format(ranklist,sizeof(ranklist),"%s\n%s\n%s\n%s\n%s\n%s\n%s",r1,r2,r3,r4,r5,r6,r7);
					ShowPlayerDialog(playerid,DIALOG_FRAKV_GEHALT_R,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",ranklist,"Weiter","Zurück");
				}
				else if(GetPVarInt(playerid,"FrakV") == 2)
        		{
					new r1[32], r2[32], r3[32], r4[32], r5[32], r6[32], r7[24], ranklist[145];
					format(ranklist,sizeof(ranklist),"%d",SpielerInfo[playerid][sFraktion]);
					format(r1,sizeof(r1),"%s",mysql_GetString("rangnamen", "T1", "frakid", ranklist));
					format(r2,sizeof(r2),"%s",mysql_GetString("rangnamen", "T2", "frakid", ranklist));
					format(r3,sizeof(r3),"%s",mysql_GetString("rangnamen", "T3", "frakid", ranklist));
					format(r4,sizeof(r4),"%s",mysql_GetString("rangnamen", "T4", "frakid", ranklist));
					format(r5,sizeof(r5),"%s",mysql_GetString("rangnamen", "T5", "frakid", ranklist));
					format(r6,sizeof(r6),"%s",mysql_GetString("rangnamen", "T6", "frakid", ranklist));
					format(r7,sizeof(r7),"%s",mysql_GetString("rangnamen", "T7", "frakid", ranklist));
					format(ranklist,sizeof(ranklist),"%s\n%s\n%s\n%s\n%s\n%s\n%s",r1,r2,r3,r4,r5,r6,r7);
					ShowPlayerDialog(playerid,DIALOG_FRAKV_GEHALT_R,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",ranklist,"Weiter","Zurück");
        		}
		    }
		    else if(response==1)//Setzen
		    {
      			if(strlen(inputtext) < 1 || strlen(inputtext) > 4 || !IsNumeric(inputtext))
		        {
		            ShowPlayerDialog(playerid,DIALOG_SARDV_GEHALT_ER,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","{FFFFFF}Der Betrag ist leider ungültig, wie viel Gehalt soll der Rang pro Payday erhalten?","Setzen","Zurück");
		        }
		        else
		        {
			        new string[128], GehaltRang[32];
 	        		if(GetPVarInt(playerid,"FrakV") == 1)
        			{
				        format(GehaltRang,sizeof(GehaltRang),"Gehalt_Rang%d",GetPVarInt(playerid,"FrakVGehaltRang"));
				        format(string,sizeof(string),"%d",SpielerInfo[playerid][sFraktion]);
				        mysql_SetInt("frakinfos", GehaltRang, strval(inputtext), "FID", string);
				        format(string,sizeof(string),"Du hast ein Gehalt in Höhe von '%d$' für die Rang-ID '%d' vergeben.",strval(inputtext),GetPVarInt(playerid,"FrakVGehaltRang"));
						SendClientMessage(playerid,COLOR_INFO,string);
						new r1[32], r2[32], r3[32], r4[32], r5[32], r6[32], r7[24], ranklist[145];
						format(ranklist,sizeof(ranklist),"%d",SpielerInfo[playerid][sFraktion]);
						format(r1,sizeof(r1),"%s",mysql_GetString("rangnamen", "1", "frakid", ranklist));
						format(r2,sizeof(r2),"%s",mysql_GetString("rangnamen", "2", "frakid", ranklist));
						format(r3,sizeof(r3),"%s",mysql_GetString("rangnamen", "3", "frakid", ranklist));
						format(r4,sizeof(r4),"%s",mysql_GetString("rangnamen", "4", "frakid", ranklist));
						format(r5,sizeof(r5),"%s",mysql_GetString("rangnamen", "5", "frakid", ranklist));
						format(r6,sizeof(r6),"%s",mysql_GetString("rangnamen", "6", "frakid", ranklist));
						format(r7,sizeof(r7),"%s",mysql_GetString("rangnamen", "7", "frakid", ranklist));
						format(ranklist,sizeof(ranklist),"%s\n%s\n%s\n%s\n%s\n%s\n%s",r1,r2,r3,r4,r5,r6,r7);
						ShowPlayerDialog(playerid,DIALOG_FRAKV_GEHALT_R,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",ranklist,"Weiter","Zurück");
					}
					else if(GetPVarInt(playerid,"FrakV") == 2)
					{
     					format(GehaltRang,sizeof(GehaltRang),"Gehalt_TRang%d",GetPVarInt(playerid,"FrakVGehaltRang"));
				        format(string,sizeof(string),"%d",SpielerInfo[playerid][sFraktion]);
				        mysql_SetInt("frakinfos", GehaltRang, strval(inputtext), "FID", string);
				        format(string,sizeof(string),"Du hast ein Gehalt in Höhe von '%d$' für die Rang-ID '%d' vergeben.",strval(inputtext),GetPVarInt(playerid,"FrakVGehaltRang"));
						SendClientMessage(playerid,COLOR_INFO,string);
						new r1[32], r2[32], r3[32], r4[32], r5[32], r6[32], r7[24], ranklist[145];
						format(ranklist,sizeof(ranklist),"%d",SpielerInfo[playerid][sFraktion]);
						format(r1,sizeof(r1),"%s",mysql_GetString("rangnamen", "T1", "frakid", ranklist));
						format(r2,sizeof(r2),"%s",mysql_GetString("rangnamen", "T2", "frakid", ranklist));
						format(r3,sizeof(r3),"%s",mysql_GetString("rangnamen", "T3", "frakid", ranklist));
						format(r4,sizeof(r4),"%s",mysql_GetString("rangnamen", "T4", "frakid", ranklist));
						format(r5,sizeof(r5),"%s",mysql_GetString("rangnamen", "T5", "frakid", ranklist));
						format(r6,sizeof(r6),"%s",mysql_GetString("rangnamen", "T6", "frakid", ranklist));
						format(r7,sizeof(r7),"%s",mysql_GetString("rangnamen", "T7", "frakid", ranklist));
						format(ranklist,sizeof(ranklist),"%s\n%s\n%s\n%s\n%s\n%s\n%s",r1,r2,r3,r4,r5,r6,r7);
						ShowPlayerDialog(playerid,DIALOG_SARDV_GEHALT_R,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",ranklist,"Weiter","Zurück");
					}
				}
		    }
		}
		case DIALOG_SARDV_RANGSE:
		{
		    if(response==0)//Zurück
		    {
		        if(GetPVarInt(playerid,"FrakV") == 1)
		        {
					new r1[32], r2[32], r3[32], r4[32], r5[32], r6[32], r7[24], ranklist[145];
					format(ranklist,sizeof(ranklist),"%d",SpielerInfo[playerid][sFraktion]);
					format(r1,sizeof(r1),"%s",mysql_GetString("rangnamen", "1", "frakid", ranklist));
					format(r2,sizeof(r2),"%s",mysql_GetString("rangnamen", "2", "frakid", ranklist));
					format(r3,sizeof(r3),"%s",mysql_GetString("rangnamen", "3", "frakid", ranklist));
					format(r4,sizeof(r4),"%s",mysql_GetString("rangnamen", "4", "frakid", ranklist));
					format(r5,sizeof(r5),"%s",mysql_GetString("rangnamen", "5", "frakid", ranklist));
					format(r6,sizeof(r6),"%s",mysql_GetString("rangnamen", "6", "frakid", ranklist));
					format(r7,sizeof(r7),"%s",mysql_GetString("rangnamen", "7", "frakid", ranklist));
					format(ranklist,sizeof(ranklist),"%s\n%s\n%s\n%s\n%s\n%s\n%s",r1,r2,r3,r4,r5,r6,r7);
					ShowPlayerDialog(playerid,DIALOG_SARDV_RANGS,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",ranklist,"Weiter","Zurück");
				}
				else if(GetPVarInt(playerid,"FrakV") == 2)
		        {
					new r1[32], r2[32], r3[32], r4[32], r5[32], r6[32], r7[24], ranklist[145];
					format(ranklist,sizeof(ranklist),"%d",SpielerInfo[playerid][sFraktion]);
					format(r1,sizeof(r1),"%s",mysql_GetString("rangnamen", "T1", "frakid", ranklist));
					format(r2,sizeof(r2),"%s",mysql_GetString("rangnamen", "T2", "frakid", ranklist));
					format(r3,sizeof(r3),"%s",mysql_GetString("rangnamen", "T3", "frakid", ranklist));
					format(r4,sizeof(r4),"%s",mysql_GetString("rangnamen", "T4", "frakid", ranklist));
					format(r5,sizeof(r5),"%s",mysql_GetString("rangnamen", "T5", "frakid", ranklist));
					format(r6,sizeof(r6),"%s",mysql_GetString("rangnamen", "T6", "frakid", ranklist));
					format(r7,sizeof(r7),"%s",mysql_GetString("rangnamen", "T7", "frakid", ranklist));
					format(ranklist,sizeof(ranklist),"%s\n%s\n%s\n%s\n%s\n%s\n%s",r1,r2,r3,r4,r5,r6,r7);
					ShowPlayerDialog(playerid,DIALOG_SARDV_RANGS,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",ranklist,"Weiter","Zurück");
		        }
		    }
		    else if(response==1)//Weiter
		    {
		        if(strlen(inputtext) != 0 && strlen(inputtext) <= 24)
		        {
		        	if(GetPVarInt(playerid,"FrakV") == 1)
		        	{
			            new string[84], r1[32], r2[32], r3[32], r4[32], r5[32], r6[32], r7[24], ranklist[145];
			            format(ranklist,sizeof(ranklist),"%d",SpielerInfo[playerid][sFraktion]);
			            format(string,sizeof(string),"%d",GetPVarInt(playerid,"RangEdit"));
			            mysql_SetString("rangnamen", string, inputtext, "frakid", ranklist);
						format(string,sizeof(string),"Du hast den Rangnamen für Rang %d in '%s' geändert.",GetPVarInt(playerid,"RangEdit"),inputtext);
						SendClientMessage(playerid,COLOR_INFO,string);
						format(r1,sizeof(r1),"%s",mysql_GetString("rangnamen", "1", "frakid", ranklist));
						format(r2,sizeof(r2),"%s",mysql_GetString("rangnamen", "2", "frakid", ranklist));
						format(r3,sizeof(r3),"%s",mysql_GetString("rangnamen", "3", "frakid", ranklist));
						format(r4,sizeof(r4),"%s",mysql_GetString("rangnamen", "4", "frakid", ranklist));
						format(r5,sizeof(r5),"%s",mysql_GetString("rangnamen", "5", "frakid", ranklist));
						format(r6,sizeof(r6),"%s",mysql_GetString("rangnamen", "6", "frakid", ranklist));
						format(r7,sizeof(r7),"%s",mysql_GetString("rangnamen", "7", "frakid", ranklist));
						format(ranklist,sizeof(ranklist),"%s\n%s\n%s\n%s\n%s\n%s\n%s",r1,r2,r3,r4,r5,r6,r7);
						ShowPlayerDialog(playerid,DIALOG_SARDV_RANGS,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",ranklist,"Weiter","Zurück");
					}
					else if(GetPVarInt(playerid,"FrakV") == 2)
		        	{
           				new string[84], r1[32], r2[32], r3[32], r4[32], r5[32], r6[32], r7[24], ranklist[145];
			            format(ranklist,sizeof(ranklist),"%d",SpielerInfo[playerid][sFraktion]);
			            format(string,sizeof(string),"T%d",GetPVarInt(playerid,"RangEdit"));
			            mysql_SetString("rangnamen", string, inputtext, "frakid", ranklist);
						format(string,sizeof(string),"Du hast den Rangnamen für Rang %d in '%s' geändert.",GetPVarInt(playerid,"RangEdit"),inputtext);
						SendClientMessage(playerid,COLOR_INFO,string);
						format(r1,sizeof(r1),"%s",mysql_GetString("rangnamen", "T1", "frakid", ranklist));
						format(r2,sizeof(r2),"%s",mysql_GetString("rangnamen", "T2", "frakid", ranklist));
						format(r3,sizeof(r3),"%s",mysql_GetString("rangnamen", "T3", "frakid", ranklist));
						format(r4,sizeof(r4),"%s",mysql_GetString("rangnamen", "T4", "frakid", ranklist));
						format(r5,sizeof(r5),"%s",mysql_GetString("rangnamen", "T5", "frakid", ranklist));
						format(r6,sizeof(r6),"%s",mysql_GetString("rangnamen", "T6", "frakid", ranklist));
						format(r7,sizeof(r7),"%s",mysql_GetString("rangnamen", "T7", "frakid", ranklist));
						format(ranklist,sizeof(ranklist),"%s\n%s\n%s\n%s\n%s\n%s\n%s",r1,r2,r3,r4,r5,r6,r7);
						ShowPlayerDialog(playerid,DIALOG_SARDV_RANGS,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",ranklist,"Weiter","Zurück");
		        	}
				}
		       	else ShowPlayerDialog(playerid,DIALOG_SARDV_RANGSE,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Benutze 1 bis 24 Zeichen für einen gültigen Rangnamen.","Weiter","Zurück");
			}
		}
		case DIALOG_SARDV_RANGS:
		{
	 		if(response==0)//Zurück
	 		{
				ShowPlayerDialog(playerid,DIALOG_SARDV,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Sanitäter | Rangnamen bearbeiten\nFeuerwehr | Rangnamen bearbeiten\nSanitäter | Skinordnung festlegen\nFeuerwehr | Skinordnung festlegen\nFahrzeugverwaltung\nGehaltverwaltung","Weiter","Abbrechen");
			}
	        else if(response==1)//Weiter
	        {
	        	switch(listitem)
				{
					case 0://Rang 1
	    			{
						SetPVarInt(playerid,"RangEdit",1);
						ShowPlayerDialog(playerid,DIALOG_SARDV_RANGSE,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Du editierst den Namen des ersten Rangs. Wie soll er lauten?","Weiter","Zurück");
	  				}
			    	case 1://Rang 2
					{
				        SetPVarInt(playerid,"RangEdit",2);
				        ShowPlayerDialog(playerid,DIALOG_SARDV_RANGSE,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Du editierst den Namen des zweiten Rangs. Wie soll er lauten?","Weiter","Zurück");
				    }
				    case 2://Rang 3
				    {
				        SetPVarInt(playerid,"RangEdit",3);
				        ShowPlayerDialog(playerid,DIALOG_SARDV_RANGSE,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Du editierst den Namen des dritten Rangs. Wie soll er lauten?","Weiter","Zurück");
				    }
				    case 3://Rang 4
				    {
				        SetPVarInt(playerid,"RangEdit",4);
				        ShowPlayerDialog(playerid,DIALOG_SARDV_RANGSE,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Du editierst den Namen des vierten Rangs. Wie soll er lauten?","Weiter","Zurück");
				    }
				    case 4://Rang 5
				    {
				        SetPVarInt(playerid,"RangEdit",5);
				        ShowPlayerDialog(playerid,DIALOG_SARDV_RANGSE,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Du editierst den Namen des fünften Rangs. Wie soll er lauten?","Weiter","Zurück");
				    }
				    case 5://Rang 6
				    {
				        SetPVarInt(playerid,"RangEdit",6);
				        ShowPlayerDialog(playerid,DIALOG_SARDV_RANGSE,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Du editierst den Namen des letzten Rangs. Wie soll er lauten?","Weiter","Zurück");
				    }
				    case 6://Rang 7
				    {
				        SetPVarInt(playerid,"RangEdit",7);
				        ShowPlayerDialog(playerid,DIALOG_SARDV_RANGSE,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Du editierst den Namen des letzten Rangs. Wie soll er lauten?","Weiter","Zurück");
				    }
				}
	 		}
		}
		case DIALOG_SARDV_SKINR:
		{
		    if(response==0)//Zurück
			{
				ShowPlayerDialog(playerid,DIALOG_SARDV,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Sanitäter | Rangnamen bearbeiten\nFeuerwehr | Rangnamen bearbeiten\nSanitäter | Skinordnung festlegen\nFeuerwehr | Skinordnung festlegen\nFahrzeugverwaltung\nGehaltverwaltung","Weiter","Abbrechen");
			}
			else if(response==1)//Weiter
			{
			    switch(listitem)
				{
				    case 0://Rang 1
				    {
				        SetPVarInt(playerid,"Skinordnung",1);
						ShowPlayerDialog(playerid,-1,DIALOG_STYLE_MSGBOX,"Close","Close","Close","");
				    }
				    case 1://Rang 2
				    {
	       				SetPVarInt(playerid,"Skinordnung",2);
						ShowPlayerDialog(playerid,-1,DIALOG_STYLE_MSGBOX,"Close","Close","Close","");
				    }
				    case 2://Rang 3
				    {
	                    SetPVarInt(playerid,"Skinordnung",3);
						ShowPlayerDialog(playerid,-1,DIALOG_STYLE_MSGBOX,"Close","Close","Close","");
				    }
					case 3://Rang 4
				    {
	                	SetPVarInt(playerid,"Skinordnung",4);
						ShowPlayerDialog(playerid,-1,DIALOG_STYLE_MSGBOX,"Close","Close","Close","");
				    }
				    case 4://Rang 5
				    {
	                    SetPVarInt(playerid,"Skinordnung",5);
						ShowPlayerDialog(playerid,-1,DIALOG_STYLE_MSGBOX,"Close","Close","Close","");
					}
				    case 5://Rang 6
				    {
	                    SetPVarInt(playerid,"Skinordnung",6);
						ShowPlayerDialog(playerid,-1,DIALOG_STYLE_MSGBOX,"Close","Close","Close","");
				    }
				    case 6://Rang 7
				    {
	                    SetPVarInt(playerid,"Skinordnung",7);
						ShowPlayerDialog(playerid,-1,DIALOG_STYLE_MSGBOX,"Close","Close","Close","");
				    }
				}
    			if(GetPVarInt(playerid,"FrakV") == 1)
  			  	{
			    	ShowModelSelectionMenu(playerid, SkinordnungMEDIC, "Skinordnung");
				}
 				else if(GetPVarInt(playerid,"FrakV") == 2)
  			  	{
			    	ShowModelSelectionMenu(playerid, SkinordnungFIRE, "Skinordnung");
				}
			}
		}
		case DIALOG_GRUPPEV:
		{
		    if(response==0){}//Abbrechen
			else if(response==1)//Weiter
			{
			    switch(listitem)
			    {
       				case 0://Upgrades
			        {
			            new gid = SpielerInfo[playerid][sGruppe];
			            if(GruppenInfo[gid][gUpgrade][0] == 0){ShowPlayerDialog(playerid,DIALOG_GRUPPEV_UPGRADES,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Gruppenupgrades","{FFFFFF}Gehaltverwaltung | [{FF0000}Nicht Vorhanden{FFFFFF}]","Kaufen","Zurück");}
    					else if(GruppenInfo[gid][gUpgrade][0] == 1){ShowPlayerDialog(playerid,DIALOG_GRUPPEV_UPGRADES,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Gruppenupgrades","{FFFFFF}Gehaltverwaltung | [{9ACD32}Vorhanden{FFFFFF}]","Kaufen","Zurück");}
					}
			        case 1://Fahrzeugverwaltung
			        {
						ShowPlayerDialog(playerid,DIALOG_GRUPPEV_FAHRZEUG,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Gruppenverwaltung","Fahrzeugzugriff\nFahrzeuge respawnen (2750$)","Weiter","Zurück");
					}
     				case 2://Rangname
			        {
   						new r1[32], r2[32], r3[32], r4[32], r5[32], r6[32], r7[24], ranklist[145];
						format(ranklist,sizeof(ranklist),"%d",SpielerInfo[playerid][sGruppe]);
						format(r1,sizeof(r1),"%s",mysql_GetString("grangnamen", "1", "gid", ranklist));
						format(r2,sizeof(r2),"%s",mysql_GetString("grangnamen", "2", "gid", ranklist));
						format(r3,sizeof(r3),"%s",mysql_GetString("grangnamen", "3", "gid", ranklist));
						format(r4,sizeof(r4),"%s",mysql_GetString("grangnamen", "4", "gid", ranklist));
						format(r5,sizeof(r5),"%s",mysql_GetString("grangnamen", "5", "gid", ranklist));
						format(r6,sizeof(r6),"%s",mysql_GetString("grangnamen", "6", "gid", ranklist));
						format(r7,sizeof(r7),"%s",mysql_GetString("grangnamen", "7", "gid", ranklist));
						format(ranklist,sizeof(ranklist),"%s\n%s\n%s\n%s\n%s\n%s\n%s",r1,r2,r3,r4,r5,r6,r7);
						ShowPlayerDialog(playerid,DIALOG_GRUPPEV_RANGS,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Gruppenverwaltung",ranklist,"Weiter","Zurück");
					}
 					case 3://Gehalt
			        {
						new r1[32], r2[32], r3[32], r4[32], r5[32], r6[32], r7[24], ranklist[145];
						format(ranklist,sizeof(ranklist),"%d",SpielerInfo[playerid][sGruppe]);
						format(r1,sizeof(r1),"%s",mysql_GetString("grangnamen", "1", "gid", ranklist));
						format(r2,sizeof(r2),"%s",mysql_GetString("grangnamen", "2", "gid", ranklist));
						format(r3,sizeof(r3),"%s",mysql_GetString("grangnamen", "3", "gid", ranklist));
						format(r4,sizeof(r4),"%s",mysql_GetString("grangnamen", "4", "gid", ranklist));
						format(r5,sizeof(r5),"%s",mysql_GetString("grangnamen", "5", "gid", ranklist));
						format(r6,sizeof(r6),"%s",mysql_GetString("grangnamen", "6", "gid", ranklist));
						format(r7,sizeof(r7),"%s",mysql_GetString("grangnamen", "7", "gid", ranklist));
						format(ranklist,sizeof(ranklist),"%s\n%s\n%s\n%s\n%s\n%s\n%s",r1,r2,r3,r4,r5,r6,r7);
						ShowPlayerDialog(playerid,DIALOG_GRUPPEV_GEHALT_R,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Gruppenverwaltung",ranklist,"Weiter","Zurück");
					}
			    }
			}
		}
		case DIALOG_GRUPPEV_UPGRADES:
		{
		    new gid = SpielerInfo[playerid][sGruppe];
		    if(response==0)//Zurück
			{
  				if(GruppenInfo[gid][gUpgrade][0] == 0){ShowPlayerDialog(playerid,DIALOG_GRUPPEV,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Gruppenverwaltung","Upgrades\nFahrzeugverwaltung\nRangnamen bearbeiten","Weiter","Abbrechen");}
				else if(GruppenInfo[gid][gUpgrade][0] == 1){ShowPlayerDialog(playerid,DIALOG_GRUPPEV,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Gruppenverwaltung","Upgrades\nFahrzeugverwaltung\nRangnamen bearbeiten\nGehaltverwaltung","Weiter","Abbrechen");}
			}
			else if(response==1)//Weiter
			{
			    switch(listitem)
			    {
       				case 0://Gehaltverwaltung
			        {
						if(GruppenInfo[gid][gUpgrade][0] == 1)
						{
						    SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Deine Gruppe besitzt bereits das Gehaltupgrade.");
    						ShowPlayerDialog(playerid,DIALOG_GRUPPEV_UPGRADES,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Gruppenupgrades","{FFFFFF}Gehaltverwaltung | [{9ACD32}Vorhanden{FFFFFF}]","Kaufen","Zurück");
						}
						else
						{
		        			ShowPlayerDialog(playerid,DIALOG_GRUPPEV_UPGRADES_KAUF,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Gruppenverwaltung","{FFFFFF}Möchtest du dir wirklich das Gehaltupgrade für ${FF0000} 25.000{FFFFFF} kaufen ?","Kaufen","Zurück");
						}
			        }
				}
			}
		}
		case DIALOG_GRUPPEV_UPGRADES_KAUF:
		{
		    new gid = SpielerInfo[playerid][sGruppe];
		    if(response==0)//Zurück
		    {
				if(GruppenInfo[gid][gUpgrade][0] == 0){ShowPlayerDialog(playerid,DIALOG_GRUPPEV_UPGRADES,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Gruppenupgrades","{FFFFFF}Gehaltverwaltung | [{FF0000}Nicht Vorhanden{FFFFFF}]","Kaufen","Zurück");}
 				else if(GruppenInfo[gid][gUpgrade][0] == 1){ShowPlayerDialog(playerid,DIALOG_GRUPPEV_UPGRADES,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Gruppenupgrades","{FFFFFF}Gehaltverwaltung | [{9ACD32}Vorhanden{FFFFFF}]","Kaufen","Zurück");}
		    }
		    else if(response==1)//Kaufen
		    {
		        if(GruppenInfo[gid][gKasse] >= 25000)
		        {
		            GruppenInfo[gid][gKasse] -= 25000;
		            GruppenInfo[gid][gUpgrade][0] = 1;
		            SendClientMessage(playerid,COLOR_SUPER,"Glückwunsch! Deine Gruppe besitzt nun das Gehaltupgrade.");
		            ShowPlayerDialog(playerid,DIALOG_GRUPPEV_UPGRADES,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Gruppenupgrades","{FFFFFF}Gehaltverwaltung | [{9ACD32}Vorhanden{FFFFFF}]","Kaufen","Zurück");
		        }
		        else
		        {
		            SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}In der Gruppenkasse befindet sich nicht genügend Geld, um dir das Gehaltupgrade leisten zu können.");
		            ShowPlayerDialog(playerid,DIALOG_GRUPPEV_UPGRADES,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Gruppenupgrades","{FFFFFF}Gehaltverwaltung | [{FF0000}Nicht Vorhanden{FFFFFF}]","Kaufen","Zurück");
		        }
		    }
		}
		case DIALOG_GRUPPEV_GEHALT_R:
		{
  			new gid = SpielerInfo[playerid][sGruppe];
		    if(response==0)//Zurück
		    {
  				if(GruppenInfo[gid][gUpgrade][0] == 0){ShowPlayerDialog(playerid,DIALOG_GRUPPEV,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Gruppenverwaltung","Upgrades\nFahrzeugverwaltung\nRangnamen bearbeiten","Weiter","Abbrechen");}
				else if(GruppenInfo[gid][gUpgrade][0] == 1){ShowPlayerDialog(playerid,DIALOG_GRUPPEV,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Gruppenverwaltung","Upgrades\nFahrzeugverwaltung\nRangnamen bearbeiten\nGehaltverwaltung","Weiter","Abbrechen");}
		    }
		    else if(response==1)//Weiter
		    {
		        new string[128], inputstr[24];
		        format(inputstr,sizeof(inputstr),"%s",inputtext);
		        SetPVarInt(playerid,"GruppeVGehaltRang",listitem+1);
		        format(string,sizeof(string),"{FFFFFF}Wie viel Gehalt soll der Rank '{007DFF}%s{FFFFFF}' pro Payday erhalten?",inputstr);
		        ShowPlayerDialog(playerid,DIALOG_GRUPPEV_GEHALT_ER,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Gruppenverwaltung",string,"Setzen","Zurück");
		    }
		}
		case DIALOG_GRUPPEV_GEHALT_ER:
		{
		    if(response==0)//Zurück
		    {
				new r1[32], r2[32], r3[32], r4[32], r5[32], r6[32], r7[24], ranklist[145];
				format(ranklist,sizeof(ranklist),"%d",SpielerInfo[playerid][sGruppe]);
				format(r1,sizeof(r1),"%s",mysql_GetString("grangnamen", "1", "gid", ranklist));
				format(r2,sizeof(r2),"%s",mysql_GetString("grangnamen", "2", "gid", ranklist));
				format(r3,sizeof(r3),"%s",mysql_GetString("grangnamen", "3", "gid", ranklist));
				format(r4,sizeof(r4),"%s",mysql_GetString("grangnamen", "4", "gid", ranklist));
				format(r5,sizeof(r5),"%s",mysql_GetString("grangnamen", "5", "gid", ranklist));
				format(r6,sizeof(r6),"%s",mysql_GetString("grangnamen", "6", "gid", ranklist));
				format(r7,sizeof(r7),"%s",mysql_GetString("grangnamen", "7", "gid", ranklist));
				format(ranklist,sizeof(ranklist),"%s\n%s\n%s\n%s\n%s\n%s\n%s",r1,r2,r3,r4,r5,r6,r7);
				ShowPlayerDialog(playerid,DIALOG_GRUPPEV_GEHALT_R,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Gruppenverwaltung",ranklist,"Weiter","Zurück");
		    }
		    else if(response==1)//Setzen
		    {
      			if(strlen(inputtext) < 1 || strlen(inputtext) > 10000 || !IsNumeric(inputtext))
		        {
		            ShowPlayerDialog(playerid,DIALOG_GRUPPEV_GEHALT_ER,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Gruppenverwaltung","{FFFFFF}Der Betrag ist leider ungültig, wie viel Gehalt soll der Rang pro Payday erhalten?","Setzen","Zurück");
		        }
		        else
		        {
			        new string[128], GehaltRang[32];
			        format(GehaltRang,sizeof(GehaltRang),"Gehalt_Rang%d",GetPVarInt(playerid,"GruppeVGehaltRang"));
			        format(string,sizeof(string),"%d",SpielerInfo[playerid][sGruppe]);
			        mysql_SetInt("gruppen", GehaltRang, strval(inputtext), "ID", string);
			        format(string,sizeof(string),"Du hast ein Gehalt in Höhe von '%d$' für die Rang-ID '%d' vergeben.",strval(inputtext),GetPVarInt(playerid,"GruppeVGehaltRang"));
					SendClientMessage(playerid,COLOR_INFO,string);
					new r1[32], r2[32], r3[32], r4[32], r5[32], r6[32], r7[24], ranklist[145];
					format(ranklist,sizeof(ranklist),"%d",SpielerInfo[playerid][sGruppe]);
					format(r1,sizeof(r1),"%s",mysql_GetString("grangnamen", "1", "gid", ranklist));
					format(r2,sizeof(r2),"%s",mysql_GetString("grangnamen", "2", "gid", ranklist));
					format(r3,sizeof(r3),"%s",mysql_GetString("grangnamen", "3", "gid", ranklist));
					format(r4,sizeof(r4),"%s",mysql_GetString("grangnamen", "4", "gid", ranklist));
					format(r5,sizeof(r5),"%s",mysql_GetString("grangnamen", "5", "gid", ranklist));
					format(r6,sizeof(r6),"%s",mysql_GetString("grangnamen", "6", "gid", ranklist));
					format(r7,sizeof(r7),"%s",mysql_GetString("grangnamen", "7", "gid", ranklist));
					format(ranklist,sizeof(ranklist),"%s\n%s\n%s\n%s\n%s\n%s\n%s",r1,r2,r3,r4,r5,r6,r7);
					ShowPlayerDialog(playerid,DIALOG_GRUPPEV_GEHALT_R,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Gruppenverwaltung",ranklist,"Weiter","Zurück");
				}
		    }
		}
		case DIALOG_FRAKV_GEHALT:
		{
		    if(response==0)//Zurück
		    {
				ShowFrakVerwaltung(playerid);
		    }
		    else if(response==1)//Weiter
		    {
		        switch(listitem)
		        {
		            case 0://Gehalt pro Rang
		            {
						new r1[32], r2[32], r3[32], r4[32], r5[32], r6[32], r7[24], ranklist[145];
						format(ranklist,sizeof(ranklist),"%d",SpielerInfo[playerid][sFraktion]);
						format(r1,sizeof(r1),"%s",mysql_GetString("rangnamen", "1", "frakid", ranklist));
						format(r2,sizeof(r2),"%s",mysql_GetString("rangnamen", "2", "frakid", ranklist));
						format(r3,sizeof(r3),"%s",mysql_GetString("rangnamen", "3", "frakid", ranklist));
						format(r4,sizeof(r4),"%s",mysql_GetString("rangnamen", "4", "frakid", ranklist));
						format(r5,sizeof(r5),"%s",mysql_GetString("rangnamen", "5", "frakid", ranklist));
						format(r6,sizeof(r6),"%s",mysql_GetString("rangnamen", "6", "frakid", ranklist));
						format(r7,sizeof(r7),"%s",mysql_GetString("rangnamen", "7", "frakid", ranklist));
						format(ranklist,sizeof(ranklist),"%s\n%s\n%s\n%s\n%s\n%s\n%s",r1,r2,r3,r4,r5,r6,r7);
						ShowPlayerDialog(playerid,DIALOG_FRAKV_GEHALT_R,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",ranklist,"Weiter","Zurück");
		            }
				}
		    }
		}
		case DIALOG_FRAKV_GEHALT_R:
		{
		    if(response==0)//Zurück
		    {
		        ShowPlayerDialog(playerid,DIALOG_FRAKV_GEHALT,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Gehalt pro Rang","Weiter","Zurück");
		    }
		    else if(response==1)//Weiter
		    {
		        new string[128], inputstr[24];
		        format(inputstr,sizeof(inputstr),"%s",inputtext);
		        SetPVarInt(playerid,"FrakVGehaltRang",listitem+1);
		        format(string,sizeof(string),"{FFFFFF}Wie viel Gehalt soll der Rank '{007DFF}%s{FFFFFF}' pro Payday erhalten?",inputstr);
		        ShowPlayerDialog(playerid,DIALOG_FRAKV_GEHALT_ER,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",string,"Setzen","Zurück");
		    }
		}
		case DIALOG_FRAKV_GEHALT_ER:
		{
		    if(response==0)//Zurück
		    {
				new r1[32], r2[32], r3[32], r4[32], r5[32], r6[32], r7[24], ranklist[145];
				format(ranklist,sizeof(ranklist),"%d",SpielerInfo[playerid][sFraktion]);
				format(r1,sizeof(r1),"%s",mysql_GetString("rangnamen", "1", "frakid", ranklist));
				format(r2,sizeof(r2),"%s",mysql_GetString("rangnamen", "2", "frakid", ranklist));
				format(r3,sizeof(r3),"%s",mysql_GetString("rangnamen", "3", "frakid", ranklist));
				format(r4,sizeof(r4),"%s",mysql_GetString("rangnamen", "4", "frakid", ranklist));
				format(r5,sizeof(r5),"%s",mysql_GetString("rangnamen", "5", "frakid", ranklist));
				format(r6,sizeof(r6),"%s",mysql_GetString("rangnamen", "6", "frakid", ranklist));
				format(r7,sizeof(r7),"%s",mysql_GetString("rangnamen", "7", "frakid", ranklist));
				format(ranklist,sizeof(ranklist),"%s\n%s\n%s\n%s\n%s\n%s\n%s",r1,r2,r3,r4,r5,r6,r7);
				ShowPlayerDialog(playerid,DIALOG_FRAKV_GEHALT_R,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",ranklist,"Weiter","Zurück");
		    }
		    else if(response==1)//Setzen
		    {
      			if(strlen(inputtext) < 1 || strlen(inputtext) > 10000 || !IsNumeric(inputtext))
		        {
		            ShowPlayerDialog(playerid,DIALOG_FRAKV_GEHALT_ER,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","{FFFFFF}Der Betrag ist leider ungültig, wie viel Gehalt soll der Rang pro Payday erhalten?","Setzen","Zurück");
		        }
		        else
		        {
			        new string[128], GehaltRang[32];
			        format(GehaltRang,sizeof(GehaltRang),"Gehalt_Rang%d",GetPVarInt(playerid,"FrakVGehaltRang"));
			        format(string,sizeof(string),"%d",SpielerInfo[playerid][sFraktion]);
			        mysql_SetInt("frakinfos", GehaltRang, strval(inputtext), "FID", string);
			        format(string,sizeof(string),"Du hast ein Gehalt in Höhe von '%d$' für die Rang-ID '%d' vergeben.",strval(inputtext),GetPVarInt(playerid,"FrakVGehaltRang"));
					SendClientMessage(playerid,COLOR_INFO,string);
					new r1[32], r2[32], r3[32], r4[32], r5[32], r6[32], r7[24], ranklist[145];
					format(ranklist,sizeof(ranklist),"%d",SpielerInfo[playerid][sFraktion]);
					format(r1,sizeof(r1),"%s",mysql_GetString("rangnamen", "1", "frakid", ranklist));
					format(r2,sizeof(r2),"%s",mysql_GetString("rangnamen", "2", "frakid", ranklist));
					format(r3,sizeof(r3),"%s",mysql_GetString("rangnamen", "3", "frakid", ranklist));
					format(r4,sizeof(r4),"%s",mysql_GetString("rangnamen", "4", "frakid", ranklist));
					format(r5,sizeof(r5),"%s",mysql_GetString("rangnamen", "5", "frakid", ranklist));
					format(r6,sizeof(r6),"%s",mysql_GetString("rangnamen", "6", "frakid", ranklist));
					format(r7,sizeof(r7),"%s",mysql_GetString("rangnamen", "7", "frakid", ranklist));
					format(ranklist,sizeof(ranklist),"%s\n%s\n%s\n%s\n%s\n%s\n%s",r1,r2,r3,r4,r5,r6,r7);
					ShowPlayerDialog(playerid,DIALOG_FRAKV_GEHALT_R,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",ranklist,"Weiter","Zurück");
				}
		    }
		}
		case DIALOG_FRAKV_FAHRZEUG:
		{
		    if(response==0)//Zurück
		    {
		  		ShowFrakVerwaltung(playerid);
		    }
		    else if(response==1)//Weiter
		    {
      			switch(listitem)
		        {
		            case 0://Fahrzeugzugriff
		            {
          				new merker = 0;
				 	 	new cars[MAX_VEHICLES];
				 	 	new merkerdoppelt = 0;
      					for(new i = 1;i<MAX_VEHICLES;i++)
					    {
					        if(!IsValidVehicle(i) || FahrzeugInfo[i][fDatabaseID] == 0)continue;
				            if(FahrzeugInfo[i][fFraktion] == SpielerInfo[playerid][sFraktion])
				            {
			                    if(FahrzeugInfo[i][fModelID] == cars[i])
			                    {
			                        merkerdoppelt = 1;
			                    }
			                	if(merkerdoppelt == 0)
			                	{
			                		cars[merker] = FahrzeugInfo[i][fModelID];
			                		merker ++;
			                	}
							}
				 	 	}
					    ShowModelSelectionMenuEx(playerid, cars, merker, "Fahrzeugverwaltung", CUSTOM_FUHRPARK_MENU, 16.0, 0.0, -55.0);
		            }
		            case 1://Fahrzeuge respawnen
					{
					    if(FrakInfo[SpielerInfo[playerid][sFraktion]][fiCarRespawn] > 0)
					    {
					        new string[128];
					        format(string,sizeof(string),"Deine Fahrzeuge können erst wieder in %d Minuten respawnt werden.",FrakInfo[SpielerInfo[playerid][sFraktion]][fiCarRespawn]);
					        ShowPlayerDialog(playerid,9982,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",string,"Schliessen","");
					    }
					    else if(FrakInfo[SpielerInfo[playerid][sFraktion]][fiCarRespawn] == 0)
					    {
					        if(FrakInfo[SpielerInfo[playerid][sFraktion]][fiFrakKasse] >= 2750)
					        {
						        FrakInfo[SpielerInfo[playerid][sFraktion]][fiCarRespawn] = 30;
						        FrakInfo[SpielerInfo[playerid][sFraktion]][fiCarRespawnTimer] = SetTimerEx("FrakCarRespawnTimout",60000,true,"i",SpielerInfo[playerid][sFraktion]);
						        FrakInfo[SpielerInfo[playerid][sFraktion]][fiFrakKasse] -= 2750;
                 				for(new i = 1;i<MAX_VEHICLES;i++)
						        {
						            if(!IsValidVehicle(i))continue;
	            					if(FahrzeugInfo[i][fFraktion] == SpielerInfo[playerid][sFraktion])
	            					{
		                            	if(GetVehicleDriverEx(i) == -1 && FahrzeugInfo[i][fParkkralle] == 0)
			                            {
			                                ShowPlayerDialog(playerid,9982,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Du hast alle unbenutzen und nicht vom Ordnungsamt verankerten oder abgeschleppten Fahrzeuge respawnt.","Schliessen","");
				        					SetVehicleToRespawn(i);
										}
									}
						        }
							}
							else ShowPlayerDialog(playerid,9982,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Deine Fraktion hat keine 2750$ übrig, um die Fahrzeuge zu respawnen!","Schliessen","");
					    }
					}
				}
		    }
		}
		case DIALOG_GRUPPEV_FAHRZEUG:
		{
		    new gid = SpielerInfo[playerid][sGruppe];
		    if(response==0)//Zurück
		    {
				if(GruppenInfo[gid][gUpgrade][0] == 0){ShowPlayerDialog(playerid,DIALOG_GRUPPEV,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Gruppenverwaltung","Upgrades\nFahrzeugverwaltung\nRangnamen bearbeiten","Weiter","Abbrechen");}
				else if(GruppenInfo[gid][gUpgrade][0] == 1){ShowPlayerDialog(playerid,DIALOG_GRUPPEV,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Gruppenverwaltung","Upgrades\nFahrzeugverwaltung\nRangnamen bearbeiten\nGehaltverwaltung","Weiter","Abbrechen");}
		    }
		    else if(response==1)//Weiter
		    {
      			switch(listitem)
		        {
		            case 0://Fahrzeugzugriff
		            {
          				new merker = 0;
				 	 	new cars[MAX_VEHICLES];
				 	 	new merkerdoppelt = 0;
      					for(new i = 1;i<MAX_VEHICLES;i++)
					    {
					        if(!IsValidVehicle(i) || FahrzeugInfo[i][fDatabaseID] == 0)continue;
             				if(FahrzeugInfo[i][fGruppe] == gid)
             				{
			                    if(FahrzeugInfo[i][fModelID] == cars[i])
			                    {
			                        merkerdoppelt = 1;
			                    }
			                	if(merkerdoppelt == 0)
			                	{
			                		cars[merker] = FahrzeugInfo[i][fModelID];
			                		merker ++;
			                	}
							}
				 	 	}
					    ShowModelSelectionMenuEx(playerid, cars, merker, "Fahrzeugverwaltung", CUSTOM_FUHRPARK_GRUPPE_MENU, 16.0, 0.0, -55.0);
		            }
		            case 1://Fahrzeuge respawnen
     				{
					    if(GruppenInfo[SpielerInfo[playerid][sGruppe]][gCarRespawn] > 0)
					    {
					        new string[128];
					        format(string,sizeof(string),"Deine Fahrzeuge können erst wieder in %d Minuten respawnt werden.",GruppenInfo[SpielerInfo[playerid][sGruppe]][gCarRespawn]);
					        ShowPlayerDialog(playerid,9982,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Gruppenverwaltung",string,"Schliessen","");
					    }
					    else if(GruppenInfo[SpielerInfo[playerid][sGruppe]][gCarRespawn] == 0)
					    {
					        if(GruppenInfo[SpielerInfo[playerid][sGruppe]][gKasse] >= 2750)
					        {
						        GruppenInfo[SpielerInfo[playerid][sGruppe]][gCarRespawn] = 45;
						        GruppenInfo[SpielerInfo[playerid][sGruppe]][gCarRespawnTimer] = SetTimerEx("GruppenCarRespawnTimout",60000,true,"i",SpielerInfo[playerid][sGruppe]);
						        GruppenInfo[SpielerInfo[playerid][sGruppe]][gKasse] -= 2750;
                 				for(new i = 1;i<MAX_VEHICLES;i++)
						        {
						            if(!IsValidVehicle(i))continue;
	            					if(FahrzeugInfo[i][fGruppe] == SpielerInfo[playerid][sGruppe])
	            					{
		                            	if(GetVehicleDriverEx(i) == -1 && FahrzeugInfo[i][fParkkralle] == 0)
			                            {
			                                ShowPlayerDialog(playerid,9982,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Gruppenverwaltung","Du hast alle unbenutzen und nicht vom Ordnungsamt verankerten oder abgeschleppten Fahrzeuge respawnt.","Schliessen","");
				        					SetVehicleToRespawn(i);
										}
									}
						        }
							}
							else ShowPlayerDialog(playerid,9982,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Gruppenverwaltung","Deine Gruppe hat keine 2750$ übrig, um die Fahrzeuge zu respawnen!","Schliessen","");
					    }
					}
				}
		    }
		}
		case DIALOG_FRAKV_CARRANG:
		{
		    new query[128];
		    if(response==0)//Zurück
		    {
				new merker = 0;
		 	 	new cars[MAX_VEHICLES];
		 	 	new merkerdoppelt = 0;
				for(new i = 1;i<MAX_VEHICLES;i++)
			    {
			        if(!IsValidVehicle(i) || FahrzeugInfo[i][fDatabaseID] == 0)continue;
		            if(FahrzeugInfo[i][fFraktion] == SpielerInfo[playerid][sFraktion])
		            {
	                    if(FahrzeugInfo[i][fModelID] == cars[i])
	                    {
	                        merkerdoppelt = 1;
	                    }
	                	if(merkerdoppelt == 0)
	                	{
	                		cars[merker] = FahrzeugInfo[i][fModelID];
	                		merker ++;
	                	}
					}
		 	 	}
			    ShowModelSelectionMenuEx(playerid, cars, merker, "Fahrzeugverwaltung", CUSTOM_FUHRPARK_MENU, 16.0, 0.0, -55.0);
		    }
		    else if(response==1)//Vergeben
		    {
				for(new mf=1;mf<MAX_VEHICLES;mf++)
				{
				    if(!IsValidVehicle(mf))continue;
					if(FahrzeugInfo[mf][fFraktion] == SpielerInfo[playerid][sFraktion])
					{
						if(FahrzeugInfo[mf][fModelID] == GetPVarInt(playerid,"FrakVFahrzeugModel"))
						{
							FahrzeugInfo[mf][fRang] = listitem;
						}
					}
				}
				PlayerPlaySound(playerid, 1139, 0.0, 0.0, 0.0);
				format(query,sizeof(query),"Du hast alle Fahrzeuge mit der ModelID '%d' deiner Fraktion erst ab Rang '%d' fahrbar gemacht.",GetPVarInt(playerid,"FrakVFahrzeugModel"),listitem);
				SendClientMessage(playerid,COLOR_INFO,query);
				return 1;
		    }
		}
		case DIALOG_GRUPPENV_CARRANG:
		{
		    new query[128], gid = SpielerInfo[playerid][sGruppe];
		    if(response==0)//Zurück
		    {
				new merker = 0;
		 	 	new cars[MAX_VEHICLES];
		 	 	new merkerdoppelt = 0;
				for(new i = 1;i<MAX_VEHICLES;i++)
			    {
			        if(!IsValidVehicle(i) || FahrzeugInfo[i][fDatabaseID] == 0)continue;
     				if(FahrzeugInfo[i][fGruppe] == gid)
     				{
	                    if(FahrzeugInfo[i][fModelID] == cars[i])
	                    {
	                        merkerdoppelt = 1;
	                    }
	                	if(merkerdoppelt == 0)
	                	{
	                		cars[merker] = FahrzeugInfo[i][fModelID];
	                		merker ++;
	                	}
					}
		 	 	}
			    ShowModelSelectionMenuEx(playerid, cars, merker, "Fahrzeugverwaltung", CUSTOM_FUHRPARK_GRUPPE_MENU, 16.0, 0.0, -55.0);
		    }
		    else if(response==1)//Vergeben
		    {
				for(new mf=1;mf<MAX_VEHICLES;mf++)
				{
				    if(!IsValidVehicle(mf))continue;
					if(FahrzeugInfo[mf][fGruppe] == SpielerInfo[playerid][sGruppe])
					{
						if(FahrzeugInfo[mf][fModelID] == GetPVarInt(playerid,"GruppenVFahrzeugModel"))
						{
							FahrzeugInfo[mf][fRang] = listitem;
						}
					}
				}
				PlayerPlaySound(playerid, 1139, 0.0, 0.0, 0.0);
				format(query,sizeof(query),"Du hast alle Fahrzeuge mit der ModelID '%d' deiner Gruppe erst ab Rang '%d' fahrbar gemacht.",GetPVarInt(playerid,"GruppenVFahrzeugModel"),listitem);
				SendClientMessage(playerid,COLOR_INFO,query);
				return 1;
		    }
		}
		case DIALOG_FRAKV_EQUIP:
		{
		    if(response==0)//Zurück
		    {
		  		ShowFrakVerwaltung(playerid);
		    }
		    else if(response==1)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                new string[128], Weapon1, Weapon2, Weapon3, Weapon4, Weapon5, fid[11];
		                format(fid,sizeof(fid),"%d",SpielerInfo[playerid][sFraktion]);
			         	Weapon1 = mysql_GetInt("frakequip", "Equip1Waffe1", "frakid", fid);
			         	Weapon2 = mysql_GetInt("frakequip", "Equip1Waffe2", "frakid", fid);
			         	Weapon3 = mysql_GetInt("frakequip", "Equip1Waffe3", "frakid", fid);
			         	Weapon4 = mysql_GetInt("frakequip", "Equip1Waffe4", "frakid", fid);
			         	Weapon5 = mysql_GetInt("frakequip", "Equip1Waffe5", "frakid", fid);
			         	format(string,sizeof(string),"Name: %s\nRang: %d\nWaffe 1: %s\nWaffe 2: %s\nWaffe 3: %s\nWaffe 4: %s\nWaffe 5: %s",mysql_GetString("frakequip", "Equip1Name", "frakid", fid),mysql_GetInt("frakequip", "Equip1Rang", "frakid", fid),WaffenName(Weapon1),WaffenName(Weapon2),WaffenName(Weapon3),WaffenName(Weapon4),WaffenName(Weapon5));
		                ShowPlayerDialog(playerid,DIALOG_FRAKV_EQUIP_EDIT,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",string,"Weiter","Zurück");
		                SetPVarInt(playerid,"EQEdit",1);
		            }
		            case 1:
		            {
		                new string[128], Weapon1, Weapon2, Weapon3, Weapon4, Weapon5, fid[11];
		                format(fid,sizeof(fid),"%d",SpielerInfo[playerid][sFraktion]);
			         	Weapon1 = mysql_GetInt("frakequip", "Equip2Waffe1", "frakid", fid);
			         	Weapon2 = mysql_GetInt("frakequip", "Equip2Waffe2", "frakid", fid);
			         	Weapon3 = mysql_GetInt("frakequip", "Equip2Waffe3", "frakid", fid);
			         	Weapon4 = mysql_GetInt("frakequip", "Equip2Waffe4", "frakid", fid);
			         	Weapon5 = mysql_GetInt("frakequip", "Equip2Waffe5", "frakid", fid);
			         	format(string,sizeof(string),"Name: %s\nRang: %d\nWaffe 1: %s\nWaffe 2: %s\nWaffe 3: %s\nWaffe 4: %s\nWaffe 5: %s",mysql_GetString("frakequip", "Equip2Name", "frakid", fid),mysql_GetInt("frakequip", "Equip2Rang", "frakid", fid),WaffenName(Weapon1),WaffenName(Weapon2),WaffenName(Weapon3),WaffenName(Weapon4),WaffenName(Weapon5));
		                ShowPlayerDialog(playerid,DIALOG_FRAKV_EQUIP_EDIT,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",string,"Weiter","Zurück");
		                SetPVarInt(playerid,"EQEdit",2);
		            }
		            case 2:
		            {
		                new string[128], Weapon1, Weapon2, Weapon3, Weapon4, Weapon5, fid[11];
		                format(fid,sizeof(fid),"%d",SpielerInfo[playerid][sFraktion]);
			         	Weapon1 = mysql_GetInt("frakequip", "Equip3Waffe1", "frakid", fid);
			         	Weapon2 = mysql_GetInt("frakequip", "Equip3Waffe2", "frakid", fid);
			         	Weapon3 = mysql_GetInt("frakequip", "Equip3Waffe3", "frakid", fid);
			         	Weapon4 = mysql_GetInt("frakequip", "Equip3Waffe4", "frakid", fid);
			         	Weapon5 = mysql_GetInt("frakequip", "Equip3Waffe5", "frakid", fid);
			         	format(string,sizeof(string),"Name: %s\nRang: %d\nWaffe 1: %s\nWaffe 2: %s\nWaffe 3: %s\nWaffe 4: %s\nWaffe 5: %s",mysql_GetString("frakequip", "Equip3Name", "frakid", fid),mysql_GetInt("frakequip", "Equip3Rang", "frakid", fid),WaffenName(Weapon1),WaffenName(Weapon2),WaffenName(Weapon3),WaffenName(Weapon4),WaffenName(Weapon5));
		                ShowPlayerDialog(playerid,DIALOG_FRAKV_EQUIP_EDIT,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",string,"Weiter","Zurück");
		                SetPVarInt(playerid,"EQEdit",3);
		            }
		        }
		    }
		}
		case DIALOG_FRAKV_EQUIP_EDIT:
		{
		    if(response==0)//Zurück
		    {
		        new string[128], fid[11];
				format(fid,sizeof(fid),"%d",SpielerInfo[playerid][sFraktion]);
				format(string,sizeof(string),"%s\n%s\n%s",mysql_GetString("frakequip", "Equip1Name", "frakid", fid),mysql_GetString("frakequip", "Equip2Name", "frakid", fid),mysql_GetString("frakequip", "Equip3Name", "frakid", fid));
  				ShowPlayerDialog(playerid,DIALOG_FRAKV_EQUIP,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",string,"Weiter","Zurück");
		    }
		    else if(response==1)//Weiter
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
						ShowPlayerDialog(playerid,DIALOG_FRAKV_EQUIP_EDIT_NAME,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Du kannst das Equiptment frei benennen.\nGebe einen neuen Namen für das Equiptment ein und klicke auf 'Speichern'.","Speichern","Zurück");
		            }
		            case 1:
		            {
						ShowPlayerDialog(playerid,DIALOG_FRAKV_EQUIP_EDIT_RANG,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Du kannst das Equiptment frei bearbeiten.\nGebe einen neuen Rang für das Equiptment ein und klicke auf 'Speichern'.","Speichern","Zurück");
		            }
		            case 2:
		            {
		                SetPVarInt(playerid,"EQEditW",1);
						ShowPlayerDialog(playerid,DIALOG_FRAKV_EQUIP_EDIT_WEAP,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Du kannst das Equiptment frei bearbeiten.\nGebe einen neue WaffenID ein und klicke auf 'Speichern'. Du findest die WaffenIDs unter: http://wiki.sa-mp.com/wiki/Weapons!","Speichern","Zurück");
		            }
		            case 3:
		            {
		                SetPVarInt(playerid,"EQEditW",2);
						ShowPlayerDialog(playerid,DIALOG_FRAKV_EQUIP_EDIT_WEAP,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Du kannst das Equiptment frei bearbeiten.\nGebe einen neue WaffenID ein und klicke auf 'Speichern'. Du findest die WaffenIDs unter: http://wiki.sa-mp.com/wiki/Weapons!","Speichern","Zurück");
		            }
		            case 4:
		            {
		                SetPVarInt(playerid,"EQEditW",3);
						ShowPlayerDialog(playerid,DIALOG_FRAKV_EQUIP_EDIT_WEAP,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Du kannst das Equiptment frei bearbeiten.\nGebe einen neue WaffenID ein und klicke auf 'Speichern'. Du findest die WaffenIDs unter: http://wiki.sa-mp.com/wiki/Weapons!","Speichern","Zurück");
		            }
		            case 5:
		            {
		                SetPVarInt(playerid,"EQEditW",4);
						ShowPlayerDialog(playerid,DIALOG_FRAKV_EQUIP_EDIT_WEAP,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Du kannst das Equiptment frei bearbeiten.\nGebe einen neue WaffenID ein und klicke auf 'Speichern'. Du findest die WaffenIDs unter: http://wiki.sa-mp.com/wiki/Weapons!","Speichern","Zurück");
		            }
		            case 6:
		            {
		                SetPVarInt(playerid,"EQEditW",5);
						ShowPlayerDialog(playerid,DIALOG_FRAKV_EQUIP_EDIT_WEAP,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Du kannst das Equiptment frei bearbeiten.\nGebe einen neue WaffenID ein und klicke auf 'Speichern'. Du findest die WaffenIDs unter: http://wiki.sa-mp.com/wiki/Weapons!","Speichern","Zurück");
		            }
		        }
		    }
		}
		case DIALOG_FRAKV_EQUIP_EDIT_NAME:
		{
		    if(response==0)//Zurück
		    {
		        DeletePVar(playerid,"EQEdit");
				if(GetPVarInt(playerid,"EQEdit") == 1)
	            {
	                new string[128], Weapon1, Weapon2, Weapon3, Weapon4, Weapon5, fid[11];
	                format(fid,sizeof(fid),"%d",SpielerInfo[playerid][sFraktion]);
		         	Weapon1 = mysql_GetInt("frakequip", "Equip1Waffe1", "frakid", fid);
		         	Weapon2 = mysql_GetInt("frakequip", "Equip1Waffe2", "frakid", fid);
		         	Weapon3 = mysql_GetInt("frakequip", "Equip1Waffe3", "frakid", fid);
		         	Weapon4 = mysql_GetInt("frakequip", "Equip1Waffe4", "frakid", fid);
		         	Weapon5 = mysql_GetInt("frakequip", "Equip1Waffe5", "frakid", fid);
		         	format(string,sizeof(string),"Name: %s\nRang: %d\nWaffe 1: %s\nWaffe 2: %s\nWaffe 3: %s\nWaffe 4: %s\nWaffe 5: %s",mysql_GetString("frakequip", "Equip1Name", "frakid", fid),mysql_GetInt("frakequip", "Equip1Rang", "frakid", fid),WaffenName(Weapon1),WaffenName(Weapon2),WaffenName(Weapon3),WaffenName(Weapon4),WaffenName(Weapon5));
	                ShowPlayerDialog(playerid,DIALOG_FRAKV_EQUIP_EDIT,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",string,"Weiter","Zurück");
	            }
	            else if(GetPVarInt(playerid,"EQEdit") == 2)
	            {
	                new string[128], Weapon1, Weapon2, Weapon3, Weapon4, Weapon5, fid[11];
	                format(fid,sizeof(fid),"%d",SpielerInfo[playerid][sFraktion]);
		         	Weapon1 = mysql_GetInt("frakequip", "Equip2Waffe1", "frakid", fid);
		         	Weapon2 = mysql_GetInt("frakequip", "Equip2Waffe2", "frakid", fid);
		         	Weapon3 = mysql_GetInt("frakequip", "Equip2Waffe3", "frakid", fid);
		         	Weapon4 = mysql_GetInt("frakequip", "Equip2Waffe4", "frakid", fid);
		         	Weapon5 = mysql_GetInt("frakequip", "Equip2Waffe5", "frakid", fid);
		         	format(string,sizeof(string),"Name: %s\nRang: %d\nWaffe 1: %s\nWaffe 2: %s\nWaffe 3: %s\nWaffe 4: %s\nWaffe 5: %s",mysql_GetString("frakequip", "Equip2Name", "frakid", fid),mysql_GetInt("frakequip", "Equip2Rang", "frakid", fid),WaffenName(Weapon1),WaffenName(Weapon2),WaffenName(Weapon3),WaffenName(Weapon4),WaffenName(Weapon5));
	                ShowPlayerDialog(playerid,DIALOG_FRAKV_EQUIP_EDIT,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",string,"Weiter","Zurück");
	            }
	            else if(GetPVarInt(playerid,"EQEdit") == 3)
	            {
	                new string[128], Weapon1, Weapon2, Weapon3, Weapon4, Weapon5, fid[11];
	                format(fid,sizeof(fid),"%d",SpielerInfo[playerid][sFraktion]);
		         	Weapon1 = mysql_GetInt("frakequip", "Equip3Waffe1", "frakid", fid);
		         	Weapon2 = mysql_GetInt("frakequip", "Equip3Waffe2", "frakid", fid);
		         	Weapon3 = mysql_GetInt("frakequip", "Equip3Waffe3", "frakid", fid);
		         	Weapon4 = mysql_GetInt("frakequip", "Equip3Waffe4", "frakid", fid);
		         	Weapon5 = mysql_GetInt("frakequip", "Equip3Waffe5", "frakid", fid);
		         	format(string,sizeof(string),"Name: %s\nRang: %d\nWaffe 1: %s\nWaffe 2: %s\nWaffe 3: %s\nWaffe 4: %s\nWaffe 5: %s",mysql_GetString("frakequip", "Equip3Name", "frakid", fid),mysql_GetInt("frakequip", "Equip3Rang", "frakid", fid),WaffenName(Weapon1),WaffenName(Weapon2),WaffenName(Weapon3),WaffenName(Weapon4),WaffenName(Weapon5));
	                ShowPlayerDialog(playerid,DIALOG_FRAKV_EQUIP_EDIT,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",string,"Weiter","Zurück");
	            }
		    }
		    else if(response==1)
		    {
				if(strlen(inputtext) < 3 || strlen(inputtext) > 24)
				{
				    ShowPlayerDialog(playerid,DIALOG_FRAKV_EQUIP_EDIT_NAME,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Du kannst das Equiptment frei benennen.\nGebe einen neuen Namen für das Equiptment ein und klicke auf 'Speichern'.\n\n{FF0000}Der Name des Equiptment muss mindestens 3 Zeichen und darf maximal 24 Zeichen betragen!","Speichern","Zurück");
				}
				else
				{
					if(GetPVarInt(playerid,"EQEdit") == 1)
		            {
		                new string[128], Weapon1, Weapon2, Weapon3, Weapon4, Weapon5, fid[11];
		                format(fid,sizeof(fid),"%d",SpielerInfo[playerid][sFraktion]);
		                mysql_SetString("frakequip", "Equip1Name", inputtext ,"frakid", fid);
			         	Weapon1 = mysql_GetInt("frakequip", "Equip1Waffe1", "frakid", fid);
			         	Weapon2 = mysql_GetInt("frakequip", "Equip1Waffe2", "frakid", fid);
			         	Weapon3 = mysql_GetInt("frakequip", "Equip1Waffe3", "frakid", fid);
			         	Weapon4 = mysql_GetInt("frakequip", "Equip1Waffe4", "frakid", fid);
			         	Weapon5 = mysql_GetInt("frakequip", "Equip1Waffe5", "frakid", fid);
			         	format(string,sizeof(string),"Name: %s\nRang: %d\nWaffe 1: %s\nWaffe 2: %s\nWaffe 3: %s\nWaffe 4: %s\nWaffe 5: %s",mysql_GetString("frakequip", "Equip1Name", "frakid", fid),mysql_GetInt("frakequip", "Equip1Rang", "frakid", fid),WaffenName(Weapon1),WaffenName(Weapon2),WaffenName(Weapon3),WaffenName(Weapon4),WaffenName(Weapon5));
		                ShowPlayerDialog(playerid,DIALOG_FRAKV_EQUIP_EDIT,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",string,"Weiter","Zurück");
		            }
		            else if(GetPVarInt(playerid,"EQEdit") == 2)
		            {
		                new string[128], Weapon1, Weapon2, Weapon3, Weapon4, Weapon5, fid[11];
		                format(fid,sizeof(fid),"%d",SpielerInfo[playerid][sFraktion]);
		                mysql_SetString("frakequip", "Equip2Name", inputtext ,"frakid", fid);
			         	Weapon1 = mysql_GetInt("frakequip", "Equip2Waffe1", "frakid", fid);
			         	Weapon2 = mysql_GetInt("frakequip", "Equip2Waffe2", "frakid", fid);
			         	Weapon3 = mysql_GetInt("frakequip", "Equip2Waffe3", "frakid", fid);
			         	Weapon4 = mysql_GetInt("frakequip", "Equip2Waffe4", "frakid", fid);
			         	Weapon5 = mysql_GetInt("frakequip", "Equip2Waffe5", "frakid", fid);
			         	format(string,sizeof(string),"Name: %s\nRang: %d\nWaffe 1: %s\nWaffe 2: %s\nWaffe 3: %s\nWaffe 4: %s\nWaffe 5: %s",mysql_GetString("frakequip", "Equip2Name", "frakid", fid),mysql_GetInt("frakequip", "Equip2Rang", "frakid", fid),WaffenName(Weapon1),WaffenName(Weapon2),WaffenName(Weapon3),WaffenName(Weapon4),WaffenName(Weapon5));
		                ShowPlayerDialog(playerid,DIALOG_FRAKV_EQUIP_EDIT,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",string,"Weiter","Zurück");
		            }
		            else if(GetPVarInt(playerid,"EQEdit") == 3)
		            {
		                new string[128], Weapon1, Weapon2, Weapon3, Weapon4, Weapon5, fid[11];
		                format(fid,sizeof(fid),"%d",SpielerInfo[playerid][sFraktion]);
		                mysql_SetString("frakequip", "Equip3Name", inputtext ,"frakid", fid);
			         	Weapon1 = mysql_GetInt("frakequip", "Equip3Waffe1", "frakid", fid);
			         	Weapon2 = mysql_GetInt("frakequip", "Equip3Waffe2", "frakid", fid);
			         	Weapon3 = mysql_GetInt("frakequip", "Equip3Waffe3", "frakid", fid);
			         	Weapon4 = mysql_GetInt("frakequip", "Equip3Waffe4", "frakid", fid);
			         	Weapon5 = mysql_GetInt("frakequip", "Equip3Waffe5", "frakid", fid);
			         	format(string,sizeof(string),"Name: %s\nRang: %d\nWaffe 1: %s\nWaffe 2: %s\nWaffe 3: %s\nWaffe 4: %s\nWaffe 5: %s",mysql_GetString("frakequip", "Equip3Name", "frakid", fid),mysql_GetInt("frakequip", "Equip3Rang", "frakid", fid),WaffenName(Weapon1),WaffenName(Weapon2),WaffenName(Weapon3),WaffenName(Weapon4),WaffenName(Weapon5));
		                ShowPlayerDialog(playerid,DIALOG_FRAKV_EQUIP_EDIT,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",string,"Weiter","Zurück");
		            }
				}
		    }
		}

		case DIALOG_FRAKV_EQUIP_EDIT_RANG:
		{
		    if(response==0)//Zurück
		    {
		        DeletePVar(playerid,"EQEdit");
				if(GetPVarInt(playerid,"EQEdit") == 1)
	            {
	                new string[128], Weapon1, Weapon2, Weapon3, Weapon4, Weapon5, fid[11];
	                format(fid,sizeof(fid),"%d",SpielerInfo[playerid][sFraktion]);
		         	Weapon1 = mysql_GetInt("frakequip", "Equip1Waffe1", "frakid", fid);
		         	Weapon2 = mysql_GetInt("frakequip", "Equip1Waffe2", "frakid", fid);
		         	Weapon3 = mysql_GetInt("frakequip", "Equip1Waffe3", "frakid", fid);
		         	Weapon4 = mysql_GetInt("frakequip", "Equip1Waffe4", "frakid", fid);
		         	Weapon5 = mysql_GetInt("frakequip", "Equip1Waffe5", "frakid", fid);
		         	format(string,sizeof(string),"Name: %s\nRang: %d\nWaffe 1: %s\nWaffe 2: %s\nWaffe 3: %s\nWaffe 4: %s\nWaffe 5: %s",mysql_GetString("frakequip", "Equip1Name", "frakid", fid),mysql_GetInt("frakequip", "Equip1Rang", "frakid", fid),WaffenName(Weapon1),WaffenName(Weapon2),WaffenName(Weapon3),WaffenName(Weapon4),WaffenName(Weapon5));
	                ShowPlayerDialog(playerid,DIALOG_FRAKV_EQUIP_EDIT,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",string,"Weiter","Zurück");
	            }
	            else if(GetPVarInt(playerid,"EQEdit") == 2)
	            {
	                new string[128], Weapon1, Weapon2, Weapon3, Weapon4, Weapon5, fid[11];
	                format(fid,sizeof(fid),"%d",SpielerInfo[playerid][sFraktion]);
		         	Weapon1 = mysql_GetInt("frakequip", "Equip2Waffe1", "frakid", fid);
		         	Weapon2 = mysql_GetInt("frakequip", "Equip2Waffe2", "frakid", fid);
		         	Weapon3 = mysql_GetInt("frakequip", "Equip2Waffe3", "frakid", fid);
		         	Weapon4 = mysql_GetInt("frakequip", "Equip2Waffe4", "frakid", fid);
		         	Weapon5 = mysql_GetInt("frakequip", "Equip2Waffe5", "frakid", fid);
		         	format(string,sizeof(string),"Name: %s\nRang: %d\nWaffe 1: %s\nWaffe 2: %s\nWaffe 3: %s\nWaffe 4: %s\nWaffe 5: %s",mysql_GetString("frakequip", "Equip2Name", "frakid", fid),mysql_GetInt("frakequip", "Equip2Rang", "frakid", fid),WaffenName(Weapon1),WaffenName(Weapon2),WaffenName(Weapon3),WaffenName(Weapon4),WaffenName(Weapon5));
	                ShowPlayerDialog(playerid,DIALOG_FRAKV_EQUIP_EDIT,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",string,"Weiter","Zurück");
	            }
	            else if(GetPVarInt(playerid,"EQEdit") == 3)
	            {
	                new string[128], Weapon1, Weapon2, Weapon3, Weapon4, Weapon5, fid[11];
	                format(fid,sizeof(fid),"%d",SpielerInfo[playerid][sFraktion]);
		         	Weapon1 = mysql_GetInt("frakequip", "Equip3Waffe1", "frakid", fid);
		         	Weapon2 = mysql_GetInt("frakequip", "Equip3Waffe2", "frakid", fid);
		         	Weapon3 = mysql_GetInt("frakequip", "Equip3Waffe3", "frakid", fid);
		         	Weapon4 = mysql_GetInt("frakequip", "Equip3Waffe4", "frakid", fid);
		         	Weapon5 = mysql_GetInt("frakequip", "Equip3Waffe5", "frakid", fid);
		         	format(string,sizeof(string),"Name: %s\nRang: %d\nWaffe 1: %s\nWaffe 2: %s\nWaffe 3: %s\nWaffe 4: %s\nWaffe 5: %s",mysql_GetString("frakequip", "Equip3Name", "frakid", fid),mysql_GetInt("frakequip", "Equip3Rang", "frakid", fid),WaffenName(Weapon1),WaffenName(Weapon2),WaffenName(Weapon3),WaffenName(Weapon4),WaffenName(Weapon5));
	                ShowPlayerDialog(playerid,DIALOG_FRAKV_EQUIP_EDIT,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",string,"Weiter","Zurück");
	            }
		    }
		    else if(response==1)
		    {
		        if(!IsNumeric(inputtext) || strval(inputtext) < 1 && strval(inputtext) > 7)
				{
				    ShowPlayerDialog(playerid,DIALOG_FRAKV_EQUIP_EDIT_RANG,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Du kannst das Equiptment frei benennen.\nGebe einen neuen Rang für das Equiptment ein und klicke auf 'Speichern'.\n\n{FF0000}Der Rang des Equiptment muss mindestens Rang 1 und darf maximal Rang 7 betragen!","Speichern","Zurück");
				}
				else
				{
					if(GetPVarInt(playerid,"EQEdit") == 1)
		            {
		                new string[128], Weapon1, Weapon2, Weapon3, Weapon4, Weapon5, fid[11];
		                format(fid,sizeof(fid),"%d",SpielerInfo[playerid][sFraktion]);
		                mysql_SetInt("frakequip", "Equip1Rang", strval(inputtext) ,"frakid", fid);
			         	Weapon1 = mysql_GetInt("frakequip", "Equip1Waffe1", "frakid", fid);
			         	Weapon2 = mysql_GetInt("frakequip", "Equip1Waffe2", "frakid", fid);
			         	Weapon3 = mysql_GetInt("frakequip", "Equip1Waffe3", "frakid", fid);
			         	Weapon4 = mysql_GetInt("frakequip", "Equip1Waffe4", "frakid", fid);
			         	Weapon5 = mysql_GetInt("frakequip", "Equip1Waffe5", "frakid", fid);
			         	format(string,sizeof(string),"Name: %s\nRang: %d\nWaffe 1: %s\nWaffe 2: %s\nWaffe 3: %s\nWaffe 4: %s\nWaffe 5: %s",mysql_GetString("frakequip", "Equip1Name", "frakid", fid),mysql_GetInt("frakequip", "Equip1Rang", "frakid", fid),WaffenName(Weapon1),WaffenName(Weapon2),WaffenName(Weapon3),WaffenName(Weapon4),WaffenName(Weapon5));
		                ShowPlayerDialog(playerid,DIALOG_FRAKV_EQUIP_EDIT,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",string,"Weiter","Zurück");
		            }
		            else if(GetPVarInt(playerid,"EQEdit") == 2)
		            {
		                new string[128], Weapon1, Weapon2, Weapon3, Weapon4, Weapon5, fid[11];
		                format(fid,sizeof(fid),"%d",SpielerInfo[playerid][sFraktion]);
		                mysql_SetInt("frakequip", "Equip2Rang", strval(inputtext) ,"frakid", fid);
			         	Weapon1 = mysql_GetInt("frakequip", "Equip2Waffe1", "frakid", fid);
			         	Weapon2 = mysql_GetInt("frakequip", "Equip2Waffe2", "frakid", fid);
			         	Weapon3 = mysql_GetInt("frakequip", "Equip2Waffe3", "frakid", fid);
			         	Weapon4 = mysql_GetInt("frakequip", "Equip2Waffe4", "frakid", fid);
			         	Weapon5 = mysql_GetInt("frakequip", "Equip2Waffe5", "frakid", fid);
			         	format(string,sizeof(string),"Name: %s\nRang: %d\nWaffe 1: %s\nWaffe 2: %s\nWaffe 3: %s\nWaffe 4: %s\nWaffe 5: %s",mysql_GetString("frakequip", "Equip2Name", "frakid", fid),mysql_GetInt("frakequip", "Equip2Rang", "frakid", fid),WaffenName(Weapon1),WaffenName(Weapon2),WaffenName(Weapon3),WaffenName(Weapon4),WaffenName(Weapon5));
		                ShowPlayerDialog(playerid,DIALOG_FRAKV_EQUIP_EDIT,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",string,"Weiter","Zurück");
		            }
		            else if(GetPVarInt(playerid,"EQEdit") == 3)
		            {
		                new string[128], Weapon1, Weapon2, Weapon3, Weapon4, Weapon5, fid[11];
		                format(fid,sizeof(fid),"%d",SpielerInfo[playerid][sFraktion]);
		                mysql_SetInt("frakequip", "Equip3Rang", strval(inputtext) ,"frakid", fid);
			         	Weapon1 = mysql_GetInt("frakequip", "Equip3Waffe1", "frakid", fid);
			         	Weapon2 = mysql_GetInt("frakequip", "Equip3Waffe2", "frakid", fid);
			         	Weapon3 = mysql_GetInt("frakequip", "Equip3Waffe3", "frakid", fid);
			         	Weapon4 = mysql_GetInt("frakequip", "Equip3Waffe4", "frakid", fid);
			         	Weapon5 = mysql_GetInt("frakequip", "Equip3Waffe5", "frakid", fid);
			         	format(string,sizeof(string),"Name: %s\nRang: %d\nWaffe 1: %s\nWaffe 2: %s\nWaffe 3: %s\nWaffe 4: %s\nWaffe 5: %s",mysql_GetString("frakequip", "Equip3Name", "frakid", fid),mysql_GetInt("frakequip", "Equip3Rang", "frakid", fid),WaffenName(Weapon1),WaffenName(Weapon2),WaffenName(Weapon3),WaffenName(Weapon4),WaffenName(Weapon5));
		                ShowPlayerDialog(playerid,DIALOG_FRAKV_EQUIP_EDIT,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",string,"Weiter","Zurück");
		            }
				}
		    }
		}
		case DIALOG_FRAKV_EQUIP_EDIT_WEAP:
		{
		    if(response==0)//Zurück
		    {
				if(GetPVarInt(playerid,"EQEdit") == 1)
	            {
	                new string[128], Weapon1, Weapon2, Weapon3, Weapon4, Weapon5, fid[11];
	                format(fid,sizeof(fid),"%d",SpielerInfo[playerid][sFraktion]);
		         	Weapon1 = mysql_GetInt("frakequip", "Equip1Waffe1", "frakid", fid);
		         	Weapon2 = mysql_GetInt("frakequip", "Equip1Waffe2", "frakid", fid);
		         	Weapon3 = mysql_GetInt("frakequip", "Equip1Waffe3", "frakid", fid);
		         	Weapon4 = mysql_GetInt("frakequip", "Equip1Waffe4", "frakid", fid);
		         	Weapon5 = mysql_GetInt("frakequip", "Equip1Waffe5", "frakid", fid);
		         	format(string,sizeof(string),"Name: %s\nRang: %d\nWaffe 1: %s\nWaffe 2: %s\nWaffe 3: %s\nWaffe 4: %s\nWaffe 5: %s",mysql_GetString("frakequip", "Equip1Name", "frakid", fid),mysql_GetInt("frakequip", "Equip1Rang", "frakid", fid),WaffenName(Weapon1),WaffenName(Weapon2),WaffenName(Weapon3),WaffenName(Weapon4),WaffenName(Weapon5));
	                ShowPlayerDialog(playerid,DIALOG_FRAKV_EQUIP_EDIT,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",string,"Weiter","Zurück");
	            }
	            else if(GetPVarInt(playerid,"EQEdit") == 2)
	            {
	                new string[128], Weapon1, Weapon2, Weapon3, Weapon4, Weapon5, fid[11];
	                format(fid,sizeof(fid),"%d",SpielerInfo[playerid][sFraktion]);
		         	Weapon1 = mysql_GetInt("frakequip", "Equip2Waffe1", "frakid", fid);
		         	Weapon2 = mysql_GetInt("frakequip", "Equip2Waffe2", "frakid", fid);
		         	Weapon3 = mysql_GetInt("frakequip", "Equip2Waffe3", "frakid", fid);
		         	Weapon4 = mysql_GetInt("frakequip", "Equip2Waffe4", "frakid", fid);
		         	Weapon5 = mysql_GetInt("frakequip", "Equip2Waffe5", "frakid", fid);
		         	format(string,sizeof(string),"Name: %s\nRang: %d\nWaffe 1: %s\nWaffe 2: %s\nWaffe 3: %s\nWaffe 4: %s\nWaffe 5: %s",mysql_GetString("frakequip", "Equip2Name", "frakid", fid),mysql_GetInt("frakequip", "Equip2Rang", "frakid", fid),WaffenName(Weapon1),WaffenName(Weapon2),WaffenName(Weapon3),WaffenName(Weapon4),WaffenName(Weapon5));
	                ShowPlayerDialog(playerid,DIALOG_FRAKV_EQUIP_EDIT,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",string,"Weiter","Zurück");
	            }
	            else if(GetPVarInt(playerid,"EQEdit") == 3)
	            {
	                new string[128], Weapon1, Weapon2, Weapon3, Weapon4, Weapon5, fid[11];
	                format(fid,sizeof(fid),"%d",SpielerInfo[playerid][sFraktion]);
		         	Weapon1 = mysql_GetInt("frakequip", "Equip3Waffe1", "frakid", fid);
		         	Weapon2 = mysql_GetInt("frakequip", "Equip3Waffe2", "frakid", fid);
		         	Weapon3 = mysql_GetInt("frakequip", "Equip3Waffe3", "frakid", fid);
		         	Weapon4 = mysql_GetInt("frakequip", "Equip3Waffe4", "frakid", fid);
		         	Weapon5 = mysql_GetInt("frakequip", "Equip3Waffe5", "frakid", fid);
		         	format(string,sizeof(string),"Name: %s\nRang: %d\nWaffe 1: %s\nWaffe 2: %s\nWaffe 3: %s\nWaffe 4: %s\nWaffe 5: %s",mysql_GetString("frakequip", "Equip3Name", "frakid", fid),mysql_GetInt("frakequip", "Equip3Rang", "frakid", fid),WaffenName(Weapon1),WaffenName(Weapon2),WaffenName(Weapon3),WaffenName(Weapon4),WaffenName(Weapon5));
	                ShowPlayerDialog(playerid,DIALOG_FRAKV_EQUIP_EDIT,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",string,"Weiter","Zurück");
	            }
		    }
			else if(response==1)
			{
			    if(!IsNumeric(inputtext) || strlen(inputtext) < 1 || strlen(inputtext) > 2)return ShowPlayerDialog(playerid,DIALOG_FRAKV_EQUIP_EDIT_WEAP,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Du kannst das Equiptment frei bearbeiten.\nGebe einen neue WaffenID ein und klicke auf 'Speichern'. Du findest die WaffenIDs unter: http://wiki.sa-mp.com/wiki/Weapons!\n\n{FF0000}Du hast eine ungültige WaffenID eingegeben!","Speichern","Zurück");
                new WaffenID = strval(inputtext);
				if(WaffenID == 26 || WaffenID == 27 || WaffenID == 32 || WaffenID == 35 || WaffenID == 36 || WaffenID == 37 || WaffenID == 38 || WaffenID == 39 || WaffenID == 40)
				return ShowPlayerDialog(playerid,DIALOG_FRAKV_EQUIP_EDIT_WEAP,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Du kannst das Equiptment frei bearbeiten.\nGebe einen neue WaffenID ein und klicke auf 'Speichern'. Du findest die WaffenIDs unter: http://wiki.sa-mp.com/wiki/Weapons!\n\n{FF0000}Diese Waffen werden auf "SERV_NAME" nicht geduldet.","Speichern","Zurück");
				new wid[24];
				new equipname[24], fid[11], string[128], Weapon1, Weapon2, Weapon3, Weapon4, Weapon5, name[24];
				format(fid,sizeof(fid),"%d",SpielerInfo[playerid][sFraktion]);
				format(wid,sizeof(wid),"Equip%dWaffe%d",GetPVarInt(playerid,"EQEdit"),GetPVarInt(playerid,"EQEditW"));
				mysql_SetString("frakequip", wid, inputtext, "frakid", fid);
				format(equipname,sizeof(equipname),"Equip%dName",GetPVarInt(playerid,"EQEdit"));
				format(name,sizeof(name),"%s",mysql_GetString("frakequip", equipname, "frakid", fid));

				if(GetPVarInt(playerid,"EQEdit") == 1)
	            {
	                format(fid,sizeof(fid),"%d",SpielerInfo[playerid][sFraktion]);
		         	Weapon1 = mysql_GetInt("frakequip", "Equip1Waffe1", "frakid", fid);
		         	Weapon2 = mysql_GetInt("frakequip", "Equip1Waffe2", "frakid", fid);
		         	Weapon3 = mysql_GetInt("frakequip", "Equip1Waffe3", "frakid", fid);
		         	Weapon4 = mysql_GetInt("frakequip", "Equip1Waffe4", "frakid", fid);
		         	Weapon5 = mysql_GetInt("frakequip", "Equip1Waffe5", "frakid", fid);
		         	format(string,sizeof(string),"Name: %s\nRang: %d\nWaffe 1: %s\nWaffe 2: %s\nWaffe 3: %s\nWaffe 4: %s\nWaffe 5: %s",mysql_GetString("frakequip", "Equip1Name", "frakid", fid),mysql_GetInt("frakequip", "Equip1Rang", "frakid", fid),WaffenName(Weapon1),WaffenName(Weapon2),WaffenName(Weapon3),WaffenName(Weapon4),WaffenName(Weapon5));
	                ShowPlayerDialog(playerid,DIALOG_FRAKV_EQUIP_EDIT,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",string,"Weiter","Zurück");
	            }
	            else if(GetPVarInt(playerid,"EQEdit") == 2)
	            {
	                format(fid,sizeof(fid),"%d",SpielerInfo[playerid][sFraktion]);
		         	Weapon1 = mysql_GetInt("frakequip", "Equip2Waffe1", "frakid", fid);
		         	Weapon2 = mysql_GetInt("frakequip", "Equip2Waffe2", "frakid", fid);
		         	Weapon3 = mysql_GetInt("frakequip", "Equip2Waffe3", "frakid", fid);
		         	Weapon4 = mysql_GetInt("frakequip", "Equip2Waffe4", "frakid", fid);
		         	Weapon5 = mysql_GetInt("frakequip", "Equip2Waffe5", "frakid", fid);
		         	format(string,sizeof(string),"Name: %s\nRang: %d\nWaffe 1: %s\nWaffe 2: %s\nWaffe 3: %s\nWaffe 4: %s\nWaffe 5: %s",mysql_GetString("frakequip", "Equip2Name", "frakid", fid),mysql_GetInt("frakequip", "Equip2Rang", "frakid", fid),WaffenName(Weapon1),WaffenName(Weapon2),WaffenName(Weapon3),WaffenName(Weapon4),WaffenName(Weapon5));
	                ShowPlayerDialog(playerid,DIALOG_FRAKV_EQUIP_EDIT,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",string,"Weiter","Zurück");
	            }
	            else if(GetPVarInt(playerid,"EQEdit") == 3)
	            {
	                format(fid,sizeof(fid),"%d",SpielerInfo[playerid][sFraktion]);
		         	Weapon1 = mysql_GetInt("frakequip", "Equip3Waffe1", "frakid", fid);
		         	Weapon2 = mysql_GetInt("frakequip", "Equip3Waffe2", "frakid", fid);
		         	Weapon3 = mysql_GetInt("frakequip", "Equip3Waffe3", "frakid", fid);
		         	Weapon4 = mysql_GetInt("frakequip", "Equip3Waffe4", "frakid", fid);
		         	Weapon5 = mysql_GetInt("frakequip", "Equip3Waffe5", "frakid", fid);
		         	format(string,sizeof(string),"Name: %s\nRang: %d\nWaffe 1: %s\nWaffe 2: %s\nWaffe 3: %s\nWaffe 4: %s\nWaffe 5: %s",mysql_GetString("frakequip", "Equip3Name", "frakid", fid),mysql_GetInt("frakequip", "Equip3Rang", "frakid", fid),WaffenName(Weapon1),WaffenName(Weapon2),WaffenName(Weapon3),WaffenName(Weapon4),WaffenName(Weapon5));
	                ShowPlayerDialog(playerid,DIALOG_FRAKV_EQUIP_EDIT,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",string,"Weiter","Zurück");
	            }
			}
		}
		case DIALOG_FRAKV_RANGSE:
		{
		    if(response==0)//Zurück
		    {
				new r1[32], r2[32], r3[32], r4[32], r5[32], r6[32], r7[24], ranklist[145];
				format(ranklist,sizeof(ranklist),"%d",SpielerInfo[playerid][sFraktion]);
				format(r1,sizeof(r1),"%s",mysql_GetString("rangnamen", "1", "frakid", ranklist));
				format(r2,sizeof(r2),"%s",mysql_GetString("rangnamen", "2", "frakid", ranklist));
				format(r3,sizeof(r3),"%s",mysql_GetString("rangnamen", "3", "frakid", ranklist));
				format(r4,sizeof(r4),"%s",mysql_GetString("rangnamen", "4", "frakid", ranklist));
				format(r5,sizeof(r5),"%s",mysql_GetString("rangnamen", "5", "frakid", ranklist));
				format(r6,sizeof(r6),"%s",mysql_GetString("rangnamen", "6", "frakid", ranklist));
				format(r7,sizeof(r7),"%s",mysql_GetString("rangnamen", "7", "frakid", ranklist));
				format(ranklist,sizeof(ranklist),"%s\n%s\n%s\n%s\n%s\n%s\n%s",r1,r2,r3,r4,r5,r6,r7);
				ShowPlayerDialog(playerid,DIALOG_FRAKV_RANGS,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",ranklist,"Weiter","Zurück");
		    }
		    else if(response==1)//Weiter
		    {
		        if(strlen(inputtext) != 0 && strlen(inputtext) <= 24)
		        {
		            new string[84], r1[32], r2[32], r3[32], r4[32], r5[32], r6[32], r7[24], ranklist[145];
		            format(ranklist,sizeof(ranklist),"%d",SpielerInfo[playerid][sFraktion]);
		            format(string,sizeof(string),"%d",GetPVarInt(playerid,"RangEdit"));
		            mysql_SetString("rangnamen", string, inputtext, "frakid", ranklist);
					format(string,sizeof(string),"Du hast den Rangnamen für Rang %d in '%s' geändert.",GetPVarInt(playerid,"RangEdit"),inputtext);
					SendClientMessage(playerid,COLOR_INFO,string);
					format(ranklist,sizeof(ranklist),"%d",SpielerInfo[playerid][sFraktion]);
					format(r1,sizeof(r1),"%s",mysql_GetString("rangnamen", "1", "frakid", ranklist));
					format(r2,sizeof(r2),"%s",mysql_GetString("rangnamen", "2", "frakid", ranklist));
					format(r3,sizeof(r3),"%s",mysql_GetString("rangnamen", "3", "frakid", ranklist));
					format(r4,sizeof(r4),"%s",mysql_GetString("rangnamen", "4", "frakid", ranklist));
					format(r5,sizeof(r5),"%s",mysql_GetString("rangnamen", "5", "frakid", ranklist));
					format(r6,sizeof(r6),"%s",mysql_GetString("rangnamen", "6", "frakid", ranklist));
					format(r7,sizeof(r7),"%s",mysql_GetString("rangnamen", "7", "frakid", ranklist));
					format(ranklist,sizeof(ranklist),"%s\n%s\n%s\n%s\n%s\n%s\n%s",r1,r2,r3,r4,r5,r6,r7);
					ShowPlayerDialog(playerid,DIALOG_FRAKV_RANGS,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",ranklist,"Weiter","Zurück");
				}
		       	else ShowPlayerDialog(playerid,DIALOG_FRAKV_RANGSE,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Du editierst den Namen des ersten Rangs. Wie soll er lauten?\n\nBenutze 1 bis 24 Zeichen für einen gültigen Rangnamen.","Weiter","Zurück");
			}
		}
		case DIALOG_GRUPPEV_RANGSE:
		{
		    if(response==0)//Zurück
		    {
				new r1[32], r2[32], r3[32], r4[32], r5[32], r6[32], r7[24], ranklist[145];
				format(ranklist,sizeof(ranklist),"%d",SpielerInfo[playerid][sGruppe]);
				format(r1,sizeof(r1),"%s",mysql_GetString("grangnamen", "1", "gid", ranklist));
				format(r2,sizeof(r2),"%s",mysql_GetString("grangnamen", "2", "gid", ranklist));
				format(r3,sizeof(r3),"%s",mysql_GetString("grangnamen", "3", "gid", ranklist));
				format(r4,sizeof(r4),"%s",mysql_GetString("grangnamen", "4", "gid", ranklist));
				format(r5,sizeof(r5),"%s",mysql_GetString("grangnamen", "5", "gid", ranklist));
				format(r6,sizeof(r6),"%s",mysql_GetString("grangnamen", "6", "gid", ranklist));
				format(r7,sizeof(r7),"%s",mysql_GetString("grangnamen", "7", "gid", ranklist));
				format(ranklist,sizeof(ranklist),"%s\n%s\n%s\n%s\n%s\n%s\n%s",r1,r2,r3,r4,r5,r6,r7);
				ShowPlayerDialog(playerid,DIALOG_GRUPPEV_RANGS,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Gruppenverwaltung",ranklist,"Weiter","Zurück");
		    }
		    else if(response==1)//Weiter
		    {
		        if(strlen(inputtext) != 0 && strlen(inputtext) <= 24)
		        {
		            new string[84], r1[32], r2[32], r3[32], r4[32], r5[32], r6[32], r7[24], ranklist[145];
		            format(ranklist,sizeof(ranklist),"%d",SpielerInfo[playerid][sGruppe]);
		            format(string,sizeof(string),"%d",GetPVarInt(playerid,"RangEdit"));
		            mysql_SetString("grangnamen", string, inputtext, "gid", ranklist);
					format(string,sizeof(string),"Du hast den Rangnamen für Rang %d in '%s' geändert.",GetPVarInt(playerid,"RangEdit"),inputtext);
					SendClientMessage(playerid,COLOR_INFO,string);
					format(ranklist,sizeof(ranklist),"%d",SpielerInfo[playerid][sFraktion]);
					format(r1,sizeof(r1),"%s",mysql_GetString("grangnamen", "1", "gid", ranklist));
					format(r2,sizeof(r2),"%s",mysql_GetString("grangnamen", "2", "gid", ranklist));
					format(r3,sizeof(r3),"%s",mysql_GetString("grangnamen", "3", "gid", ranklist));
					format(r4,sizeof(r4),"%s",mysql_GetString("grangnamen", "4", "gid", ranklist));
					format(r5,sizeof(r5),"%s",mysql_GetString("grangnamen", "5", "gid", ranklist));
					format(r6,sizeof(r6),"%s",mysql_GetString("grangnamen", "6", "gid", ranklist));
					format(r7,sizeof(r7),"%s",mysql_GetString("grangnamen", "7", "gid", ranklist));
					format(ranklist,sizeof(ranklist),"%s\n%s\n%s\n%s\n%s\n%s\n%s",r1,r2,r3,r4,r5,r6,r7);
					ShowPlayerDialog(playerid,DIALOG_GRUPPEV_RANGS,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Gruppenverwaltung",ranklist,"Weiter","Zurück");
				}
		       	else ShowPlayerDialog(playerid,DIALOG_GRUPPEV_RANGSE,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Gruppenverwaltung","Du editierst den Namen des ersten Rangs. Wie soll er lauten?\n\nBenutze 1 bis 24 Zeichen für einen gültigen Rangnamen.","Weiter","Zurück");
			}
		}
		case DIALOG_FRAKV_RANGS:
		{
	 		if(response==0)//Zurück
	 		{
		  		ShowFrakVerwaltung(playerid);
			}
	        else if(response==1)//Weiter
	        {
	        	switch(listitem)
				{
					case 0://Rang 1
	    			{
						SetPVarInt(playerid,"RangEdit",1);
						ShowPlayerDialog(playerid,DIALOG_FRAKV_RANGSE,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Du editierst den Namen des ersten Rangs. Wie soll er lauten?","Weiter","Zurück");
	  				}
			    	case 1://Rang 2
					{
				        SetPVarInt(playerid,"RangEdit",2);
				        ShowPlayerDialog(playerid,DIALOG_FRAKV_RANGSE,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Du editierst den Namen des zweiten Rangs. Wie soll er lauten?","Weiter","Zurück");
				    }
				    case 2://Rang 3
				    {
				        SetPVarInt(playerid,"RangEdit",3);
				        ShowPlayerDialog(playerid,DIALOG_FRAKV_RANGSE,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Du editierst den Namen des dritten Rangs. Wie soll er lauten?","Weiter","Zurück");
				    }
				    case 3://Rang 4
				    {
				        SetPVarInt(playerid,"RangEdit",4);
				        ShowPlayerDialog(playerid,DIALOG_FRAKV_RANGSE,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Du editierst den Namen des vierten Rangs. Wie soll er lauten?","Weiter","Zurück");
				    }
				    case 4://Rang 5
				    {
				        SetPVarInt(playerid,"RangEdit",5);
				        ShowPlayerDialog(playerid,DIALOG_FRAKV_RANGSE,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Du editierst den Namen des fünften Rangs. Wie soll er lauten?","Weiter","Zurück");
				    }
				    case 5://Rang 6
				    {
				        SetPVarInt(playerid,"RangEdit",6);
				        ShowPlayerDialog(playerid,DIALOG_FRAKV_RANGSE,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Du editierst den Namen des letzten Rangs. Wie soll er lauten?","Weiter","Zurück");
				    }
				    case 6://Rang 7
				    {
				        SetPVarInt(playerid,"RangEdit",7);
				        ShowPlayerDialog(playerid,DIALOG_FRAKV_RANGSE,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Du editierst den Namen des letzten Rangs. Wie soll er lauten?","Weiter","Zurück");
				    }
				}
	 		}
		}
		case DIALOG_GRUPPEV_RANGS:
		{
	 		if(response==0)//Zurück
	 		{
  				new gid = SpielerInfo[playerid][sGruppe];
				if(GruppenInfo[gid][gUpgrade][0] == 0){ShowPlayerDialog(playerid,DIALOG_GRUPPEV,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Gruppenverwaltung","Upgrades\nFahrzeugverwaltung\nRangnamen bearbeiten","Weiter","Abbrechen");}
				else if(GruppenInfo[gid][gUpgrade][0] == 1){ShowPlayerDialog(playerid,DIALOG_GRUPPEV,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Gruppenverwaltung","Upgrades\nFahrzeugverwaltung\nRangnamen bearbeiten\nGehaltverwaltung","Weiter","Abbrechen");}
				return 1;
			}
	        else if(response==1)//Weiter
	        {
	        	switch(listitem)
				{
					case 0://Rang 1
	    			{
						SetPVarInt(playerid,"RangEdit",1);
						ShowPlayerDialog(playerid,DIALOG_GRUPPEV_RANGSE,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Gruppenverwaltung","Du editierst den Namen des ersten Rangs. Wie soll er lauten?","Weiter","Zurück");
	  				}
			    	case 1://Rang 2
					{
				        SetPVarInt(playerid,"RangEdit",2);
				        ShowPlayerDialog(playerid,DIALOG_GRUPPEV_RANGSE,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Gruppenverwaltung","Du editierst den Namen des zweiten Rangs. Wie soll er lauten?","Weiter","Zurück");
				    }
				    case 2://Rang 3
				    {
				        SetPVarInt(playerid,"RangEdit",3);
				        ShowPlayerDialog(playerid,DIALOG_GRUPPEV_RANGSE,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Gruppenverwaltung","Du editierst den Namen des dritten Rangs. Wie soll er lauten?","Weiter","Zurück");
				    }
				    case 3://Rang 4
				    {
				        SetPVarInt(playerid,"RangEdit",4);
				        ShowPlayerDialog(playerid,DIALOG_GRUPPEV_RANGSE,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Gruppenverwaltung","Du editierst den Namen des vierten Rangs. Wie soll er lauten?","Weiter","Zurück");
				    }
				    case 4://Rang 5
				    {
				        SetPVarInt(playerid,"RangEdit",5);
				        ShowPlayerDialog(playerid,DIALOG_GRUPPEV_RANGSE,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Gruppenverwaltung","Du editierst den Namen des fünften Rangs. Wie soll er lauten?","Weiter","Zurück");
				    }
				    case 5://Rang 6
				    {
				        SetPVarInt(playerid,"RangEdit",6);
				        ShowPlayerDialog(playerid,DIALOG_GRUPPEV_RANGSE,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Gruppenverwaltung","Du editierst den Namen des vorletzen Rangs. Wie soll er lauten?","Weiter","Zurück");
				    }
				    case 6://Rang 7
				    {
				        SetPVarInt(playerid,"RangEdit",7);
				        ShowPlayerDialog(playerid,DIALOG_GRUPPEV_RANGSE,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Gruppenverwaltung","Du editierst den Namen des letzten Rangs. Wie soll er lauten?","Weiter","Zurück");
				    }
				}
	 		}
		}
		case DIALOG_PDEQUIP:
		{
		    if(response==0){}//Abbrechen
		    else if(response==1)
		    {
				switch(listitem)
				{
				    case 0:
				    {
     					new frakid[3];
						format(frakid,sizeof(frakid),"%d",SpielerInfo[playerid][sFraktion]);
						new Rang = mysql_GetInt("frakequip", "Equip1Rang", "frakid", frakid);
				        if(SpielerInfo[playerid][sRank] >= Rang)
				        {
					        new Weapon1, Weapon2, Weapon3, Weapon4, Weapon5, fid[11];
							format(fid,sizeof(fid),"%d",SpielerInfo[playerid][sFraktion]);
				         	Weapon1 = mysql_GetInt("frakequip", "Equip1Waffe1", "frakid", fid);
				         	Weapon2 = mysql_GetInt("frakequip", "Equip1Waffe2", "frakid", fid);
				         	Weapon3 = mysql_GetInt("frakequip", "Equip1Waffe3", "frakid", fid);
				         	Weapon4 = mysql_GetInt("frakequip", "Equip1Waffe4", "frakid", fid);
				         	Weapon5 = mysql_GetInt("frakequip", "Equip1Waffe5", "frakid", fid);

					        SetPlayerHealth(playerid,120);
					        SetPlayerArmour(playerid,99.0);
					        ResetPlayerWeapons(playerid);
					        GivePlayerWeapon(playerid,WEAPON:Weapon1,700);
					        GivePlayerWeapon(playerid,WEAPON:Weapon2,700);
					        GivePlayerWeapon(playerid,WEAPON:Weapon3,700);
					        GivePlayerWeapon(playerid,WEAPON:Weapon4,700);
					        GivePlayerWeapon(playerid,WEAPON:Weapon5,700);
					        SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Du hast dich erfolgreich ausgerüstet.");
					        GovVars[govKasse] -= 10000;
					        SetPVarInt(playerid,"PDEquipt",1);
					        KillTimer(PDEquiptTimer[playerid]);
					        PDEquiptTimer[playerid] = SetTimerEx("PDEquiptGone",30000,false,"i",playerid);
					        if(IsPlayerInRangeOfPoint(playerid,5.0,316.2444,1834.3264,2241.5850))
					        {
					            SetPlayerPos(playerid,316.2444,1834.3264,2241.5850);
					            SetPlayerFacingAngle(playerid,89.4236);
					            ApplyAnimation(playerid,"DEALER","DRUGS_BUY", 4.0, false, false, false, false, 0);
								ApplyAnimation(playerid,"DEALER","DRUGS_BUY", 4.0, false, false, false, false, 0);
								ApplyAnimation(LSPDWKammer,"DEALER","DRUGS_BUY", 4.0, false, false, false, false, 0);
								ApplyAnimation(LSPDWKammer,"DEALER","DRUGS_BUY", 4.0, false, false, false, false, 0);
					        }
						}
						else
						{
							new string[128], fid[11];
							format(string,sizeof(string),"[Info]: {FFFFFF}Du benötigst für Equip %s min. Rang %d",mysql_GetString("frakequip", "Equip1Name", "frakid", fid),Rang);
							SendClientMessage(playerid,COLOR_RED,string);
							format(fid,sizeof(fid),"%d",SpielerInfo[playerid][sFraktion]);
							format(string,sizeof(string),"%s\n%s\n%s",mysql_GetString("frakequip", "Equip1Name", "frakid", fid),mysql_GetString("frakequip", "Equip2Name", "frakid", fid),mysql_GetString("frakequip", "Equip3Name", "frakid", fid));
							ShowPlayerDialog(playerid,DIALOG_PDEQUIP,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - LSPD Ausrüstung",string,"Ausrüsten","Abbrechen");
						}
				    }
                    case 1:
				    {
   						new frakid[3];
						format(frakid,sizeof(frakid),"%d",SpielerInfo[playerid][sFraktion]);
						new Rang = mysql_GetInt("frakequip", "Equip2Rang", "frakid", frakid);
        				if(SpielerInfo[playerid][sRank] >= Rang)
				        {
					        new Weapon1, Weapon2, Weapon3, Weapon4, Weapon5, fid[11];
							format(fid,sizeof(fid),"%d",SpielerInfo[playerid][sFraktion]);
				         	Weapon1 = mysql_GetInt("frakequip", "Equip2Waffe1", "frakid", fid);
				         	Weapon2 = mysql_GetInt("frakequip", "Equip2Waffe2", "frakid", fid);
				         	Weapon3 = mysql_GetInt("frakequip", "Equip2Waffe3", "frakid", fid);
				         	Weapon4 = mysql_GetInt("frakequip", "Equip2Waffe4", "frakid", fid);
				         	Weapon5 = mysql_GetInt("frakequip", "Equip2Waffe5", "frakid", fid);

					        SetPlayerHealth(playerid,120);
					        SetPlayerArmour(playerid,99.0);
					        ResetPlayerWeapons(playerid);
					        GivePlayerWeapon(playerid,WEAPON:Weapon1,700);
					        GivePlayerWeapon(playerid,WEAPON:Weapon2,700);
					        GivePlayerWeapon(playerid,WEAPON:Weapon3,700);
					        GivePlayerWeapon(playerid,WEAPON:Weapon4,700);
					        GivePlayerWeapon(playerid,WEAPON:Weapon5,700);
					        SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Du hast dich erfolgreich ausgerüstet.");
					        GovVars[govKasse] -= 10000;
					        SetPVarInt(playerid,"PDEquipt",1);
					        SetTimerEx("PDEquiptGone",180000,false,"i",playerid);
					        if(IsPlayerInRangeOfPoint(playerid,5.0,316.2444,1834.3264,2241.5850))
					        {
					            SetPlayerPos(playerid,316.2444,1834.3264,2241.5850);
					            SetPlayerFacingAngle(playerid,89.4236);
					            ApplyAnimation(playerid,"DEALER","DRUGS_BUY", 4.0, false, false, false, false, 0);
								ApplyAnimation(playerid,"DEALER","DRUGS_BUY", 4.0, false, false, false, false, 0);
								ApplyAnimation(LSPDWKammer,"DEALER","DRUGS_BUY", 4.0, false, false, false, false, 0);
								ApplyAnimation(LSPDWKammer,"DEALER","DRUGS_BUY", 4.0, false, false, false, false, 0);
					        }
						}
						else
						{
							new string[128], fid[11];
							format(string,sizeof(string),"[Info]: {FFFFFF}Du benötigst für Equip %s min. Rang %d",mysql_GetString("frakequip", "Equip2Name", "frakid", fid),Rang);
							SendClientMessage(playerid,COLOR_RED,string);
							format(fid,sizeof(fid),"%d",SpielerInfo[playerid][sFraktion]);
							format(string,sizeof(string),"%s\n%s\n%s",mysql_GetString("frakequip", "Equip1Name", "frakid", fid),mysql_GetString("frakequip", "Equip2Name", "frakid", fid),mysql_GetString("frakequip", "Equip3Name", "frakid", fid));
							ShowPlayerDialog(playerid,DIALOG_PDEQUIP,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - LSPD Ausrüstung",string,"Ausrüsten","Abbrechen");
						}
				    }
				    case 2:
				    {
   						new frakid[3];
						format(frakid,sizeof(frakid),"%d",SpielerInfo[playerid][sFraktion]);
						new Rang = mysql_GetInt("frakequip", "Equip3Rang", "frakid", frakid);
    					if(SpielerInfo[playerid][sRank] >= Rang)
				        {
					        new Weapon1, Weapon2, Weapon3, Weapon4, Weapon5, fid[11];
							format(fid,sizeof(fid),"%d",SpielerInfo[playerid][sFraktion]);
				         	Weapon1 = mysql_GetInt("frakequip", "Equip3Waffe1", "frakid", fid);
				         	Weapon2 = mysql_GetInt("frakequip", "Equip3Waffe2", "frakid", fid);
				         	Weapon3 = mysql_GetInt("frakequip", "Equip3Waffe3", "frakid", fid);
				         	Weapon4 = mysql_GetInt("frakequip", "Equip3Waffe4", "frakid", fid);
				         	Weapon5 = mysql_GetInt("frakequip", "Equip3Waffe5", "frakid", fid);

					        SetPlayerHealth(playerid,120);
					        SetPlayerArmour(playerid,99.0);
					        ResetPlayerWeapons(playerid);
					        GivePlayerWeapon(playerid,WEAPON:Weapon1,700);
					        GivePlayerWeapon(playerid,WEAPON:Weapon2,700);
					        GivePlayerWeapon(playerid,WEAPON:Weapon3,700);
					        GivePlayerWeapon(playerid,WEAPON:Weapon4,700);
					        GivePlayerWeapon(playerid,WEAPON:Weapon5,700);
					        SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Du hast dich erfolgreich ausgerüstet.");
					        GovVars[govKasse] -= 10000;
					        SetPVarInt(playerid,"PDEquipt",1);
					        SetTimerEx("PDEquiptGone",180000,false,"i",playerid);
					        if(IsPlayerInRangeOfPoint(playerid,5.0,316.2444,1834.3264,2241.5850))
					        {
					            SetPlayerPos(playerid,316.2444,1834.3264,2241.5850);
					            SetPlayerFacingAngle(playerid,89.4236);
					            ApplyAnimation(playerid,"DEALER","DRUGS_BUY", 4.0, false, false, false, false, 0);
								ApplyAnimation(playerid,"DEALER","DRUGS_BUY", 4.0, false, false, false, false, 0);
								ApplyAnimation(LSPDWKammer,"DEALER","DRUGS_BUY", 4.0, false, false, false, false, 0);
								ApplyAnimation(LSPDWKammer,"DEALER","DRUGS_BUY", 4.0, false, false, false, false, 0);
					        }
						}
						else
						{
							new string[128], fid[11];
							format(string,sizeof(string),"[Info]: {FFFFFF}Du benötigst für Equip %s min. Rang %d",mysql_GetString("frakequip", "Equip3Name", "frakid", fid),Rang);
							SendClientMessage(playerid,COLOR_RED,string);
							format(fid,sizeof(fid),"%d",SpielerInfo[playerid][sFraktion]);
							format(string,sizeof(string),"%s\n%s\n%s",mysql_GetString("frakequip", "Equip1Name", "frakid", fid),mysql_GetString("frakequip", "Equip2Name", "frakid", fid),mysql_GetString("frakequip", "Equip3Name", "frakid", fid));
							ShowPlayerDialog(playerid,DIALOG_PDEQUIP,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - LSPD Ausrüstung",string,"Ausrüsten","Abbrechen");
						}
				    }
				    case 3://Schutzweste
				    {
				        SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Du hast dir eine Schutzweste angezogen.");
				        GovVars[govKasse] -= 300;
				        SetPlayerHealth(playerid,120.0);
				        if(IsPlayerInRangeOfPoint(playerid,5.0,316.2444,1834.3264,2241.5850))
				        {
				            SetPlayerArmour(playerid, 99.0);
				            SetPlayerPos(playerid,316.2444,1834.3264,2241.5850);
				            SetPlayerFacingAngle(playerid,89.4236);
				            ApplyAnimation(playerid,"DEALER","DRUGS_BUY", 4.0, false, false, false, false, 0);
							ApplyAnimation(playerid,"DEALER","DRUGS_BUY", 4.0, false, false, false, false, 0);
							ApplyAnimation(LSPDWKammer,"DEALER","DRUGS_BUY", 4.0, false, false, false, false, 0);
							ApplyAnimation(LSPDWKammer,"DEALER","DRUGS_BUY", 4.0, false, false, false, false, 0);
				        }
				    }
				    case 4://Desert Eagle
				    {
				        SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Du hast eine Desert Eagle mit 80 Schuss erhalten.");
				        GovVars[govKasse] -= 5000;
				        if(IsPlayerInRangeOfPoint(playerid,5.0,316.2444,1834.3264,2241.5850))
				        {
				            GivePlayerWeapon(playerid,WEAPON:24,80);
				            SetPlayerPos(playerid,316.2444,1834.3264,2241.5850);
				            SetPlayerFacingAngle(playerid,89.4236);
				            ApplyAnimation(playerid,"DEALER","DRUGS_BUY", 4.0, false, false, false, false, 0);
							ApplyAnimation(playerid,"DEALER","DRUGS_BUY", 4.0, false, false, false, false, 0);
							ApplyAnimation(LSPDWKammer,"DEALER","DRUGS_BUY", 4.0, false, false, false, false, 0);
							ApplyAnimation(LSPDWKammer,"DEALER","DRUGS_BUY", 4.0, false, false, false, false, 0);
				        }
				    }
				    case 5://M4
				    {
				        SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Du hast eine M4 mit 800 Schuss erhalten.");
				        GovVars[govKasse] -= 15000;
				        if(IsPlayerInRangeOfPoint(playerid,5.0,316.2444,1834.3264,2241.5850))
				        {
				            GivePlayerWeapon(playerid,WEAPON:31,800);
				            SetPlayerPos(playerid,316.2444,1834.3264,2241.5850);
				            SetPlayerFacingAngle(playerid,89.4236);
				            ApplyAnimation(playerid,"DEALER","DRUGS_BUY", 4.0, false, false, false, false, 0);
							ApplyAnimation(playerid,"DEALER","DRUGS_BUY", 4.0, false, false, false, false, 0);
							ApplyAnimation(LSPDWKammer,"DEALER","DRUGS_BUY", 4.0, false, false, false, false, 0);
							ApplyAnimation(LSPDWKammer,"DEALER","DRUGS_BUY", 4.0, false, false, false, false, 0);
				        }
				    }
				    case 6://MP5
				    {
				        SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Du hast eine MP5 mit 600 Schuss erhalten.");
				        GovVars[govKasse] -= 8000;
				        if(IsPlayerInRangeOfPoint(playerid,5.0,316.2444,1834.3264,2241.5850))
				        {
				            GivePlayerWeapon(playerid,WEAPON:29,600);
				            SetPlayerPos(playerid,316.2444,1834.3264,2241.5850);
				            SetPlayerFacingAngle(playerid,89.4236);
				            ApplyAnimation(playerid,"DEALER","DRUGS_BUY", 4.0, false, false, false, false, 0);
							ApplyAnimation(playerid,"DEALER","DRUGS_BUY", 4.0, false, false, false, false, 0);
							ApplyAnimation(LSPDWKammer,"DEALER","DRUGS_BUY", 4.0, false, false, false, false, 0);
							ApplyAnimation(LSPDWKammer,"DEALER","DRUGS_BUY", 4.0, false, false, false, false, 0);
				        }
				    }
				}
		    }
		}
		case DIALOG_INVITE:
		{
		    if(response==0)//Ablehnen
			{
			    new string[128];
			    SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast die Einladung abgelehnt.");
			    format(string,sizeof(string),"Fraktionseinladung: Der %s hat deine Einladung abgelehnt.",SpielerInfo[playerid][sName]);
			    SendClientMessage(GetPVarInt(playerid,"InvitedPID"),COLOR_RED,string);
			    DeletePVar(playerid,"InvitedPID");
			}
			else if(response==1)//Annehmen
			{
			    new string[128];
			    SendClientMessage(playerid,COLOR_SUPER,"Du hast die Einladung angenommen.");
			    SendClientMessage(playerid,COLOR_INFO,"Hinweis: Benutze '/spawnchange' um dein Spawnpunkt zu ändern.");
			    format(string,sizeof(string),"Fraktionseinladung: Der %s hat deine Einladung angenommen.",SpielerInfo[playerid][sName]);
			    SendClientMessage(GetPVarInt(playerid,"InvitedPID"),COLOR_SUPER,string);
			    SpielerInfo[playerid][sLastFaction] = SpielerInfo[playerid][sFraktion];
			    SpielerInfo[playerid][sFraktion] = SpielerInfo[GetPVarInt(playerid,"InvitedPID")][sFraktion];
			    SpielerInfo[playerid][sRank] = 1;
			    FrakInfo[SpielerInfo[playerid][sFraktion]][fiFrakMembers]++;
			    SpawnPlayerEx(playerid);
			    DeletePVar(playerid,"InvitedPID");
			}
		}
		case DIALOG_GRUPPEN_INVITE:
		{
		    if(response==0)//Ablehnen
			{
			    new string[128];
			    SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast die Einladung abgelehnt.");
			    format(string,sizeof(string),"Gruppeneinladnung: Der Spieler %s hat deine Einladung abgelehnt.",SpielerInfo[playerid][sName]);
			    SendClientMessage(GetPVarInt(playerid,"InvitedPID"),COLOR_RED,string);
			    DeletePVar(playerid,"InvitedPID");
			}
			else if(response==1)//Annehmen
			{
			    new string[128];
			    SendClientMessage(playerid,COLOR_SUPER,"Du hast die Einladung angenommen.");
			    format(string,sizeof(string),"Gruppeneinladnung: Der Spieler %s hat deine Einladung angenommen.",SpielerInfo[playerid][sName]);
			    SendClientMessage(GetPVarInt(playerid,"InvitedPID"),COLOR_SUPER,string);
			    SpielerInfo[playerid][sGruppe] = SpielerInfo[GetPVarInt(playerid,"InvitedPID")][sGruppe];
			    SpielerInfo[playerid][sGRank] = 1;
			    SpielerInfo[playerid][sGHaus] = SpielerInfo[GetPVarInt(playerid,"InvitedPID")][sGHaus];
			    DeletePVar(playerid,"InvitedPID");
			}
		}
		case DIALOG_FREIKAUFEN_FAHRZEUG:
		{
		    if(response==0){}//Zurück
		    else if(response==1)
		    {
			    new query[364];
				new ModelID = FreikaufModelID[playerid][listitem];
				new Database = FreikaufDatabaseID[playerid][listitem];
				new fkstring[4];
				new iValue = ModelID;
				valstr(fkstring,iValue);
                new Freikaufpreis = mysql_GetInt("carinfos", "Freikaufpreis", "ModelID", fkstring);
                if(GetPlayerMoneyEx(playerid) < Freikaufpreis)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
                new Float:Position[4], Color[2], Schild[10], var[64], Float:Tank, Besitzer[24], Fraktion, Gruppe,
				loadKilometer, Preis, JobEXP, Tuning[14], Paintjob, Panels, Doors, Lights, Tires;
				mysql_format(sqlHandle, query,sizeof(query),"UPDATE `vehicles` SET `Abgeschleppt`='0' WHERE `ID`='%d'",Database);
            	mysql_tquery(sqlHandle, query);

				mysql_format(sqlHandle, query, sizeof(query),"SELECT * FROM `vehicles` WHERE `ID` = '%d'", Database);
				new Cache:result = mysql_query(sqlHandle, query);

				//Hauptvariablen
				cache_get_value_name(0, "PositionX",var); Position[0] = floatstr(var);
				cache_get_value_name(0, "PositionY",var); Position[1] = floatstr(var);
				cache_get_value_name(0, "PositionZ",var); Position[2] = floatstr(var);
				cache_get_value_name(0, "PositionA",var); Position[3] = floatstr(var);
				cache_get_value_name(0, "Farbe1",var); Color[0] = strval(var);
				cache_get_value_name(0, "Farbe2",var); Color[1] = strval(var);
				cache_get_value_name(0, "Paintjob",var); Paintjob = strval(var);

				//Nebenvariablen
				cache_get_value_name(0, "Kennzeichen",Schild);
				cache_get_value_name(0, "Kilometer",var); loadKilometer = strval(var);
				cache_get_value_name(0, "Tank",var); Tank = floatstr(var);
				cache_get_value_name(0, "Preis",var); Preis = strval(var);
				cache_get_value_name(0, "Besitzer",Besitzer);
				cache_get_value_name(0, "Fraktion",var); Fraktion = strval(var);
				cache_get_value_name(0, "Gruppe",var); Gruppe = strval(var);
				cache_get_value_name(0, "JobEXP",var); JobEXP = strval(var);

				//Tuningvariablen
				cache_get_value_name(0, "Spoiler",var); Tuning[0] = strval(var);
				cache_get_value_name(0, "Hood",var); Tuning[1] = strval(var);
				cache_get_value_name(0, "Roof",var); Tuning[2] = strval(var);
				cache_get_value_name(0, "Sideskirt",var); Tuning[3] = strval(var);
				cache_get_value_name(0, "Lamps",var); Tuning[4] = strval(var);
				cache_get_value_name(0, "Nitro",var); Tuning[5] = strval(var);
				cache_get_value_name(0, "Exhaust",var); Tuning[6] = strval(var);
				cache_get_value_name(0, "Wheels",var); Tuning[7] = strval(var);
				cache_get_value_name(0, "Stereo",var); Tuning[8] = strval(var);
				cache_get_value_name(0, "Hydraulics",var); Tuning[9] = strval(var);
				cache_get_value_name(0, "Front Bumper",var); Tuning[10] = strval(var);
				cache_get_value_name(0, "Rear Bumper",var); Tuning[11] = strval(var);
				cache_get_value_name(0, "Vent Right",var); Tuning[12] = strval(var);
				cache_get_value_name(0, "Vent Left",var); Tuning[13] = strval(var);

				//Damagevariablen
				cache_get_value_name(0, "Panels",var); Panels = strval(var);
				cache_get_value_name(0, "Doors",var); Doors = strval(var);
				cache_get_value_name(0, "Lights",var); Lights = strval(var);
				cache_get_value_name(0, "Tires",var); Tires = strval(var);
				

				cache_delete(result);

				new rand = random(6), vehicleid;
				if(rand == 0)//Parkplatz1
				{
					vehicleid = CreateVehicle(ModelID,1111.7283,-1666.5924,12.8672,180.2991,Color[0],Color[1],-1);
					SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Fahrzeug freigekauft. Parkplatz: C-04");
					SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Vergesse nicht, das Fahrzeug erneut zu parken.");
				}
				else if(rand == 1)//Parkplatz2
				{
					vehicleid = CreateVehicle(ModelID,1119.3536,-1666.8040,12.8672,1.2507,Color[0],Color[1],-1);
					SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Fahrzeug freigekauft. Parkplatz: C-01");
					SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Vergesse nicht, das Fahrzeug erneut zu parken.");
				}
				else if(rand == 2)//Parkplatz3
				{
					vehicleid = CreateVehicle(ModelID,1115.6720,-1680.6240,12.8671,0.1000,Color[0],Color[1],-1);
					SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Fahrzeug freigekauft. Parkplatz: B-03");
					SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Vergesse nicht, das Fahrzeug erneut zu parken.");
				}
				else if(rand == 3)//Parkplatz4
				{
					vehicleid = CreateVehicle(ModelID,1123.1017,-1680.6835,12.8670,0.0074,Color[0],Color[1],-1);
					SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Fahrzeug freigekauft. Parkplatz: B-01");
					SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Vergesse nicht, das Fahrzeug erneut zu parken.");
				}
				else if(rand == 4)//Parkplatz5
				{
					vehicleid = CreateVehicle(ModelID,1135.5205,-1672.0739,12.8670,269.4220,Color[0],Color[1],-1);
					SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Fahrzeug freigekauft. Parkplatz: A-06");
					SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Vergesse nicht, das Fahrzeug erneut zu parken.");
				}
				else if(rand == 5)//Parkplatz6
				{
					vehicleid = CreateVehicle(ModelID,1135.5024,-1682.2551,12.8670,89.4436,Color[0],Color[1],-1);
					SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Fahrzeug freigekauft. Parkplatz: A-03");
					SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Vergesse nicht, das Fahrzeug erneut zu parken.");
				}

				if(strlen(Besitzer) != 0)
				{
				    format(FahrzeugInfo[vehicleid][fBesitzer], MAX_PLAYER_NAME, SpielerInfo[playerid][sName]);
					format(FahrzeugInfo[vehicleid][fKennzeichen], 10, Schild);
					SetVehicleNumberPlate(vehicleid,Schild);
				    FahrzeugInfo[vehicleid][fBesitzerID] = playerid;
				}
				else if(Fraktion > 0)
				{
				    CreateFrakNummernSchild(vehicleid,Fraktion);
				}
				else if(Gruppe > 0)
				{
				    format(FahrzeugInfo[vehicleid][fKennzeichen], 5, Schild);
					SetVehicleNumberPlate(vehicleid,Schild);
				}

				SetVehicleNumberPlate(vehicleid,Schild);
				GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(vehicleid, false, false, false, true, false, false, false);

				//Fahrzeughauptvariablen
				FahrzeugInfo[vehicleid][fErstellt] = true;
				FahrzeugInfo[vehicleid][fModelID] = ModelID;
				FahrzeugInfo[vehicleid][fColor][0] = Color[0];
				FahrzeugInfo[vehicleid][fColor][1] = Color[1];
				FahrzeugInfo[vehicleid][fPaintjob] = Paintjob;
				FahrzeugInfo[vehicleid][fPosition][0] = Position[0];
				FahrzeugInfo[vehicleid][fPosition][1] = Position[1];
				FahrzeugInfo[vehicleid][fPosition][2] = Position[2];
				FahrzeugInfo[vehicleid][fPosition][3] = Position[3];

				//Fahrzeugteilvergabe
				UpdateVehicleDamageStatus(vehicleid, VEHICLE_PANEL_STATUS:Panels, VEHICLE_DOOR_STATUS:Doors, VEHICLE_LIGHT_STATUS:Lights, VEHICLE_TYRE_STATUS:Tires);

				//Fahrzeugparameter
				Motor[vehicleid] = false;
				Licht[vehicleid] = false;
				DOOR[vehicleid] = true;
				Motorhaube[vehicleid] = false;
				Kofferraum[vehicleid] = false;

				//Nebenvariablenvergabe
				FahrzeugInfo[vehicleid][fFraktion] = Fraktion;
				FahrzeugInfo[vehicleid][fGruppe] = Gruppe;
				FahrzeugInfo[vehicleid][fAutohaus] = 0;
				FahrzeugInfo[vehicleid][fNebenjob] = 0;
				FahrzeugInfo[vehicleid][fGarage] = 0;
				FahrzeugInfo[vehicleid][fGPark] = 0;
				FahrzeugInfo[vehicleid][fFahrschule] = 0;
				FahrzeugInfo[vehicleid][fSupmobil] = 0;
				FahrzeugInfo[vehicleid][fZiviroller] = 0;
				FahrzeugInfo[vehicleid][fImportCar] = 0;
				FahrzeugInfo[vehicleid][fKurrierCar] = 0;
				FahrzeugInfo[vehicleid][fDatabaseID] = Database;
				FahrzeugInfo[vehicleid][fAbgeschleppt] = 0;
				FahrzeugInfo[vehicleid][fParkkralle] = 0;
				FahrzeugInfo[vehicleid][fKilometer] = loadKilometer;
				FahrzeugInfo[vehicleid][fRang] = 0,
				FahrzeugInfo[vehicleid][fPreis] = Preis;
				FahrzeugInfo[vehicleid][fTank] = Tank;
				FahrzeugInfo[vehicleid][fJobEXP] = JobEXP;

				//Fahrzeugtuningvariablen
				FahrzeugInfo[vehicleid][fTuning][0] = Tuning[0]; FahrzeugInfo[vehicleid][fTuning][1] = Tuning[1]; FahrzeugInfo[vehicleid][fTuning][2] = Tuning[2];
				FahrzeugInfo[vehicleid][fTuning][3] = Tuning[3]; FahrzeugInfo[vehicleid][fTuning][4] = Tuning[4]; FahrzeugInfo[vehicleid][fTuning][5] = Tuning[5];
				FahrzeugInfo[vehicleid][fTuning][6] = Tuning[6]; FahrzeugInfo[vehicleid][fTuning][7] = Tuning[7]; FahrzeugInfo[vehicleid][fTuning][8] = Tuning[8];
				FahrzeugInfo[vehicleid][fTuning][9] = Tuning[9]; FahrzeugInfo[vehicleid][fTuning][10] = Tuning[10]; FahrzeugInfo[vehicleid][fTuning][11] = Tuning[11];
				FahrzeugInfo[vehicleid][fTuning][12] = Tuning[12]; FahrzeugInfo[vehicleid][fTuning][13] = Tuning[13];

				AddTuning(vehicleid);

				format(query,sizeof(query),"[Info]: {FFFFFF}Du hast '%s' für '%d$' freigekauft.",FahrzeugName[ModelID-400],Freikaufpreis);
				SendClientMessage(playerid,COLOR_SUPER,query);
				SendClientMessage(playerid,COLOR_INFO,"[Info]: Du hast für 1 Minute einen Schlüssel zur OAmt-Schranke erhalten.");
				SetPVarInt(playerid,"FreikaufSchluessel",1);
				KillTimer(FreikaufKey[playerid]);
				FreikaufKey[playerid] = SetTimerEx("FreikaufKeyWeg",60000,false,"i",playerid);
				SetPVarInt(playerid,"NoPAYBACK",1);
				GivePlayerMoneyEx(playerid,-Freikaufpreis);
			}
		}
        case DIALOG_GOTOLISTE:
        {
            if(response)
            {
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                new vID = GetPlayerVehicleID(playerid);
                if(listitem==0)//LS
                {
                    if(IsPlayerInAnyVehicle(playerid))
                    {
                        for(new i = 0 ; i < MAX_PLAYERS ; i++)
                        {
                            if(IsPlayerConnected(i) && gPlayerLogged[i])
                            {
                                if(GetPlayerVehicleID(i) == vID)
                                {
                                    new Seat = GetPlayerVehicleSeat(i);
                                    SetVehiclePos(vID, 1479.3213,-1738.0897,13.5469);
                                    PutPlayerInVehicle(i, vID, Seat);
                                    if(IsTrailerAttachedToVehicle(vID))
                                    {
                                        new trID = GetVehicleTrailer(vID);
                                        SetVehiclePos(trID, 1479.3213,-1738.0897,13.5469);
                                        AttachTrailerToVehicle(trID, vID);
                                    }
                                }
                            }
                        }
                    }
                    else
                    {
                        SetPlayerPos(playerid,  1480.4305,-1745.5150,13.6281);
                        SetCameraBehindPlayer(playerid);
                    }
                }
                if(listitem==1)
                {
                    if(IsPlayerInAnyVehicle(playerid))
                    {
                        for(new i = 0 ; i < MAX_PLAYERS ; i++)
                        {
                            if(IsPlayerConnected(i) && gPlayerLogged[i])
                            {
                                if(GetPlayerVehicleID(i) == vID)
                                {
                                    new Seat = GetPlayerVehicleSeat(i);
                                    SetVehiclePos(vID, 1218.5142,-919.5847,43.0938);
                                    PutPlayerInVehicle(i, vID, Seat);
                                    if(IsTrailerAttachedToVehicle(vID))
                                    {
                                        new trID = GetVehicleTrailer(vID);
                                        SetVehiclePos(trID, 1218.5142,-919.5847,43.0938);
                                        AttachTrailerToVehicle(trID, vID);
                                    }
                                }
                            }
                        }
                    }
                    else
                    {
                        SetPlayerPos(playerid, 1218.5142,-919.5847,43.0938);
                        SetCameraBehindPlayer(playerid);
                    }
                }
                if(listitem==2)
                {
                    if(IsPlayerInAnyVehicle(playerid))
                    {
                        for(new i = 0 ; i < MAX_PLAYERS ; i++)
                        {
                            if(IsPlayerConnected(i) && gPlayerLogged[i])
                            {
                                if(GetPlayerVehicleID(i) == vID)
                                {
                                    new Seat = GetPlayerVehicleSeat(i);
                                    SetVehiclePos(vID, 1365.7517,-1288.5110,13.5469);
                                    PutPlayerInVehicle(i, vID, Seat);
                                    if(IsTrailerAttachedToVehicle(vID))
                                    {
                                        new trID = GetVehicleTrailer(vID);
                                        SetVehiclePos(trID, 1365.7517,-1288.5110,13.5469);
                                        AttachTrailerToVehicle(trID, vID);
                                    }
                                }
                            }
                        }
                    }
                    else
                    {
                        SetPlayerPos(playerid, 1365.7517,-1288.5110,13.5469);
                        SetCameraBehindPlayer(playerid);
                    }
                }
                if(listitem==3)
                {
                    if(IsPlayerInAnyVehicle(playerid))
                    {
                        for(new i = 0 ; i < MAX_PLAYERS ; i++)
                        {
                            if(IsPlayerConnected(i) && gPlayerLogged[i])
                            {
                                if(GetPlayerVehicleID(i) == vID)
                                {
                                    new Seat = GetPlayerVehicleSeat(i);
                                    SetVehiclePos(vID, 666.8114,-1880.4503,5.4600);
                                    PutPlayerInVehicle(i, vID, Seat);
                                    if(IsTrailerAttachedToVehicle(vID))
                                    {
                                        new trID = GetVehicleTrailer(vID);
                                        SetVehiclePos(trID, 666.8114,-1880.4503+2,5.4600);
                                        AttachTrailerToVehicle(trID, vID);
                                    }
                                }
                            }
                        }
                    }
                    else
                    {
                        SetPlayerPos(playerid, 666.8114,-1880.4503,5.4600);
                        SetCameraBehindPlayer(playerid);
                    }
                }
                if(listitem==4)
                {
                    if(IsPlayerInAnyVehicle(playerid))//Fahrschule Gotoliste
                    {
                        for(new i = 0 ; i < MAX_PLAYERS ; i++)
                        {
                            if(IsPlayerConnected(i) && gPlayerLogged[i])
                            {
                                if(GetPlayerVehicleID(i) == vID)
                                {
                                    new Seat = GetPlayerVehicleSeat(i);
                                    SetVehiclePos(vID, 2114.9937,-1930.7943,13.3838);
                                    PutPlayerInVehicle(i, vID, Seat);
                                    if(IsTrailerAttachedToVehicle(vID))
                                    {
                                        new trID = GetVehicleTrailer(vID);
                                        SetVehiclePos(trID, 2114.9937,-1930.7943,13.3838);
                                        AttachTrailerToVehicle(trID, vID);
                                    }
                                }
                            }
                        }
                    }
                    else
                    {
                        SetPlayerPos(playerid, 2115.3333,-1913.7338,13.3838);
                        SetCameraBehindPlayer(playerid);
                    }
                }
                if(listitem==5)
                {
                    if(IsPlayerInAnyVehicle(playerid))
                    {
                        for(new i = 0 ; i < MAX_PLAYERS ; i++)
                        {
                            if(IsPlayerConnected(i) && gPlayerLogged[i])
                            {
                                if(GetPlayerVehicleID(i) == vID)
                                {
                                    new Seat = GetPlayerVehicleSeat(i);
                                    SetVehiclePos(vID, 1863.9156,-1605.2639,13.5391);
                                    PutPlayerInVehicle(i, vID, Seat);
                                    if(IsTrailerAttachedToVehicle(vID))
                                    {
                                        new trID = GetVehicleTrailer(vID);
                                        SetVehiclePos(trID, 1863.9156,-1605.2639,13.5391);
                                        AttachTrailerToVehicle(trID, vID);
                                    }
                                }
                            }
                        }
                    }
                    else
                    {
                        SetPlayerPos(playerid, 1863.9156,-1605.2639,13.5391);
                        SetCameraBehindPlayer(playerid);
                    }
                }
                if(listitem==6)
                {
                    if(IsPlayerInAnyVehicle(playerid))
                    {
                        for(new i = 0 ; i < MAX_PLAYERS ; i++)
                        {
                            if(IsPlayerConnected(i) && gPlayerLogged[i])
                            {
                                if(GetPlayerVehicleID(i) == vID)
                                {
                                    new Seat = GetPlayerVehicleSeat(i);
                                    SetVehiclePos(vID, -1549.3411,1168.1891,7.1875);
                                    PutPlayerInVehicle(i, vID, Seat);
                                    if(IsTrailerAttachedToVehicle(vID))
                                    {
                                        new trID = GetVehicleTrailer(vID);
                                        SetVehiclePos(trID, -1549.3411,1168.1891,7.1875);
                                        AttachTrailerToVehicle(trID, vID);
                                    }
                                }
                            }
                        }
                    }
                    else
                    {
                        SetPlayerPos(playerid, -1549.3411,1168.1891,7.1875);
                        SetCameraBehindPlayer(playerid);
                    }
                }
                if(listitem==7)
                {
                    if(IsPlayerInAnyVehicle(playerid))
                    {
                        for(new i = 0 ; i < MAX_PLAYERS ; i++)
                        {
                            if(IsPlayerConnected(i) && gPlayerLogged[i])
                            {
                                if(GetPlayerVehicleID(i) == vID)
                                {
                                    new Seat = GetPlayerVehicleSeat(i);
                                    SetVehiclePos(vID, 2006.4841,-1441.3403,13.5635);
                                    PutPlayerInVehicle(i, vID, Seat);
                                    if(IsTrailerAttachedToVehicle(vID))
                                    {
                                        new trID = GetVehicleTrailer(vID);
                                        SetVehiclePos(trID, 2006.4841,-1441.3403,13.5635);
                                        AttachTrailerToVehicle(trID, vID);
                                    }
                                }
                            }
                        }
                    }
                    else
                    {
                        SetPlayerPos(playerid, 2006.4841,-1441.3403,13.5635);
                        SetCameraBehindPlayer(playerid);
                    }
                }
                if(listitem==8)
                {
                    if(IsPlayerInAnyVehicle(playerid))
                    {
                        for(new i = 0 ; i < MAX_PLAYERS ; i++)
                        {
                            if(IsPlayerConnected(i) && gPlayerLogged[i])
                            {
                                if(GetPlayerVehicleID(i) == vID)
                                {
                                    new Seat = GetPlayerVehicleSeat(i);
                                    SetVehiclePos(vID, 1779.4395,-1722.1451,13.5390);
                                    PutPlayerInVehicle(i, vID, Seat);
                                    if(IsTrailerAttachedToVehicle(vID))
                                    {
                                        new trID = GetVehicleTrailer(vID);
                                        SetVehiclePos(trID, 1779.4395,-1722.1451,13.5390);
                                        AttachTrailerToVehicle(trID, vID);
                                    }
                                }
                            }
                        }
                    }
                    else
                    {
                        SetPlayerPos(playerid, 1779.4395,-1722.1451,13.5390);
                        SetCameraBehindPlayer(playerid);
                    }
                }
                if(listitem==9)
                {
                    if(IsPlayerInAnyVehicle(playerid))
                    {
                        for(new i = 0 ; i < MAX_PLAYERS ; i++)
                        {
                            if(IsPlayerConnected(i) && gPlayerLogged[i])
                            {
                                if(GetPlayerVehicleID(i) == vID)
                                {
                                    new Seat = GetPlayerVehicleSeat(i);
                                    SetVehiclePos(vID, 1516.6945,-1680.2233,13.7969);
                                    PutPlayerInVehicle(i, vID, Seat);
                                    if(IsTrailerAttachedToVehicle(vID))
                                    {
                                        new trID = GetVehicleTrailer(vID);
                                        SetVehiclePos(trID, 1516.6945,-1680.2233,13.7969);
                                        AttachTrailerToVehicle(trID, vID);
                                    }
                                }
                            }
                        }
                    }
                    else
                    {
                        SetPlayerPos(playerid, 1516.6945,-1680.2233,13.7969);
                        SetCameraBehindPlayer(playerid);
                    }
                }
                if(listitem==10)
                {
                    if(IsPlayerInAnyVehicle(playerid))
                    {
                        for(new i = 0 ; i < MAX_PLAYERS ; i++)
                        {
                            if(IsPlayerConnected(i) && gPlayerLogged[i])
                            {
                                if(GetPlayerVehicleID(i) == vID)
                                {
                                    new Seat = GetPlayerVehicleSeat(i);
                                    SetVehiclePos(vID, 1836.4185,-1395.0620,13.5631);
                                    PutPlayerInVehicle(i, vID, Seat);
                                    if(IsTrailerAttachedToVehicle(vID))
                                    {
                                        new trID = GetVehicleTrailer(vID);
                                        SetVehiclePos(trID, 1836.4185,-1395.0620,13.5631);
                                        AttachTrailerToVehicle(trID, vID);
                                    }
                                }
                            }
                        }
                    }
                    else
                    {
                        SetPlayerPos(playerid, 1836.4185,-1395.0620,13.5631);
                        SetCameraBehindPlayer(playerid);
                    }
                }
                if(listitem==11)
                {
                    if(IsPlayerInAnyVehicle(playerid))
                    {
                        for(new i = 0 ; i < MAX_PLAYERS ; i++)
                        {
                            if(IsPlayerConnected(i) && gPlayerLogged[i])
                            {
                                if(GetPlayerVehicleID(i) == vID)
                                {
                                    new Seat = GetPlayerVehicleSeat(i);
                                    SetVehiclePos(vID, 1841.7158,-2568.3242,13.5469);
                                    PutPlayerInVehicle(i, vID, Seat);
                                    if(IsTrailerAttachedToVehicle(vID))
                                    {
                                        new trID = GetVehicleTrailer(vID);
                                        SetVehiclePos(trID, 1841.7158,-2568.3242,13.5469);
                                        AttachTrailerToVehicle(trID, vID);
                                    }
                                }
                            }
                        }
                    }
                    else
                    {
                        SetPlayerPos(playerid, 1841.7158,-2568.3242,13.5469);
                        SetCameraBehindPlayer(playerid);
                    }
                }
                if(listitem==12)
                {
                    if(IsPlayerInAnyVehicle(playerid))
                    {
                        for(new i = 0 ; i < MAX_PLAYERS ; i++)
                        {
                            if(IsPlayerConnected(i) && gPlayerLogged[i])
                            {
                                if(GetPlayerVehicleID(i) == vID)
                                {
                                    new Seat = GetPlayerVehicleSeat(i);
                                    SetVehiclePos(vID, 836.5217,-1757.7517,13.5727);
                                    PutPlayerInVehicle(i, vID, Seat);
                                    if(IsTrailerAttachedToVehicle(vID))
                                    {
                                        new trID = GetVehicleTrailer(vID);
                                        SetVehiclePos(trID, 836.5217,-1757.7517,13.5727);
                                        AttachTrailerToVehicle(trID, vID);
                                    }
                                }
                            }
                        }
                    }
                    else
                    {
                        SetPlayerPos(playerid, 836.5217,-1757.7517,13.5727);
                        SetCameraBehindPlayer(playerid);
                    }
                }
                if(listitem==13)
                {
                    if(IsPlayerInAnyVehicle(playerid))
                    {
                        for(new i = 0 ; i < MAX_PLAYERS ; i++)
                        {
                            if(IsPlayerConnected(i) && gPlayerLogged[i])
                            {
                                if(GetPlayerVehicleID(i) == vID)
                                {
                                    new Seat = GetPlayerVehicleSeat(i);
                                    SetVehiclePos(vID, 305.2885,1145.0963,8.5859);
                                    PutPlayerInVehicle(i, vID, Seat);
                                    if(IsTrailerAttachedToVehicle(vID))
                                    {
                                        new trID = GetVehicleTrailer(vID);
                                        SetVehiclePos(trID, 305.2885,1145.0963,8.5859);
                                        AttachTrailerToVehicle(trID, vID);
                                    }
                                }
                            }
                        }
                    }
                    else
                    {
                        SetPlayerPos(playerid, 305.2885,1145.0963,8.5859);
                        SetCameraBehindPlayer(playerid);
                    }
                }
                if(listitem==14)
                {
                    if(IsPlayerInAnyVehicle(playerid))
                    {
                        for(new i = 0 ; i < MAX_PLAYERS ; i++)
                        {
                            if(IsPlayerConnected(i) && gPlayerLogged[i])
                            {
                                if(GetPlayerVehicleID(i) == vID)
                                {
                                    new Seat = GetPlayerVehicleSeat(i);
                                    SetVehiclePos(vID, 1310.3245,-1383.1377,13.7432);
                                    PutPlayerInVehicle(i, vID, Seat);
                                    if(IsTrailerAttachedToVehicle(vID))
                                    {
                                        new trID = GetVehicleTrailer(vID);
                                        SetVehiclePos(trID, 1310.3245,-1383.1377,13.7432);
                                        AttachTrailerToVehicle(trID, vID);
                                    }
                                }
                            }
                        }
                    }
                    else
                    {
                        SetPlayerPos(playerid, 1310.3245,-1383.1377,13.7432);
                        SetCameraBehindPlayer(playerid);
                    }
                }
            }
        }
        case DIALOG_COPSACHEN:
		{
		    if(response)
		    {
		        if(listitem==0) // Copman
		        {
					PC_EmulateCommand(playerid, "/copman");
		        }
				if(listitem==1) // Rang Anzeigen
				{
					PC_EmulateCommand(playerid, "/rank");
				}
				if(listitem==2) // Polizeimütze
				{
					PC_EmulateCommand(playerid, "/copmuetze");
				}
				if(listitem==3) // CopCap
				{
					PC_EmulateCommand(playerid, "/copcap");
				}
				if(listitem==4) //Copbrille
				{
					PC_EmulateCommand(playerid, "/copbrille");
				}
				if(listitem==5) // Copcapf
				{
					PC_EmulateCommand(playerid, "/copcapf");
				}
				if(listitem==6) // Copfrau
				{
					PC_EmulateCommand(playerid, "/copfrau");
				}
				if(listitem ==7)
				{
					PC_EmulateCommand(playerid, "/rankfrau");
				}
				if(listitem==8) // pschild
				{
					PC_EmulateCommand(playerid, "/pschild");
				}
				if(listitem == 9)// Cophut
				{
					PC_EmulateCommand(playerid, "/cophut");
				}
				if(listitem == 10)
				{
                    if( IsPlayerAttachedObjectSlotUsed(playerid,1))
					{
			          RemovePlayerAttachedObject(playerid,1);
			          RemovePlayerAttachedObject(playerid,2);
			          RemovePlayerAttachedObject(playerid,3);
			          RemovePlayerAttachedObject(playerid,4);
			          RemovePlayerAttachedObject(playerid,5);
			          RemovePlayerAttachedObject(playerid,6);
			          RemovePlayerAttachedObject(playerid,7);
			          RemovePlayerAttachedObject(playerid,8);
			          RemovePlayerAttachedObject(playerid,9);
			          SendClientMessage(playerid,COLOR_ORANGE,"Du hast deine Ausrüstung Entfernt!");
                    }
				}
		    }
		}
		case DIALOG_AHELP:
        {
            if(response){
                if(SpielerInfo[playerid][sFV] == 1){//Frakverwalter
                    if(listitem == 0){
                        new maxcmdcount = 0, String[2048];
                        format(String, sizeof(String), "%s\t\t\t{DEA81A}- | RSL ~ Übersicht der Fraktionsverwalter-Befehle | -{FFFFFF}\n\n", String);
                        for(new i = 0; i < sizeof(FraktionsverwalterHelp); i++){
                            if(maxcmdcount == 8){
                                format(String, sizeof(String), "%s\n", String);
                                maxcmdcount = 0;
                            }
                            if(maxcmdcount == 0){
                                format(String, sizeof(String), "%s/%s", String, FraktionsverwalterHelp[i]);
                            }else{
                                format(String, sizeof(String), "%s, /%s", String, FraktionsverwalterHelp[i]);
                            }
                            maxcmdcount++;
                        }
                        format(String, sizeof(String), "%s\n\nFalls du Fragen oder Probleme hast, kannst du mit '{EE600F}/Sup{FFFFFF}' ein Support-Ticket eröffnen.\nEin Supporter wird dir bestimmt weiterhelfen können!", String);
                        ShowPlayerDialog(playerid, DIALOG_NO_RESPONSE, DIALOG_STYLE_MSGBOX, "- | RSL ~ Übersicht der Fraktionsverwalter-Befehle | -", String, "OK", "");
                    }else if(listitem == 1){//Supporter
                        new maxcmdcount = 0, String[2048];
                        format(String, sizeof(String), "%s\t\t\t{DEA81A}- | RSL ~ Übersicht der Supporter-Befehle | -{FFFFFF}\n\n", String);
                        for(new i = 0; i < sizeof(SupporterHelp); i++){
                            if(maxcmdcount == 8){
                                format(String, sizeof(String), "%s\n", String);
                                maxcmdcount = 0;
                            }
                            if(maxcmdcount == 0){
                                format(String, sizeof(String), "%s/%s", String, SupporterHelp[i]);
                            }else{
                                format(String, sizeof(String), "%s, /%s", String, SupporterHelp[i]);
                            }
                            maxcmdcount++;
                        }
                        format(String, sizeof(String), "%s\n\nFalls du Fragen oder Probleme hast, kannst du mit '{EE600F}/Sup{FFFFFF}' ein Support-Ticket eröffnen.\nEin Supporter wird dir bestimmt weiterhelfen können!", String);
                        ShowPlayerDialog(playerid, DIALOG_NO_RESPONSE, DIALOG_STYLE_MSGBOX, "- | RSL ~ Übersicht der Supporter-Befehle | -", String, "OK", "");
                    }else if(listitem == 2){//Mod
                        new maxcmdcount = 0, String[2048];
                        format(String, sizeof(String), "%s\t\t\t\t{DEA81A}- | RSL ~ Übersicht der Moderator-Befehle | -{FFFFFF}\n\n", String);
                        for(new i = 0; i < sizeof(ModeratorHelp); i++){
                            if(maxcmdcount == 8){
                                format(String, sizeof(String), "%s\n", String);
                                maxcmdcount = 0;
                            }
                            if(maxcmdcount == 0){
                                format(String, sizeof(String), "%s/%s", String, ModeratorHelp[i]);
                            }else{
                                format(String, sizeof(String), "%s, /%s", String, ModeratorHelp[i]);
                            }
                            maxcmdcount++;
                        }
                        format(String, sizeof(String), "%s\n\nFalls du Fragen oder Probleme hast, kannst du mit '{EE600F}/Sup{FFFFFF}' ein Support-Ticket eröffnen.\nEin Supporter wird dir bestimmt weiterhelfen können!", String);
                        ShowPlayerDialog(playerid, DIALOG_NO_RESPONSE, DIALOG_STYLE_MSGBOX, "- | RSL ~ Übersicht der Moderator-Befehle | -", String, "OK", "");
                    }else if(listitem == 3){//Admin
                        new maxcmdcount = 0, String[2048];
                        format(String, sizeof(String), "%s\t\t\t\t{DEA81A}- | RSL ~ Übersicht der Administrator-Befehle | -{FFFFFF}\n\n", String);
                        for(new i = 0; i < sizeof(AdministratorHelp); i++){
                            if(maxcmdcount == 8){
                                format(String, sizeof(String), "%s\n", String);
                                maxcmdcount = 0;
                            }
                            if(maxcmdcount == 0){
                                format(String, sizeof(String), "%s/%s", String, AdministratorHelp[i]);
                            }else{
                                format(String, sizeof(String), "%s, /%s", String, AdministratorHelp[i]);
                            }
                            maxcmdcount++;
                        }
                        format(String, sizeof(String), "%s\n\nFalls du Fragen oder Probleme hast, kannst du mit '{EE600F}/Sup{FFFFFF}' ein Support-Ticket eröffnen.\nEin Supporter wird dir bestimmt weiterhelfen können!", String);
                        ShowPlayerDialog(playerid, DIALOG_NO_RESPONSE, DIALOG_STYLE_MSGBOX, "- | RSL ~ Übersicht der Administrator-Befehle | -", String, "OK", "");
                    }else if(listitem == 4){//Server Manager
                        new maxcmdcount = 0, String[2048];
                        format(String, sizeof(String), "%s\t\t\t{DEA81A}- | RSL ~ Übersicht der Server Manager-Befehle | -{FFFFFF}\n\n", String);
                        for(new i = 0; i < sizeof(ManagerHelp); i++){
                            if(maxcmdcount == 8){
                                format(String, sizeof(String), "%s\n", String);
                                maxcmdcount = 0;
                            }
                            if(maxcmdcount == 0){
                                format(String, sizeof(String), "%s/%s", String, ManagerHelp[i]);
                            }else{
                                format(String, sizeof(String), "%s, /%s", String, ManagerHelp[i]);
                            }
                            maxcmdcount++;
                        }
                        format(String, sizeof(String), "%s\n\nFalls du Fragen oder Probleme hast, kannst du mit '{EE600F}/Sup{FFFFFF}' ein Support-Ticket eröffnen.\nEin Supporter wird dir bestimmt weiterhelfen können!", String);
                        ShowPlayerDialog(playerid, DIALOG_NO_RESPONSE, DIALOG_STYLE_MSGBOX, "- | RSL ~ Übersicht der Server Manager-Befehle | -", String, "OK", "");
                    }else if(listitem == 5){//Projektleiter
                        new maxcmdcount = 0, String[2048];
                        format(String, sizeof(String), "%s\t\t\t{DEA81A}- | RSL ~ Übersicht der Projektleiter-Befehle | -{FFFFFF}\n\n", String);
                        for(new i = 0; i < sizeof(ProjektleiterHelp); i++){
                            if(maxcmdcount == 8){
                                format(String, sizeof(String), "%s\n", String);
                                maxcmdcount = 0;
                            }
                            if(maxcmdcount == 0){
                                format(String, sizeof(String), "%s/%s", String, ProjektleiterHelp[i]);
                            }else{
                                format(String, sizeof(String), "%s, /%s", String, ProjektleiterHelp[i]);
                            }
                            maxcmdcount++;
                        }
                        format(String, sizeof(String), "%s\n\nFalls du Fragen oder Probleme hast, kannst du mit '{EE600F}/Sup{FFFFFF}' ein Support-Ticket eröffnen.\nEin Supporter wird dir bestimmt weiterhelfen können!", String);
                        ShowPlayerDialog(playerid, DIALOG_NO_RESPONSE, DIALOG_STYLE_MSGBOX, "- | RSL ~ Übersicht der Projektleiter-Befehle | -", String, "OK", "");
                    }
                    return 1;
                }
                if(listitem == 0){//Supporter
                    new maxcmdcount = 0, String[2048];
                    format(String, sizeof(String), "%s\t\t\t{DEA81A}- | RSL ~ Übersicht der Supporter-Befehle | -{FFFFFF}\n\n", String);
                    for(new i = 0; i < sizeof(SupporterHelp); i++){
                        if(maxcmdcount == 8){
                            format(String, sizeof(String), "%s\n", String);
                            maxcmdcount = 0;
                        }
                        if(maxcmdcount == 0){
                            format(String, sizeof(String), "%s/%s", String, SupporterHelp[i]);
                        }else{
                            format(String, sizeof(String), "%s, /%s", String, SupporterHelp[i]);
                        }
                        maxcmdcount++;
                    }
                    format(String, sizeof(String), "%s\n\nFalls du Fragen oder Probleme hast, kannst du mit '{EE600F}/Sup{FFFFFF}' ein Support-Ticket eröffnen.\nEin Supporter wird dir bestimmt weiterhelfen können!", String);
                    ShowPlayerDialog(playerid, DIALOG_NO_RESPONSE, DIALOG_STYLE_MSGBOX, "- | RSL ~ Übersicht der Supporter-Befehle | -", String, "OK", "");
                }else if(listitem == 1){//Mod
                    new maxcmdcount = 0, String[2048];
                    format(String, sizeof(String), "%s\t\t\t\t{DEA81A}- | RSL ~ Übersicht der Moderator-Befehle | -{FFFFFF}\n\n", String);
                    for(new i = 0; i < sizeof(ModeratorHelp); i++){
                        if(maxcmdcount == 8){
                            format(String, sizeof(String), "%s\n", String);
                            maxcmdcount = 0;
                        }
                        if(maxcmdcount == 0){
                            format(String, sizeof(String), "%s/%s", String, ModeratorHelp[i]);
                        }else{
                            format(String, sizeof(String), "%s, /%s", String, ModeratorHelp[i]);
                        }
                        maxcmdcount++;
                    }
                    format(String, sizeof(String), "%s\n\nFalls du Fragen oder Probleme hast, kannst du mit '{EE600F}/Sup{FFFFFF}' ein Support-Ticket eröffnen.\nEin Supporter wird dir bestimmt weiterhelfen können!", String);
                    ShowPlayerDialog(playerid, DIALOG_NO_RESPONSE, DIALOG_STYLE_MSGBOX, "- | RSL ~ Übersicht der Moderator-Befehle | -", String, "OK", "");
                }else if(listitem == 2){//Admin
                    new maxcmdcount = 0, String[2048];
                    format(String, sizeof(String), "%s\t\t\t\t{DEA81A}- | RSL ~ Übersicht der Administrator-Befehle | -{FFFFFF}\n\n", String);
                    for(new i = 0; i < sizeof(AdministratorHelp); i++){
                        if(maxcmdcount == 8){
                            format(String, sizeof(String), "%s\n", String);
                            maxcmdcount = 0;
                        }
                        if(maxcmdcount == 0){
                            format(String, sizeof(String), "%s/%s", String, AdministratorHelp[i]);
                        }else{
                            format(String, sizeof(String), "%s, /%s", String, AdministratorHelp[i]);
                        }
                        maxcmdcount++;
                    }
                    format(String, sizeof(String), "%s\n\nFalls du Fragen oder Probleme hast, kannst du mit '{EE600F}/Sup{FFFFFF}' ein Support-Ticket eröffnen.\nEin Supporter wird dir bestimmt weiterhelfen können!", String);
                    ShowPlayerDialog(playerid, DIALOG_NO_RESPONSE, DIALOG_STYLE_MSGBOX, "- | RSL ~ Übersicht der Administrator-Befehle | -", String, "OK", "");
                }else if(listitem == 3){//Server Manager
                    new maxcmdcount = 0, String[2048];
                    format(String, sizeof(String), "%s\t\t\t{DEA81A}- | RSL ~ Übersicht der Server Manager-Befehle | -{FFFFFF}\n\n", String);
                    for(new i = 0; i < sizeof(ManagerHelp); i++){
                        if(maxcmdcount == 8){
                            format(String, sizeof(String), "%s\n", String);
                            maxcmdcount = 0;
                        }
                        if(maxcmdcount == 0){
                            format(String, sizeof(String), "%s/%s", String, ManagerHelp[i]);
                        }else{
                            format(String, sizeof(String), "%s, /%s", String, ManagerHelp[i]);
                        }
                        maxcmdcount++;
                    }
                    format(String, sizeof(String), "%s\n\nFalls du Fragen oder Probleme hast, kannst du mit '{EE600F}/Sup{FFFFFF}' ein Support-Ticket eröffnen.\nEin Supporter wird dir bestimmt weiterhelfen können!", String);
                    ShowPlayerDialog(playerid, DIALOG_NO_RESPONSE, DIALOG_STYLE_MSGBOX, "- | RSL ~ Übersicht der Server Manager-Befehle | -", String, "OK", "");
                }else if(listitem == 4){//Projektleiter
                    new maxcmdcount = 0, String[2048];
                    format(String, sizeof(String), "%s\t\t\t{DEA81A}- | RSL ~ Übersicht der Projektleiter-Befehle | -{FFFFFF}\n\n", String);
                    for(new i = 0; i < sizeof(ProjektleiterHelp); i++){
                        if(maxcmdcount == 8){
                            format(String, sizeof(String), "%s\n", String);
                            maxcmdcount = 0;
                        }
                        if(maxcmdcount == 0){
                            format(String, sizeof(String), "%s/%s", String, ProjektleiterHelp[i]);
                        }else{
                            format(String, sizeof(String), "%s, /%s", String, ProjektleiterHelp[i]);
                        }
                        maxcmdcount++;
                    }
                    format(String, sizeof(String), "%s\n\nFalls du Fragen oder Probleme hast, kannst du mit '{EE600F}/Sup{FFFFFF}' ein Support-Ticket eröffnen.\nEin Supporter wird dir bestimmt weiterhelfen können!", String);
                    ShowPlayerDialog(playerid, DIALOG_NO_RESPONSE, DIALOG_STYLE_MSGBOX, "- | RSL ~ Übersicht der Projektleiter-Befehle | -", String, "OK", "");
                }
            }
        }
		case DIALOG_AUTOHAUS:
		{
		    if(response==0){}//Zurück
		    else if(response==1)
		    {
		        if(SpielerInfo[playerid][sPerso] == 1)
		        {
		        	SetPVarInt(playerid,"FahrzeugKaufModelID",autohauscarmodelid[playerid][listitem]);
		        	SetPVarInt(playerid,"FahrzeugKaufCarID",autohauscarid[playerid][listitem]);
		        	ShowPlayerDialog(playerid,DIALOG_AUTOHAUS_AUSWAHL,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Autohaus","Informationen\nProbefahrt\nKaufen","Weiter","Abbrechen");
				}
				else KeinPerso
			}
		}
		case DIALOG_AUTOHAUS_AUSWAHL:
		{
		    if(response==0){}//Zurück
		    else if(response==1)
		    {
		        new string[800];
				switch(listitem)
				{
				    case 0://Informationen
				    {
				        if(GetPVarInt(playerid,"Autohaus") == 4)
				        {
				            new modelid = GetPVarInt(playerid,"FahrzeugKaufModelID");
					        new carid = GetPVarInt(playerid,"FahrzeugKaufCarID");
							format(string,sizeof(string),"{FFFFFF}Flugzeugname:			{009BFF}%s{FFFFFF}\nTankart:			{009BFF}%s{FFFFFF}\nVerbrauch:			{009BFF}%.2fL pro Kilometer{FFFFFF}\nTankkapazität:			{009BFF}%dL",FahrzeugName[modelid-400],TankArtName(carid),VehicleData[GetVehicleModel(carid)-400][vehVerbrauch],VehicleData[GetVehicleModel(carid)-400][vehLiter]);
							ShowPlayerDialog(playerid,DIALOG_AUTO_INFOS,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Flugzeug Autohaus",string,"Zurück","");
				        }
				        else
				        {
					        new modelid = GetPVarInt(playerid,"FahrzeugKaufModelID");
					        new carid = GetPVarInt(playerid,"FahrzeugKaufCarID");
							format(string,sizeof(string),"{FFFFFF}Fahrzeugname:			{009BFF}%s{FFFFFF}\nTankart:			{009BFF}%s{FFFFFF}\nVerbrauch:			{009BFF}%.2fL pro Kilometer{FFFFFF}\nTankkapazität:			{009BFF}%dL",FahrzeugName[modelid-400],TankArtName(carid),VehicleData[GetVehicleModel(carid)-400][vehVerbrauch],VehicleData[GetVehicleModel(carid)-400][vehLiter]);
							ShowPlayerDialog(playerid,DIALOG_AUTO_INFOS,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Autohaus",string,"Zurück","");
						}
					}
	    			case 1://Probefahrt
				    {
				        format(string,sizeof(string),"Probefahrtbedingungen:\n\nDu hast insgesamt 6 Minuten Zeit das Fahrzeug probe zu fahren. Nach dieser Zeit bist du dazu\nverpflichtet das Fahrzeug ins Autohaus zurückzubringen. Natürlich kannst du es auch vorher abliefern.\n");
				        strcat(string,"Solltest du das Fahrzeug nicht zurückbringen informiert das Autohaus die Polizei und erstattet eine Strafanzeige.\nFalls du das Fahrzeug lediglich nicht rechtzeitig zurückbringen konntest, erhälst du eine Strafgebühr erhoben.\nZur Sicherheit wird dein Perso vom Autohaus vorerst einbehalten.");
		        		ShowPlayerDialog(playerid,DIALOG_AUTO_PROBEFAHRT,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Autohaus",string,"Fahren","Zurück");
					}
	    			case 2://Kaufen
				    {
				        if(SpielerInfo[playerid][sFraktion] != 0 && SpielerInfo[playerid][sRank] >= 6)
				        {
						    if(SpielerInfo[playerid][sGRank] >= 6)
							{
								format(string,sizeof(string),"Kaufen für Privat\nKaufen für %s\nKaufen für %s",FrakName(SpielerInfo[playerid][sFraktion]),GruppenInfo[SpielerInfo[playerid][sGruppe]][gName]);
								ShowPlayerDialog(playerid,DIALOG_AUTO_KAUFEN,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Autohaus",string,"Weiter","Zurück");
							}
							else
							{
								format(string,sizeof(string),"Kaufen für Privat\nKaufen für %s",FrakName(SpielerInfo[playerid][sFraktion]));
								ShowPlayerDialog(playerid,DIALOG_AUTO_KAUFEN,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Autohaus",string,"Weiter","Zurück");
							}
						}
						else
						{
							if(SpielerInfo[playerid][sGRank] >= 6)
	   						{
	   						    SetPVarInt(playerid,"AutoGruppe",1);
								format(string,sizeof(string),"Kaufen für Privat\nKaufen für %s",GruppenInfo[SpielerInfo[playerid][sGruppe]][gName]);
								ShowPlayerDialog(playerid,DIALOG_AUTO_KAUFEN,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Autohaus",string,"Weiter","Zurück");
							}
							else
							{
								ShowPlayerDialog(playerid,DIALOG_AUTO_KAUFEN,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Autohaus","Kaufen für Privat","Weiter","Zurück");
							}
						}
					}
				}
		    }
		}
		case DIALOG_AUTO_PROBEFAHRT:
		{
		    if(response==0)//Zurück
			{
                ShowPlayerDialog(playerid,DIALOG_AUTOHAUS_AUSWAHL,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Autohaus","Informationen\nProbefahrt\nKaufen","Weiter","Abbrechen");
			}
			else if(response==1)//Weiter
			{
			    if(GetPVarInt(playerid,"Autohaus") == 4)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Das Flugzeug Autohaus bietet keine Probeflüge an.");
			    new Float: probeX, Float: probeY, Float: probeZ, Float:probeA;
				if(GetPVarInt(playerid,"Autohaus") == 1)//Autohaus - Los Santos
				{
				    new rand = random(3);
					if(rand == 0)
					{
					    probeX = 1946.9268;
					    probeY = -1561.8151;
					    probeZ = 13.4234;
					    probeA = 134.5875;
					}
					else if(rand == 1)
					{
					    probeX = 1933.5591;
					    probeY = -1562.5824;
					    probeZ = 13.3974;
					    probeA = 179.2655;
					}
					else if(rand == 2)
					{
					    probeX = 1945.4417;
					    probeY = -1587.7495;
					    probeZ = 13.3684;
					    probeA = 179.1256;
					}
				}
				else if(GetPVarInt(playerid,"Autohaus") == 2)//Motorradhändler - Los Santos
				{
				    new rand = random(3);
					if(rand == 0)
					{
					    probeX = 1842.3030;
					    probeY = -1392.9290;
					    probeZ = 12.9664;
					    probeA = 180.6584;
					}
					else if(rand == 1)
					{
					    probeX = 1842.3323;
					    probeY = -1396.3489;
					    probeZ = 12.9732;
					    probeA = 180.2030;
					}
					else if(rand == 2)
					{
					    probeX = 1842.3483;
					    probeY = -1400.8530;
					    probeZ = 12.9681;
					    probeA = 180.2030;
					}
				}
				else if(GetPVarInt(playerid,"Autohaus") == 3)//Autohaus - San Fierro
				{
				    probeX = -1577.7860;
				    probeY = 1168.8536;
				    probeZ = 6.8201;
				    probeA = 3.4685;
				}
				else if(GetPVarInt(playerid,"Autohaus") == 4)//Flugzeug Autohaus - Los Santos
				{
					probeX = 2027.6538;
					probeY = -2191.9937;
					probeZ = 13.2757;
					probeA = 89.7705;
				}
				else if(GetPVarInt(playerid, "Autohaus") == 5) //Bootshändler - Los Santos
				{
					probeX = 2955.5747;
					probeY = -2035.9652;
					probeZ = -1.4592;
					probeA = 358.3845;
				}
				SetPVarInt(playerid,"ProbeFahrt",1);
				ProbefahrtCar[playerid] = CreateVehicle(GetPVarInt(playerid,"FahrzeugKaufModelID"), probeX, probeY, probeZ, probeA, 1, 1, -1);
				SetVehicleNumberPlate(ProbefahrtCar[playerid], "PROBE");
				FahrzeugInfo[ProbefahrtCar[playerid]][fTank] = VehicleData[GetVehicleModel(ProbefahrtCar[playerid])-400][vehLiter];
				ProbefahrtTime[playerid] = 5;
				KillTimer(ProbefahrtTimer[playerid]);
				ProbefahrtTimer[playerid] = SetTimerEx("ProbeFahrtPlayer",60000,true,"i",playerid);
				PutPlayerInVehicle(playerid,ProbefahrtCar[playerid],0);
				if(GetPVarInt(playerid,"Autohaus") == 1){SetPlayerCheckpointEx(playerid,1945.9243,-1569.7150,13.5977,4.0);}
				else if(GetPVarInt(playerid,"Autohaus") == 2){SetPlayerCheckpointEx(playerid,1845.0406,-1397.4750,13.3906,4.0);}
				else if(GetPVarInt(playerid,"Autohaus") == 3){SetPlayerCheckpointEx(playerid,-1581.5812,1166.5559,6.7440,4.0);}
				else if(GetPVarInt(playerid,"Autohaus") == 4){SetPlayerCheckpointEx(playerid,1882.7588,-2440.4363,13.5547,4.0);}
				else if(GetPVarInt(playerid,"Autohaus") == 5){SetPlayerCheckpointEx(playerid,2951.4438,-1995.4794,-0.2203,4.0);}
				SendClientMessage(playerid,COLOR_YELLOW,"Das Autohaus wünscht eine angenehme Fahrt. Sobald Sie die Probefahrt beenden wollen, fahren Sie in den Checkpoint.");
				SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}INFO: Sollte der Checkpoint verschwinden benutze '/pfcp' um ihn wieder anzeigen zu lassen. (Dein Perso ist im Autohaus)");
                SpielerInfo[playerid][sPerso] = 0;
 				PlayerTextDrawSetString(playerid,CountdownDraw[playerid][2],"PROBEFAHRT");
				PlayerTextDrawSetString(playerid,CountdownDraw[playerid][3],"~g~5 ~w~Minuten");
				PlayerTextDrawShow(playerid,CountdownDraw[playerid][0]);
				PlayerTextDrawShow(playerid,CountdownDraw[playerid][1]);
				PlayerTextDrawShow(playerid,CountdownDraw[playerid][2]);
				PlayerTextDrawShow(playerid,CountdownDraw[playerid][3]);
			}
		}
		case DIALOG_AUTO_INFOS:
		{
		    if(response==0){}//Zurück
		    else if(response==1)
		    {
				ShowPlayerDialog(playerid,DIALOG_AUTOHAUS_AUSWAHL,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Autohaus","Informationen\nProbefahrt\nKaufen","Weiter","Abbrechen");
		    }
		}
		case DIALOG_AUTO_KAUFEN:
		{
		    if(response==0){ShowPlayerDialog(playerid,DIALOG_AUTOHAUS_AUSWAHL,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Autohaus","Informationen\nProbefahrt\nKaufen","Weiter","Abbrechen");}//Zurück
		    else if(response==1)
		    {
		        new string[264], carid = GetPVarInt(playerid,"FahrzeugKaufCarID");
  				switch(listitem)
				{
				    case 0://Kaufen für Privat
				    {
						for(new vehs = 0; vehs < MAX_VEHICLES; vehs++)
						{
						    if(FahrzeugInfo[vehs][fBesitzerID] == playerid && GetPlayerScore(playerid) < 3)
						    {
						        return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du kannst erst ab Level 3 ein zweites Fahrzeug kaufen.");
						    }
						}
				        SetPVarInt(playerid,"FahrzeugKaufPrivat",1);
  						format(string,sizeof(string),"{FFFFFF}Bist du dir sicher, dass du den {007DFF}%s{FFFFFF} für {007DFF}%d${FFFFFF}\nfür den Privatgebrauch kaufen möchtest ?",FahrzeugName[FahrzeugInfo[carid][fModelID]-400],FahrzeugInfo[carid][fPreis]);
						ShowPlayerDialog(playerid,DIALOG_AUTO_KAUFEN_2,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Autohaus",string,"Ja","Nein");
					}
					case 1://kaufen für Fraktion
					{
					    if(GetPVarInt(playerid,"AutoGruppe") == 0)
		 				{
		 				    SetPVarInt(playerid,"FahrzeugKaufFraktion",1);
							format(string,sizeof(string),"{FFFFFF}Bist du dir sicher, dass du den {007DFF}%s{FFFFFF} für {007DFF}%d${FFFFFF}\nfür {007DFF}%s{FFFFFF} kaufen möchtest ?",FahrzeugName[FahrzeugInfo[carid][fModelID]-400],FahrzeugInfo[carid][fPreis],FrakName(SpielerInfo[playerid][sFraktion]));
							ShowPlayerDialog(playerid,DIALOG_AUTO_KAUFEN_2,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Autohaus",string,"Ja","Nein");
						}
						else
						{
						    DeletePVar(playerid,"AutoGruppe");
						    SetPVarInt(playerid,"FahrzeugKaufGruppe",1);
							format(string,sizeof(string),"{FFFFFF}Bist du dir sicher, dass du den {007DFF}%s{FFFFFF} für {007DFF}%d${FFFFFF}\nfür {007DFF}%s{FFFFFF} kaufen möchtest ?",FahrzeugName[FahrzeugInfo[carid][fModelID]-400],FahrzeugInfo[carid][fPreis],GruppenInfo[SpielerInfo[playerid][sGruppe]][gName]);
							ShowPlayerDialog(playerid,DIALOG_AUTO_KAUFEN_2,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Autohaus",string,"Ja","Nein");
						}
					}
					case 2://kaufen für Gruppe
					{
					    SetPVarInt(playerid,"FahrzeugKaufGruppe",1);
						format(string,sizeof(string),"{FFFFFF}Bist du dir sicher, dass du den {007DFF}%s{FFFFFF} für {007DFF}%d${FFFFFF}\nfür {007DFF}%s{FFFFFF} kaufen möchtest ?",FahrzeugName[FahrzeugInfo[carid][fModelID]-400],FahrzeugInfo[carid][fPreis],GruppenInfo[SpielerInfo[playerid][sGruppe]][gName]);
						ShowPlayerDialog(playerid,DIALOG_AUTO_KAUFEN_2,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Autohaus",string,"Ja","Nein");
					}
				}
		    }
		}
		case DIALOG_AUTO_KAUFEN_2:
		{
		    new string[264];
		    if(response==0)
			{
			    if(SpielerInfo[playerid][sFraktion] != 0 && SpielerInfo[playerid][sRank] >= 6)
		        {
				    if(SpielerInfo[playerid][sGLeader] != 0)
					{
						format(string,sizeof(string),"Kaufen für Privat\nKaufen für %s\nKaufen für %s",FrakName(SpielerInfo[playerid][sFraktion]),GruppenInfo[SpielerInfo[playerid][sGruppe]][gName]);
						ShowPlayerDialog(playerid,DIALOG_AUTO_KAUFEN,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Autohaus",string,"Weiter","Zurück");
					}
					else
					{
						format(string,sizeof(string),"Kaufen für Privat\nKaufen für %s",FrakName(SpielerInfo[playerid][sFraktion]));
						ShowPlayerDialog(playerid,DIALOG_AUTO_KAUFEN,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Autohaus",string,"Weiter","Zurück");
					}
				}
				else
				{
					if(SpielerInfo[playerid][sGLeader] != 0)
					{
					    SetPVarInt(playerid,"AutoGruppe",1);
						format(string,sizeof(string),"Kaufen für Privat\nKaufen für %s",GruppenInfo[SpielerInfo[playerid][sGruppe]][gName]);
						ShowPlayerDialog(playerid,DIALOG_AUTO_KAUFEN,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Autohaus",string,"Weiter","Zurück");
					}
					else
					{
						ShowPlayerDialog(playerid,DIALOG_AUTO_KAUFEN,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Autohaus","Kaufen für Privat","Weiter","Zurück");
					}
				}
			}
		    else if(response==1)
		    {
		        new carid = GetPVarInt(playerid,"FahrzeugKaufCarID");
		        new modelid = GetPVarInt(playerid,"FahrzeugKaufModelID");
				if(GetPVarInt(playerid,"FahrzeugKaufPrivat") == 1)
				{
				    DeletePVar(playerid,"FahrzeugKaufPrivat");
    			    if(GetPlayerMoneyEx(playerid) < FahrzeugInfo[carid][fPreis])return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld auf dei dir.");
        			new crstring[364], Float:pX, Float:pY, Float:pZ, Float:pA, vehicleid;
        			if(SpielerInfo[playerid][sAchivAuto] < 1)
        			{
        			    ShowAchievement(playerid,"Kaufe dein erstes Auto","+ 50 EXP");
        			    SpielerInfo[playerid][sAchivAuto] = 1;
        			    GivePlayerEXP(playerid,50);
        			}
       				if(GetPVarInt(playerid,"Autohaus") == 1)//Autohaus
					{
					    new rand = random(3);
						if(rand == 0)//Auswahl 1
						{
							pX = 1895.7533;
							pY = -1573.1729;
							pZ = 13.4133;
							pA = 359.4412;
						}
						else if(rand == 1)//Auswahl 2
						{
							pX = 1899.7689;
							pY = -1573.2173;
							pZ = 13.4064;
							pA = 359.1652;
						}
						else if(rand == 2)//Auswahl 3
						{
							pX = 1902.4186;
							pY = -1555.2581;
							pZ = 13.4382;
							pA = 271.5528;
						}
					}
					else if(GetPVarInt(playerid,"Autohaus") == 2)//Motorradhändler
					{
	    				new rand = random(5);
						if(rand == 0)//Auswahl 1
						{
							pX = 1822.2765;
							pY = -1392.5507;
							pZ = 13.1479;
							pA = 217.6383;
						}
						else if(rand == 1)//Auswahl 2
						{
						    pX = 1824.5090;
							pY = -1392.4611;
							pZ = 13.1479;
							pA = 217.2933;
						}
						else if(rand == 2)//Auswahl 3
						{
							pX = 1828.9922;
							pY = -1392.4086;
							pZ = 13.1479;
							pA = 220.3602;
						}
						else if(rand == 3)//Auswahl 3
						{
							pX = 1832.3475;
							pY = -1392.2281;
							pZ = 13.1486;
							pA = 228.3739;
						}
						else if(rand == 4)//Auswahl 3
						{
							pX = 1834.9426;
							pY = -1392.0996;
							pZ = 13.1481;
							pA = 229.2071;
						}
					}
					else if(GetPVarInt(playerid,"Autohaus") == 3)//Autohaus - San Fierro
					{
					    new rand = random(4);
						if(rand == 0)
						{
						    pX = -1517.7908;
						    pY = 1145.6047;
						    pZ = 6.8796;
						    pA = 269.5889;
						}
						else if(rand == 1)
						{
						    pX = -1517.8282;
						    pY = 1138.3187;
						    pZ = 6.8927;
						    pA = 270.4280;
						}
						else if(rand == 2)
						{
						    pX = -1517.8218;
						    pY = 1131.0952;
						    pZ = 6.8926;
						    pA = 270.0160;
						}
						else if(rand == 3)
						{
						    pX = -1517.7950;
						    pY = 1123.8679;
						    pZ = 6.8928;
						    pA = 270.2569;
						}
					}
					else if(GetPVarInt(playerid,"Autohaus") == 4)//Flugzeug Autohaus - Los Santos
					{
					    pX = 2027.6538;
						pY = -2191.9937;
						pZ = 13.2757;
						pA = 89.7705;
					}
					else if(GetPVarInt(playerid, "Autohaus") == 5) //Bootshändler - Los Santos
					{
						pX = 2955.5747;
						pY = -2035.9652;
						pZ = -1.4592;
						pA = 358.3845;
					}
                    vehicleid = CreateVehicle(modelid,pX,pY,pZ,pA,1,1,-1);
                    format(FahrzeugInfo[vehicleid][fKennzeichen], 10, CreateNummernSchild(playerid));
					SetVehicleNumberPlate(vehicleid,FahrzeugInfo[vehicleid][fKennzeichen]);

					FahrzeugInfo[vehicleid][fErstellt] = true; FahrzeugInfo[vehicleid][fModelID] = modelid;
					FahrzeugInfo[vehicleid][fPosition][0] = pX; FahrzeugInfo[vehicleid][fPosition][1] = pY; FahrzeugInfo[vehicleid][fPosition][2] = pZ; FahrzeugInfo[vehicleid][fPosition][3] = pA; FahrzeugInfo[vehicleid][fColor][1] = 1;
				 	FahrzeugInfo[vehicleid][fAbgeschleppt] = 0; FahrzeugInfo[vehicleid][fParkkralle] = 0; FahrzeugInfo[vehicleid][fKilometer] = 0; FahrzeugInfo[vehicleid][fColor][0] = 1; FahrzeugInfo[vehicleid][fPaintjob] = 3;
					FahrzeugInfo[vehicleid][fTank] = 20.0; FahrzeugInfo[vehicleid][fRang] = 0; FahrzeugInfo[vehicleid][fFraktion] = 0; FahrzeugInfo[vehicleid][fGruppe] = 0; FahrzeugInfo[vehicleid][fAutohaus] = 0; FahrzeugInfo[vehicleid][fNebenjob] = 0; FahrzeugInfo[vehicleid][fGarage] = 0; FahrzeugInfo[vehicleid][fGPark] = 0;
					FahrzeugInfo[vehicleid][fFahrschule] = 0; FahrzeugInfo[vehicleid][fSupmobil] = 0; FahrzeugInfo[vehicleid][fZiviroller] = 0; FahrzeugInfo[vehicleid][fImportCar] = 0; FahrzeugInfo[vehicleid][fKurrierCar] = 0;
					FahrzeugInfo[vehicleid][fPreis] = FahrzeugInfo[carid][fPreis]; format(FahrzeugInfo[vehicleid][fBesitzer], MAX_PLAYER_NAME, SpielerInfo[playerid][sName]); FahrzeugInfo[vehicleid][fBesitzerID] = playerid; FahrzeugInfo[vehicleid][fTuning][0] = 0; FahrzeugInfo[vehicleid][fTuning][1] = 0; FahrzeugInfo[vehicleid][fTuning][2] = 0;
					FahrzeugInfo[vehicleid][fTuning][3] = 0; FahrzeugInfo[vehicleid][fTuning][4] = 0; FahrzeugInfo[vehicleid][fTuning][5] = 0; FahrzeugInfo[vehicleid][fTuning][6] = 0; FahrzeugInfo[vehicleid][fTuning][7] = 0;
					FahrzeugInfo[vehicleid][fTuning][8] = 0; FahrzeugInfo[vehicleid][fTuning][9] = 0; FahrzeugInfo[vehicleid][fTuning][10] = 0; FahrzeugInfo[vehicleid][fTuning][11] = 0; FahrzeugInfo[vehicleid][fTuning][12] = 0; FahrzeugInfo[vehicleid][fTuning][13] = 0;
					FahrzeugInfo[vehicleid][fkGeld] = 0; FahrzeugInfo[vehicleid][fkDrogen] = 0; FahrzeugInfo[vehicleid][fJobEXP] = 0;

					GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
					SetVehicleParamsEx(vehicleid, false, false, false, true, false, false, false);

					Motor[vehicleid] = false;
					Licht[vehicleid] = false;
					DOOR[vehicleid] = true;
					Motorhaube[vehicleid] = false;
					Kofferraum[vehicleid] = false;

					mysql_format(sqlHandle, crstring,sizeof(crstring),"INSERT INTO `vehicles` (`ModelID`, `PositionX`, `PositionY`, `PositionZ`, `PositionA`, `Farbe1`, `Farbe2`, `Besitzer`, `Kennzeichen`, `Preis`) VALUES ('%d', '%f', '%f', '%f', '%f', '1', '1', '%s', '%s', '%d')"
					,FahrzeugInfo[vehicleid][fModelID],FahrzeugInfo[vehicleid][fPosition][0],FahrzeugInfo[vehicleid][fPosition][1],FahrzeugInfo[vehicleid][fPosition][2],FahrzeugInfo[vehicleid][fPosition][3],
					SpielerInfo[playerid][sName],FahrzeugInfo[vehicleid][fKennzeichen],FahrzeugInfo[carid][fPreis]);
					mysql_tquery(sqlHandle, crstring, "OnVehicleRegistered", "d", vehicleid);

					SetPlayerCheckpointEx(playerid,pX,pY,pZ,5.0);
					SendClientMessage(playerid,COLOR_SUPER,"Herzlichen Glückwunsch zum neuen Fahrzeug. Es befindet sich am roten Marker. Um den roten Marker zu entfernen benutze '/delcp'.");
					GivePlayerMoneyEx(playerid,-FahrzeugInfo[carid][fPreis]);
					GovVars[govKasse] += FahrzeugInfo[carid][fPreis];

					format(crstring, sizeof(crstring), "hat eine/n %s für %i$ erworben.", FahrzeugName[modelid-400], FahrzeugInfo[carid][fPreis]);
					addServerTimelineEvent(TIMELINE_TAG_USER_BUY_CAR, SpielerInfo[playerid][sDBID], crstring);

					return 1;
				}
				else if(GetPVarInt(playerid,"FahrzeugKaufFraktion") == 1)
				{
				    if(FrakInfo[SpielerInfo[playerid][sFraktion]][fiFrakKasse] < FahrzeugInfo[carid][fPreis])return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Auf dem Fraktionskonto liegt nicht genügend Geld.");
			        new Float:pX, Float:pY, Float:pZ, Float:pA, frakmsg[128], vehicleid, crstring[364];
       				if(GetPVarInt(playerid,"Autohaus") == 1)//Autohaus
					{
					    new rand = random(3);
						if(rand == 0)//Auswahl 1
						{
							pX = 1895.7533;
							pY = -1573.1729;
							pZ = 13.4133;
							pA = 359.4412;
						}
						else if(rand == 1)//Auswahl 2
						{
							pX = 1899.7689;
							pY = -1573.2173;
							pZ = 13.4064;
							pA = 359.1652;
						}
						else if(rand == 2)//Auswahl 3
						{
							pX = 1902.4186;
							pY = -1555.2581;
							pZ = 13.4382;
							pA = 271.5528;
						}
					}
					else if(GetPVarInt(playerid,"Autohaus") == 2)//Motorradhändler
					{
	    				new rand2 = random(5);
						if(rand2 == 0)//Auswahl 1
						{
							pX = 1822.2765;
							pY = -1392.5507;
							pZ = 13.1479;
							pA = 217.6383;
						}
						else if(rand2 == 1)//Auswahl 2
						{
						    pX = 1824.5090;
							pY = -1392.4611;
							pZ = 13.1479;
							pA = 217.2933;
						}
						else if(rand2 == 2)//Auswahl 3
						{
							pX = 1828.9922;
							pY = -1392.4086;
							pZ = 13.1479;
							pA = 220.3602;
						}
						else if(rand2 == 3)//Auswahl 3
						{
							pX = 1832.3475;
							pY = -1392.2281;
							pZ = 13.1486;
							pA = 228.3739;
						}
						else if(rand2 == 4)//Auswahl 3
						{
							pX = 1834.9426;
							pY = -1392.0996;
							pZ = 13.1481;
							pA = 229.2071;
						}
					}
					else if(GetPVarInt(playerid,"Autohaus") == 3)//Autohaus - San Fierro
					{
					    new rand = random(4);
						if(rand == 0)
						{
						    pX = -1517.7908;
						    pY = 1145.6047;
						    pZ = 6.8796;
						    pA = 269.5889;
						}
						else if(rand == 1)
						{
						    pX = -1517.8282;
						    pY = 1138.3187;
						    pZ = 6.8927;
						    pA = 270.4280;
						}
						else if(rand == 2)
						{
						    pX = -1517.8218;
						    pY = 1131.0952;
						    pZ = 6.8926;
						    pA = 270.0160;
						}
						else if(rand == 3)
						{
						    pX = -1517.7950;
						    pY = 1123.8679;
						    pZ = 6.8928;
						    pA = 270.2569;
						}
					}
					else if(GetPVarInt(playerid,"Autohaus") == 4)//Flugzeug Autohaus - Los Santos
					{
					    pX = 2027.6538;
						pY = -2191.9937;
						pZ = 13.2757;
						pA = 89.7705;
					}
					else if(GetPVarInt(playerid, "Autohaus") == 5) //Bootshändler - Los Santos
					{
						pX = 2955.5747;
						pY = -2035.9652;
						pZ = -1.4592;
						pA = 358.3845;
					}
				    vehicleid = CreateVehicle(modelid,pX,pY,pZ,pA,FrakCarFarbe1(SpielerInfo[playerid][sFraktion]),FrakCarFarbe2(SpielerInfo[playerid][sFraktion]),-1);
                    CreateFrakNummernSchild(vehicleid,FahrzeugInfo[vehicleid][fFraktion]);

					FahrzeugInfo[vehicleid][fErstellt] = true; FahrzeugInfo[vehicleid][fModelID] = modelid;
					FahrzeugInfo[vehicleid][fPosition][0] = pX; FahrzeugInfo[vehicleid][fPosition][1] = pY; FahrzeugInfo[vehicleid][fPosition][2] = pZ; FahrzeugInfo[vehicleid][fPosition][3] = pA; FahrzeugInfo[vehicleid][fColor][1] = FrakCarFarbe2(SpielerInfo[playerid][sFraktion]);
				 	FahrzeugInfo[vehicleid][fAbgeschleppt] = 0; FahrzeugInfo[vehicleid][fParkkralle] = 0; FahrzeugInfo[vehicleid][fKilometer] = 0; FahrzeugInfo[vehicleid][fColor][0] = FrakCarFarbe1(SpielerInfo[playerid][sFraktion]); FahrzeugInfo[vehicleid][fPaintjob] = 3;
					FahrzeugInfo[vehicleid][fTank] = 20.0; FahrzeugInfo[vehicleid][fRang] = 0; FahrzeugInfo[vehicleid][fFraktion] = SpielerInfo[playerid][sFraktion]; FahrzeugInfo[vehicleid][fGruppe] = 0; FahrzeugInfo[vehicleid][fAutohaus] = 0; FahrzeugInfo[vehicleid][fNebenjob] = 0; FahrzeugInfo[vehicleid][fGarage] = 0; FahrzeugInfo[vehicleid][fGPark] = 0;
					FahrzeugInfo[vehicleid][fFahrschule] = 0; FahrzeugInfo[vehicleid][fSupmobil] = 0; FahrzeugInfo[vehicleid][fZiviroller] = 0; FahrzeugInfo[vehicleid][fImportCar] = 0; FahrzeugInfo[vehicleid][fKurrierCar] = 0;
					FahrzeugInfo[vehicleid][fPreis] = FahrzeugInfo[carid][fPreis]; FahrzeugInfo[vehicleid][fBesitzer] = 0; format(FahrzeugInfo[vehicleid][fBesitzer], 0, ""); FahrzeugInfo[vehicleid][fBesitzerID] = 0; FahrzeugInfo[vehicleid][fTuning][0] = 0; FahrzeugInfo[vehicleid][fTuning][1] = 0; FahrzeugInfo[vehicleid][fTuning][2] = 0;
					FahrzeugInfo[vehicleid][fTuning][3] = 0; FahrzeugInfo[vehicleid][fTuning][4] = 0; FahrzeugInfo[vehicleid][fTuning][5] = 0; FahrzeugInfo[vehicleid][fTuning][6] = 0; FahrzeugInfo[vehicleid][fTuning][7] = 0;
					FahrzeugInfo[vehicleid][fTuning][8] = 0; FahrzeugInfo[vehicleid][fTuning][9] = 0; FahrzeugInfo[vehicleid][fTuning][10] = 0; FahrzeugInfo[vehicleid][fTuning][11] = 0; FahrzeugInfo[vehicleid][fTuning][12] = 0; FahrzeugInfo[vehicleid][fTuning][13] = 0;
                    FahrzeugInfo[vehicleid][fkGeld] = 0; FahrzeugInfo[vehicleid][fkDrogen] = 0; FahrzeugInfo[vehicleid][fJobEXP] = 0;

					GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
					SetVehicleParamsEx(vehicleid, false, false, false, true, false, false, false);

					Motor[vehicleid] = false;
					Licht[vehicleid] = false;
					DOOR[vehicleid] = true;
					Motorhaube[vehicleid] = false;
					Kofferraum[vehicleid] = false;

					mysql_format(sqlHandle, crstring,sizeof(crstring),"INSERT INTO `vehicles` (`ModelID`, `PositionX`, `PositionY`, `PositionZ`, `PositionA`, `Farbe1`, `Farbe2`, `Fraktion`, `Kennzeichen`) VALUES ('%d', '%f', '%f', '%f', '%f', '%d', '%d', '%d', 'Fraktion')"
					,FahrzeugInfo[vehicleid][fModelID],FahrzeugInfo[vehicleid][fPosition][0],FahrzeugInfo[vehicleid][fPosition][1],FahrzeugInfo[vehicleid][fPosition][2],FahrzeugInfo[vehicleid][fPosition][3], FahrzeugInfo[vehicleid][fColor][0], FahrzeugInfo[vehicleid][fColor][1],
					FahrzeugInfo[vehicleid][fFraktion]);
					mysql_tquery(sqlHandle, crstring, "OnVehicleRegistered", "d", vehicleid);

					format(string,sizeof(string),"Du hast für deine Fraktion ein {FF0000}%s{00CDFF} für {FF0000}%d${00CDFF} gekauft. Das Fahrzeug befindet sich am roten Marker.",FahrzeugName[modelid-400],FahrzeugInfo[carid][fPreis]);
					SendClientMessage(playerid,COLOR_INFO,string);
					SetPlayerCheckpointEx(playerid,pX,pY,pZ,5.0);
					FrakInfo[SpielerInfo[playerid][sFraktion]][fiFrakKasse] -= FahrzeugInfo[carid][fPreis];
					GovVars[govKasse] += FahrzeugInfo[carid][fPreis];
				    foreach(new i : Player)
					{
			            if(SpielerInfo[i][sFraktion] == SpielerInfo[playerid][sFraktion])
			            {
			                if(i != playerid)
			                {
				                format(frakmsg,sizeof(frakmsg),"%s %s hat für eure Fraktion einen %s gekauft.",RangName(playerid),SpielerInfo[playerid][sName],FahrzeugName[modelid-400]);
				                SendClientMessage(i,COLOR_INFO,frakmsg);
							}
						}
				    }
				}
				else if(GetPVarInt(playerid,"FahrzeugKaufGruppe") == 1)
				{
				    if(GruppenInfo[SpielerInfo[playerid][sGruppe]][gKasse] < FahrzeugInfo[carid][fPreis])return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Auf dem Gruppenkonto liegt nicht genügend Geld.");
			        new Float:pX, Float:pY, Float:pZ, Float:pA, frakmsg[128], vehicleid, crstring[364];
	   				if(GetPVarInt(playerid,"Autohaus") == 1)//Autohaus
					{
					    new rand = random(3);
						if(rand == 0)//Auswahl 1
						{
							pX = 1895.7533;
							pY = -1573.1729;
							pZ = 13.4133;
							pA = 359.4412;
						}
						else if(rand == 1)//Auswahl 2
						{
							pX = 1899.7689;
							pY = -1573.2173;
							pZ = 13.4064;
							pA = 359.1652;
						}
						else if(rand == 2)//Auswahl 3
						{
							pX = 1902.4186;
							pY = -1555.2581;
							pZ = 13.4382;
							pA = 271.5528;
						}
					}
					else if(GetPVarInt(playerid,"Autohaus") == 2)//Motorradhändler
					{
	    				new rand2 = random(5);
						if(rand2 == 0)//Auswahl 1
						{
							pX = 1822.2765;
							pY = -1392.5507;
							pZ = 13.1479;
							pA = 217.6383;
						}
						else if(rand2 == 1)//Auswahl 2
						{
						    pX = 1824.5090;
							pY = -1392.4611;
							pZ = 13.1479;
							pA = 217.2933;
						}
						else if(rand2 == 2)//Auswahl 3
						{
							pX = 1828.9922;
							pY = -1392.4086;
							pZ = 13.1479;
							pA = 220.3602;
						}
						else if(rand2 == 3)//Auswahl 3
						{
							pX = 1832.3475;
							pY = -1392.2281;
							pZ = 13.1486;
							pA = 228.3739;
						}
						else if(rand2 == 4)//Auswahl 3
						{
							pX = 1834.9426;
							pY = -1392.0996;
							pZ = 13.1481;
							pA = 229.2071;
						}
					}
					else if(GetPVarInt(playerid,"Autohaus") == 3)//Autohaus - San Fierro
					{
					    new rand = random(4);
						if(rand == 0)
						{
						    pX = -1517.7908;
						    pY = 1145.6047;
						    pZ = 6.8796;
						    pA = 269.5889;
						}
						else if(rand == 1)
						{
						    pX = -1517.8282;
						    pY = 1138.3187;
						    pZ = 6.8927;
						    pA = 270.4280;
						}
						else if(rand == 2)
						{
						    pX = -1517.8218;
						    pY = 1131.0952;
						    pZ = 6.8926;
						    pA = 270.0160;
						}
						else if(rand == 3)
						{
						    pX = -1517.7950;
						    pY = 1123.8679;
						    pZ = 6.8928;
						    pA = 270.2569;
						}
					}
					else if(GetPVarInt(playerid,"Autohaus") == 4)//Flugzeug Autohaus - Los Santos
					{
					    pX = 2027.6538;
						pY = -2191.9937;
						pZ = 13.2757;
						pA = 89.7705;
					}
					else if(GetPVarInt(playerid, "Autohaus") == 5) //Bootshändler - Los Santos
					{
						pX = 2955.5747;
						pY = -2035.9652;
						pZ = -1.4592;
						pA = 358.3845;
					}
				    vehicleid = CreateVehicle(modelid,pX,pY,pZ,pA,1,1,-1);
    				format(FahrzeugInfo[vehicleid][fKennzeichen], 5, GruppenInfo[SpielerInfo[playerid][sGruppe]][gSchild]);
					SetVehicleNumberPlate(vehicleid,FahrzeugInfo[vehicleid][fKennzeichen]);

					FahrzeugInfo[vehicleid][fErstellt] = true; FahrzeugInfo[vehicleid][fModelID] = modelid;
					FahrzeugInfo[vehicleid][fPosition][0] = pX; FahrzeugInfo[vehicleid][fPosition][1] = pY; FahrzeugInfo[vehicleid][fPosition][2] = pZ; FahrzeugInfo[vehicleid][fPosition][3] = pA; FahrzeugInfo[vehicleid][fColor][1] = 1;
				 	FahrzeugInfo[vehicleid][fAbgeschleppt] = 0; FahrzeugInfo[vehicleid][fParkkralle] = 0; FahrzeugInfo[vehicleid][fKilometer] = 0; FahrzeugInfo[vehicleid][fColor][0] = 1; FahrzeugInfo[vehicleid][fPaintjob] = 3;
					FahrzeugInfo[vehicleid][fTank] = 20.0; FahrzeugInfo[vehicleid][fRang] = 0; FahrzeugInfo[vehicleid][fFraktion] = 0; FahrzeugInfo[vehicleid][fGruppe] = SpielerInfo[playerid][sGruppe]; FahrzeugInfo[vehicleid][fAutohaus] = 0; FahrzeugInfo[vehicleid][fNebenjob] = 0; FahrzeugInfo[vehicleid][fGarage] = 0; FahrzeugInfo[vehicleid][fGPark] = 0;
					FahrzeugInfo[vehicleid][fFahrschule] = 0; FahrzeugInfo[vehicleid][fSupmobil] = 0; FahrzeugInfo[vehicleid][fZiviroller] = 0; FahrzeugInfo[vehicleid][fImportCar] = 0; FahrzeugInfo[vehicleid][fKurrierCar] = 0; FahrzeugInfo[vehicleid][fPreis] = FahrzeugInfo[carid][fPreis];
					FahrzeugInfo[vehicleid][fBesitzer] = 0; format(FahrzeugInfo[vehicleid][fBesitzer], 0, ""); FahrzeugInfo[vehicleid][fBesitzerID] = 0; FahrzeugInfo[vehicleid][fTuning][0] = 0; FahrzeugInfo[vehicleid][fTuning][1] = 0;
					FahrzeugInfo[vehicleid][fTuning][2] = 0; FahrzeugInfo[vehicleid][fTuning][3] = 0; FahrzeugInfo[vehicleid][fTuning][4] = 0; FahrzeugInfo[vehicleid][fTuning][5] = 0; FahrzeugInfo[vehicleid][fTuning][6] = 0;
					FahrzeugInfo[vehicleid][fTuning][7] = 0; FahrzeugInfo[vehicleid][fTuning][8] = 0; FahrzeugInfo[vehicleid][fTuning][9] = 0; FahrzeugInfo[vehicleid][fTuning][10] = 0; FahrzeugInfo[vehicleid][fTuning][11] = 0;
					FahrzeugInfo[vehicleid][fTuning][12] = 0; FahrzeugInfo[vehicleid][fTuning][13] = 0;FahrzeugInfo[vehicleid][fkGeld] = 0; FahrzeugInfo[vehicleid][fkDrogen] = 0; FahrzeugInfo[vehicleid][fJobEXP] = 0;

					GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
					SetVehicleParamsEx(vehicleid, false, false, false, true, false, false, false);

					Motor[vehicleid] = false;
					Licht[vehicleid] = false;
					DOOR[vehicleid] = true;
					Motorhaube[vehicleid] = false;
					Kofferraum[vehicleid] = false;

					mysql_format(sqlHandle, crstring,sizeof(crstring),"INSERT INTO `vehicles` (`ModelID`, `PositionX`, `PositionY`, `PositionZ`, `PositionA`, `Farbe1`, `Farbe2`, `Gruppe`, `Kennzeichen`, `Preis`) VALUES ('%d', '%f', '%f', '%f', '%f', '%d', '%d', '%d', 'Gruppe', '%d')"
					,FahrzeugInfo[vehicleid][fModelID],FahrzeugInfo[vehicleid][fPosition][0],FahrzeugInfo[vehicleid][fPosition][1],FahrzeugInfo[vehicleid][fPosition][2],FahrzeugInfo[vehicleid][fPosition][3], FahrzeugInfo[vehicleid][fColor][0], FahrzeugInfo[vehicleid][fColor][1],
					FahrzeugInfo[vehicleid][fGruppe],FahrzeugInfo[vehicleid][fPreis]);
					mysql_tquery(sqlHandle, crstring, "OnVehicleRegistered", "d", vehicleid);

					format(string,sizeof(string),"Du hast für deine Gruppe ein {FF0000}%s{00CDFF} für {FF0000}%d${00CDFF} gekauft. Das Fahrzeug befindet sich am roten Marker.",FahrzeugName[modelid-400],FahrzeugInfo[carid][fPreis]);
					SendClientMessage(playerid,COLOR_INFO,string);
					SetPlayerCheckpointEx(playerid,pX,pY,pZ,5.0);
					GruppenInfo[SpielerInfo[playerid][sGruppe]][gKasse] -= FahrzeugInfo[carid][fPreis];
					GovVars[govKasse] += FahrzeugInfo[carid][fPreis];
				    foreach(new i : Player)
					{
			            if(SpielerInfo[i][sGruppe] == SpielerInfo[playerid][sGruppe])
			            {
			                if(i != playerid)
			                {
				                format(frakmsg,sizeof(frakmsg),"%s %s hat für eure Gruppe einen %s gekauft.",GRangName(playerid),SpielerInfo[playerid][sName],FahrzeugName[modelid-400]);
				                SendClientMessage(i,COLOR_INFO,frakmsg);
							}
						}
				    }
				}
			}
		}
		case DIALOG_FAHRZEUG_VERKAUFEN:
		{
		    if(response==0){}//Zurück
		    else if(response==1)
		    {
				new query[264], string[128], veh = GetPlayerVehicleID(playerid);
				new VerkaufsPreis = FahrzeugInfo[veh][fPreis]/2;
				if(GetPVarInt(playerid,"FahrzeugVerkaufen") == 1)//Fraktionsfahrzeug
				{
				    if(FahrzeugInfo[veh][fFraktion] != SpielerInfo[playerid][sFraktion])return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Das Fahrezug gehört deiner Fraktion nicht.");
				    {
				        mysql_format(sqlHandle, query,sizeof(query),"DELETE FROM `vehicles` WHERE `ID`='%d'",FahrzeugInfo[veh][fDatabaseID]);
				        mysql_tquery(sqlHandle, query);

         				format(string,sizeof(string),"[Info]: {FFFFFF}Du hast '%s' für '%d$' verkauft.",FahrzeugName[FahrzeugInfo[veh][fModelID]-400],FahrzeugInfo[veh][fPreis]/2);
                		SendClientMessage(playerid,COLOR_INFO,string);
				        DeleteVehicle(veh);

				        FrakInfo[SpielerInfo[playerid][sFraktion]][fiFrakKasse] += VerkaufsPreis;
				        GovVars[govKasse] -= VerkaufsPreis;
					    foreach(new i : Player)
						{
				            if(SpielerInfo[i][sFraktion] == SpielerInfo[playerid][sFraktion])
				            {
				                if(i != playerid)
				                {
					                format(string,sizeof(string),"{FF0000}%s %s{00CDFF} hat den {FF0000}%s{00CDFF} für {FF0000}%d${00CDFF} verkauft.",RangName(playerid),SpielerInfo[playerid][sName],FahrzeugName[FahrzeugInfo[veh][fModelID]-400],VerkaufsPreis);
					                SendClientMessage(i,COLOR_INFO,string);
					            	return 1;
								}
							}
						}
					}
				}
				else if(GetPVarInt(playerid,"FahrzeugVerkaufen") == 2)//Privatfahrzeug
				{
					mysql_format(sqlHandle, query,sizeof(query), "DELETE FROM `vehicles` WHERE `ID`='%d'",FahrzeugInfo[veh][fDatabaseID]);
					mysql_tquery(sqlHandle, query);
					GivePlayerMoneyEx(playerid,VerkaufsPreis);
					GovVars[govKasse] -= VerkaufsPreis;
					format(string,sizeof(string),"[Info]: {FFFFFF}Du hast '%s' für '%d$' verkauft.",FahrzeugName[FahrzeugInfo[veh][fModelID]-400],VerkaufsPreis);
					SendClientMessage(playerid,COLOR_INFO,string);
					DestroyVehicle(veh);
				}
				else if(GetPVarInt(playerid,"FahrzeugVerkaufen") == 3)//Gruppenfahrzeug
				{
				    if(FahrzeugInfo[veh][fGruppe] != SpielerInfo[playerid][sGruppe])return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Das Fahrezug gehört deiner Gruppe nicht.");
				    {
				        mysql_format(sqlHandle, query,sizeof(query),"DELETE FROM `vehicles` WHERE `ID`='%d'",FahrzeugInfo[veh][fDatabaseID]);
				        mysql_query(sqlHandle, query);

         				format(string,sizeof(string),"[Info]: {FFFFFF}Du hast '%s' für '%d$' verkauft.",FahrzeugName[FahrzeugInfo[veh][fModelID]-400],FahrzeugInfo[veh][fPreis]/2);
                		SendClientMessage(playerid,COLOR_INFO,string);
				        DeleteVehicle(veh);

				        GruppenInfo[SpielerInfo[playerid][sGruppe]][gKasse] += VerkaufsPreis;
				        GovVars[govKasse] -= VerkaufsPreis;
					    foreach(new i : Player)
						{
				            if(SpielerInfo[i][sGruppe] == SpielerInfo[playerid][sGruppe])
				            {
				                if(i != playerid)
				                {
					                format(string,sizeof(string),"{FF0000}%s %s{00CDFF} hat den {FF0000}%s{00CDFF} für {FF0000}%d${00CDFF} verkauft.",GRangName(playerid),SpielerInfo[playerid][sName],FahrzeugName[FahrzeugInfo[veh][fModelID]-400],VerkaufsPreis);
					                SendClientMessage(i,COLOR_INFO,string);
					            	return 1;
								}
							}
						}
					}
				}
		    }
		}
		case DIALOG_BANK_TRANS_GESAMT:
		{
		    if(response==0){}//Abbrechen
			else if(response == 1)//Weiter
			{
				switch(listitem)
				{
				    case 0://Fraktionskonto
				    {
				        if(SpielerInfo[playerid][sRank] < 6)return NichtBerechtigt
				        new string[300];
						format(string,sizeof(string),"{FFFFFF}Bist du sicher das du den Gesamtbetrag von {007DFF}$%d{FFFFFF} von deinem Fraktionskonto auf dein Girokonto überweisen möchtest?\nDer Vorgang kostet dich $3000 Gebühren.",FrakInfo[SpielerInfo[playerid][sFraktion]][fiFrakKasse]);
						ShowPlayerDialog(playerid,DIALOG_BANK_TRANS_GESAMT2,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem - Gesamtransfer: Fraktionskonto",string,"Weiter","Zurück");
					}
					case 1://Geschäftskonto
					{
					    ShowPlayerDialog(playerid,DIALOG_BANK_TRANS_GESAMT3,DIALOG_STYLE_LIST,"","Tankstelle\nAmmunation\nStore","Weiter","Zurück");
					}
				}
		    }
		}
		case DIALOG_BANK_TRANS_GESAMT2:
		{
		    if(response==0)//Zurück
		    {
		        ShowPlayerDialog(playerid,DIALOG_BANK_TRANS_GESAMT,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem - Gesamttransfer","Fraktionskonto\nGeschäftskonto","Weiter","Abbrechen");
		    }
		    else if(response==1)//Weiter
		    {
		        new frakID = SpielerInfo[playerid][sFraktion];
		        if(FrakInfo[frakID][fiFrakKasse] < 10000)
		        {
		            new string[128];
		            format(string,sizeof(string),"{FFFFFF}Bist du sicher das du den Gesamtbetrag von $%d von deinem Fraktionskonto auf dein Girokonto überweisen möchtest?\nDer Vorgang kostet dich $3000 Gebühren.\n\nDie Überweisung des Gesamtbetrag kann erst ab 10.000$ auf dem Fraktionskonto erfolgen.",FrakInfo[frakID][fiFrakKasse]);
					ShowPlayerDialog(playerid,DIALOG_BANK_TRANS_GESAMT2,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem - Gesamtransfer: Fraktionskonto",string,"Weiter","Zurück");
					return 1;
		        }
		        FrakInfo[frakID][fiFrakKasse] -= 3000;

		        new logging[200];
				format(logging,sizeof(logging),"[Info]: {FFFFFF}%s hat gerade den Gesamtbetrag von $%d seines Fraktionskontos (ID: %d) auf sein Girokonto überweisen.",SpielerInfo[playerid][sName],FrakInfo[frakID][fiFrakKasse],SpielerInfo[playerid][sFraktion]);
				SendAdminMessage(COLOR_RED,logging);
				format(logging,sizeof(logging),"%s hat den Gesamtbetrag ($%d) seines Fraktionskontos (ID: %d) auf sein Girokonto überweisen.",SpielerInfo[playerid][sName],FrakInfo[frakID][fiFrakKasse],SpielerInfo[playerid][sFraktion]);
				CreateServerLogEntry("BANKKONTO_LOG", logging);

		        SpielerInfo[playerid][sBankkonto] += FrakInfo[frakID][fiFrakKasse];
		        FrakInfo[frakID][fiFrakKasse] = 0;
				SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Du hast den Gesamtbetrag deines Fraktionskontos auf dein Girokonto überwiesen.");
				GovVars[govKasse] += 3000;
		    }
		}
		case DIALOG_BANK_TRANS_GESAMT3:
		{
		    if(response==0)//Zurück
		    {
		        ShowPlayerDialog(playerid,DIALOG_BANK_TRANS_GESAMT,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem - Gesamttransfer","Fraktionskonto\nGeschäftskonto","Weiter","Abbrechen");
		    }
		    else if(response==1)//Weiter
		    {
		        switch(listitem)
		        {
		            case 0://Tankstelle
		            {
		                new tsid = SpielerInfo[playerid][sTankstelle];
		                if(tsid < 1)return ShowPlayerDialog(playerid,DIALOG_BANK_TRANS_GESAMT3,DIALOG_STYLE_LIST,"","Tankstelle\nAmmunation\nStore","Weiter","Zurück");
		                if(TankstellenInfo[tsid][tsKasse] < 20000)
				        {
				            ShowPlayerDialog(playerid,DIALOG_BANK_TRANS_GESAMT3,DIALOG_STYLE_LIST,"","Tankstelle (Fehler: Unter 20.000$)\nAmmunation\nStore","Weiter","Zurück");
							return 1;
				        }
				        SetPVarInt(playerid,"GesamtbetragAnTankstelle",1);
				        new string[128];
		            	format(string,sizeof(string),"{FFFFFF}Bist du sicher das du den Gesamtbetrag von $%d von deinem Geschäftskonto auf dein Girokonto überweisen möchtest?\nDer Vorgang kostet dich $10.000 Gebühren.",TankstellenInfo[tsid][tsKasse]);
				        ShowPlayerDialog(playerid,DIALOG_BANK_TRANS_GESAMT4,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem - Gesamttransfer: Tankstelle",string,"Weiter","Zurück");
                        GovVars[govKasse] += 10000;
					}
		            case 1://Ammunation
		            {
		                new tsid = SpielerInfo[playerid][sAmmunation];
		                if(tsid < 1)return ShowPlayerDialog(playerid,DIALOG_BANK_TRANS_GESAMT3,DIALOG_STYLE_LIST,"","Tankstelle\nAmmunation\nStore","Weiter","Zurück");
		                if(AmmunationInfo[tsid][amKasse] < 20000)
				        {
				            ShowPlayerDialog(playerid,DIALOG_BANK_TRANS_GESAMT3,DIALOG_STYLE_LIST,"","Tankstelle\nAmmunation (Fehler: Unter 20.000$)\nStore","Weiter","Zurück");
							return 1;
				        }
				        SetPVarInt(playerid,"GesamtbetragAnAmmunation",1);
				        new string[128];
		            	format(string,sizeof(string),"{FFFFFF}Bist du sicher das du den Gesamtbetrag von $%d von deinem Geschäftskonto auf dein Girokonto überweisen möchtest?\nDer Vorgang kostet dich $10.000 Gebühren.",AmmunationInfo[tsid][amKasse]);
				        ShowPlayerDialog(playerid,DIALOG_BANK_TRANS_GESAMT4,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem - Gesamttransfer: Ammunation",string,"Weiter","Zurück");
                        GovVars[govKasse] += 10000;
					}
		            case 2://Store
		            {
		                new tsid = SpielerInfo[playerid][sStore];
		                if(tsid < 1)return ShowPlayerDialog(playerid,DIALOG_BANK_TRANS_GESAMT3,DIALOG_STYLE_LIST,"","Tankstelle\nAmmunation\nStore","Weiter","Zurück");
		                if(StoreInfo[tsid][siKasse] < 20000)
				        {
				            ShowPlayerDialog(playerid,DIALOG_BANK_TRANS_GESAMT3,DIALOG_STYLE_LIST,"","Tankstelle\nAmmunation\nStore (Fehler: Unter 20.000$)","Weiter","Zurück");
							return 1;
				        }
				        SetPVarInt(playerid,"GesamtbetragAnStore",1);
				        new string[128];
		            	format(string,sizeof(string),"{FFFFFF}Bist du sicher das du den Gesamtbetrag von $%d von deinem Geschäftskonto auf dein Girokonto überweisen möchtest?\nDer Vorgang kostet dich $10.000 Gebühren.",StoreInfo[tsid][siKasse]);
				        ShowPlayerDialog(playerid,DIALOG_BANK_TRANS_GESAMT4,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem - Gesamttransfer: Store 24/7",string,"Weiter","Zurück");
                        GovVars[govKasse] += 10000;
					}
		        }
		    }
		}
		case DIALOG_BANK_TRANS_GESAMT4:
		{
		    if(response==0)//Zurück
		    {
		        DeletePVar(playerid,"GesamtbetragAnTankstelle");
		        DeletePVar(playerid,"GesamtbetragAnAmmunation");
		        DeletePVar(playerid,"GesamtbetragAnStore");
		        ShowPlayerDialog(playerid,DIALOG_BANK_TRANS_GESAMT3,DIALOG_STYLE_LIST,"","Tankstelle\nAmmunation\nStore","Weiter","Zurück");
		    }
		    else if(response==1)//Weiter
		    {
		        if(GetPVarInt(playerid,"GesamtbetragAnTankstelle") > 0)
		        {
		            new tsid = SpielerInfo[playerid][sTankstelle];
			        TankstellenInfo[tsid][tsKasse] -= 10000;

			        new logging[200];
					format(logging,sizeof(logging),"[Info]: {FFFFFF}%s hat gerade den Gesamtbetrag von $%d seines Tankstellen-Kontos (ID: %d) auf sein Girokonto überweisen.",SpielerInfo[playerid][sName],TankstellenInfo[tsid][tsKasse],tsid);
					SendAdminMessage(COLOR_RED,logging);
					format(logging,sizeof(logging),"%s hat den Gesamtbetrag ($%d) seines Tankstellen-Kontos (ID: %d) auf sein Girokonto überweisen.",SpielerInfo[playerid][sName],TankstellenInfo[tsid][tsKasse],tsid);
					CreateServerLogEntry("BANKKONTO_LOG", logging);

			        SpielerInfo[playerid][sBankkonto] += TankstellenInfo[tsid][tsKasse];
			        TankstellenInfo[tsid][tsKasse] = 0;
					SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Du hast den Gesamtbetrag deines Gechäftskontos (Tankstelle) auf dein Girokonto überwiesen.");
		        }
		        else if(GetPVarInt(playerid,"GesamtbetragAnAmmunation") > 0)
		        {
		            new an = SpielerInfo[playerid][sAmmunation];
			        AmmunationInfo[an][amKasse] -= 10000;

			        new logging[200];
					format(logging,sizeof(logging),"[Info]: {FFFFFF}%s hat gerade den Gesamtbetrag von $%d seines Ammunation-Kontos (ID: %d) auf sein Girokonto überweisen.",SpielerInfo[playerid][sName],AmmunationInfo[an][amKasse],an);
					SendAdminMessage(COLOR_RED,logging);
					format(logging,sizeof(logging),"%s hat den Gesamtbetrag ($%d) seines Ammunation-Kontos (ID: %d) auf sein Girokonto überweisen.",SpielerInfo[playerid][sName],AmmunationInfo[an][amKasse],an);
					CreateServerLogEntry("BANKKONTO_LOG", logging);

			        SpielerInfo[playerid][sBankkonto] += AmmunationInfo[an][amKasse];
			        AmmunationInfo[an][amKasse] = 0;
					SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Du hast den Gesamtbetrag deines Gechäftskontos (Ammunation) auf dein Girokonto überwiesen.");
		        }
		        else if(GetPVarInt(playerid,"GesamtbetragAnStore") > 0)
		        {
					new an = SpielerInfo[playerid][sStore];
			        StoreInfo[an][siKasse] -= 10000;

			        new logging[200];
					format(logging,sizeof(logging),"[Info]: {FFFFFF}%s hat gerade den Gesamtbetrag von $%d seines Store-Kontos (ID: %d) auf sein Girokonto überweisen.",SpielerInfo[playerid][sName],StoreInfo[an][siKasse],an);
					SendAdminMessage(COLOR_RED,logging);
					format(logging,sizeof(logging),"%s hat den Gesamtbetrag ($%d) seines Store-Kontos (ID: %d) auf sein Girokonto überweisen.",SpielerInfo[playerid][sName],StoreInfo[an][siKasse],an);
					CreateServerLogEntry("BANKKONTO_LOG", logging);

			        SpielerInfo[playerid][sBankkonto] += StoreInfo[an][siKasse];
			        StoreInfo[an][siKasse] = 0;
					SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Du hast den Gesamtbetrag deines Gechäftskontos (Store) auf dein Girokonto überwiesen.");
		        }
		    }
		}
		case DIALOG_BANKLOGIN:
		{
		    if(response==0){DeletePVar(playerid,"ATMID"); DeletePVar(playerid,"Bankschalter");}//Zurück
		    else if(response==1)//Weiter
		    {
				if(strval(inputtext) == SpielerInfo[playerid][sBankPin])
				{
				    ShowPlayerDialog(playerid,DIALOG_BANKMENU,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","Girokonto\nGeschäftskonto\nFraktionskonto\nGruppenkonto\nHandyguthaben aufladen\nSpende an die IT (News/Events)\nGeld anlegen","Weiter","Schließen");
				}
				else
				{
				    ShowPlayerDialog(playerid,DIALOG_BANKLOGIN,DIALOG_STYLE_PASSWORD,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","{FFFFFF}Bitte gebe deinen PIN für dein Konto an um fortzufahren.","Weiter","Zurück");
				}
		    }
		}
		case DIALOG_BANKMENU:
		{
	 		if(response==0){DeletePVar(playerid,"ATMID");}//Zurück
	        else if(response==1)//Weiter
	        {
	        	switch(listitem)
				{
					case 0://Girokonto
	    			{
	    			    SetPVarInt(playerid,"BankAuswahl",1);
						ShowPlayerDialog(playerid,DIALOG_BANK_AUSWAHL,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","Einzahlen\nAuszahlen\nSEPA-Überweisung\nKontoauszug","Weiter","Zurück");
	  				}
			    	case 1://Geschäftskonto
					{
    					if(SpielerInfo[playerid][sTankstelle] != 0 || SpielerInfo[playerid][sAmmunation] != 0 || SpielerInfo[playerid][sStore] != 0)
					    {
					        SetPVarInt(playerid,"BankAuswahl",2);
					        ShowPlayerDialog(playerid,DIALOG_BANK_BIZAUSWAHL,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","Tankstelle\nAmmunation\n24/7","Weiter","Zurück");
						}
						else SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt kein Geschäft.");
				    }
				    case 2://Fraktionskonto
				    {
				        if(SpielerInfo[playerid][sFraktion] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist in keiner Fraktion.");
				        ShowPlayerDialog(playerid,DIALOG_BANK_AUSWAHL,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","Einzahlen\nAuszahlen\nKontoauszug","Weiter","Zurück");
				        SetPVarInt(playerid,"BankAuswahl",3);
				    }
				    case 3://Gruppenkonto
				    {
				        if(SpielerInfo[playerid][sGruppe] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist in keiner Gruppe.");
				        ShowPlayerDialog(playerid,DIALOG_BANK_AUSWAHL,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","Einzahlen\nAuszahlen\nKontoauszug","Weiter","Zurück");
				        SetPVarInt(playerid,"BankAuswahl",4);
				    }
				    case 4://Handyguthaben aufladen
				    {
				        if(SpielerInfo[playerid][sHandy] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast kein Handy.");
				        ShowPlayerDialog(playerid,DIALOG_BANK_GUTHABEN,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","Wie viel Handyguthaben möchtest du aufladen?","Bestätigen","Zurück");
				    }
				    case 5://Spende an die IT (News/Events)
				    {
				        ShowPlayerDialog(playerid,DIALOG_BANK_SPENDE,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","Welchen Betrag möchtest du an die Interglobal Television (IT) spenden?","Spenden","Zurück");
				    }
				    case 6://Geld anlegen
				    {
				        if(SpielerInfo[playerid][sBankAngelegt] == 1 && SpielerInfo[playerid][sBankAngelegtMoney] > 0)
				        {
				            GivePlayerMoneyEx(playerid,SpielerInfo[playerid][sBankAngelegtMoney]);
				            SpielerInfo[playerid][sBankAngelegt] = 0;
				            new string[128];
				            format(string,sizeof(string),"Dein angelegtes Geld wurde dir in BAR ausgezahlt.\n%d$",SpielerInfo[playerid][sBankAngelegtMoney]);
				            ShowPlayerDialog(playerid,9992,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem",string,"Fertig","");
				            SpielerInfo[playerid][sBankAngelegtMoney] = 0;
				        }
				        else if(SpielerInfo[playerid][sBankAngelegt] > 1 && SpielerInfo[playerid][sBankAngelegtMoney] > 0)
				        {
				            return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du musst noch warten bis dir die Bank dein angelegtes Geld auszahlt.");
				        }
				        else
				        {
				            new string[440];
							format(string,sizeof(string),"Bei der Bank kannst du auch Geld anlegen. Angelegtes Geld kann sich richtig auszahlen!\n");
							format(string,sizeof(string),"%sDu erhälst angelegtes Geld nach 10 PayDays zurück. Zusätzlich erhälst du 20 Prozent deines angelegten Betrags.\n",string);
							format(string,sizeof(string),"%sDu kommst vorher jedoch nicht an das Geld. Legst du also 100.000$ an, erhälst du 120.000$ zurück.\n",string);
							format(string,sizeof(string),"%sAber aufgepasst! Holst du dein Geld nicht rechtzeitig ab, ist es für immer weg! Die Bank informiert dich nicht über den Status!",string);
					        ShowPlayerDialog(playerid,DIALOG_BANK_ANLEGEN,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem",string,"Anlegen","Zurück");
						}
					}
				}
	 		}
		}
		case DIALOG_BANK_ANLEGEN:
		{
		    if(response==0){ShowPlayerDialog(playerid,DIALOG_BANKMENU,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","Girokonto\nGeschäftskonto\nFraktionskonto\nGruppenkonto\nHandyguthaben aufladen\nSpende an die IT (News/Events)\nGeld anlegen","Weiter","Schließen");}//Zurück
			else if(response==1)//Anlegen
			{
			    ShowPlayerDialog(playerid,DIALOG_BANK_ANLEGEN2,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","Wie viel Geld möchtest du anlegen?","Anlegen","Zurück");
			}
		}
		case DIALOG_BANK_ANLEGEN2:
		{
		    if(response==0)//Zurück
		    {
		        new string[440];
				format(string,sizeof(string),"Bei der Bank kannst du auch Geld anlegen. Angelegtes Geld kann sich richtig auszahlen!\n");
				format(string,sizeof(string),"%sDu erhälst angelegtes Geld nach 10 PayDays zurück. Zusätzlich erhälst du 20 Prozent deines angelegten Betrags.\n",string);
				format(string,sizeof(string),"%sDu kommst vorher jedoch nicht an das Geld. Legst du also 100.000$ an, erhälst du 120.000$ zurück.\n",string);
				format(string,sizeof(string),"%sAber aufgepasst! Holst du dein Geld nicht rechtzeitig ab, ist es für immer weg! Die Bank informiert dich nicht über den Status!",string);
		        ShowPlayerDialog(playerid,DIALOG_BANK_ANLEGEN,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem",string,"Anlegen","Zurück");
		    }
		    else if(response==1)//Anlegen
		    {
		        if(!IsNumeric(inputtext))return ShowPlayerDialog(playerid,DIALOG_BANK_ANLEGEN2,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","Wie viel Geld möchtest du anlegen?\n\nUngültige Eingabe.","Anlegen","Zurück");
    			if(SpielerInfo[playerid][sBankkonto] < strval(inputtext))return ShowPlayerDialog(playerid,DIALOG_BANK_ANLEGEN2,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","Wie viel Geld möchtest du anlegen?\n\nSo viel Geld hast du nicht auf dem Konto.","Anlegen","Zurück");
				if(strval(inputtext) < 100000 || strval(inputtext) > 1000000)return ShowPlayerDialog(playerid,DIALOG_BANK_ANLEGEN2,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","Wie viel Geld möchtest du anlegen?\n\nMindestens 100.000$. Maximal 1.000.000$.","Anlegen","Zurück");
				new string[128];
				SetPVarInt(playerid,"AnlegenBankMoney",floatround(strval(inputtext)*1.20));
		        format(string,sizeof(string),"Du würdest nach 10 PayDays insgesamt %d$ zurück bekommen.\nBeachte dass du dein Geld rechtzeitig abholst. Das Haus der Administration erstattet nichts zurück.",floatround(strval(inputtext)*1.10));
		        ShowPlayerDialog(playerid,DIALOG_BANK_ANLEGEN3,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem",string,"Anlegen","Zurück");
		    }
		}
		case DIALOG_BANK_ANLEGEN3:
		{
		    if(response==0){ShowPlayerDialog(playerid,DIALOG_BANK_ANLEGEN2,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","Wie viel Geld möchtest du anlegen?","Anlegen","Zurück");}//Zurück
			else if(response==1)//Anlegen
			{
			    SpielerInfo[playerid][sBankAngelegt] = 11;
			    SpielerInfo[playerid][sBankAngelegtMoney] = GetPVarInt(playerid,"AnlegenBankMoney");
			    SendClientMessage(playerid,COLOR_SUPER,"[Info]: Super! Du hast dein Geld erfolgreich angelegt.");
			    SendClientMessage(playerid,COLOR_SUPER,"[Info]: Achte darauf dein Geld rechtzeitig abzuholen, die Bank gibt dir keine Info wie lange es noch dauert!");
			}
		}
		case DIALOG_BANK_SPENDE:
		{
		    if(response==0){ShowPlayerDialog(playerid,DIALOG_BANKMENU,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","Girokonto\nGeschäftskonto\nFraktionskonto\nGruppenkonto\nHandyguthaben aufladen\nSpende an die IT (News/Events)\nGeld anlegen","Weiter","Schließen");}//Zurück
		    else if(response==1)//Spenden
		    {
		        if(!IsNumeric(inputtext))return ShowPlayerDialog(playerid,DIALOG_BANK_SPENDE,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","Welchen Betrag möchtest du an die Interglobal Television (IT) spenden?\n\nUngültige Eingabe.","Spenden","Zurück");
				if(strval(inputtext) < 1)return ShowPlayerDialog(playerid,DIALOG_BANK_SPENDE,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","Welchen Betrag möchtest du an die Interglobal Television (IT) spenden?\n\nUngültige Eingabe.","Spenden","Zurück");
				if(SpielerInfo[playerid][sBankkonto] < strval(inputtext))return ShowPlayerDialog(playerid,DIALOG_BANK_SPENDE,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","Welchen Betrag möchtest du an die Interglobal Television (IT) spenden?\n\nUngültige Eingabe.","Spenden","Zurück");
				FrakInfo[8][fiFrakKasse] += strval(inputtext);
				SpielerInfo[playerid][sBankkonto] -= strval(inputtext);
				new string[160];
				format(string,sizeof(string),"[Info]: {FFFFFF}Die Bank meldet eine Fraktionskontobewegung. %s hat gerade '$%d' gespendet.",SpielerInfo[playerid][sName],strval(inputtext));
				foreach(new i : Player)
				{
				    if(SpielerInfo[i][sFraktion] == 8)
				    {
				        SendClientMessage(i,COLOR_YELLOW,string);
				    }
				}
				format(string,sizeof(string),"[Info]: {FFFFFF}Du hast '$%d' an die Interglobal Television gespendet. Vielen Dank!",strval(inputtext));
				SendClientMessage(playerid,COLOR_YELLOW,string);
				if(strval(inputtext) > 100000)
				{
				    format(string,sizeof(string),"Wahnsinn! Die Interglobal Television informiert, dass %s über 100.000$ gespendet hat!",SpielerInfo[playerid][sName]);
				    SendClientMessageToAll(COLOR_NEWS,string);
				}
			}
		}
		case DIALOG_BANK_BIZAUSWAHL:
		{
		    if(response==0){DeletePVar(playerid,"BankAuswahl"); ShowPlayerDialog(playerid,DIALOG_BANKMENU,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","Girokonto\nGeschäftskonto\nFraktionskonto\nGruppenkonto\nHandyguthaben aufladen\nSpende an die IT (News/Events)\nGeld anlegen","Weiter","Schließen");}//Zurück
			else if(response==1)//Weiter
			{
				switch(listitem)
				{
					case 0://Tankstelle
					{
					    if(SpielerInfo[playerid][sTankstelle] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt keine Tankstelle.");
					    ShowPlayerDialog(playerid,DIALOG_BANK_AUSWAHL,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","Einzahlen\nAuszahlen\nKontoauszug","Weiter","Zurück");
					    SetPVarInt(playerid,"BankBiz",1);
					}
					case 1://Ammunation
					{
					    if(SpielerInfo[playerid][sAmmunation] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt kein Ammunation.");
	    				ShowPlayerDialog(playerid,DIALOG_BANK_AUSWAHL,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","Einzahlen\nAuszahlen\nKontoauszug","Weiter","Zurück");
					    SetPVarInt(playerid,"BankBiz",2);
					}
					case 2://24/7
					{
					    if(SpielerInfo[playerid][sStore] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt kein 24/7.");
	    				ShowPlayerDialog(playerid,DIALOG_BANK_AUSWAHL,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","Einzahlen\nAuszahlen\nKontoauszug","Weiter","Zurück");
					    SetPVarInt(playerid,"BankBiz",3);
					}
				}
			}
		}
		case DIALOG_BANK_AUSWAHL:
		{
		    if(response==0){ShowPlayerDialog(playerid,DIALOG_BANKMENU,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","Girokonto\nGeschäftskonto\nFraktionskonto\nGruppenkonto\nHandyguthaben aufladen\nSpende an die IT (News/Events)\nGeld anlegen","Weiter","Schließen");}//Zurück
			else if(response==1)//Weiter
			{
				switch(listitem)
				{
					case 0://Einzahlen
					{
					    if(GetPVarInt(playerid,"BankAuswahl") == 1)
					    {
					    	ShowPlayerDialog(playerid,DIALOG_BANK_EINZAHLEN,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Einzahlen","{FFFFFF}Bitte gebe den Betrag ein den du auf dein Girokonto einzahlen möchtest.","Weiter","Zurück");
						}
						else if(GetPVarInt(playerid,"BankAuswahl") == 2)
						{
						    ShowPlayerDialog(playerid,DIALOG_BANK_EINZAHLEN,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Einzahlen","{FFFFFF}Bitte gebe den Betrag ein den du auf dein Geschäftskonto einzahlen möchtest.","Weiter","Zurück");
						}
						else if(GetPVarInt(playerid,"BankAuswahl") == 3)
						{
						    ShowPlayerDialog(playerid,DIALOG_BANK_EINZAHLEN,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Einzahlen","{FFFFFF}Bitte gebe den Betrag ein den du auf dein Fraktionskonto einzahlen möchtest.","Weiter","Zurück");
						}
						else if(GetPVarInt(playerid,"BankAuswahl") == 4)
						{
						    ShowPlayerDialog(playerid,DIALOG_BANK_EINZAHLEN,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Einzahlen","{FFFFFF}Bitte gebe den Betrag ein den du auf dein Gruppenkonto einzahlen möchtest.","Weiter","Zurück");
						}
					}
					case 1://Auszahlen
					{
	    				if(GetPVarInt(playerid,"BankAuswahl") == 1)
					    {
					    	ShowPlayerDialog(playerid,DIALOG_BANK_AUSZAHLEN,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Auszahlen","{FFFFFF}Bitte gebe den Betrag ein den du von deinem Girokonto auszahlen möchtest.","Weiter","Zurück");
						}
						else if(GetPVarInt(playerid,"BankAuswahl") == 2)
						{
						    ShowPlayerDialog(playerid,DIALOG_BANK_AUSZAHLEN,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Auszahlen","{FFFFFF}Bitte gebe den Betrag ein den du von deinem Geschäftskonto auszahlen möchtest.","Weiter","Zurück");
						}
						else if(GetPVarInt(playerid,"BankAuswahl") == 3)
						{
						    ShowPlayerDialog(playerid,DIALOG_BANK_AUSZAHLEN,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Auszahlen","{FFFFFF}Bitte gebe den Betrag ein den du von deinem Fraktionskonto auszahlen möchtest.","Weiter","Zurück");
						}
						else if(GetPVarInt(playerid,"BankAuswahl") == 4)
						{
						    ShowPlayerDialog(playerid,DIALOG_BANK_AUSZAHLEN,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Auszahlen","{FFFFFF}Bitte gebe den Betrag ein den du von deinem Gruppenkonto auszahlen möchtest.","Weiter","Zurück");
						}
					}
					case 2://SEPA-Überweisung
					{
					    if(GetPVarInt(playerid,"BankAuswahl") == 1){ShowPlayerDialog(playerid,DIALOG_BANK_TRANSFER,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - SEPA-Überweisung","{FFFFFF}Bitte gebe die {007DFF}ID des Spielers{FFFFFF} an, an den du das Geld überweisen möchtest.","Weiter","Zurück");}
					    else ShowPlayerDialog(playerid,DIALOG_BANK_KONTOAUSZUG,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Kontoauszug","{FFFFFF}Ein Kontoauszug der Zentral Bank kostet dich 15$ Druckkosten.\nMöchtest du einen Kontoauszug drucken?","Weiter","Zurück");
					}
					case 3://Kontoauszug
					{
					    ShowPlayerDialog(playerid,DIALOG_BANK_KONTOAUSZUG,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Kontoauszug","{FFFFFF}Ein Kontoauszug der Zentral Bank kostet dich 15$ Druckkosten.\nMöchtest du einen Kontoauszug drucken?","Weiter","Zurück");
					}
				}
			}
		}
		case DIALOG_BANK_TRANSFER:
		{
		    if(response==0)//Zurück
		    {
		        ShowPlayerDialog(playerid,DIALOG_BANK_AUSWAHL,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","Einzahlen\nAuszahlen\nSEPA-Überweisung\nKontoauszug","Weiter","Zurück");
		    }
		    else if(response==1)//Weiter
		    {
		        if(!IsNumeric(inputtext))return ShowPlayerDialog(playerid,DIALOG_BANK_TRANSFER,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - SEPA-Überweisung","{FFFFFF}Bitte gebe die {007DFF}ID des Spielers{FFFFFF} an, an dem du das Geld überweisen möchtest.","Weiter","Zurück");
				new pID = strval(inputtext);
				if(!IsPlayerConnectedEx(pID) || pID == playerid || IsPlayerNPC(pID))return ShowPlayerDialog(playerid,DIALOG_BANK_TRANSFER,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - SEPA-Überweisung","{FFFFFF}Bitte gebe die {007DFF}ID des Spielers{FFFFFF} an, an dem du das Geld überweisen möchtest.\n\nDie angegebene ID ist leider nicht gültig.","Weiter","Zurück");
				new string[128];
				format(string,sizeof(string),"{FFFFFF}Bitte gebe {007DFF}den Betrag{FFFFFF} an, den du an {007DFF}%s{FFFFFF} überweisen möchtest.",SpielerInfo[pID][sName]);
				ShowPlayerDialog(playerid,DIALOG_BANK_TRANSFERB,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - SEPA-Überweisung",string,"Fertig","Zurück");
				SetPVarInt(playerid,"SEPAanSpielerID",pID);
			}
		}
		case DIALOG_BANK_TRANSFERB:
		{
		    new string[128], pID = GetPVarInt(playerid,"SEPAanSpielerID");
			if(response==0)//Zurück
			{
			    ShowPlayerDialog(playerid,DIALOG_BANK_TRANSFER,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - SEPA-Überweisung","{FFFFFF}Bitte gebe die {007DFF}ID des Spielers{FFFFFF} an, an den du das Geld überweisen möchtest.","Weiter","Zurück");
				DeletePVar(playerid,"SEPAanSpielerID");
			}
			else if(response==1)//Fertig
			{
			    if(!IsNumeric(inputtext))return ShowPlayerDialog(playerid,DIALOG_BANK_TRANSFER,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - SEPA-Überweisung","{FFFFFF}Bitte gebe die {007DFF}ID des Spielers{FFFFFF} an, an dem du das Geld überweisen möchtest.\n\nDie angegebene ID ist leider nicht gültig.","Weiter","Zurück");
			    if(!IsPlayerConnectedEx(pID))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Der angegebene Spieler ist mittlerweile offline gegangen.");
				new Betrag = strval(inputtext);
				if(Betrag < 0 || Betrag > 1000000 || SpielerInfo[playerid][sBankkonto] < Betrag)
				{
				    format(string,sizeof(string),"{FFFFFF}Bitte gebe {007DFF}den Betrag{FFFFFF} an, den du an {007DFF}%s{FFFFFF} überweisen möchtest.\n\nUngültige Eingabe.",SpielerInfo[pID][sName]);
					ShowPlayerDialog(playerid,DIALOG_BANK_TRANSFERB,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - SEPA-Überweisung",string,"Fertig","Zurück");
					DeletePVar(playerid,"SEPAanSpielerID");
					return 1;
				}
				SpielerInfo[playerid][sBankkonto] -= Betrag; SpielerInfo[pID][sBankkonto] += Betrag;
				format(string,sizeof(string),"[SEPA-Überweisung]: {FFFFFF}Du hast %d$ an %s überwiesen. Er wurde über deine Überweisung benachrichtigt.",Betrag,SpielerInfo[pID][sName]);
				SendClientMessage(playerid,COLOR_YELLOW,string);
				format(string,sizeof(string),"[SEPA-Überweisung]: {FFFFFF}%s hat vor wenigen Sekunden $%d auf dein Girokonto überwiesen.",SpielerInfo[playerid][sName],Betrag);
				SendClientMessage(pID,COLOR_YELLOW,string);
				format(string,sizeof(string),"[Info]: {FFFFFF}%s hat gerade $%d auf das Konto von %s überwiesen.",SpielerInfo[playerid][sName],Betrag,SpielerInfo[pID][sName]);
				SendAdminMessage(COLOR_RED,string);
				format(string,sizeof(string),"%s hat $%d auf das Konto von %s überwiesen.",SpielerInfo[playerid][sName],Betrag,SpielerInfo[pID][sName]);
				CreateServerLogEntry("BANKKONTO_LOG", string);
				DeletePVar(playerid,"SEPAanSpielerID");
			}
		}
		case DIALOG_BANK_GUTHABEN:
		{
		    if(response==0){ShowPlayerDialog(playerid,DIALOG_BANKMENU,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","Girokonto\nGeschäftskonto\nFraktionskonto\nGruppenkonto\nHandyguthaben aufladen\nSpende an die IT (News/Events)\nGeld anlegen","Weiter","Schließen");}//Zurück
			else if(response==1)//Weiter
			{
			    new str[128];
  				if(strval(inputtext) > 0 && strval(inputtext) < 61 && IsNumeric(inputtext))
				{
				    if(SpielerInfo[playerid][sBankkonto] >= strval(inputtext))
				    {
				        SpielerInfo[playerid][sBankkonto] -= strval(inputtext);
				        SpielerInfo[playerid][sGuthaben] += strval(inputtext);
						format(str,sizeof(str),"[Info]: {FFFFFF}Die Zahlung war erfolgreich. Neues Handyguthaben: {FF0000}%d$",SpielerInfo[playerid][sGuthaben]);
						SendClientMessage(playerid,COLOR_INFO,str);
				    }
				    else
				    {
				        ShowPlayerDialog(playerid,DIALOG_BANK_GUTHABEN,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","Wie viel Handyguthaben möchtest du aufladen ?\n\n{FF0000}Du hast nicht so viel Geld auf der Bank.","Bestätigen","Zurück");
				    }
				}
				else
				{
				    ShowPlayerDialog(playerid,DIALOG_BANK_GUTHABEN,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","Wie viel Handyguthaben möchtest du aufladen ?\n\n{FF0000}Ungültiger Betrag. (1-60$)","Bestätigen","Zurück");
				}
			}
		}
		case DIALOG_BANK_EINZAHLEN:
		{
		    if(response==0)//Zurück
		    {
		        if(GetPVarInt(playerid,"BankAuswahl") == 1){ShowPlayerDialog(playerid,DIALOG_BANK_AUSWAHL,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","Einzahlen\nAuszahlen\nSEPA-Überweisung\nKontoauszug","Weiter","Zurück");}
		        else ShowPlayerDialog(playerid,DIALOG_BANK_AUSWAHL,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","Einzahlen\nAuszahlen\nSEPA-Überweisung\nKontoauszug","Weiter","Zurück");
		    }
		    else if(response==1)//Weiter
		    {
		        if(strval(inputtext) > 0 && strval(inputtext) <= 1000000 && IsNumeric(inputtext))
				{
		            new Betrag = strval(inputtext);
				    if(GetPlayerMoneyEx(playerid) >= Betrag)
		            {
		                new string[164];
    					if(GetPVarInt(playerid,"BankAuswahl") == 1)
					    {
							SpielerInfo[playerid][sBankkonto] += Betrag;
							SetPVarInt(playerid,"NoPAYBACK",1);
							GivePlayerMoneyEx(playerid,-Betrag);
							format(string,sizeof(string),"{FFFFFF}Du hast {007DFF}%d${FFFFFF} auf dein Bankkonto eingezahlt. Neuer Kontostand: {007DFF}%d$",Betrag,SpielerInfo[playerid][sBankkonto]);
							ShowPlayerDialog(playerid,DIALOG_BANKM,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem",string,"Weiter","");
						}
						else if(GetPVarInt(playerid,"BankAuswahl") == 2)
						{
						    if(GetPVarInt(playerid,"BankBiz") == 1)//Tankstelle
						    {
						        new tsid = SpielerInfo[playerid][sTankstelle];
						        TankstellenInfo[tsid][tsKasse] += Betrag;
						        SetPVarInt(playerid,"NoPAYBACK",1);
								GivePlayerMoneyEx(playerid,-Betrag);
								format(string,sizeof(string),"{FFFFFF}Du hast {007DFF}%d${FFFFFF} auf dein Geschäftskonto eingezahlt. Neuer Kontostand: {007DFF}%d$",Betrag,TankstellenInfo[tsid][tsKasse]);
								ShowPlayerDialog(playerid,DIALOG_BANKM,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem",string,"Weiter","");
							}
			    			else if(GetPVarInt(playerid,"BankBiz") == 2)//Ammunation
						    {
						        new an = SpielerInfo[playerid][sAmmunation];
						        AmmunationInfo[an][amKasse] += Betrag;
						        SetPVarInt(playerid,"NoPAYBACK",1);
								GivePlayerMoneyEx(playerid,-Betrag);
								format(string,sizeof(string),"{FFFFFF}Du hast {007DFF}%d${FFFFFF} auf dein Geschäftskonto eingezahlt. Neuer Kontostand: {007DFF}%d$",Betrag,AmmunationInfo[an][amKasse]);
								ShowPlayerDialog(playerid,DIALOG_BANKM,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem",string,"Weiter","");
							}
   							else if(GetPVarInt(playerid,"BankBiz") == 3)//24/7
						    {
						        new an = SpielerInfo[playerid][sStore];
						        StoreInfo[an][siKasse] += Betrag;
						        SetPVarInt(playerid,"NoPAYBACK",1);
								GivePlayerMoneyEx(playerid,-Betrag);
								format(string,sizeof(string),"{FFFFFF}Du hast {007DFF}%d${FFFFFF} auf dein Geschäftskonto eingezahlt. Neuer Kontostand: {007DFF}%d$",Betrag,StoreInfo[an][siKasse]);
								ShowPlayerDialog(playerid,DIALOG_BANKM,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem",string,"Weiter","");
							}
						}
						else if(GetPVarInt(playerid,"BankAuswahl") == 3)
						{
							FrakInfo[SpielerInfo[playerid][sFraktion]][fiFrakKasse] += Betrag;
							SetPVarInt(playerid,"NoPAYBACK",1);
							GivePlayerMoneyEx(playerid,-Betrag);
							format(string,sizeof(string),"{FFFFFF}Du hast {007DFF}%d${FFFFFF} auf dein Fraktionskonto eingezahlt. Neuer Kontostand: {007DFF}%d$",Betrag,FrakInfo[SpielerInfo[playerid][sFraktion]][fiFrakKasse]);
							ShowPlayerDialog(playerid,DIALOG_BANKM,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem",string,"Weiter","");
							format(string,sizeof(string),"[Fraktion]: {FFFFFF}%s %s hat gerade $%d auf das Fraktionskonto eingezahlt!",RangName(playerid),SpielerInfo[playerid][sName],Betrag);
							foreach(new i : Player)
							{
							    if(SpielerInfo[i][sFraktion] == SpielerInfo[playerid][sFraktion])
							    {
							        SendClientMessage(i,COLOR_SUPER,string);
							    }
							}
						}
						else if(GetPVarInt(playerid,"BankAuswahl") == 4)
						{
							GruppenInfo[SpielerInfo[playerid][sGruppe]][gKasse] += Betrag;
							SetPVarInt(playerid,"NoPAYBACK",1);
							GivePlayerMoneyEx(playerid,-Betrag);
							format(string,sizeof(string),"{FFFFFF}Du hast {007DFF}%d${FFFFFF} auf dein Gruppenkonto eingezahlt. Neuer Kontostand: {007DFF}%d$",Betrag,GruppenInfo[SpielerInfo[playerid][sGruppe]][gKasse]);
							ShowPlayerDialog(playerid,DIALOG_BANKM,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem",string,"Weiter","");
						}
					}
					else ShowPlayerDialog(playerid,DIALOG_BANKM,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","{FFFFFF}Du hast nicht soviel Geld bei dir.","Weiter","");
				}
				else
				{
				    ShowPlayerDialog(playerid,DIALOG_BANK_EINZAHLEN,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","{FFFFFF}Bitte gebe den Betrag ein den du auf dein Konto einzahlen möchtest.","Weiter","Zurück");
				}
		    }
		}
		case DIALOG_BANK_AUSZAHLEN:
		{
		    if(response==0)//Zurück
		    {
		        if(GetPVarInt(playerid,"BankAuswahl") == 1){ShowPlayerDialog(playerid,DIALOG_BANK_AUSWAHL,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","Einzahlen\nAuszahlen\nSEPA-Überweisung\nKontoauszug","Weiter","Zurück");}
		        else ShowPlayerDialog(playerid,DIALOG_BANK_AUSWAHL,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","Einzahlen\nAuszahlen\nSEPA-Überweisung\nKontoauszug","Weiter","Zurück");
		    }
		    else if(response==1)//Weiter
		    {
		        new atmid = GetPVarInt(playerid,"ATMID");
		        if(strval(inputtext) > 0 && strval(inputtext) <= 1000000 && IsNumeric(inputtext))
				{
				    if(atmid == 1001 || ATMInfo[atmid][atmGeld] >= strval(inputtext) || GetPVarInt(playerid,"Bankschalter") == 1)
				    {
					    new string[164];
						if(GetPVarInt(playerid,"BankAuswahl") == 1)
		    			{
							new Betrag = strval(inputtext);
							if(Betrag > SpielerInfo[playerid][sBankkonto])return ShowPlayerDialog(playerid,DIALOG_BANKM,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","{FFFFFF}Auf deinem Bankkonto liegt nicht soviel Geld.","Weiter","");
							DeletePVar(playerid,"ATMID");
							ATMInfo[atmid][atmGeld] -= Betrag;
							SaveATMById(atmid);
							SpielerInfo[playerid][sBankkonto] -= Betrag;
							GivePlayerMoneyEx(playerid,Betrag);
							format(string,sizeof(string),"{FFFFFF}Du hast {007DFF}%d${FFFFFF} von deinem Bankkonto abgehoben. Neuer Kontostand: {007DFF}%d$",Betrag,SpielerInfo[playerid][sBankkonto]);
							ShowPlayerDialog(playerid,DIALOG_BANKM,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem",string,"Weiter","");
							format(string,sizeof(string),"%s hat $%d von seinem Girokonto abgehoben.",SpielerInfo[playerid][sName],Betrag);
							CreateServerLogEntry("BANKKONTO_LOG", string);
						}
						else if(GetPVarInt(playerid,"BankAuswahl") == 2)
						{
						    new Betrag = strval(inputtext);
						    if(GetPVarInt(playerid,"BankBiz") == 1)//Tankstelle
							{
							    new tsid = SpielerInfo[playerid][sTankstelle];
								if(Betrag > TankstellenInfo[tsid][tsKasse])return ShowPlayerDialog(playerid,DIALOG_BANKM,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","{FFFFFF}Auf dem Geschäftskonto liegt nicht soviel Geld.","Weiter","");
								TankstellenInfo[tsid][tsKasse] -= Betrag;
								ATMInfo[atmid][atmGeld] -= Betrag;
								SaveATMById(atmid);
								GivePlayerMoneyEx(playerid,Betrag);
								format(string,sizeof(string),"{FFFFFF}Du hast {007DFF}%d${FFFFFF} von deinem Geschäftskonto abgehoben. Neuer Kontostand: {007DFF}%d$",Betrag,TankstellenInfo[tsid][tsKasse]);
								ShowPlayerDialog(playerid,DIALOG_BANKM,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem",string,"Weiter","");
								format(string,sizeof(string),"%s hat $%d von seinem Geschäftskonto (Tankstelle) abgehoben.",SpielerInfo[playerid][sName],Betrag);
								CreateServerLogEntry("BANKKONTO_LOG", string);
							}
							else if(GetPVarInt(playerid,"BankBiz") == 2)//Ammunation
							{
							    new an = SpielerInfo[playerid][sAmmunation];
								if(Betrag > AmmunationInfo[an][amKasse])return ShowPlayerDialog(playerid,DIALOG_BANKM,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","{FFFFFF}Auf dem Geschäftskonto liegt nicht soviel Geld.","Weiter","");
								DeletePVar(playerid,"ATMID");
								AmmunationInfo[an][amKasse] -= Betrag;
								ATMInfo[atmid][atmGeld] -= Betrag;
								SaveATMById(atmid);
								GivePlayerMoneyEx(playerid,Betrag);
								format(string,sizeof(string),"{FFFFFF}Du hast {007DFF}%d${FFFFFF} von deinem Geschäftskonto abgehoben. Neuer Kontostand: {007DFF}%d$",Betrag,AmmunationInfo[an][amKasse]);
								ShowPlayerDialog(playerid,DIALOG_BANKM,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem",string,"Weiter","");
								format(string,sizeof(string),"%s hat $%d von seinem Geschäftskonto (Ammunation) abgehoben.",SpielerInfo[playerid][sName],Betrag);
								CreateServerLogEntry("BANKKONTO_LOG", string);
							}
							else if(GetPVarInt(playerid,"BankBiz") == 3)//24/7
							{
							    new an = SpielerInfo[playerid][sStore];
								if(Betrag > StoreInfo[an][siKasse])return ShowPlayerDialog(playerid,DIALOG_BANKM,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","{FFFFFF}Auf dem Geschäftskonto liegt nicht soviel Geld.","Weiter","");
        						DeletePVar(playerid,"ATMID");
								StoreInfo[an][siKasse] -= Betrag;
								ATMInfo[atmid][atmGeld] -= Betrag;
								SaveATMById(atmid);
								GivePlayerMoneyEx(playerid,Betrag);
								format(string,sizeof(string),"{FFFFFF}Du hast {007DFF}%d${FFFFFF} von deinem Geschäftskonto abgehoben. Neuer Kontostand: {007DFF}%d$",Betrag,StoreInfo[an][siKasse]);
								ShowPlayerDialog(playerid,DIALOG_BANKM,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem",string,"Weiter","");
								format(string,sizeof(string),"%s hat $%d von seinem Geschäftskonto (24/7 Store) abgehoben.",SpielerInfo[playerid][sName],Betrag);
								CreateServerLogEntry("BANKKONTO_LOG", string);
							}
						}
						else if(GetPVarInt(playerid,"BankAuswahl") == 3)
						{
						    if(SpielerInfo[playerid][sRank] != 7)return NichtBerechtigt
							new Betrag = strval(inputtext);
							if(Betrag > FrakInfo[SpielerInfo[playerid][sFraktion]][fiFrakKasse])return ShowPlayerDialog(playerid,DIALOG_BANKM,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","{FFFFFF}Auf dem Fraktionskonto liegt nicht soviel Geld.","Weiter","");
                            DeletePVar(playerid,"ATMID");
							FrakInfo[SpielerInfo[playerid][sFraktion]][fiFrakKasse] -= Betrag;
							ATMInfo[atmid][atmGeld] -= Betrag;
							SaveATMById(atmid);
							GivePlayerMoneyEx(playerid,Betrag);
							format(string,sizeof(string),"{FFFFFF}Du hast {007DFF}%d${FFFFFF} von deinem Fraktionskonto abgehoben. Neuer Kontostand: {007DFF}%d$",Betrag,FrakInfo[SpielerInfo[playerid][sFraktion]][fiFrakKasse]);
							ShowPlayerDialog(playerid,DIALOG_BANKM,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem",string,"Weiter","");
                            new admsstring[128];
							format(admsstring,sizeof(admsstring),"[Achtung]: {FFFFFF}%s hat gerade '$%d' von seinem Fraktionskonto 'FrakID: %i' abgehoben!",SpielerInfo[playerid][sName],Betrag,SpielerInfo[playerid][sFraktion]);
							SendAdminMessage(COLOR_RED,admsstring);
							format(string,sizeof(string),"%s hat $%d von seinem Fraktionskonto (ID %d) abgehoben.",SpielerInfo[playerid][sName],Betrag,SpielerInfo[playerid][sFraktion]);
							CreateServerLogEntry("BANKKONTO_LOG", string);
						}
						else if(GetPVarInt(playerid,"BankAuswahl") == 4)
						{
						    if(SpielerInfo[playerid][sGLeader] != 0 || SpielerInfo[playerid][sGRank] == 7)
						    {
								new Betrag = strval(inputtext);
								if(Betrag > GruppenInfo[SpielerInfo[playerid][sGruppe]][gKasse])return ShowPlayerDialog(playerid,DIALOG_BANKM,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","{FFFFFF}Auf dem Gruppenkonto liegt nicht soviel Geld.","Weiter","");
								DeletePVar(playerid,"ATMID");
								GruppenInfo[SpielerInfo[playerid][sGruppe]][gKasse] -= Betrag;
								ATMInfo[atmid][atmGeld] -= Betrag;
								SaveATMById(atmid);
								GivePlayerMoneyEx(playerid,Betrag);
								format(string,sizeof(string),"{FFFFFF}Du hast {007DFF}%d${FFFFFF} von deinem Gruppenkonto abgehoben. Neuer Kontostand: {007DFF}%d$",Betrag,GruppenInfo[SpielerInfo[playerid][sGruppe]][gKasse]);
								ShowPlayerDialog(playerid,DIALOG_BANKM,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem",string,"Weiter","");
								format(string,sizeof(string),"%s hat $%d von seinem Gruppenkonto abgehoben.",SpielerInfo[playerid][sName],Betrag);
								CreateServerLogEntry("BANKKONTO_LOG", string);
							}
							else NichtBerechtigt
						}
					}
					else
					{
						ShowPlayerDialog(playerid,DIALOG_BANK_AUSZAHLEN,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","{FFFFFF}Bitte gebe den Betrag ein den du von deinem Konto auszahlen möchtest.\n\n{FF0000}Das tut uns leid, aber dieser Bankautomat hat leider nicht mehr soviel Geld.","Weiter","Zurück");
					}
				}
				else
				{
				    ShowPlayerDialog(playerid,DIALOG_BANK_AUSZAHLEN,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","{FFFFFF}Bitte gebe den Betrag ein den du von deinem Konto auszahlen möchtest.\n\n{FF0000}Die Auszahlung muss zwischen 1$ und 1.000.000$ betragen.","Weiter","Zurück");
				}
		    }
		}
		case DIALOG_BANK_KONTOAUSZUG:
		{
		    if(response==0)//Zurück
		    {
		        if(GetPVarInt(playerid,"BankAuswahl") == 1){ShowPlayerDialog(playerid,DIALOG_BANK_AUSWAHL,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","Einzahlen\nAuszahlen\nSEPA-Überweisung\nKontoauszug","Weiter","Zurück");}
		        else ShowPlayerDialog(playerid,DIALOG_BANK_AUSWAHL,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","Einzahlen\nAuszahlen\nSEPA-Überweisung\nKontoauszug","Weiter","Zurück");
		    }
		    else if(response==1)//Weiter
		    {
		        if(GetPlayerMoneyEx(playerid) >= 15)
		        {
 					if(GetPVarInt(playerid,"BankAuswahl") == 1)
	    			{
				        new string[100];
				        SetPVarInt(playerid,"NoPAYBACK",1);
				        GivePlayerMoneyEx(playerid,-15);
				        format(string,sizeof(string),"Dein aktueller Kontostand beträgt: %d$",SpielerInfo[playerid][sBankkonto]);
				        ShowPlayerDialog(playerid,DIALOG_BANKM,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem",string,"Weiter","");
					}
					else if(GetPVarInt(playerid,"BankAuswahl") == 2)
					{
					    new string[100];
					    if(GetPVarInt(playerid,"BankBiz") == 1)//Tankstelle
					    {
					        SetPVarInt(playerid,"NoPAYBACK",1);
					        GivePlayerMoneyEx(playerid,-15);
					        format(string,sizeof(string),"Der aktueller Geschäftskonto beträgt: %d$",TankstellenInfo[SpielerInfo[playerid][sTankstelle]][tsKasse]);
					        ShowPlayerDialog(playerid,DIALOG_BANKM,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem",string,"Weiter","");
						}
						else if(GetPVarInt(playerid,"BankBiz") == 2)//Ammunation
					    {
					        SetPVarInt(playerid,"NoPAYBACK",1);
					        GivePlayerMoneyEx(playerid,-15);
					        format(string,sizeof(string),"Der aktueller Geschäftskonto beträgt: %d$",AmmunationInfo[SpielerInfo[playerid][sAmmunation]][amKasse]);
					        ShowPlayerDialog(playerid,DIALOG_BANKM,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem",string,"Weiter","");
						}
						else if(GetPVarInt(playerid,"BankBiz") == 3)//24/7
					    {
					        SetPVarInt(playerid,"NoPAYBACK",1);
					        GivePlayerMoneyEx(playerid,-15);
					        format(string,sizeof(string),"Der aktueller Geschäftskonto beträgt: %d$",StoreInfo[SpielerInfo[playerid][sStore]][siKasse]);
					        ShowPlayerDialog(playerid,DIALOG_BANKM,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem",string,"Weiter","");
						}
					}
					else if(GetPVarInt(playerid,"BankAuswahl") == 3)
					{
     					new string[100];
     					SetPVarInt(playerid,"NoPAYBACK",1);
				        GivePlayerMoneyEx(playerid,-15);
				        format(string,sizeof(string),"Der aktueller Fraktionskontostand beträgt: %d$",FrakInfo[SpielerInfo[playerid][sFraktion]][fiFrakKasse]);
				        ShowPlayerDialog(playerid,DIALOG_BANKM,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem",string,"Weiter","");
					}
					else if(GetPVarInt(playerid,"BankAuswahl") == 4)
					{
     					new string[100];
     					SetPVarInt(playerid,"NoPAYBACK",1);
				        GivePlayerMoneyEx(playerid,-15);
				        format(string,sizeof(string),"Der aktueller Gruppenkontostand beträgt: %d$",GruppenInfo[SpielerInfo[playerid][sGruppe]][gKasse]);
				        ShowPlayerDialog(playerid,DIALOG_BANKM,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem",string,"Weiter","");
					}
				}
				else ShowPlayerDialog(playerid,DIALOG_BANKM,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","{FFFFFF}Du kannst dir den Kontoauszug nicht leisten.","Weiter","");
		    }
		}
		case DIALOG_BANKM:
		{
		    if(response==1)//Weiter
		    {
		        ShowPlayerDialog(playerid,DIALOG_BANK_AUSWAHL,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","Einzahlen\nAuszahlen\nSEPA-Überweisung\nKontoauszug","Weiter","Zurück");
		    }
		}
		case DIALOG_BANKKONTO_ERSTELLEN:
		{
			if(response==0){}//Zurück
			else if(response==1)//Weiter
			{
			    if(strlen(inputtext) > 0 && strlen(inputtext) < 5 && IsNumeric(inputtext))
			    {
			        if(strval(inputtext) < 1)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Aus Sicherheitsgründen ist dieser PIN nicht möglich.");
			        if(SpielerInfo[playerid][sTutorial] == 5)
			        {
			            SendClientMessage(playerid,COLOR_YELLOW,"[Tutorial]: {FFFFFF}Über dein privates Girokonto laufen viele Dinge. Du bezahlst Steuern an den Staat und erhälst Zinsen auf dein");
			            SendClientMessage(playerid,COLOR_YELLOW,"[Tutorial]: {FFFFFF}Geld das auf deinem Girokonto liegt. Deine Nebenjob-Gehälter erhälst du jeden PayDay auf dein Girokonto überwiesen.");
			            SendClientMessage(playerid,COLOR_YELLOW,"[Tutorial]: {FFFFFF}Du kannst im User Control Panel jederzeit fast all deine Kontobewegungen, auch deine gezahlten Steuern, nochmal einsehen.");
						SpielerInfo[playerid][sTutorial] = 6;
						ShowPlayerTutorial(playerid);
					}
			        SpielerInfo[playerid][sBankPin] = strval(inputtext);
			        ShowPlayerDialog(playerid,DIALOG_BANKLOGIN,DIALOG_STYLE_PASSWORD,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","{FFFFFF}Bitte gebe deinen PIN für dein Konto an um fortzufahren.","Weiter","Zurück");
			    }
			    else
			    {
			        ShowPlayerDialog(playerid,DIALOG_BANKKONTO_ERSTELLEN,DIALOG_STYLE_PASSWORD,"{007DFF}"SERV_NAME"{FFFFFF} - Banksystem","{FFFFFF}Du besitzt derzeit noch kein Bankkonto. Damit du deine Finanzen in Zukunft lagern und auch besser\nverwalten kannst, musst du dir ein Konto anlegen. Gebe dazu einen 4-Stelligen gewünschten Zahlen-PIN ein.\n\n{FF0000}Der von dir gewählte PIN ist ungültig.","Weiter","Zurück");
			    }
			}
		}
		case DIALOG_FAHRZEUG:
		{
            if(response==0){}//Zurück
			else if(response==1)//Weiter
			{
			    new veh = GetPlayerVehicleID(playerid), string[264];
				switch(listitem)
				{
					case 0://Motor
					{
					    //OnPlayerCommandText(playerid, "/motor");
						PC_EmulateCommand(playerid, "/motor");
	 				}
					case 1://Licht
					{
					    //OnPlayerCommandText(playerid, "/licht");
						PC_EmulateCommand(playerid, "/licht");
	 				}
					case 2://Türen
					{
					    new carid = GetPlayerVehicleID(playerid);
    					if(strlen(FahrzeugInfo[carid][fBesitzer]) != 0)
						{
						   // OnPlayerCommandText(playerid, "/carlock");
							PC_EmulateCommand(playerid, "/carlock");
						}
						else if(FahrzeugInfo[carid][fFraktion] != 0)
						{
						//    OnPlayerCommandText(playerid, "/flock");
							PC_EmulateCommand(playerid, "/flock");
						}
						else if(FahrzeugInfo[carid][fGruppe] != 0)
						{
						//    OnPlayerCommandText(playerid, "/glock");
							PC_EmulateCommand(playerid, "/glock");
						}
						else
						{
							PC_EmulateCommand(playerid, "/lock");
						}
	 				}
					case 3://Motorhaube
					{
   						GetVehicleParamsEx(veh, engine, lights, alarm, doors, bonnet, boot, objective);
   						if(Motorhaube[veh] == false)
   						{
   						    Motorhaube[veh] = true;
   						    SetVehicleParamsEx(veh, engine, lights, alarm, doors, true, boot, objective);
   						}
   						else
   						{
					    	Motorhaube[veh] = false;
   						    SetVehicleParamsEx(veh, engine, lights, alarm, doors, false, boot, objective);
						}
	 				}
					case 4://Koferraum
					{
					    GetVehicleParamsEx(veh, engine, lights, alarm, doors, bonnet, boot, objective);
					    if(GetPVarInt(playerid,"PizzaAusliefern") == 1 && PizzaAusgeliefert[playerid] < 6)
   						{
   						    new Float:x, Float:y, Float:z;
		    				GetXYInFrontOfVehicle(GetPVarInt(playerid,"PizzaAuto"),x,y,z,-2.02);
            				SetPlayerCheckpointEx(playerid,x,y,z,1.5);
            				PizzaKofferraumPos[playerid][0] = x;
            				PizzaKofferraumPos[playerid][1] = y;
            				PizzaKofferraumPos[playerid][2] = z;
            				Kofferraum[veh] = true;
            				SendClientMessage(playerid,COLOR_SUPER,"Begebe dich nun zum Kofferraum um die Pizza für den Kunden rauszuholen.");
            				SetVehicleParamsEx(veh, engine, lights, alarm, doors, bonnet, true, objective);
						}
						else
						{
	   						if(Kofferraum[veh] == false)
	   						{
	   						    Kofferraum[veh] = true;
	   						    SetVehicleParamsEx(veh, engine, lights, alarm, doors, bonnet, true, objective);
	   						}
	   						else
	   						{
						    	Kofferraum[veh] = false;
	   						    SetVehicleParamsEx(veh, engine, lights, alarm, doors, bonnet, false, objective);
	   						}
						}
	 				}
					case 5://Radio
					{
					//    OnPlayerCommandText(playerid, "/carradio");
						PC_EmulateCommand(playerid, "/carradio");
	 				}
	 				case 6:
	 				{
	 				FahrzeugInfo[veh][fNeonStatus] = true;
	 				}
				}
		        format(string,sizeof(string),"{FFFFFF}Motor:		[%s{FFFFFF}]\nLicht:		[%s{FFFFFF}]\nTüren:		[%s{FFFFFF}]\nMotorhaube:	[%s{FFFFFF}]\nKofferraum:	[%s{FFFFFF}]\nRadio:		[%s{FFFFFF}]\nNeon:		[%s{FFFFFF}]",FahrzeugStatus(1,veh),FahrzeugStatus(2,veh),FahrzeugStatus(3,veh),FahrzeugStatus(4,veh),FahrzeugStatus(5,veh),FahrzeugStatus(6,veh),FahrzeugStatus(7,veh));
				ShowPlayerDialog(playerid,DIALOG_FAHRZEUG,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fahrzeugverwaltung",string,"Bestätigen","Abbrechen");
			}
		}
		case DIALOG_CARRADIO_INPUT_URL:
		{
			if(response)
			{
				if(strlen(inputtext) < 0 || strlen(inputtext) > 128)
				{
					ShowPlayerDialog(playerid,DIALOG_CARRADIO_INPUT_URL, DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fahrzeugradio - Eigene URL","Gib deine eigene URL deines gewünschten Radiosenders ein:\nFalsche Eingabe!","Abspielen","Abbrechen");
					return 1;
				}
				new vehId = GetPlayerVehicleID(playerid);
				format(CarRadioUrl[vehId], 128, "%s", inputtext);

				foreach(new i : Player)
				{
					if(GetPlayerVehicleID(i) == vehId)
					{
						PlayAudioStreamForPlayer(i, CarRadioUrl[vehId]);
						GameTextForPlayer(i, "~g~CustomRadio", 3000, 3);
					}
				}
				CarRadio[vehId] = 999;
				Radio[vehId] = true;
			}
			return 1;
		}
		case DIALOG_CARRADIO:
		{
		    if(response==0){}//Abbrchen
		    else if(response==1)
		    {
				if(listitem < playerRadioMax[playerid])
				{
					SelectVehicleRadio(playerid, listitem);
				}
				else if(listitem == playerRadioMax[playerid])
				{
					ShowPlayerDialog(playerid,DIALOG_CARRADIO_INPUT_URL, DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fahrzeugradio - Eigene URL","Gib deine eigene URL deines gewünschten Radiosenders ein:","Abspielen","Abbrechen");
				}
				else
				{
					foreach(new i : Player)
					{
					    if(GetPlayerVehicleID(i) == GetPlayerVehicleID(playerid))
					    {
							StopAudioStreamForPlayer(i);
							GameTextForPlayer(i, "~r~Radio ausgeschaltet", 3000, 3);
						}
					}
					CarRadio[GetPlayerVehicleID(playerid)] = 0;
					Radio[GetPlayerVehicleID(playerid)] = false;
				}
			}
			return 1;
		}
		case DIALOG_GEBIET:
		{
		    if(response==0){}//Schliessen
		    else if(response==1)
		    {
		        new Zone = GetPVarInt(playerid,"GBInfoZone");
		        switch(listitem)
		        {
		            case 0:
		            {
		                new string[230];
		                format(string,sizeof(string),"Dieses Gebiet hat die ID: %d - Bitte gebe Sie bei Gesprächen eines Admins immer mit an!",Zone);
		                SendClientMessage(playerid,COLOR_BLUE,string);
						if(GangZoneInfo[Zone][gzLastFight] > 0)
						{
							format(string,sizeof(string),"Besitzer: 	%s\nWert:		%d\nDieses Ganggebiet ist erst wieder in %d Minuten angreifbar!",FrakName(GangZoneInfo[Zone][gzOwner]),GangZoneInfo[Zone][gzValue],GangZoneInfo[Zone][gzLastFight]);
							ShowPlayerDialog(playerid,9982,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",string,"Schliessen","");
						}
      					else if(GangZoneInfo[Zone][gzFightTime] < 1)
						{
						    format(string,sizeof(string),"Besitzer: 	%s\nWert:		%d\nDieses Ganggebiet kann mit '/gangfight' sofort angegriffen werden!",FrakName(GangZoneInfo[Zone][gzOwner]),GangZoneInfo[Zone][gzValue],GangZoneInfo[Zone][gzLastFight]);
                            ShowPlayerDialog(playerid,9982,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",string,"Schliessen","");
						}
						else if(GangZoneInfo[Zone][gzFightTime] > 0)
						{
						    format(string,sizeof(string),"Besitzer: 	%s\nWert:		%d\nIn diesem Ganggebiet findent zurzeit ein Kampf statt.\n\nAngreifer: '%s' mit %d Punkten. Der Besitzer hat %d Punkte!"
							,FrakName(GangZoneInfo[Zone][gzOwner]),GangZoneInfo[Zone][gzValue],FrakName(GangZoneInfo[Zone][gzAttacker]),GangZoneInfo[Zone][gzAttackerPunkte],GangZoneInfo[Zone][gzOwnerPunkte]);
                            ShowPlayerDialog(playerid,9982,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",string,"Schliessen","");
						}
					}
					case 1:
					{
					    if(GangZoneInfo[Zone][gzValue] < 1)return SendClientMessage(playerid,COLOR_RED,"Der Mindestwert für eine Transaktion beträgt 1!");
					    if(GangZoneInfo[Zone][gzFightTime] > 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Während eines Gangfights kannst du das Gebiet nicht entwerten. Kämpfe dafür!");
					    new string[128];
						if(GangZoneInfo[Zone][gzType] == 1)//Geld
						{
							FrakInfo[SpielerInfo[playerid][sFraktion]][fiFrakKasse] += GangZoneInfo[Zone][gzValue];
							format(string,sizeof(string),"Du hast %d$ vom Ganggebiet in die Fraktionskasse transferiert.",GangZoneInfo[Zone][gzValue]);
							SendClientMessage(playerid,COLOR_GANGFIGHT,string);
							GangZoneInfo[Zone][gzValue] = 0;
							format(string,sizeof(string),"Gangzone der %s [ID:%d]\nTyp: %s | Wert: %d",FrakName(GangZoneInfo[Zone][gzOwner]),Zone,GangZoneTyp(GangZoneInfo[Zone][gzType]),GangZoneInfo[Zone][gzValue]);
						    UpdateDynamic3DTextLabelText(GangZoneInfo[Zone][gzLabel], 0xFFC800FF, string);
						}
						else if(GangZoneInfo[Zone][gzType] == 2)//Materialien
						{
							FrakInfo[SpielerInfo[playerid][sFraktion]][fiMats] += GangZoneInfo[Zone][gzValue];
							format(string,sizeof(string),"Du hast %d Materialien vom Ganggebiet in die Fraktionskiste transferiert.",GangZoneInfo[Zone][gzValue]);
							SendClientMessage(playerid,COLOR_GANGFIGHT,string);
							GangZoneInfo[Zone][gzValue] = 0;
							format(string,sizeof(string),"Gangzone der %s [ID:%d]\nTyp: %s | Wert: %d",FrakName(GangZoneInfo[Zone][gzOwner]),Zone,GangZoneTyp(GangZoneInfo[Zone][gzType]),GangZoneInfo[Zone][gzValue]);
						    UpdateDynamic3DTextLabelText(GangZoneInfo[Zone][gzLabel], 0xFFC800FF, string);
						}
					}
		        }
		        DeletePVar(playerid,"GBInfoZone");
		    }
		}
		case DIALOG_HAUS_KAUFEN:
		{
		    new hs = GetNearHausID(playerid), string[264];
  			if(response==0){}//Schliessen
		    else if(response==1)
		    {
		        switch(listitem)
		        {
		            case 0://Privat
		            {
		                if(strlen(HausInfo[hs][hsBesitzer]) > 2)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du kannst das Haus nicht kaufen.");
				        if(SpielerInfo[playerid][sHaus] != 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt bereits ein Haus.");
		        		format(string,sizeof(string),"{FFFFFF}Bist du dir sicher, dass du dir das Haus (ID:{FF0000}%d{FFFFFF}) für {FF0000}%d${FFFFFF} kaufen möchtest ?",hs,HausInfo[hs][hsPreis]);
	    				ShowPlayerDialog(playerid,DIALOG_KAUFEN,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Kaufbestätigung",string,"Ja","Nein");
	    				SetPVarInt(playerid,"Kaufen",4);
		            }
		            case 1://Gruppe
		            {
                        if(strlen(HausInfo[hs][hsBesitzer]) > 2)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du kannst das Haus nicht kaufen.");
                        if(SpielerInfo[playerid][sGHaus] != 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt bereits ein Haus.");
  		        		format(string,sizeof(string),"{FFFFFF}Bist du dir sicher, dass du dir das Haus (ID:{FF0000}%d{FFFFFF}) für deine Gruppe für {FF0000}%d${FFFFFF} kaufen möchtest ?",hs,HausInfo[hs][hsPreis]);
	    				ShowPlayerDialog(playerid,DIALOG_KAUFEN,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Kaufbestätigung",string,"Ja","Nein");
	    				SetPVarInt(playerid,"Kaufen",5);
		            }
				}
			}
		}
		case DIALOG_KAUFEN:
		{
		    if(response==0){}//Nein
		    else if(response==1)//Ja
		    {
		        if(GetPVarInt(playerid,"Kaufen") == 1)//Tankstelle
		        {
	      			new Text[164], tsid = GetNearTankstellenHausID(playerid);
	            	if(strlen(TankstellenInfo[tsid][tsBesitzer]) < 2)
					{
			        	if(SpielerInfo[playerid][sBankkonto] < TankstellenInfo[tsid][tsPreis])return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld auf deinem Girokonto.");
						SpielerInfo[playerid][sBankkonto] -= TankstellenInfo[tsid][tsPreis];
						GovVars[govKasse] += TankstellenInfo[tsid][tsPreis];
						DestroyDynamic3DTextLabel(TankstellenInfo[tsid][tsText][0]);
						TankstellenInfo[tsid][tsText][0] = Text3D:INVALID_3DTEXT_ID;
						DestroyPickup(TankstellenInfo[tsid][tsPickup][0]);
	   					format(Text, sizeof(Text), "Tankstelle 'ID: {FF0000}%d{FFFFFF}'\nBesitzer: {FF0000}%s", tsid, SpielerInfo[playerid][sName]);
	    				TankstellenInfo[tsid][tsPickup][0] = CreatePickup(1272, 23, TankstellenInfo[tsid][tsEPos_X], TankstellenInfo[tsid][tsEPos_Y], TankstellenInfo[tsid][tsEPos_Z], -1);
	        			TankstellenInfo[tsid][tsText][0] = CreateDynamic3DTextLabel(Text, COLOR_WHITE, TankstellenInfo[tsid][tsEPos_X], TankstellenInfo[tsid][tsEPos_Y], TankstellenInfo[tsid][tsEPos_Z], 10.0);
						format(TankstellenInfo[tsid][tsBesitzer], MAX_PLAYER_NAME, SpielerInfo[playerid][sName]);
						SaveTankstelleByID(tsid);
						SpielerInfo[playerid][sTankstelle] = tsid;
						format(Text,sizeof(Text),"Herzlichen Glückwunsch! Du hast dir die Tankstelle (ID:{FF0000}%d{00CDFF}) für {FF0000}%d${00CDFF} gekauft.",tsid,TankstellenInfo[tsid][tsPreis]);
						SendClientMessage(playerid,COLOR_INFO,Text);
						TankstellenTafelUpdate(tsid);
						Streamer_Update(playerid);
						DeletePVar(playerid,"Kaufen");

						format(Text, sizeof(Text), "hat die Tankstelle %i für %i$ erworben.", tsid, TankstellenInfo[tsid][tsPreis]);
						addServerTimelineEvent(TIMELINE_TAG_USER_BUY_FUEL, SpielerInfo[playerid][sDBID], Text);

					}
					else SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du kannst diese Tankstelle nicht kaufen.");
				}
				else if(GetPVarInt(playerid,"Kaufen") == 2)//Ammunation
				{
 					new Text[224], an = GetNearAmmunationID(playerid);
	            	if(strlen(AmmunationInfo[an][amBesitzer]) < 2)
					{
			        	if(SpielerInfo[playerid][sBankkonto] < AmmunationInfo[an][amPreis])return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld auf deinem Girokonto.");
						SpielerInfo[playerid][sBankkonto] -= AmmunationInfo[an][amPreis];
						GovVars[govKasse] += AmmunationInfo[an][amPreis];
						DestroyDynamic3DTextLabel(AmmunationInfo[an][amText]);
						AmmunationInfo[an][amText] = Text3D:INVALID_3DTEXT_ID;
						DestroyPickup(AmmunationInfo[an][amPickup]);
	   					format(Text, sizeof(Text), "Ammunation 'ID: {FF0000}%d{FFFFFF}'\nBesitzer: {FF0000}%s", an, SpielerInfo[playerid][sName]);
	    				AmmunationInfo[an][amPickup] = CreatePickup(1272, 23, AmmunationInfo[an][amPos_X], AmmunationInfo[an][amPos_Y], AmmunationInfo[an][amPos_Z], -1);
	        			AmmunationInfo[an][amText] = CreateDynamic3DTextLabel(Text, COLOR_WHITE, AmmunationInfo[an][amPos_X], AmmunationInfo[an][amPos_Y], AmmunationInfo[an][amPos_Z], 10.0);
						format(AmmunationInfo[an][amBesitzer], MAX_PLAYER_NAME, SpielerInfo[playerid][sName]);
						SpielerInfo[playerid][sAmmunation] = an;
						SaveAmmunationById(an);
						format(Text,sizeof(Text),"Herzlichen Glückwunsch! Du hast dir das Ammunation (ID:{FF0000}%d{00CDFF}) für {FF0000}%d${00CDFF} gekauft.",an,AmmunationInfo[an][amPreis]);
						SendClientMessage(playerid,COLOR_INFO,Text);
						DeletePVar(playerid,"Kaufen");

						format(Text, sizeof(Text), "hat das Ammunation %i für %i$ erworben.", an, AmmunationInfo[an][amPreis]);
						addServerTimelineEvent(TIMELINE_TAG_USER_BUY_AMMU, SpielerInfo[playerid][sDBID], Text);
					}
					else SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du kannst das Ammunation nicht kaufen.");
				}
				else if(GetPVarInt(playerid,"Kaufen") == 3)//24/7
				{
 					new Text[224], an = GetNearStoreID(playerid);
	            	if(strlen(StoreInfo[an][siBesitzer]) < 2)
					{
			        	if(SpielerInfo[playerid][sBankkonto] < StoreInfo[an][siPreis])return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld auf deinem Girokonto.");
						SpielerInfo[playerid][sBankkonto] -= StoreInfo[an][siPreis];
						GovVars[govKasse] += StoreInfo[an][siPreis];
						DestroyDynamic3DTextLabel(StoreInfo[an][siText]);
						StoreInfo[an][siText] = Text3D:INVALID_3DTEXT_ID;
						DestroyPickup(StoreInfo[an][siPickup]);
	   					format(Text, sizeof(Text), "24/7 'ID: {FF0000}%d{FFFFFF}'\nBesitzer: {FF0000}%s", an, SpielerInfo[playerid][sName]);
	    				StoreInfo[an][siPickup] = CreatePickup(1272, 23, StoreInfo[an][siPos_X], StoreInfo[an][siPos_Y], StoreInfo[an][siPos_Z], -1);
	        			StoreInfo[an][siText] = CreateDynamic3DTextLabel(Text, COLOR_WHITE, StoreInfo[an][siPos_X], StoreInfo[an][siPos_Y], StoreInfo[an][siPos_Z], 10.0);
						format(StoreInfo[an][siBesitzer], MAX_PLAYER_NAME, SpielerInfo[playerid][sName]);
						SpielerInfo[playerid][sStore] = an;
						SaveStoreById(an);
						format(Text,sizeof(Text),"Herzlichen Glückwunsch! Du hast dir den 24/7 (ID:{FF0000}%d{00CDFF}) für {FF0000}%d${00CDFF} gekauft.",an,StoreInfo[an][siPreis]);
						SendClientMessage(playerid,COLOR_INFO,Text);
						DeletePVar(playerid,"Kaufen");

						format(Text, sizeof(Text), "hat das Geschäft (24/7) %i für %i$ erworben.", an, StoreInfo[an][siPreis]);
						addServerTimelineEvent(TIMELINE_TAG_USER_BUY_STORE, SpielerInfo[playerid][sDBID], Text);
					}
					else SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du kannst das 24/7 nicht kaufen.");
				}
				else if(GetPVarInt(playerid,"Kaufen") == 4)//Haus
				{
 					new Text[224], str[224], hs = GetNearHausID(playerid);
	            	if(strlen(HausInfo[hs][hsBesitzer]) < 2)
					{
			        	if(SpielerInfo[playerid][sBankkonto] < HausInfo[hs][hsPreis])return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld auf deinem Girokonto.");
						SpielerInfo[playerid][sBankkonto] -= HausInfo[hs][hsPreis];
						GovVars[govKasse] += HausInfo[hs][hsPreis];
						DestroyDynamic3DTextLabel(HausInfo[hs][hsText]);
						HausInfo[hs][hsText] = Text3D:INVALID_3DTEXT_ID;
						DestroyDynamicPickup(HausInfo[hs][hsPickup]);
						format(HausInfo[hs][hsBesitzer], MAX_PLAYER_NAME, SpielerInfo[playerid][sName]);
						SpielerInfo[playerid][sHaus] = hs;
						HausInfo[hs][hsLocked] = 1;
						if(HausInfo[hs][hsTyp] == 1)//Appartment
						{
							format(Text,sizeof(Text),"Herzlichen Glückwunsch! Du hast dir das Appartment (ID:{FF0000}%d{00CDFF}) für {FF0000}%d${00CDFF} gekauft.",hs,HausInfo[hs][hsPreis]);
							format(str, sizeof(str), "Appartment 'ID: {FF0000}%d{FFFFFF}'\nBesitzer: {FF0000}%s", hs, SpielerInfo[playerid][sName]);
						}
						else if(HausInfo[hs][hsTyp] == 2)//PrivatHaus
						{
						    format(Text,sizeof(Text),"Herzlichen Glückwunsch! Du hast dir das Haus (ID:{FF0000}%d{00CDFF}) für {FF0000}%d${00CDFF} gekauft.",hs,HausInfo[hs][hsPreis]);
						    format(str, sizeof(str), "Haus 'ID: {FF0000}%d{FFFFFF}'\nBesitzer: {FF0000}%s", hs, SpielerInfo[playerid][sName]);
						}
						else if(HausInfo[hs][hsTyp] == 3)//Villa
						{
						    format(Text,sizeof(Text),"Herzlichen Glückwunsch! Du hast dir die Villa (ID:{FF0000}%d{00CDFF}) für {FF0000}%d${00CDFF} gekauft.",hs,HausInfo[hs][hsPreis]);
						    format(str, sizeof(str), "Villa 'ID: {FF0000}%d{FFFFFF}'\nBesitzer: {FF0000}%s", hs, SpielerInfo[playerid][sName]);
						}
						HausInfo[hs][hsText] = CreateDynamic3DTextLabel(str, COLOR_WHITE, HausInfo[hs][hsPos_X], HausInfo[hs][hsPos_Y], HausInfo[hs][hsPos_Z], 10.0);
						HausInfo[hs][hsPickup] = CreateDynamicPickup(1272, 23, HausInfo[hs][hsPos_X], HausInfo[hs][hsPos_Y], HausInfo[hs][hsPos_Z], -1);
						SendClientMessage(playerid,COLOR_INFO,Text);
						SaveHouseById(hs);
						DeletePVar(playerid,"Kaufen");

						format(Text, sizeof(Text), "hat das Haus %i für %i$ erworben.", hs, HausInfo[hs][hsPreis]);
						addServerTimelineEvent(TIMELINE_TAG_USER_BUY_HOUSE, SpielerInfo[playerid][sDBID], Text);

					}
					else SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du kannst das Haus / die Villa / das Appartment nicht kaufen.");
				}
				else if(GetPVarInt(playerid,"Kaufen") == 5)//GruppenHaus
				{
 					new Text[224], str[224], str2[364], query2[364], hs = GetNearHausID(playerid), count2 = 0;
	            	if(strlen(HausInfo[hs][hsBesitzer]) < 2)
					{
					    if(GetPlayerScore(playerid) < 3)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du benötigst das dritte Level um dir ein Gruppenhaus kaufen zu können.");
			        	if(SpielerInfo[playerid][sBankkonto] < HausInfo[hs][hsPreis])return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld auf deinem Girokonto.");
						SpielerInfo[playerid][sBankkonto] -= HausInfo[hs][hsPreis];
						GovVars[govKasse] += HausInfo[hs][hsPreis];
						DestroyDynamic3DTextLabel(HausInfo[hs][hsText]);
						HausInfo[hs][hsText] = Text3D:INVALID_3DTEXT_ID;
						DestroyDynamicPickup(HausInfo[hs][hsPickup]);
						format(HausInfo[hs][hsBesitzer], MAX_PLAYER_NAME, SpielerInfo[playerid][sName]);
						SpielerInfo[playerid][sGHaus] = hs;
						HausInfo[hs][hsLocked] = 1;
						if(HausInfo[hs][hsTyp] == 1)//Appartment
						{
							format(Text,sizeof(Text),"Herzlichen Glückwunsch! Du hast dir das Appartment (ID:{FF0000}%d{00CDFF}) für {FF0000}%d${00CDFF} gekauft.",hs,HausInfo[hs][hsPreis]);
							format(str, sizeof(str), "Appartment 'ID: {FF0000}%d{FFFFFF}'\nBesitzer: {FF0000}%s", hs, SpielerInfo[playerid][sName]);
						}
						else if(HausInfo[hs][hsTyp] == 2)//Haus
						{
						    format(Text,sizeof(Text),"Herzlichen Glückwunsch! Du hast dir das Haus (ID:{FF0000}%d{00CDFF}) für {FF0000}%d${00CDFF} gekauft.",hs,HausInfo[hs][hsPreis]);
						    format(str, sizeof(str), "Haus 'ID: {FF0000}%d{FFFFFF}'\nBesitzer: {FF0000}%s", hs, SpielerInfo[playerid][sName]);
						}
						else if(HausInfo[hs][hsTyp] == 3)//Villa
						{
						    format(Text,sizeof(Text),"Herzlichen Glückwunsch! Du hast dir die Villa (ID:{FF0000}%d{00CDFF}) für {FF0000}%d${00CDFF} gekauft.",hs,HausInfo[hs][hsPreis]);
						    format(str, sizeof(str), "Villa 'ID: {FF0000}%d{FFFFFF}'\nBesitzer: {FF0000}%s", hs, SpielerInfo[playerid][sName]);
						}
						HausInfo[hs][hsText] = CreateDynamic3DTextLabel(str, COLOR_WHITE, HausInfo[hs][hsPos_X], HausInfo[hs][hsPos_Y], HausInfo[hs][hsPos_Z], 10.0);
						HausInfo[hs][hsPickup] = CreateDynamicPickup(1272, 23, HausInfo[hs][hsPos_X], HausInfo[hs][hsPos_Y], HausInfo[hs][hsPos_Z], -1);
						SendClientMessage(playerid,COLOR_INFO,Text);
						DeletePVar(playerid,"Kaufen");

 						mysql_format(sqlHandle, str2, sizeof(str2),"SELECT `Name` FROM `accounts` WHERE `Gruppe` = '%d' AND `Online` = '0' AND `Gruppe` != '0'", SpielerInfo[playerid][sGruppe]);
    					new Cache:result = mysql_query(sqlHandle, str2);
						new rows = cache_num_rows();
						for(new i = 0; i < rows; i++)
						{
						    cache_get_value_name(i, "Name",name43[count2]);
						  	count2++;
						}
						cache_delete(result);
						for(new i=0;i<count2;i++)
						{
							mysql_format(sqlHandle, query2, sizeof(query2), "UPDATE `accounts` SET `Gruppenhaus`='%d' WHERE `Name`='%s'", SpielerInfo[playerid][sGHaus], name43[i]);
							mysql_tquery(sqlHandle, query2);
						}
						foreach(new i : Player)
						{
	     					if(i == playerid)continue;
	     					if(SpielerInfo[i][sGruppe] == 0)continue;
						    if(SpielerInfo[i][sGruppe] != SpielerInfo[playerid][sGruppe])continue;
							SpielerInfo[i][sGHaus] = SpielerInfo[playerid][sGHaus];
							format(Text,sizeof(Text),"%s %s hat ein (neues) Gruppenhaus gekauft. Ab sofort könnt ihr auch im Gruppenhaus spawnen.",GRangName(playerid),SpielerInfo[playerid][sName]);
							SendClientMessage(i,COLOR_INFO,Text);
						}
					}
					else SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du kannst das Haus / die Villa / das Appartment nicht kaufen.");
				}
				else if(GetPVarInt(playerid,"Kaufen") == 6)//Garage
				{
 					new Text[224], str[224], hs = GetNearGarageID(playerid);
	            	if(strlen(GaragenInfo[hs][giBesitzer]) < 2)
					{
			        	if(SpielerInfo[playerid][sBankkonto] < GaragenInfo[hs][giPreis])return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld auf deinem Girokonto.");
						SpielerInfo[playerid][sBankkonto] -= GaragenInfo[hs][giPreis];
						GovVars[govKasse] += GaragenInfo[hs][giPreis];
						DestroyDynamic3DTextLabel(GaragenInfo[hs][giText]);
						GaragenInfo[hs][giText] = Text3D:INVALID_3DTEXT_ID;
						DestroyDynamicPickup(GaragenInfo[hs][giPickup]);
						format(GaragenInfo[hs][giBesitzer], MAX_PLAYER_NAME, SpielerInfo[playerid][sName]);
						SpielerInfo[playerid][sGarage] = hs;
						GaragenInfo[hs][giLocked] = 1;
					    format(Text,sizeof(Text),"Herzlichen Glückwunsch! Du hast dir die Garage (ID:{FF0000}%d{00CDFF}) für {FF0000}%d${00CDFF} gekauft.",hs,GaragenInfo[hs][giPreis]);
					    format(str, sizeof(str), "Garage 'ID: {FF0000}%d{FFFFFF}'\nBesitzer: {FF0000}%s", hs, SpielerInfo[playerid][sName]);
						GaragenInfo[hs][giText] = CreateDynamic3DTextLabel(str, COLOR_WHITE, GaragenInfo[hs][giPos_X], GaragenInfo[hs][giPos_Y], GaragenInfo[hs][giPos_Z], 10.0);
						GaragenInfo[hs][giPickup] = CreateDynamicPickup(1272, 23, GaragenInfo[hs][giPos_X], GaragenInfo[hs][giPos_Y], GaragenInfo[hs][giPos_Z], -1);
						SendClientMessage(playerid,COLOR_INFO,Text);
						DeletePVar(playerid,"Kaufen");

						format(Text, sizeof(Text), "hat die Garage %i für %i$ erworben.", hs, GaragenInfo[hs][giPreis]);
						addServerTimelineEvent(TIMELINE_TAG_USER_BUY_GARAGE, SpielerInfo[playerid][sDBID], Text);

						//Besitzer-Fix
						mysql_format(sqlHandle, Text,sizeof(Text),"UPDATE `garagen` SET `Besitzer`='%s' WHERE `ID`='%d'",SpielerInfo[playerid][sName],hs);
						mysql_tquery(sqlHandle, Text);
					}
					else SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du kannst die Garage nicht kaufen.");
				}
		    }
		}
		case DIALOG_TANK_AUSWAHL:
		{
		    if(response==0){}//Abbrechen
		    else if(response==1)//Weiter
		    {
    			new tsid = GetNearTankstelleID(playerid);
 	    		new tsid2 = SpielerInfo[playerid][sTankstelle];
 	    		new veh = GetPlayerVehicleID(playerid);
  				switch(listitem)
		        {
		            case 0://Benzin
		            {
		                if(GetPVarInt(playerid,"Tanken") == 1 || GetPVarInt(playerid,"WillKanister") == 1)
		                {
                  			DeletePVar(playerid,"Tanken");
			                if(strlen(TankstellenInfo[tsid][tsBesitzer]) > 2)
			                {
			                	if(TankstellenInfo[tsid][tsBenzin] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Diese Tankstelle verkauft leider keinen Benzin.");

			                	if(GetPVarInt(playerid,"WillKanister") == 1)
								{
									new Liter = 10;
									if(TankstellenInfo[tsid][tsBenzinLiter] < 10)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Diese Tankstelle hat nicht mehr genug Benzin übrig.");
			                		new Kosten = TankstellenInfo[tsid][tsBenzinPreis]*10;
			                		if(SpielerInfo[playerid][sFraktion] == 2 || SpielerInfo[playerid][sFraktion] == 6)
									{
									    if(FahrzeugInfo[veh][fModelID] == 596 || FahrzeugInfo[veh][fModelID] == 597)
									    {
									    	SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Die Kosten für das betanken des Streifenwagens wurden dem Staat in Rechnung gestellt.");
											GovVars[govKasse] -= Kosten;
											TankstellenInfo[tsid][tsKasse] += Kosten;
										}
										else
										{
				                			GivePlayerMoneyEx(playerid,-Kosten);
				                			TankstellenInfo[tsid][tsKasse] += Kosten;
										}
									}
									else
									{
			                			GivePlayerMoneyEx(playerid,-Kosten);
			                			TankstellenInfo[tsid][tsKasse] += Kosten;
									}
									new str[144];
			                		format(str,sizeof(str),"Du hast für %d Liter Benzin, %d$ bezahlt. Preis pro Liter: %d$.",Liter,Kosten,TankstellenInfo[tsid][tsBenzinPreis]);
		  							SendClientMessage(playerid,COLOR_SUPER,str);
		  							SendClientMessage(playerid,COLOR_GREY,"[Info]: Du kannst den Kanister mit '/ktanken' in dein Fahrzeug kippen.");
		  							DeletePVar(playerid,"WillKanister");
		  							SpielerInfo[playerid][sKanister] = 10;
		  							TankstellenInfo[tsid][tsBenzinLiter] -= Liter;
			                	}
			                	else
			                	{
	             					new Float:Tank = FahrzeugInfo[veh][fTank];
									new string[20], str[144];
									format(string,sizeof(string),"%f",Tank);
									new TankInt = strval(string);
									new Liter = VehicleData[GetVehicleModel(veh)-400][vehLiter] - TankInt;
									if(TankstellenInfo[tsid][tsBenzinLiter] < Liter)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Diese Tankstelle hat nicht mehr genug Benzin übrig.");
									new Kosten = TankstellenInfo[tsid][tsBenzinPreis]*Liter;

	                                FahrzeugInfo[veh][fTank] = VehicleData[GetVehicleModel(veh)-400][vehLiter];

									if(SpielerInfo[playerid][sFraktion] == 2 || SpielerInfo[playerid][sFraktion] == 6)
									{
									    if(FahrzeugInfo[veh][fModelID] == 596 || FahrzeugInfo[veh][fModelID] == 597)
									    {
									    	SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Die Kosten für das betanken des Streifenwagens wurden dem Staat in Rechnung gestellt.");
											GovVars[govKasse] -= Kosten;
											TankstellenInfo[tsid][tsKasse] += Kosten;
										}
										else
										{
				                			GivePlayerMoneyEx(playerid,-Kosten);
				                			TankstellenInfo[tsid][tsKasse] += Kosten;
										}
									}
									else
									{
			                			GivePlayerMoneyEx(playerid,-Kosten);
			                			TankstellenInfo[tsid][tsKasse] += Kosten;
									}
									format(str,sizeof(str),"Du hast für %d Liter Benzin, %d$ bezahlt. Preis pro Liter: %d$.",Liter,Kosten,TankstellenInfo[tsid][tsBenzinPreis]);
		  							SendClientMessage(playerid,COLOR_SUPER,str);
		  							TankstellenInfo[tsid][tsBenzinLiter] -= Liter;

		  							if(FahrzeugInfo[veh][fImportCar] == 0 || FahrzeugInfo[veh][fKurrierCar] == 0 && veh != WaffenTransporter)
								    {
									    if(VehicleData[GetVehicleModel(veh)-400][vehTankArt] != 0)//Kein Benziner
									    {
									        SetVehicleHealth(veh,350);
											SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast den falschen Tanktyp getankt.");
									    }
									}
								}
							}
							else
	  						{
	  						    if(GetPVarInt(playerid,"WillKanister") == 1)
			                	{
			                	    new Liter = 10;
			                	    if(TankstellenInfo[tsid][tsBenzinLiter] < 10)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Diese Tankstelle hat nicht mehr genug Benzin übrig.");
			                		new Kosten = 5*10;
			                		if(SpielerInfo[playerid][sFraktion] == 2 || SpielerInfo[playerid][sFraktion] == 6)
									{
									    if(FahrzeugInfo[veh][fModelID] == 596 || FahrzeugInfo[veh][fModelID] == 597)
									    {
									    	SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Die Kosten für das betanken des Streifenwagens wurden dem Staat in Rechnung gestellt.");
											GovVars[govKasse] -= Kosten;
											TankstellenInfo[tsid][tsKasse] += Kosten;
										}
										else
										{
				                			GivePlayerMoneyEx(playerid,-Kosten);
				                			TankstellenInfo[tsid][tsKasse] += Kosten;
										}
									}
									else
									{
			                			GivePlayerMoneyEx(playerid,-Kosten);
			                			TankstellenInfo[tsid][tsKasse] += Kosten;
									}
			                		new str[144];
			                		format(str,sizeof(str),"Du hast für %d Liter Benzin, %d$ bezahlt. Preis pro Liter: %d$.",Liter,Kosten,TankstellenInfo[tsid][tsBenzinPreis]);
		  							SendClientMessage(playerid,COLOR_SUPER,str);
		  							SendClientMessage(playerid,COLOR_GREY,"[Info]: Du kannst den Kanister mit '/ktanken' in dein Fahrzeug kippen.");
		  							DeletePVar(playerid,"WillKanister");
		  							SpielerInfo[playerid][sKanister] = 10;
		  							TankstellenInfo[tsid][tsBenzinLiter] -= Liter;
			                	}
			                	else
			                	{
	             					new Float:Tank = FahrzeugInfo[veh][fTank];
									new string[20], str[144];
									format(string,sizeof(string),"%f",Tank);
									new TankInt = strval(string);
									new Liter = VehicleData[GetVehicleModel(veh)-400][vehLiter] - TankInt;
									if(TankstellenInfo[tsid][tsBenzinLiter] < Liter)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Diese Tankstelle hat nicht mehr genug Benzin übrig.");
									new Kosten = 5*Liter;

									FahrzeugInfo[veh][fTank] = VehicleData[GetVehicleModel(veh)-400][vehLiter];

									if(SpielerInfo[playerid][sFraktion] == 2 || SpielerInfo[playerid][sFraktion] == 6)
									{
									    if(FahrzeugInfo[veh][fModelID] == 596 || FahrzeugInfo[veh][fModelID] == 597)
									    {
									    	SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Die Kosten für das betanken des Streifenwagens wurden dem Staat in Rechnung gestellt.");
											GovVars[govKasse] -= Kosten;
											TankstellenInfo[tsid][tsKasse] += Kosten;
										}
										else
										{
				                			GivePlayerMoneyEx(playerid,-Kosten);
				                			TankstellenInfo[tsid][tsKasse] += Kosten;
										}
									}
									else
									{
			                			GivePlayerMoneyEx(playerid,-Kosten);
			                			TankstellenInfo[tsid][tsKasse] += Kosten;
									}
									format(str,sizeof(str),"Du hast für %d Liter Benzin, %d$ bezahlt. Preis pro Liter: 5$.",Liter,Kosten);
		  							SendClientMessage(playerid,COLOR_SUPER,str);
		  							TankstellenInfo[tsid][tsBenzinLiter] -= Liter;

		  							if(FahrzeugInfo[veh][fImportCar] == 0 || FahrzeugInfo[veh][fKurrierCar] == 0 && veh != WaffenTransporter)
								    {
									    if(VehicleData[GetVehicleModel(veh)-400][vehTankArt] != 0)//Kein Benziner
									    {
									        SetVehicleHealth(veh,350);
											SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast den falschen Tanktyp getankt.");
									    }
									}
								}
	  						}
	  						foreach(new i : Player)
							{
							    if(!IsPlayerInAnyVehicle(playerid))break;
							    if(GetPlayerVehicleID(i) != GetPlayerVehicleID(playerid))continue;
    							new PLAYER_STATE:State = GetPlayerState(i);
 								if(State == PLAYER_STATE_DRIVER || State == PLAYER_STATE_PASSENGER)
 								{
									KillTimer(TachoTimer[i]);
								    PlayerTextDrawHide(i, Tacho[i][0]);
									PlayerTextDrawHide(i, Tacho[i][1]);
									PlayerTextDrawHide(i, Tacho[i][2]);
									PlayerTextDrawHide(i, Tacho[i][3]);
									PlayerTextDrawHide(i, Tacho[i][4]);
									PlayerTextDrawHide(i, Tacho[i][5]);
									PlayerTextDrawHide(i, Tacho[i][6]);
									PlayerTextDrawHide(i, Tacho[i][7]);
									PlayerTextDrawHide(i, Tacho[i][8]);
									PlayerTextDrawHide(i, Tacho[i][9]);
									PlayerTextDrawHide(i, Tacho[i][10]);
									PlayerTextDrawHide(i, Tacho[i][11]);

									new carname[46];
									PlayerTextDrawSetPreviewModel(i, Tacho[i][1], GetVehicleModel(veh));
									PlayerTextDrawSetPreviewVehicleColours(i, Tacho[i][1], FahrzeugInfo[veh][fColor][0], FahrzeugInfo[veh][fColor][1]);
									format(carname,sizeof(carname),"%i Kilometer",FahrzeugInfo[veh][fKilometer]);
									PlayerTextDrawSetString(i, Tacho[i][9], carname);
									format(carname,sizeof(carname),"%s %.2f/%dL",TankArtName(veh),FahrzeugInfo[veh][fTank],VehicleData[GetVehicleModel(veh)-400][vehLiter]);
									PlayerTextDrawSetString(i, Tacho[i][3], carname);
									PlayerTextDrawShow(i, Tacho[i][0]);
									PlayerTextDrawShow(i, Tacho[i][1]);
									PlayerTextDrawShow(i, Tacho[i][2]);
									PlayerTextDrawShow(i, Tacho[i][3]);
									PlayerTextDrawShow(i, Tacho[i][4]);
									PlayerTextDrawShow(i, Tacho[i][5]);
									PlayerTextDrawShow(i, Tacho[i][6]);
									PlayerTextDrawShow(i, Tacho[i][7]);
									PlayerTextDrawShow(i, Tacho[i][8]);
									PlayerTextDrawShow(i, Tacho[i][9]);
									TachoTimer[i] = SetTimerEx("SpeedoMeter",MAX_TACHOTIME,true,"i",i);
								}
							}
						}
						else
						{
						    if(TankstellenInfo[tsid2][tsBenzin] == 0)return SendClientMessage(playerid,COLOR_RED,"Deine Tankstelle besitzt kein Benzin. Kaufe erst das Upgrade für Benzin.");
							SetPVarInt(playerid,"TPreisAuswahl",1);
							ShowPlayerDialog(playerid,DIALOG_TANKSTELLE_PREISE,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Bitte gebe unten den Preis (pro Liter) für Benzin an.","Weiter","Zurück");
						}
		            }
		            case 1://Diesel
		            {
              			if(GetPVarInt(playerid,"Tanken") == 1 || GetPVarInt(playerid,"WillKanister") == 1)
		                {
		                    DeletePVar(playerid,"Tanken");
			                if(strlen(TankstellenInfo[tsid][tsBesitzer]) > 2)
			                {
			                	if(TankstellenInfo[tsid][tsDiesel] == 0)return SendClientMessage(playerid,COLOR_RED,"Diese Tankstelle verkauft leider keinen Diesel.");

                                if(GetPVarInt(playerid,"WillKanister") == 1)
			                	{
			                	    new Liter = 10;
			                	    if(TankstellenInfo[tsid][tsDieselLiter] < 10)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Diese Tankstelle hat nicht mehr genug Diesel übrig.");
			                		new Kosten = TankstellenInfo[tsid][tsDieselPreis]*10;
			                		GivePlayerMoneyEx(playerid,-Kosten);
			                		TankstellenInfo[tsid][tsKasse] += Kosten;
			                		new str[144];
			                		format(str,sizeof(str),"Du hast für %d Liter Diesel, %d$ bezahlt. Preis pro Liter: %d$.",Liter,Kosten,TankstellenInfo[tsid][tsDieselPreis]);
		  							SendClientMessage(playerid,COLOR_SUPER,str);
		  							SendClientMessage(playerid,COLOR_GREY,"[Info]: Du kannst den Kanister mit '/ktanken' in dein Fahrzeug kippen.");
		  							DeletePVar(playerid,"WillKanister");
		  							SpielerInfo[playerid][sKanister] = 10;
		  							TankstellenInfo[tsid][tsDieselLiter] -= Liter;
			                	}
			                	else
			                	{
	             					new Float:Tank = FahrzeugInfo[veh][fTank];
									new string[20], str[144];
									format(string,sizeof(string),"%f",Tank);
									new TankInt = strval(string);
									new Liter = VehicleData[GetVehicleModel(veh)-400][vehLiter] - TankInt;
									if(TankstellenInfo[tsid][tsDieselLiter] < Liter)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Diese Tankstelle hat nicht mehr genug Diesel übrig.");
									new Kosten = TankstellenInfo[tsid][tsDieselPreis]*Liter;

									FahrzeugInfo[veh][fTank] = VehicleData[GetVehicleModel(veh)-400][vehLiter];

									if(SpielerInfo[playerid][sFraktion] == 2 || SpielerInfo[playerid][sFraktion] == 6)
									{
									    if(FahrzeugInfo[veh][fModelID] == 596 || FahrzeugInfo[veh][fModelID] == 597)
									    {
									    	SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Die Kosten für das betanken des Streifenwagens wurden dem Staat in Rechnung gestellt.");
											GovVars[govKasse] -= Kosten;
											TankstellenInfo[tsid][tsKasse] += Kosten;
										}
										else
										{
				                			GivePlayerMoneyEx(playerid,-Kosten);
				                			TankstellenInfo[tsid][tsKasse] += Kosten;
										}
									}
									else
									{
			                			GivePlayerMoneyEx(playerid,-Kosten);
			                			TankstellenInfo[tsid][tsKasse] += Kosten;
									}
									format(str,sizeof(str),"Du hast für %d Liter Diesel, %d$ bezahlt. Preis pro Liter: %d$.",Liter,Kosten,TankstellenInfo[tsid][tsDieselPreis]);
		  							SendClientMessage(playerid,COLOR_SUPER,str);
		  							TankstellenInfo[tsid][tsDieselLiter] -= Liter;

		  							if(FahrzeugInfo[veh][fImportCar] == 0 || FahrzeugInfo[veh][fKurrierCar] == 0 && veh != WaffenTransporter)
								    {
									    if(VehicleData[GetVehicleModel(veh)-400][vehTankArt] != 1)//Kein Diesel
									    {
									        SetVehicleHealth(veh,350);
											SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast den falschen Tanktyp getankt.");
									    }
									}
								}
							}
							else
	  						{
                                if(GetPVarInt(playerid,"WillKanister") == 1)
			                	{
			                	    new Liter = 10;
			                	    if(TankstellenInfo[tsid][tsDieselLiter] < 10)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Diese Tankstelle hat nicht mehr genug Diesel übrig.");
			                		new Kosten = 3*10;
			                		GivePlayerMoneyEx(playerid,-Kosten);
			                		TankstellenInfo[tsid][tsKasse] += Kosten;
			                		new str[144];
			                		format(str,sizeof(str),"Du hast für %d Liter Diesel, %d$ bezahlt. Preis pro Liter: %d$.",Liter,Kosten,TankstellenInfo[tsid][tsDieselPreis]);
		  							SendClientMessage(playerid,COLOR_SUPER,str);
		  							SendClientMessage(playerid,COLOR_GREY,"[Info]: Du kannst den Kanister mit '/ktanken' in dein Fahrzeug kippen.");
		  							DeletePVar(playerid,"WillKanister");
		  							SpielerInfo[playerid][sKanister] = 10;
		  							TankstellenInfo[tsid][tsDieselLiter] -= Liter;

			                	} else {
                                    new Float:Tank = FahrzeugInfo[veh][fTank];
                                    new string[20], str[144];
                                    format(string,sizeof(string),"%f",Tank);
                                    new TankInt = strval(string);
                                    new Liter = VehicleData[GetVehicleModel(veh)-400][vehLiter] - TankInt;
                                    if(TankstellenInfo[tsid][tsDieselLiter] < Liter)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Diese Tankstelle hat nicht mehr genug Diesel übrig.");
                                    new Kosten = 3*Liter;

                                    FahrzeugInfo[veh][fTank] = VehicleData[GetVehicleModel(veh)-400][vehLiter];

                                    GivePlayerMoneyEx(playerid,-Kosten);
                                    format(str,sizeof(str),"Du hast für %d Liter Diesel, %d$ bezahlt. Preis pro Liter: 3$.",Liter,Kosten);
                                    SendClientMessage(playerid,COLOR_SUPER,str);
                                    TankstellenInfo[tsid][tsDieselLiter] -= Liter;

                                    if(FahrzeugInfo[veh][fImportCar] == 0 || FahrzeugInfo[veh][fKurrierCar] == 0 && veh != WaffenTransporter)
								    {
									    if(VehicleData[GetVehicleModel(veh)-400][vehTankArt] != 1)//Kein Diesel
									    {
									        SetVehicleHealth(veh,350);
											SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast den falschen Tanktyp getankt.");
									    }
									}
								}
							}
 							foreach(new i : Player)
							{
							    if(!IsPlayerInAnyVehicle(playerid))break;
							    if(GetPlayerVehicleID(i) != GetPlayerVehicleID(playerid))continue;
    							new PLAYER_STATE:State = GetPlayerState(i);
 								if(State == PLAYER_STATE_DRIVER || State == PLAYER_STATE_PASSENGER)
 								{
									KillTimer(FahrenTimer[playerid]);
									KillTimer(TachoTimer[playerid]);
								    PlayerTextDrawHide(playerid, Tacho[playerid][0]);
									PlayerTextDrawHide(playerid, Tacho[playerid][1]);
									PlayerTextDrawHide(playerid, Tacho[playerid][2]);
									PlayerTextDrawHide(playerid, Tacho[playerid][3]);
									PlayerTextDrawHide(playerid, Tacho[playerid][4]);
									PlayerTextDrawHide(playerid, Tacho[playerid][5]);
									PlayerTextDrawHide(playerid, Tacho[playerid][6]);
									PlayerTextDrawHide(playerid, Tacho[playerid][7]);
									PlayerTextDrawHide(playerid, Tacho[playerid][8]);
									PlayerTextDrawHide(playerid, Tacho[playerid][9]);
									PlayerTextDrawHide(playerid, Tacho[playerid][10]);
									PlayerTextDrawHide(playerid, Tacho[playerid][11]);

									new carname[46], Float:vHealth;
									GetVehicleHealth(veh, vHealth);
									PlayerTextDrawSetPreviewModel(playerid, Tacho[playerid][1], GetVehicleModel(veh));
									PlayerTextDrawSetPreviewVehicleColours(playerid, Tacho[playerid][1], FahrzeugInfo[veh][fColor][0], FahrzeugInfo[veh][fColor][1]);
									format(carname,sizeof(carname),"%i Kilometer",FahrzeugInfo[veh][fKilometer]);
									PlayerTextDrawSetString(playerid, Tacho[playerid][9], carname);
									format(carname,sizeof(carname),"%s %.2f/%dL",TankArtName(veh),FahrzeugInfo[veh][fTank],VehicleData[GetVehicleModel(veh)-400][vehLiter]);
									PlayerTextDrawSetString(playerid, Tacho[playerid][3], carname);
									PlayerTextDrawShow(playerid, Tacho[playerid][0]);
									PlayerTextDrawShow(playerid, Tacho[playerid][1]);
									PlayerTextDrawShow(playerid, Tacho[playerid][2]);
									PlayerTextDrawShow(playerid, Tacho[playerid][3]);
									PlayerTextDrawShow(playerid, Tacho[playerid][4]);
									format(carname,sizeof(carname),"Schaden %.0f%",((1000 - vHealth) / 10));
									PlayerTextDrawSetString(playerid, Tacho[playerid][5], carname);
									PlayerTextDrawShow(playerid, Tacho[playerid][6]);
									PlayerTextDrawShow(playerid, Tacho[playerid][7]);
									PlayerTextDrawShow(playerid, Tacho[playerid][8]);
									PlayerTextDrawShow(playerid, Tacho[playerid][9]);
									TachoTimer[playerid] = SetTimerEx("SpeedoMeter",MAX_TACHOTIME,true,"i",playerid);
								}
							}
						}
						else
						{
						    if(TankstellenInfo[tsid2][tsDiesel] == 0)return SendClientMessage(playerid,COLOR_RED,"Deine Tankstelle besitzt kein Diesel. Kaufe erst das Upgrade für Diesel.");
							SetPVarInt(playerid,"TPreisAuswahl",2);
							ShowPlayerDialog(playerid,DIALOG_TANKSTELLE_PREISE,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Bitte gebe unten den Preis (pro Liter) für Diesel an.","Weiter","Zurück");
						}
		            }
		            case 2://Kerosin
		            {
                 		if(GetPVarInt(playerid,"Tanken") == 1 || GetPVarInt(playerid,"WillKanister") == 1)
		                {
		                    DeletePVar(playerid,"Tanken");
              				if(strlen(TankstellenInfo[tsid][tsBesitzer]) > 2)
			                {
			                	if(TankstellenInfo[tsid][tsKerosin] == 0)return SendClientMessage(playerid,COLOR_RED,"Diese Tankstelle verkauft leider keinen Kerosin.");

                                if(GetPVarInt(playerid,"WillKanister") == 1)
			                	{
			                	    new Liter = 10;
			                	    if(TankstellenInfo[tsid][tsKerosinLiter] < 10)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Diese Tankstelle hat nicht mehr genug Kerosin übrig.");
			                		new Kosten = TankstellenInfo[tsid][tsKerosinPreis]*10;
			                		GivePlayerMoneyEx(playerid,-Kosten);
			                		TankstellenInfo[tsid][tsKasse] += Kosten;
			                		new str[144];
			                		format(str,sizeof(str),"Du hast für %d Liter Kerosin, %d$ bezahlt. Preis pro Liter: %d$.",Liter,Kosten,TankstellenInfo[tsid][tsKerosinPreis]);
		  							SendClientMessage(playerid,COLOR_SUPER,str);
		  							SendClientMessage(playerid,COLOR_GREY,"[Info]: Du kannst den Kanister mit '/ktanken' in dein Fahrzeug kippen.");
		  							DeletePVar(playerid,"WillKanister");
		  							SpielerInfo[playerid][sKanister] = 10;
		  							TankstellenInfo[tsid][tsKerosinLiter] -= Liter;
			                	}
			                	else
			                	{
	             					new Float:Tank = FahrzeugInfo[veh][fTank];
									new string[20], str[144];
									format(string,sizeof(string),"%f",Tank);
									new TankInt = strval(string);
									new Liter = VehicleData[GetVehicleModel(veh)-400][vehLiter] - TankInt;
									if(TankstellenInfo[tsid][tsKerosinLiter] < Liter)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Diese Tankstelle hat nicht mehr genug Kerosin übrig.");
									new Kosten = TankstellenInfo[tsid][tsKerosinPreis]*Liter;
									FahrzeugInfo[veh][fTank] = VehicleData[GetVehicleModel(veh)-400][vehLiter];

									GivePlayerMoneyEx(playerid,-Kosten);
									TankstellenInfo[tsid][tsKasse] += Kosten;
									format(str,sizeof(str),"Du hast für %d Liter Kerosin, %d$ bezahlt. Preis pro Liter: %d$.",Liter,Kosten,TankstellenInfo[tsid][tsKerosinPreis]);
		  							SendClientMessage(playerid,COLOR_SUPER,str);
		  							TankstellenInfo[tsid][tsKerosinLiter] -= Liter;
								}
							}
							else
	  						{
                                if(GetPVarInt(playerid,"WillKanister") == 1)
			                	{
			                	    new Liter = 10;
			                	    if(TankstellenInfo[tsid][tsKerosinLiter] < 10)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Diese Tankstelle hat nicht mehr genug Kerosin übrig.");
			                		new Kosten = 10*10;
			                		GivePlayerMoneyEx(playerid,-Kosten);
			                		TankstellenInfo[tsid][tsKasse] += Kosten;
			                		new str[144];
			                		format(str,sizeof(str),"Du hast für %d Liter Kerosin, %d$ bezahlt. Preis pro Liter: %d$.",Liter,Kosten,TankstellenInfo[tsid][tsKerosinPreis]);
		  							SendClientMessage(playerid,COLOR_SUPER,str);
		  							SendClientMessage(playerid,COLOR_GREY,"[Info]: Du kannst den Kanister mit '/ktanken' in dein Fahrzeug kippen.");
		  							DeletePVar(playerid,"WillKanister");
		  							SpielerInfo[playerid][sKanister] = 10;
		  							TankstellenInfo[tsid][tsKerosinLiter] -= Liter;
			                	}
			                	else
			                	{
                 					new Float:Tank = FahrzeugInfo[veh][fTank];
    								new string[20], str[144];
    								format(string,sizeof(string),"%f",Tank);
    								new TankInt = strval(string);
    								new Liter = VehicleData[GetVehicleModel(veh)-400][vehLiter] - TankInt;
    								if(TankstellenInfo[tsid][tsKerosinLiter] < Liter)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Diese Tankstelle hat nicht mehr genug Kerosin übrig.");
    								new Kosten = 10*Liter;

    								FahrzeugInfo[veh][fTank] = VehicleData[GetVehicleModel(veh)-400][vehLiter];

    								GivePlayerMoneyEx(playerid,-Kosten);
    								format(str,sizeof(str),"Du hast für %d Liter Kerosin, %d$ bezahlt. Preis pro Liter: 10$.",Liter,Kosten);
    	  							SendClientMessage(playerid,COLOR_SUPER,str);
    	  							TankstellenInfo[tsid][tsKerosinLiter] -= Liter;
                                }
							}
 							foreach(new i : Player)
							{
							    if(GetPlayerVehicleID(i) != GetPlayerVehicleID(playerid))continue;
    							new PLAYER_STATE:State = GetPlayerState(i);
 								if(State == PLAYER_STATE_DRIVER || State == PLAYER_STATE_PASSENGER)
 								{
 								    if(!IsPlayerInAnyVehicle(playerid))break;
									KillTimer(FahrenTimer[playerid]);
									KillTimer(TachoTimer[playerid]);
								    PlayerTextDrawHide(playerid, Tacho[playerid][0]);
									PlayerTextDrawHide(playerid, Tacho[playerid][1]);
									PlayerTextDrawHide(playerid, Tacho[playerid][2]);
									PlayerTextDrawHide(playerid, Tacho[playerid][3]);
									PlayerTextDrawHide(playerid, Tacho[playerid][4]);
									PlayerTextDrawHide(playerid, Tacho[playerid][5]);
									PlayerTextDrawHide(playerid, Tacho[playerid][6]);
									PlayerTextDrawHide(playerid, Tacho[playerid][7]);
									PlayerTextDrawHide(playerid, Tacho[playerid][8]);
									PlayerTextDrawHide(playerid, Tacho[playerid][9]);
									PlayerTextDrawHide(playerid, Tacho[playerid][10]);
									PlayerTextDrawHide(playerid, Tacho[playerid][11]);

									new carname[46],Float:vHealth;
									GetVehicleHealth(veh, vHealth);
									PlayerTextDrawSetPreviewModel(playerid, Tacho[playerid][1], GetVehicleModel(veh));
									PlayerTextDrawSetPreviewVehicleColours(playerid, Tacho[playerid][1], FahrzeugInfo[veh][fColor][0], FahrzeugInfo[veh][fColor][1]);
									format(carname,sizeof(carname),"%i Kilometer",FahrzeugInfo[veh][fKilometer]);
									PlayerTextDrawSetString(playerid, Tacho[playerid][9], carname);
									format(carname,sizeof(carname),"%s %.2f/%dL",TankArtName(veh),FahrzeugInfo[veh][fTank],VehicleData[GetVehicleModel(veh)-400][vehLiter]);
									PlayerTextDrawSetString(playerid, Tacho[playerid][3], carname);
									PlayerTextDrawShow(playerid, Tacho[playerid][0]);
									PlayerTextDrawShow(playerid, Tacho[playerid][1]);
									PlayerTextDrawShow(playerid, Tacho[playerid][2]);
									PlayerTextDrawShow(playerid, Tacho[playerid][3]);
									PlayerTextDrawShow(playerid, Tacho[playerid][4]);
									format(carname,sizeof(carname),"Schaden %.0f%",((1000 - vHealth) / 10));
									PlayerTextDrawSetString(playerid, Tacho[playerid][5], carname);
									PlayerTextDrawShow(playerid, Tacho[playerid][6]);
									PlayerTextDrawShow(playerid, Tacho[playerid][7]);
									PlayerTextDrawShow(playerid, Tacho[playerid][8]);
									PlayerTextDrawShow(playerid, Tacho[playerid][9]);
									TachoTimer[playerid] = SetTimerEx("SpeedoMeter",MAX_TACHOTIME,true,"i",playerid);
								}
							}
						}
						else
						{
						    if(TankstellenInfo[tsid2][tsKerosin] == 0)return SendClientMessage(playerid,COLOR_RED,"Deine Tankstelle besitzt kein Kerosin. Kaufe erst das Upgrade für Kerosin.");
							SetPVarInt(playerid,"TPreisAuswahl",3);
							ShowPlayerDialog(playerid,DIALOG_TANKSTELLE_PREISE,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Bitte gebe unten den Preis (pro Liter) für Kerosin an.","Weiter","Zurück");
						}
		            }
				}
			}
		}
		case DIALOG_VERWALTUNG:
		{
		    if(response==0){}//Abbrechen
		    else if(response==1)//Weiter
		    {
 	    		new string[164];
  				switch(listitem)
		        {
		            case 0://Upgrades
		            {
	            		if(GetPVarInt(playerid,"Verwaltung") == 1)//Tankstelle
	            		{
	            		    new ts = SpielerInfo[playerid][sTankstelle];
							format(string,sizeof(string),"{FFFFFF}Benzin:		[%s{FFFFFF}]\nDiesel:		[%s{FFFFFF}]\nKerosin:	[%s{FFFFFF}]",TStelleUpgrades(TankstellenInfo[ts][tsBenzin]),TStelleUpgrades(TankstellenInfo[ts][tsDiesel]),TStelleUpgrades(TankstellenInfo[ts][tsKerosin]));
							ShowPlayerDialog(playerid,DIALOG_TANKSTELLE_UPGRADES,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung",string,"Weiter","Zurück");
						}
				 	 	else if(GetPVarInt(playerid,"Verwaltung") == 2)//Ammunation
	            		{
          					DeletePVar(playerid,"WaffenPreise");
					    	DeletePVar(playerid,"AmmuUpgrade");
	            		    ShowPlayerDialog(playerid,DIALOG_AMMU_UPGRADES,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Rüstung\nSchlagring\nMesser\nBaseballschläger\nDesert Eagle\nMP5\nAK-47\nM4\nSniper\nFallschirm","Kaufen","Verlassen");
	            		}
		 	 			else if(GetPVarInt(playerid,"Verwaltung") == 3)//24/7
	            		{
	            		    DeletePVar(playerid,"StorePreise");
	            		    ShowPlayerDialog(playerid,DIALOG_STORE_UPGRADES,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Navigationsgerät\nHandy\nTelefonbuch\nRepairkit\nKamera","Kaufen","Verlassen");
	            		}
					}
     				case 1://Preise
		            {
	            		if(GetPVarInt(playerid,"Verwaltung") == 1)//Tankstelle
	            		{
							ShowPlayerDialog(playerid,DIALOG_TANK_AUSWAHL,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Benzin\nDiesel\nKerosin","Weiter","Abbrechen");
						}
				 	 	else if(GetPVarInt(playerid,"Verwaltung") == 2)//Ammunation
	            		{
	            		    SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Folgende Steuern kommen beim Verkauf einer Waffe zustande:");
	            		    SendClientMessage(playerid,COLOR_GREY,"Schlagring: 100$ | Messer: 100$ | Baseballschläger: 100$ | Desert Eagle: 2000$ | MP5: 5000$");
	            		    SendClientMessage(playerid,COLOR_GREY,"AK47: 7500$ | M4: 8000$ | Sniper: 31.000$ | Fallschirm: 0$");
	            		    SetPVarInt(playerid,"WaffenPreise",1);
	            		    ShowPlayerDialog(playerid,DIALOG_AMMU_UPGRADES,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Rüstung\nSchlagring\nMesser\nBaseballschläger\nDesert Eagle\nMP5\nAK-47\nM4\nSniper\nFallschirm","Kaufen","Verlassen");
	            		}
		 	 			else if(GetPVarInt(playerid,"Verwaltung") == 3)//24/7
	            		{
	            		    SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Folgende Steuern kommen beim Verkauf eines Artikel zustande:");
	            		    SendClientMessage(playerid,COLOR_GREY,"Navi: 250$ | Handy: 250$ | Telefonbuch: 250$ | Repairkit: 250$ | Kamera: 50$");
	            		    SetPVarInt(playerid,"StorePreise",1);
	            		    ShowPlayerDialog(playerid,DIALOG_STORE_UPGRADES,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Navigationsgerät\nHandy\nTelefonbuch\nRepairkit\nKamera\nPfandflaschen verkaufen","Kaufen","Verlassen");
	            		}
					}
					case 2://Verkaufen
		            {
						ShowPlayerDialog(playerid,DIALOG_BUSINESS_VERKAUFEN,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Staat\nSpieler","Weiter","Zurück");
					}
					case 3://Beschreibung ändern
		            {
		                ShowPlayerDialog(playerid,DIALOG_TANK_BESCHREIBUNG,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Bitte gib unten eine Beschreibung für deine Tankstelle an.","Zurück","Bestätigen");
					}
				}
			}
		}
		case DIALOG_TANKSTELLE_UPGRADES:
		{
		    if(response==0){ShowPlayerDialog(playerid,DIALOG_VERWALTUNG,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Upgrades\nPreise\nBeschreibung ändern\nVerkaufen","Weiter","Abbrechen");}//Zurück
		    else if(response==1)//Weiter
		    {
		        new string[164], tsid = SpielerInfo[playerid][sTankstelle];
  				switch(listitem)
		        {
          			case 0://Benzin
		            {
		                if(TankstellenInfo[tsid][tsBenzin] == 0)
		                {
		                    SetPVarInt(playerid,"Upgrade",1);
		                	ShowPlayerDialog(playerid,DIALOG_TANKSTELLE_UPGRADESK,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Kaufbestätigung","Bist du dir sicher, dass du das Upgrade\nBenzin für 2500$ kaufen möchtest ?","Ja","Nein");
						}
						else
						{
						    SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Deine Tankstelle besitzt bereits das Benzin Upgrade.");
							format(string,sizeof(string),"{FFFFFF}Benzin:		[%s{FFFFFF}]\nDiesel:		[%s{FFFFFF}]\nKerosin:	[%s{FFFFFF}]",TStelleUpgrades(TankstellenInfo[tsid][tsBenzin]),TStelleUpgrades(TankstellenInfo[tsid][tsDiesel]),TStelleUpgrades(TankstellenInfo[tsid][tsKerosin]));
							ShowPlayerDialog(playerid,DIALOG_TANKSTELLE_UPGRADES,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung",string,"Weiter","Zurück");
						}
		            }
           			case 1://Diesel
		            {
              			if(TankstellenInfo[tsid][tsDiesel] == 0)
		                {
 							SetPVarInt(playerid,"Upgrade",2);
    						ShowPlayerDialog(playerid,DIALOG_TANKSTELLE_UPGRADESK,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Kaufbestätigung","Bist du dir sicher, dass du das Upgrade\nDiesel für 3000$ kaufen möchtest ?","Ja","Nein");
						}
						else
						{
		    				SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Deine Tankstelle besitzt bereits das Diesel Upgrade.");
							format(string,sizeof(string),"{FFFFFF}Benzin:		[%s{FFFFFF}]\nDiesel:		[%s{FFFFFF}]\nKerosin:	[%s{FFFFFF}]",TStelleUpgrades(TankstellenInfo[tsid][tsBenzin]),TStelleUpgrades(TankstellenInfo[tsid][tsDiesel]),TStelleUpgrades(TankstellenInfo[tsid][tsKerosin]));
							ShowPlayerDialog(playerid,DIALOG_TANKSTELLE_UPGRADES,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung",string,"Weiter","Zurück");
						}
					}
           			case 2://Kerosin
		            {
              			if(TankstellenInfo[tsid][tsKerosin] == 0)
		                {
              				SetPVarInt(playerid,"Upgrade",3);
		                	ShowPlayerDialog(playerid,DIALOG_TANKSTELLE_UPGRADESK,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Kaufbestätigung","Bist du dir sicher, dass du das Upgrade\nKerosin für 3500$ kaufen möchtest ?","Ja","Nein");
						}
						else
						{
  							SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Deine Tankstelle besitzt bereits das Kerosin Upgrade.");
							format(string,sizeof(string),"{FFFFFF}Benzin:		[%s{FFFFFF}]\nDiesel:		[%s{FFFFFF}]\nKerosin:	[%s{FFFFFF}]",TStelleUpgrades(TankstellenInfo[tsid][tsBenzin]),TStelleUpgrades(TankstellenInfo[tsid][tsDiesel]),TStelleUpgrades(TankstellenInfo[tsid][tsKerosin]));
							ShowPlayerDialog(playerid,DIALOG_TANKSTELLE_UPGRADES,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung",string,"Weiter","Zurück");
						}
					}
				}
			}
		}
		case DIALOG_TANKSTELLE_UPGRADESK:
		{
		    if(response==0){ShowPlayerDialog(playerid,DIALOG_VERWALTUNG,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Upgrades\nPreise\nBeschreibung ändern\nVerkaufen","Weiter","Abbrechen");}//Nein
		    else if(response==1)//Ja
		    {
		        new string[164], tsid = SpielerInfo[playerid][sTankstelle];
				if(GetPVarInt(playerid,"Upgrade") == 1)
				{
			        if(TankstellenInfo[tsid][tsKasse] < 2500)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld auf deinem Geschäftskonto.");
                    TankstellenInfo[tsid][tsBenzin] = 1;
                    TankstellenInfo[tsid][tsKasse] -= 2500;
                    TankstellenTafelUpdate(tsid);
                    Streamer_Update(playerid);
				}
				else if(GetPVarInt(playerid,"Upgrade") == 2)
				{
    				if(TankstellenInfo[tsid][tsKasse] < 3000)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld auf deinem Geschäftskonto.");
    				TankstellenInfo[tsid][tsDiesel] = 1;
                    TankstellenInfo[tsid][tsKasse] -= 3000;
                    TankstellenTafelUpdate(tsid);
                    Streamer_Update(playerid);
				}
				else if(GetPVarInt(playerid,"Upgrade") == 3)
				{
    				if(TankstellenInfo[tsid][tsKasse] < 3500)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld auf deinem Geschäftskonto.");
                    TankstellenInfo[tsid][tsKerosin] = 1;
                    TankstellenInfo[tsid][tsKasse] -= 3500;
                    TankstellenTafelUpdate(tsid);
                    Streamer_Update(playerid);
				}
				format(string,sizeof(string),"{FFFFFF}Benzin:		[%s{FFFFFF}]\nDiesel:		[%s{FFFFFF}]\nKerosin:	[%s{FFFFFF}]",TStelleUpgrades(TankstellenInfo[tsid][tsBenzin]),TStelleUpgrades(TankstellenInfo[tsid][tsDiesel]),TStelleUpgrades(TankstellenInfo[tsid][tsKerosin]));
				ShowPlayerDialog(playerid,DIALOG_TANKSTELLE_UPGRADES,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung",string,"Weiter","Zurück");
			}
		}
		case DIALOG_TANKSTELLE_PREISE:
		{
		    if(response==0){ShowPlayerDialog(playerid,DIALOG_VERWALTUNG,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Upgrades\nPreise\nBeschreibung ändern\nVerkaufen","Weiter","Abbrechen");}//Zurück
		    else if(response==1)//Weiter
		    {
		        new string[128], tsid = SpielerInfo[playerid][sTankstelle];
		        if(GetPVarInt(playerid,"TPreisAuswahl") == 1)
		        {
		        	if(strval(inputtext) > 0 && strval(inputtext) < 501 && IsNumeric(inputtext))
					{
					    TankstellenInfo[tsid][tsBenzinPreis] = strval(inputtext);
		    			format(string,sizeof(string),"Neuer Benzin Preis pro Liter: {FF0000}%d$",strval(inputtext));
						SendClientMessage(playerid,COLOR_INFO,string);
						ShowPlayerDialog(playerid,DIALOG_TANK_AUSWAHL,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Tanksystem","Benzin\nDiesel\nKerosin","Weiter","Abbrechen");
						TankstellenTafelUpdate(tsid);
						Streamer_Update(playerid);
					}
					else ShowPlayerDialog(playerid,DIALOG_TANKSTELLE_PREISE,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Bitte gebe unten den Preis (pro Liter) für Benzin an.\n\n{FF0000}Der Preis (pro Liter) darf nicht kleiner als 1$ und höher als 500$ sein.","Weiter","Zurück");
		        }
		        else if(GetPVarInt(playerid,"TPreisAuswahl") == 2)
		        {
		        	if(strval(inputtext) > 0 && strval(inputtext) < 501 && IsNumeric(inputtext))
					{
					    TankstellenInfo[tsid][tsDieselPreis] = strval(inputtext);
		    			format(string,sizeof(string),"Neuer Diesel Preis pro Liter: {FF0000}%d$",strval(inputtext));
						SendClientMessage(playerid,COLOR_INFO,string);
						ShowPlayerDialog(playerid,DIALOG_TANK_AUSWAHL,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Tanksystem","Benzin\nDiesel\nKerosin","Weiter","Abbrechen");
						TankstellenTafelUpdate(tsid);
						Streamer_Update(playerid);
					}
					else ShowPlayerDialog(playerid,DIALOG_TANKSTELLE_PREISE,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Bitte gebe unten den Preis (pro Liter) für Diesel an.\n\n{FF0000}Der Preis (pro Liter) darf nicht kleiner als 1$ und höher als 500$ sein.","Weiter","Zurück");
		        }
		        else if(GetPVarInt(playerid,"TPreisAuswahl") == 3)
		        {
		        	if(strval(inputtext) > 0 && strval(inputtext) < 501 && IsNumeric(inputtext))
					{
					    TankstellenInfo[tsid][tsKerosinPreis] = strval(inputtext);
		    			format(string,sizeof(string),"Neuer Kerosin Preis pro Liter:{FF0000}%d$",strval(inputtext));
						SendClientMessage(playerid,COLOR_INFO,string);
						ShowPlayerDialog(playerid,DIALOG_TANK_AUSWAHL,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Tanksystem","Benzin\nDiesel\nKerosin","Weiter","Abbrechen");
						TankstellenTafelUpdate(tsid);
						Streamer_Update(playerid);
					}
					else ShowPlayerDialog(playerid,DIALOG_TANKSTELLE_PREISE,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Bitte gebe unten den Preis (pro Liter) für Kerosin an.\n\n{FF0000}Der Preis (pro Liter) darf nicht kleiner als 1$ und höher als 500$ sein.","Weiter","Zurück");
		        }
			}
		}
		case DIALOG_TANK_BESCHREIBUNG:
		{
		    if(response==0){ShowPlayerDialog(playerid,DIALOG_VERWALTUNG,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Upgrades\nPreise\nBeschreibung ändern\nVerkaufen","Weiter","Abbrechen");}//Zurück
		    else if(response==1)//Weiter
		    {
		        new tsid = SpielerInfo[playerid][sTankstelle];
		        if(strlen(inputtext) < 1 || strlen(inputtext) > 16)
		        {
		            ShowPlayerDialog(playerid,DIALOG_TANK_BESCHREIBUNG,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Bitte gib unten eine Beschreibung für deine Tankstelle an.\n\n{FF0000}Maximal 1-15 Zeichen.","Zurück","Bestätigen");
		        }
				else
				{
				    new str[144];
				    format(str,sizeof(str),"Du hast die Beschreibung deiner Tankstelle geändert. Beschreibung: %s",inputtext);
				    format(TankstellenInfo[tsid][tsBeschreibung], 15, "%s",inputtext);
				    TankstellenTafelUpdate(tsid);
				    Streamer_Update(playerid);
				    SendClientMessage(playerid,COLOR_SUPER,str);
 					ShowPlayerDialog(playerid,DIALOG_VERWALTUNG,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Upgrades\nPreise\nBeschreibung ändern\nVerkaufen","Weiter","Abbrechen");
    				SetPVarInt(playerid,"Verwaltung",1);
				}
			}
		}
		case DIALOG_AMMU_UPGRADES:
		if(response==0){ShowPlayerDialog(playerid,DIALOG_VERWALTUNG,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Upgrades\nPreise\nVerkaufen","Weiter","Abbrechen");}//Zurück
	    else if(response==1)//Weiter
	    {
			new an = SpielerInfo[playerid][sAmmunation];
			switch(listitem)
	        {
      			case 0://Rüstung
             	{
             	    if(GetPVarInt(playerid,"WaffenPreise") == 0)
             	    {
						if(AmmunationInfo[an][amArmour] != 0)
						{
							SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt dieses Upgrade schon.");
							ShowPlayerDialog(playerid,DIALOG_AMMU_UPGRADES,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Rüstung\nSchlagring\nMesser\nBaseballschläger\nDesert Eagle\nMP5\nAK-47\nM4\nSniper\nFallschirm","Kaufen","Verlassen");
						}
						else
						{
						    SetPVarInt(playerid,"AmmuUpgrade",1);
						    ShowPlayerDialog(playerid,DIALOG_AMMU_UPGRADESK,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Bist du dir sicher, dass du dir\ndas Rüstung Upgrade für 1000$ kaufen möchtest?","Kaufen","Zurück");
						}
					}
					else
					{
						if(AmmunationInfo[an][amArmour] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt dieses Upgrade nicht. Kaufe es dir erst um dort einen Preis festlegen zu können.");
					    SetPVarInt(playerid,"AmmuUpgrade",1);
					    ShowPlayerDialog(playerid,DIALOG_AMMU_UPGRADESP,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Bitte gebe unten nun einen Preis an,\nwie viel eine Rüstung kosten soll.","Bestätigen","");
					}
	            }
	            case 1:
	            {
        	    	if(GetPVarInt(playerid,"WaffenPreise") == 0)
             	    {
						if(AmmunationInfo[an][amSchlagring] != 0)
						{
							SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt dieses Upgrade schon.");
							ShowPlayerDialog(playerid,DIALOG_AMMU_UPGRADES,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Rüstung\nSchlagring\nMesser\nBaseballschläger\nDesert Eagle\nMP5\nAK-47\nM4\nSniper\nFallschirm","Kaufen","Verlassen");
						}
						else
						{
						    SetPVarInt(playerid,"AmmuUpgrade",2);
	                        ShowPlayerDialog(playerid,DIALOG_AMMU_UPGRADESK,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Bist du dir sicher, dass du dir\ndas Schlagring Upgrade für 1500$ kaufen möchtest?","Kaufen","Zurück");
						}
					}
					else
					{
					    if(AmmunationInfo[an][amSchlagring] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt dieses Upgrade nicht. Kaufe es dir erst um dort einen Preis festlegen zu können.");
					    SetPVarInt(playerid,"AmmuUpgrade",2);
					    ShowPlayerDialog(playerid,DIALOG_AMMU_UPGRADESP,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Bitte gebe unten nun einen Preis an,\nwie viel ein Schlagring kosten soll.","Bestätigen","");
	 				}
	            }
	            case 2:
	            {
        	    	if(GetPVarInt(playerid,"WaffenPreise") == 0)
             	    {
						if(AmmunationInfo[an][amMesser] != 0)
						{
							SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt dieses Upgrade schon.");
							ShowPlayerDialog(playerid,DIALOG_AMMU_UPGRADES,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Rüstung\nSchlagring\nMesser\nBaseballschläger\nDesert Eagle\nMP5\nAK-47\nM4\nSniper\nFallschirm","Kaufen","Verlassen");
						}
						else
						{
						    SetPVarInt(playerid,"AmmuUpgrade",3);
	                        ShowPlayerDialog(playerid,DIALOG_AMMU_UPGRADESK,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Bist du dir sicher, dass du dir\ndas Messer Upgrade für 1500$ kaufen möchtest?","Kaufen","Zurück");
						}
					}
					else
					{
					    if(AmmunationInfo[an][amMesser] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt dieses Upgrade nicht. Kaufe es dir erst um dort einen Preis festlegen zu können.");
					    SetPVarInt(playerid,"AmmuUpgrade",3);
					    ShowPlayerDialog(playerid,DIALOG_AMMU_UPGRADESP,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Bitte gebe unten nun einen Preis an,\nwie viel ein Messer kosten soll.","Bestätigen","");
	 				}
	            }
	            case 3:
	            {
        	    	if(GetPVarInt(playerid,"WaffenPreise") == 0)
             	    {
						if(AmmunationInfo[an][amBaseball] != 0)
						{
							SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt dieses Upgrade schon.");
							ShowPlayerDialog(playerid,DIALOG_AMMU_UPGRADES,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Rüstung\nSchlagring\nMesser\nBaseballschläger\nDesert Eagle\nMP5\nAK-47\nM4\nSniper\nFallschirm","Kaufen","Verlassen");
						}
						else
						{
						    SetPVarInt(playerid,"AmmuUpgrade",4);
	                        ShowPlayerDialog(playerid,DIALOG_AMMU_UPGRADESK,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Bist du dir sicher, dass du dir\ndas Baseball Upgrade für 1500$ kaufen möchtest?","Kaufen","Zurück");
						}
					}
					else
					{
					    if(AmmunationInfo[an][amBaseball] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt dieses Upgrade nicht. Kaufe es dir erst um dort einen Preis festlegen zu können.");
					    SetPVarInt(playerid,"AmmuUpgrade",4);
					    ShowPlayerDialog(playerid,DIALOG_AMMU_UPGRADESP,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Bitte gebe unten nun einen Preis an,\nwie viel ein Baseballschläger kosten soll.","Bestätigen","");
	 				}
	            }
	            case 4:
	            {
        	    	if(GetPVarInt(playerid,"WaffenPreise") == 0)
             	    {
	             		if(AmmunationInfo[an][amDeagle] != 0)
						{
							SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt dieses Upgrade schon.");
							ShowPlayerDialog(playerid,DIALOG_AMMU_UPGRADES,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Rüstung\nSchlagring\nMesser\nBaseballschläger\nDesert Eagle\nMP5\nAK-47\nM4\nSniper\nFallschirm","Kaufen","Verlassen");
						}
						else
						{
						    SetPVarInt(playerid,"AmmuUpgrade",5);
	                        ShowPlayerDialog(playerid,DIALOG_AMMU_UPGRADESK,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Bist du dir sicher, dass du dir\ndas Deagle Upgrade für 3000$ kaufen möchtest?","Kaufen","Zurück");
						}
 					}
					else
					{
					    if(AmmunationInfo[an][amDeagle] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt dieses Upgrade nicht. Kaufe es dir erst um dort einen Preis festlegen zu können.");
					    SetPVarInt(playerid,"AmmuUpgrade",5);
					    ShowPlayerDialog(playerid,DIALOG_AMMU_UPGRADESP,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Bitte gebe unten nun einen Preis an,\nwie viel eine Desert Eagle kosten soll.","Bestätigen","");
	 				}
	            }
	            case 5:
	            {
        	    	if(GetPVarInt(playerid,"WaffenPreise") == 0)
             	    {
	             		if(AmmunationInfo[an][amMP5] != 0)
						{
							SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt dieses Upgrade schon.");
							ShowPlayerDialog(playerid,DIALOG_AMMU_UPGRADES,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Rüstung\nSchlagring\nMesser\nBaseballschläger\nDesert Eagle\nMP5\nAK-47\nM4\nSniper\nFallschirm","Kaufen","Verlassen");
						}
						else
						{
						    SetPVarInt(playerid,"AmmuUpgrade",6);
	                        ShowPlayerDialog(playerid,DIALOG_AMMU_UPGRADESK,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Bist du dir sicher, dass du dir\ndas MP5 Upgrade für 3000$ kaufen möchtest?","Kaufen","Zurück");
						}
					}
					else
					{
					    if(AmmunationInfo[an][amMP5] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt dieses Upgrade nicht. Kaufe es dir erst um dort einen Preis festlegen zu können.");
					    SetPVarInt(playerid,"AmmuUpgrade",6);
					    ShowPlayerDialog(playerid,DIALOG_AMMU_UPGRADESP,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Bitte gebe unten nun einen Preis an,\nwie viel eine MP5 kosten soll.","Bestätigen","");
	 				}
	            }
	            case 6:
	            {
        	    	if(GetPVarInt(playerid,"WaffenPreise") == 0)
             	    {
	          			if(AmmunationInfo[an][amAK] != 0)
						{
							SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt dieses Upgrade schon.");
							ShowPlayerDialog(playerid,DIALOG_AMMU_UPGRADES,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Rüstung\nSchlagring\nMesser\nBaseballschläger\nDesert Eagle\nMP5\nAK-47\nM4\nSniper\nFallschirm","Kaufen","Verlassen");
						}
	     				else
	     				{
	     				    SetPVarInt(playerid,"AmmuUpgrade",7);
	                        ShowPlayerDialog(playerid,DIALOG_AMMU_UPGRADESK,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Bist du dir sicher, dass du dir\ndas AK-47 Upgrade für 3000$ kaufen möchtest?","Kaufen","Zurück");
						}
	 				}
					else
					{
					    if(AmmunationInfo[an][amAK] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt dieses Upgrade nicht. Kaufe es dir erst um dort einen Preis festlegen zu können.");
					    SetPVarInt(playerid,"AmmuUpgrade",7);
					    ShowPlayerDialog(playerid,DIALOG_AMMU_UPGRADESP,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Bitte gebe unten nun einen Preis an,\nwie viel eine AK-47 kosten soll.","Bestätigen","");
					}
	            }
	            case 7:
	            {
        	    	if(GetPVarInt(playerid,"WaffenPreise") == 0)
             	    {
	             		if(AmmunationInfo[an][amM4] != 0)
						{
							SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt dieses Upgrade schon.");
							ShowPlayerDialog(playerid,DIALOG_AMMU_UPGRADES,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Rüstung\nSchlagring\nMesser\nBaseballschläger\nDesert Eagle\nMP5\nAK-47\nM4\nSniper\nFallschirm","Kaufen","Verlassen");
						}
						else
						{
	                        SetPVarInt(playerid,"AmmuUpgrade",8);
	                        ShowPlayerDialog(playerid,DIALOG_AMMU_UPGRADESK,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Bist du dir sicher, dass du dir\ndas M4 Upgrade für 3000$ kaufen möchtest?","Kaufen","Zurück");
						}
					}
					else
					{
					    if(AmmunationInfo[an][amM4] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt dieses Upgrade nicht. Kaufe es dir erst um dort einen Preis festlegen zu können.");
					    SetPVarInt(playerid,"AmmuUpgrade",8);
					    ShowPlayerDialog(playerid,DIALOG_AMMU_UPGRADESP,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Bitte gebe unten nun einen Preis an,\nwie viel ein M4 kosten soll.","Bestätigen","");
					}
	            }
	            case 8:
	            {
        	    	if(GetPVarInt(playerid,"WaffenPreise") == 0)
             	    {
						if(AmmunationInfo[an][amSniper] != 0)
	     				{
							SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt dieses Upgrade schon.");
							ShowPlayerDialog(playerid,DIALOG_AMMU_UPGRADES,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Rüstung\nSchlagring\nMesser\nBaseballschläger\nDesert Eagle\nMP5\nAK-47\nM4\nSniper\nFallschirm","Kaufen","Verlassen");
						}
						else
						{
						    SetPVarInt(playerid,"AmmuUpgrade",9);
	                        ShowPlayerDialog(playerid,DIALOG_AMMU_UPGRADESK,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Bist du dir sicher, dass du dir\ndas Sniper Upgrade für 5000$ kaufen möchtest?","Kaufen","Zurück");
						}
	 				}
					else
					{
					    if(AmmunationInfo[an][amSniper] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt dieses Upgrade nicht. Kaufe es dir erst um dort einen Preis festlegen zu können.");
					    SetPVarInt(playerid,"AmmuUpgrade",9);
					    ShowPlayerDialog(playerid,DIALOG_AMMU_UPGRADESP,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Bitte gebe unten nun einen Preis an,\nwie viel eine Sniper kosten soll.","Bestätigen","");
					}
	            }
	            case 9:
	            {
        	    	if(GetPVarInt(playerid,"WaffenPreise") == 0)
             	    {
						if(AmmunationInfo[an][amFallschirm] != 0)
						{
							SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt dieses Upgrade schon.");
							ShowPlayerDialog(playerid,DIALOG_AMMU_UPGRADES,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Rüstung\nSchlagring\nMesser\nBaseballschläger\nDesert Eagle\nMP5\nAK-47\nM4\nSniper\nFallschirm","Kaufen","Verlassen");
						}
						else
						{
						    SetPVarInt(playerid,"AmmuUpgrade",10);
							ShowPlayerDialog(playerid,DIALOG_AMMU_UPGRADESK,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Bist du dir sicher, dass du dir\ndas Fallschirm für 1000$ kaufen möchtest?","Kaufen","Zurück");
						}
					}
					else
					{
					    if(AmmunationInfo[an][amFallschirm] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt dieses Upgrade nicht. Kaufe es dir erst um dort einen Preis festlegen zu können.");
					    SetPVarInt(playerid,"AmmuUpgrade",10);
					    ShowPlayerDialog(playerid,DIALOG_AMMU_UPGRADESP,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Bitte gebe unten nun einen Preis an,\nwie viel ein Fallschirm kosten soll.","Bestätigen","");
					}
	            }
			}
		}
		case DIALOG_AMMU_UPGRADESK:
		{
		    if(response==0){DeletePVar(playerid,"AmmuUpgrade"); DeletePVar(playerid,"WaffenPreise"); ShowPlayerDialog(playerid,DIALOG_AMMU_UPGRADES,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Rüstung\nSchlagring\nMesser\nBaseballschläger\nDesert Eagle\nMP5\nAK-47\nM4\nSniper\nFallschirm","Kaufen","Verlassen");}//Zurück
		    else if(response==1)//Weiter
		    {
		        new an = SpielerInfo[playerid][sAmmunation];
		        if(GetPVarInt(playerid,"AmmuUpgrade") == 1)
		        {

					if(AmmunationInfo[an][amKasse] < 1000)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld auf dem Geschäftskonto.");
					SendClientMessage(playerid,COLOR_SUPER,"Dein Ammunation besitzt nun Rüstungen.");
					AmmunationInfo[an][amArmour] = 1;
					AmmunationInfo[an][amKasse] -= 1000;
					ShowPlayerDialog(playerid,DIALOG_AMMU_UPGRADESP,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Bitte gebe unten nun einen Preis an,\nwie viel eine Rüstung kosten soll.","Bestätigen","");
		        }

				else if(GetPVarInt(playerid,"AmmuUpgrade") == 2)
		        {
		            if(AmmunationInfo[an][amKasse] < 1500)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld auf dem Geschäftskonto.");
					SendClientMessage(playerid,COLOR_SUPER,"Dein Ammunation besitzt nun Schlagringe.");
					AmmunationInfo[an][amSchlagring] = 1;
					AmmunationInfo[an][amKasse] -= 1500;
					ShowPlayerDialog(playerid,DIALOG_AMMU_UPGRADESP,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Bitte gebe unten nun einen Preis an,\nwie viel ein Schlagring kosten soll.","Bestätigen","");
		        }
		        else if(GetPVarInt(playerid,"AmmuUpgrade") == 3)
		        {
		            if(AmmunationInfo[an][amKasse] < 1500)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld auf dem Geschäftskonto.");
					SendClientMessage(playerid,COLOR_SUPER,"Dein Ammunation besitzt nun Messers.");
					AmmunationInfo[an][amMesser] = 1;
					AmmunationInfo[an][amKasse] -= 1500;
					ShowPlayerDialog(playerid,DIALOG_AMMU_UPGRADESP,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Bitte gebe unten nun einen Preis an,\nwie viel ein Messer kosten soll.","Bestätigen","");
		        }
		        else if(GetPVarInt(playerid,"AmmuUpgrade") == 4)
		        {
		            if(AmmunationInfo[an][amKasse] < 1500)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld auf dem Geschäftskonto.");
					SendClientMessage(playerid,COLOR_SUPER,"Dein Ammunation besitzt nun Baseballschläger.");
					AmmunationInfo[an][amBaseball] = 1;
					AmmunationInfo[an][amKasse] -= 1500;
					ShowPlayerDialog(playerid,DIALOG_AMMU_UPGRADESP,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Bitte gebe unten nun einen Preis an,\nwie viel ein Baseballschläger kosten soll.","Bestätigen","");
		        }
		        else if(GetPVarInt(playerid,"AmmuUpgrade") == 5)
		        {
		            if(AmmunationInfo[an][amKasse] < 3000)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld auf dem Geschäftskonto.");
					SendClientMessage(playerid,COLOR_SUPER,"Dein Ammunation besitzt nun Desert Eagles.");
					AmmunationInfo[an][amDeagle] = 1;
					AmmunationInfo[an][amKasse] -= 3000;
					ShowPlayerDialog(playerid,DIALOG_AMMU_UPGRADESP,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Bitte gebe unten nun einen Preis an,\nwie viel eine Desert Eagle kosten soll.","Bestätigen","");
		        }
		        else if(GetPVarInt(playerid,"AmmuUpgrade") == 6)
		        {
		            if(AmmunationInfo[an][amKasse] < 3000)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld auf dem Geschäftskonto.");
					SendClientMessage(playerid,COLOR_SUPER,"Dein Ammunation besitzt nun MP5´s.");
					AmmunationInfo[an][amMP5] = 1;
					AmmunationInfo[an][amKasse] -= 3000;
					ShowPlayerDialog(playerid,DIALOG_AMMU_UPGRADESP,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Bitte gebe unten nun einen Preis an,\nwie viel eine MP5 kosten soll.","Bestätigen","");
		        }
		        else if(GetPVarInt(playerid,"AmmuUpgrade") == 7)
		        {
		            if(AmmunationInfo[an][amKasse] < 3000)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld auf dem Geschäftskonto.");
					SendClientMessage(playerid,COLOR_SUPER,"Dein Ammunation besitzt nun AKS-47.");
					AmmunationInfo[an][amAK] = 1;
					AmmunationInfo[an][amKasse] -= 3000;
					ShowPlayerDialog(playerid,DIALOG_AMMU_UPGRADESP,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Bitte gebe unten nun einen Preis an,\nwie viel eine AK-47 kosten soll.","Bestätigen","");
		        }
		        else if(GetPVarInt(playerid,"AmmuUpgrade") == 8)
		        {
		            if(AmmunationInfo[an][amKasse] < 3000)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld auf dem Geschäftskonto.");
					SendClientMessage(playerid,COLOR_SUPER,"Dein Ammunation besitzt nun M4´s.");
					AmmunationInfo[an][amM4] = 1;
					AmmunationInfo[an][amKasse] -= 3000;
					ShowPlayerDialog(playerid,DIALOG_AMMU_UPGRADESP,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Bitte gebe unten nun einen Preis an,\nwie viel ein M4 kosten soll.","Bestätigen","");
		        }
		        else if(GetPVarInt(playerid,"AmmuUpgrade") == 9)
		        {
		            if(AmmunationInfo[an][amKasse] < 5000)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld auf dem Geschäftskonto.");
					SendClientMessage(playerid,COLOR_SUPER,"Dein Ammunation besitzt nun Snipen.");
					AmmunationInfo[an][amSniper] = 1;
					AmmunationInfo[an][amKasse] -= 5000;
					ShowPlayerDialog(playerid,DIALOG_AMMU_UPGRADESP,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Bitte gebe unten nun einen Preis an,\nwie viel eine Sniper kosten soll.","Bestätigen","");
		        }
		        else if(GetPVarInt(playerid,"AmmuUpgrade") == 10)
		        {
		            if(AmmunationInfo[an][amKasse] < 1000)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld auf dem Geschäftskonto.");
					SendClientMessage(playerid,COLOR_SUPER,"Dein Ammunation besitzt nun Fallschirme.");
					AmmunationInfo[an][amFallschirm] = 1;
					AmmunationInfo[an][amKasse] -= 1000;
					ShowPlayerDialog(playerid,DIALOG_AMMU_UPGRADESP,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Bitte gebe unten nun einen Preis an,\nwie viel ein Fallschirm kosten soll.","Bestätigen","");
		        }
		    }
		}
		case DIALOG_AMMU_UPGRADESP:
		{
		    if(response==0){DeletePVar(playerid,"Verwaltung"); DeletePVar(playerid,"AmmuUpgrade");}//Abbrechen
		    else if(response==1)//Weiter
		    {
      			new string[128], an = SpielerInfo[playerid][sAmmunation];
	        	if(strval(inputtext) > 0 && strval(inputtext) < 60001 && IsNumeric(inputtext))
				{
    				if(GetPVarInt(playerid,"AmmuUpgrade") == 1)
		        	{
					    AmmunationInfo[an][amArmour] = strval(inputtext);
		    			format(string,sizeof(string),"Neuer Verkaufspreis für Rüstungen {FF0000}%d$",strval(inputtext));
						SendClientMessage(playerid,COLOR_INFO,string);
					}

					else if(GetPVarInt(playerid,"AmmuUpgrade") == 2)
		        	{
					    AmmunationInfo[an][amSchlagring] = strval(inputtext);
		    			format(string,sizeof(string),"Neuer Verkaufspreis für Schlagringe {FF0000}%d$",strval(inputtext));
						SendClientMessage(playerid,COLOR_INFO,string);
					}
					else if(GetPVarInt(playerid,"AmmuUpgrade") == 3)
		        	{
					    AmmunationInfo[an][amMesser] = strval(inputtext);
		    			format(string,sizeof(string),"Neuer Verkaufspreis für Messers {FF0000}%d$",strval(inputtext));
						SendClientMessage(playerid,COLOR_INFO,string);
					}
					else if(GetPVarInt(playerid,"AmmuUpgrade") == 4)
		        	{
					    AmmunationInfo[an][amBaseball] = strval(inputtext);
		    			format(string,sizeof(string),"Neuer Verkaufspreis für Baseballschläger {FF0000}%d$",strval(inputtext));
						SendClientMessage(playerid,COLOR_INFO,string);
					}
					else if(GetPVarInt(playerid,"AmmuUpgrade") == 5)
		        	{
					    AmmunationInfo[an][amDeagle] = strval(inputtext);
		    			format(string,sizeof(string),"Neuer Verkaufspreis für Desert Eagles {FF0000}%d$",strval(inputtext));
						SendClientMessage(playerid,COLOR_INFO,string);
					}
					else if(GetPVarInt(playerid,"AmmuUpgrade") == 6)
		        	{
					    AmmunationInfo[an][amMP5] = strval(inputtext);
		    			format(string,sizeof(string),"Neuer Verkaufspreis für MP5´s {FF0000}%d$",strval(inputtext));
						SendClientMessage(playerid,COLOR_INFO,string);
					}
					else if(GetPVarInt(playerid,"AmmuUpgrade") == 7)
		        	{
					    AmmunationInfo[an][amAK] = strval(inputtext);
		    			format(string,sizeof(string),"Neuer Verkaufspreis für AKS-47 {FF0000}%d$",strval(inputtext));
						SendClientMessage(playerid,COLOR_INFO,string);
					}
					else if(GetPVarInt(playerid,"AmmuUpgrade") == 8)
		        	{
					    AmmunationInfo[an][amM4] = strval(inputtext);
		    			format(string,sizeof(string),"Neuer Verkaufspreis für M4´s {FF0000}%d$",strval(inputtext));
						SendClientMessage(playerid,COLOR_INFO,string);
					}
					else if(GetPVarInt(playerid,"AmmuUpgrade") == 9)
		        	{
					    AmmunationInfo[an][amSniper] = strval(inputtext);
		    			format(string,sizeof(string),"Neuer Verkaufspreis für Snipen {FF0000}%d$",strval(inputtext));
						SendClientMessage(playerid,COLOR_INFO,string);
					}
					else if(GetPVarInt(playerid,"AmmuUpgrade") == 10)
		        	{
					    AmmunationInfo[an][amFallschirm] = strval(inputtext);
		    			format(string,sizeof(string),"Neuer Verkaufspreis für Fallschirme {FF0000}%d$",strval(inputtext));
						SendClientMessage(playerid,COLOR_INFO,string);

					}
					DeletePVar(playerid,"AmmuUpgrade");
					ShowPlayerDialog(playerid,DIALOG_AMMU_UPGRADES,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Rüstung\nSchlagring\nMesser\nBaseballschläger\nDesert Eagle\nMP5\nAK-47\nM4\nSniper\nFallschirm","Kaufen","Verlassen");
		        }
		        else ShowPlayerDialog(playerid,DIALOG_AMMU_UPGRADESP,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Bitte gebe unten den Verkaufspreis an.\n\n{FF0000}Der Preis darf nicht kleiner als 1$ und höher als 20000$ sein.","Weiter","Zurück");
			}
		}
		case DIALOG_STORE_UPGRADES:
		if(response==0){ShowPlayerDialog(playerid,DIALOG_VERWALTUNG,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Upgrades\nPreise\nVerkaufen","Weiter","Abbrechen");}//Zurück
	    else if(response==1)//Weiter
	    {
			new an = SpielerInfo[playerid][sStore];
			switch(listitem)
	        {
      			case 0://Navigationsgerät
             	{
         	    	if(GetPVarInt(playerid,"StorePreise") == 0)
             	    {
						if(StoreInfo[an][siNavi] != 0)
						{
							SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt dieses Upgrade schon.");
							ShowPlayerDialog(playerid,DIALOG_STORE_UPGRADES,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Navigationsgerät\nHandy\nTelefonbuch\nRepairkit\nKamera","Weiter","Zurück");
						}
						else
						{
						    SetPVarInt(playerid,"StoreUpgrade",1);
	             	    	ShowPlayerDialog(playerid,DIALOG_STORE_UPGRADESK,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Bist du dir sicher, dass du dir\ndas Navigationsgerät Upgrade für 3000$ kaufen möchtest?","Kaufen","Zurück");
						}
					}
					else
					{
	    				if(StoreInfo[an][siNavi] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt dieses Upgrade nicht. Kaufe es dir erst um dort einen Preis festlegen zu können.");
					    SetPVarInt(playerid,"StoreUpgrade",1);
					    ShowPlayerDialog(playerid,DIALOG_STORE_UPGRADESP,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Bitte gebe unten nun einen Preis an,\nwie viel ein Navigationsgerät kosten soll.","Bestätigen","");
					}
	 			}
  				case 1://Handy
             	{
         	    	if(GetPVarInt(playerid,"StorePreise") == 0)
             	    {
						if(StoreInfo[an][siHandy] != 0)
						{
							SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt dieses Upgrade schon.");
							ShowPlayerDialog(playerid,DIALOG_STORE_UPGRADES,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Navigationsgerät\nHandy\nTelefonbuch\nRepairkit\nKamera","Weiter","Zurück");
						}
						else
						{
						    SetPVarInt(playerid,"StoreUpgrade",2);
	             	    	ShowPlayerDialog(playerid,DIALOG_STORE_UPGRADESK,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Bist du dir sicher, dass du dir\ndas Handy Upgrade für 3000$ kaufen möchtest?","Kaufen","Zurück");
						}
					}
					else
					{
	    				if(StoreInfo[an][siHandy] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt dieses Upgrade nicht. Kaufe es dir erst um dort einen Preis festlegen zu können.");
					    SetPVarInt(playerid,"StoreUpgrade",2);
					    ShowPlayerDialog(playerid,DIALOG_STORE_UPGRADESP,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Bitte gebe unten nun einen Preis an,\nwie viel ein Handy kosten soll.","Bestätigen","");
					}
	 			}
 				case 2://Telefonbuch
             	{
         	    	if(GetPVarInt(playerid,"StorePreise") == 0)
             	    {
						if(StoreInfo[an][siTelefonbuch] != 0)
						{
							SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt dieses Upgrade schon.");
							ShowPlayerDialog(playerid,DIALOG_STORE_UPGRADES,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Navigationsgerät\nHandy\nTelefonbuch\nRepairkit\nKamera","Weiter","Zurück");
						}
						else
						{
						    SetPVarInt(playerid,"StoreUpgrade",3);
	             	    	ShowPlayerDialog(playerid,DIALOG_STORE_UPGRADESK,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Bist du dir sicher, dass du dir\ndas Telefonbuch Upgrade für 3000$ kaufen möchtest?","Kaufen","Zurück");
						}
					}
					else
					{
	    				if(StoreInfo[an][siTelefonbuch] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt dieses Upgrade nicht. Kaufe es dir erst um dort einen Preis festlegen zu können.");
					    SetPVarInt(playerid,"StoreUpgrade",3);
					    ShowPlayerDialog(playerid,DIALOG_STORE_UPGRADESP,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Bitte gebe unten nun einen Preis an,\nwie viel ein Telefonbuch kosten soll.","Bestätigen","");
					}
	 			}
 				case 3://Repairkit
             	{
         	    	if(GetPVarInt(playerid,"StorePreise") == 0)
             	    {
						if(StoreInfo[an][siRepairkit] != 0)
						{
							SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt dieses Upgrade schon.");
							ShowPlayerDialog(playerid,DIALOG_STORE_UPGRADES,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Navigationsgerät\nHandy\nTelefonbuch\nRepairkit\nKamera","Weiter","Zurück");
						}
						else
						{
						    SetPVarInt(playerid,"StoreUpgrade",4);
	             	    	ShowPlayerDialog(playerid,DIALOG_STORE_UPGRADESK,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Bist du dir sicher, dass du dir\ndas Repairkit Upgrade für 3000$ kaufen möchtest?","Kaufen","Zurück");
						}
					}
					else
					{
	    				if(StoreInfo[an][siRepairkit] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt dieses Upgrade nicht. Kaufe es dir erst um dort einen Preis festlegen zu können.");
					    SetPVarInt(playerid,"StoreUpgrade",4);
					    ShowPlayerDialog(playerid,DIALOG_STORE_UPGRADESP,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Bitte gebe unten nun einen Preis an,\nwie viel ein Repairkit kosten soll.","Bestätigen","");
					}
	 			}
	 			case 4://Kamera
             	{
         	    	if(GetPVarInt(playerid,"StorePreise") == 0)
             	    {
						if(StoreInfo[an][siKamera] != 0)
						{
							SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt dieses Upgrade schon.");
							ShowPlayerDialog(playerid,DIALOG_STORE_UPGRADES,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Navigationsgerät\nHandy\nTelefonbuch\nRepairkit\nKamera","Weiter","Zurück");
						}
						else
						{
						    SetPVarInt(playerid,"StoreUpgrade",5);
	             	    	ShowPlayerDialog(playerid,DIALOG_STORE_UPGRADESK,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Bist du dir sicher, dass du dir\ndas Kamera Upgrade für 1650$ kaufen möchtest?","Kaufen","Zurück");
						}
					}
					else
					{
	    				if(StoreInfo[an][siKamera] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt dieses Upgrade nicht. Kaufe es dir erst um dort einen Preis festlegen zu können.");
					    SetPVarInt(playerid,"StoreUpgrade",5);
					    ShowPlayerDialog(playerid,DIALOG_STORE_UPGRADESP,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Bitte gebe unten nun einen Preis an,\nwie viel eine Kamera kosten soll.","Bestätigen","");
					}
	 			}
			}
		}
		case DIALOG_STORE_UPGRADESK:
		{
		    if(response==0){DeletePVar(playerid,"StoreUpgrade"); ShowPlayerDialog(playerid,DIALOG_STORE_UPGRADES,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Navigationsgerät\nHandy\nTelefonbuch\nRepairkit\nKamera","Weiter","Abbrechen");}//Zurück
		    else if(response==1)//Weiter
		    {
		        new an = SpielerInfo[playerid][sStore];
		        if(GetPVarInt(playerid,"StoreUpgrade") == 1)
				{
					if(StoreInfo[an][siKasse] < 3000)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld auf dem Geschäftskonto.");
					SendClientMessage(playerid,COLOR_SUPER,"Dein 24/7 besitzt nun Navigationsgeräte.");
					StoreInfo[an][siNavi] = 1;
					StoreInfo[an][siKasse] -= 3000;
					ShowPlayerDialog(playerid,DIALOG_STORE_UPGRADESP,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Bitte gebe unten nun einen Preis an,\nwie viel eine Navigationsgerät kosten soll.","Bestätigen","");
		        }
		        else if(GetPVarInt(playerid,"StoreUpgrade") == 2)
				{
					if(StoreInfo[an][siKasse] < 3000)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld auf dem Geschäftskonto.");
					SendClientMessage(playerid,COLOR_SUPER,"Dein 24/7 besitzt nun Handy´s.");
					StoreInfo[an][siHandy] = 1;
					StoreInfo[an][siKasse] -= 3000;
					ShowPlayerDialog(playerid,DIALOG_STORE_UPGRADESP,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Bitte gebe unten nun einen Preis an,\nwie viel ein Handy kosten soll.","Bestätigen","");
		        }
		        else if(GetPVarInt(playerid,"StoreUpgrade") == 3)
				{
					if(StoreInfo[an][siKasse] < 3000)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld auf dem Geschäftskonto.");
					SendClientMessage(playerid,COLOR_SUPER,"Dein 24/7 besitzt nun Telefonbücher.");
					StoreInfo[an][siTelefonbuch] = 1;
					StoreInfo[an][siKasse] -= 3000;
					ShowPlayerDialog(playerid,DIALOG_STORE_UPGRADESP,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Bitte gebe unten nun einen Preis an,\nwie viel ein Telefonbuch kosten soll.","Bestätigen","");
		        }
		        else if(GetPVarInt(playerid,"StoreUpgrade") == 4)
				{
					if(StoreInfo[an][siKasse] < 3000)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld auf dem Geschäftskonto.");
					SendClientMessage(playerid,COLOR_SUPER,"Dein 24/7 besitzt nun Repairkits.");
					StoreInfo[an][siRepairkit] = 1;
					StoreInfo[an][siKasse] -= 3000;
					ShowPlayerDialog(playerid,DIALOG_STORE_UPGRADESP,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Bitte gebe unten nun einen Preis an,\nwie viel ein Repairkit kosten soll.","Bestätigen","");
		        }
		        else if(GetPVarInt(playerid,"StoreUpgrade") == 5)
				{
					if(StoreInfo[an][siKasse] < 1650)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld auf dem Geschäftskonto.");
					SendClientMessage(playerid,COLOR_SUPER,"Dein 24/7 besitzt nun Kameras.");
					StoreInfo[an][siRepairkit] = 1;
					StoreInfo[an][siKasse] -= 1650;
					ShowPlayerDialog(playerid,DIALOG_STORE_UPGRADESP,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Bitte gebe unten nun einen Preis an,\nwie viel eine Kamera kosten soll.","Bestätigen","");
		        }
			}
		}
		case DIALOG_STORE_UPGRADESP:
		{
		    if(response==0){DeletePVar(playerid,"StoreUpgrade");}//Abbrechen
		    else if(response==1)//Weiter
		    {
      			new string[128], an = SpielerInfo[playerid][sStore];
	        	if(strval(inputtext) > 0 && strval(inputtext) < 20001 && IsNumeric(inputtext))
				{
    				if(GetPVarInt(playerid,"StoreUpgrade") == 1)
		        	{
					    StoreInfo[an][siNavi] = strval(inputtext);
		    			format(string,sizeof(string),"Neuer Verkaufspreis für Navigationsgeräte: {FF0000}%d$",strval(inputtext));
						SendClientMessage(playerid,COLOR_INFO,string);
						ShowPlayerDialog(playerid,DIALOG_STORE_UPGRADES,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Navigationsgerät\nHandy\nTelefonbuch\nRepairkit\nKamera","Weiter","Zurück");
					}
 					else if(GetPVarInt(playerid,"StoreUpgrade") == 2)
		        	{
					    StoreInfo[an][siHandy] = strval(inputtext);
		    			format(string,sizeof(string),"Neuer Verkaufspreis für Handy´s: {FF0000}%d$",strval(inputtext));
						SendClientMessage(playerid,COLOR_INFO,string);
						ShowPlayerDialog(playerid,DIALOG_STORE_UPGRADES,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Navigationsgerät\nHandy\nTelefonbuch\nRepairkit\nKamera","Weiter","Zurück");
					}
 					else if(GetPVarInt(playerid,"StoreUpgrade") == 3)
		        	{
					    StoreInfo[an][siTelefonbuch] = strval(inputtext);
		    			format(string,sizeof(string),"Neuer Verkaufspreis für Telefonbücher: {FF0000}%d$",strval(inputtext));
						SendClientMessage(playerid,COLOR_INFO,string);
						ShowPlayerDialog(playerid,DIALOG_STORE_UPGRADES,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Navigationsgerät\nHandy\nTelefonbuch\nRepairkit\nKamera","Weiter","Zurück");
					}
					else if(GetPVarInt(playerid,"StoreUpgrade") == 4)
		        	{
					    StoreInfo[an][siRepairkit] = strval(inputtext);
		    			format(string,sizeof(string),"Neuer Verkaufspreis für ein Repairkit: {FF0000}%d$",strval(inputtext));
						SendClientMessage(playerid,COLOR_INFO,string);
						ShowPlayerDialog(playerid,DIALOG_STORE_UPGRADES,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Navigationsgerät\nHandy\nTelefonbuch\nRepairkit\nKamera","Weiter","Zurück");
					}
					else if(GetPVarInt(playerid,"StoreUpgrade") == 5)
		        	{
					    StoreInfo[an][siKamera] = strval(inputtext);
		    			format(string,sizeof(string),"Neuer Verkaufspreis für eine Kamera: {FF0000}%d$",strval(inputtext));
						SendClientMessage(playerid,COLOR_INFO,string);
						ShowPlayerDialog(playerid,DIALOG_STORE_UPGRADES,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Navigationsgerät\nHandy\nTelefonbuch\nRepairkit\nKamera","Weiter","Zurück");
					}
				}
			}
		}
		case DIALOG_BUSINESS_STAAT:
		{
		    if(response==0){DeletePVar(playerid,"Verwaltung");}//Abbrechen
		    else if(response==1)//Weiter
		    {
		        new string[224];
  				if(GetPVarInt(playerid,"Verwaltung") == 1)//Tankstelle
        		{
					new tsid = SpielerInfo[playerid][sTankstelle];
					if(TankstellenInfo[tsid][tsKasse] < 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Dein Geschäft hat Schulden. Begleiche Sie erst bevor du es verkaufst.");
					format(string,164,"Du hast deine Tankstelle für {FF0000}%d${00CDFF} an den Staat verkauft. Der Staat hat dir das Geld überwiesen.",TankstellenInfo[SpielerInfo[playerid][sTankstelle]][tsPreis]/2);
					SendClientMessage(playerid,COLOR_INFO,string);

					DestroyDynamic3DTextLabel(TankstellenInfo[tsid][tsText][0]);
					TankstellenInfo[tsid][tsText][0] = Text3D:INVALID_3DTEXT_ID;
					DestroyPickup(TankstellenInfo[tsid][tsPickup][0]);

					format(string, sizeof(string), "Tankstelle 'ID: {FF0000}%d{FFFFFF}' zu verkaufen!\nBesitzer: {FF0000}Staat{FFFFFF}\nPreis: {FF0000}%d${FFFFFF}\nBenutze '{FF0000}/kaufen{FFFFFF}'\num dir die Tankstelle zu kaufen", tsid, TankstellenInfo[tsid][tsPreis]);
					TankstellenInfo[tsid][tsPickup][0] = CreatePickup(1273, 23, TankstellenInfo[tsid][tsEPos_X], TankstellenInfo[tsid][tsEPos_Y], TankstellenInfo[tsid][tsEPos_Z], -1);
					TankstellenInfo[tsid][tsText][0] = CreateDynamic3DTextLabel(string, COLOR_WHITE, TankstellenInfo[tsid][tsEPos_X], TankstellenInfo[tsid][tsEPos_Y], TankstellenInfo[tsid][tsEPos_Z], 10.0);

					TankstellenInfo[tsid][tsBenzin] = 0;
					TankstellenInfo[tsid][tsDiesel] = 0;
					TankstellenInfo[tsid][tsKerosin] = 0;
					TankstellenInfo[tsid][tsBenzinPreis] = 0;
					TankstellenInfo[tsid][tsDieselPreis] = 0;
					TankstellenInfo[tsid][tsKerosinPreis] = 0;
					TankstellenInfo[tsid][tsBesitzer] = 0;
					format(TankstellenInfo[tsid][tsBesitzer], 0, "");
					TankstellenInfo[tsid][tsBeschreibung] = 0;
					format(TankstellenInfo[tsid][tsBeschreibung], 15, "Petrol Station");
					TankstellenInfo[tsid][tsKasse] = 0;
					if(SpielerInfo[playerid][sHaus] > 0)
					{
						SpielerInfo[playerid][sBankkonto] += TankstellenInfo[SpielerInfo[playerid][sTankstelle]][tsPreis];
						GovVars[govKasse] -= TankstellenInfo[SpielerInfo[playerid][sTankstelle]][tsPreis];
					}
					else
					{
						SpielerInfo[playerid][sBankkonto] += TankstellenInfo[SpielerInfo[playerid][sTankstelle]][tsPreis]/2;
						GovVars[govKasse] -= TankstellenInfo[SpielerInfo[playerid][sTankstelle]][tsPreis]/2;
					}
					SpielerInfo[playerid][sTankstelle] = 0;
					DeletePVar(playerid,"Verwaltung");
					TankstellenTafelUpdate(tsid);
				}
		 	 	else if(GetPVarInt(playerid,"Verwaltung") == 2)//Ammunation
        		{
					new an = SpielerInfo[playerid][sAmmunation];
					if(AmmunationInfo[an][amKasse] < 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Dein Geschäft hat Schulden. Begleiche Sie erst bevor du es verkaufst.");
					format(string,164,"Du hast dein Ammunation für {FF0000}%d${00CDFF} an den Staat verkauft. Der Staat hat dir das Geld überwiesen.",AmmunationInfo[an][amPreis]/2);
					SendClientMessage(playerid,COLOR_INFO,string);

					DestroyDynamic3DTextLabel(AmmunationInfo[an][amText]);
					AmmunationInfo[an][amText] = Text3D:INVALID_3DTEXT_ID;
					DestroyPickup(AmmunationInfo[an][amPickup]);

      	   			format(string, sizeof(string), "Ammunation 'ID: {FF0000}%d{FFFFFF}' zu verkaufen!\nBesitzer: {FF0000}Staat{FFFFFF}\nPreis: {FF0000}%d${FFFFFF}\nBenutze '{FF0000}/kaufen{FFFFFF}'\num dir das Ammunation zu kaufen", an, AmmunationInfo[an][amPreis]);
                    AmmunationInfo[an][amText] = CreateDynamic3DTextLabel(string, COLOR_WHITE, AmmunationInfo[an][amPos_X], AmmunationInfo[an][amPos_Y], AmmunationInfo[an][amPos_Z], 10.0);
			   		AmmunationInfo[an][amPickup] = CreatePickup(1273, 23, AmmunationInfo[an][amPos_X], AmmunationInfo[an][amPos_Y], AmmunationInfo[an][amPos_Z], -1);

                    AmmunationInfo[an][amArmour] = 0;
                    AmmunationInfo[an][amSchlagring] = 0;
                    AmmunationInfo[an][amMesser] = 0;
                    AmmunationInfo[an][amBaseball] = 0;
                    AmmunationInfo[an][amDeagle] = 0;
                    AmmunationInfo[an][amMP5] = 0;
                    AmmunationInfo[an][amAK] = 0;
                    AmmunationInfo[an][amM4] = 0;
                    AmmunationInfo[an][amSniper] = 0;
                    AmmunationInfo[an][amFallschirm] = 0;
					AmmunationInfo[an][amBesitzer] = 0;
					format(AmmunationInfo[an][amBesitzer], 0, "");
					AmmunationInfo[an][amKasse] = 0;
					if(SpielerInfo[playerid][sHaus] > 0)
					{
						SpielerInfo[playerid][sBankkonto] += AmmunationInfo[an][amPreis];
						GovVars[govKasse] -= AmmunationInfo[an][amPreis];
					}
					else
					{
						SpielerInfo[playerid][sBankkonto] += AmmunationInfo[an][amPreis]/2;
						GovVars[govKasse] -= AmmunationInfo[an][amPreis]/2;
					}
					SpielerInfo[playerid][sAmmunation] = 0;
					DeletePVar(playerid,"Verwaltung");
       			}
	 	 		else if(GetPVarInt(playerid,"Verwaltung") == 3)//24/7
        		{
					new an = SpielerInfo[playerid][sStore];
					if(StoreInfo[an][siKasse] < 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Dein Geschäft hat Schulden. Begleiche Sie erst bevor du es verkaufst.");
					format(string,164,"Du hast dein 24/7 für {FF0000}%d${00CDFF} an den Staat verkauft. Der Staat hat dir das Geld überwiesen.",StoreInfo[an][siPreis]/2);
					SendClientMessage(playerid,COLOR_INFO,string);

					DestroyDynamic3DTextLabel(StoreInfo[an][siText]);
					StoreInfo[an][siText] = Text3D:INVALID_3DTEXT_ID;
					DestroyPickup(StoreInfo[an][siPickup]);

      	   			format(string, sizeof(string), "24/7 'ID: {FF0000}%d{FFFFFF}' zu verkaufen!\nBesitzer: {FF0000}Staat{FFFFFF}\nPreis: {FF0000}%d${FFFFFF}\nBenutze '{FF0000}/kaufen{FFFFFF}'\num dir das Ammunation zu kaufen", an, StoreInfo[an][siPreis]);
                    StoreInfo[an][siText] = CreateDynamic3DTextLabel(string, COLOR_WHITE, StoreInfo[an][siPos_X], StoreInfo[an][siPos_Y], StoreInfo[an][siPos_Z], 10.0);
			   		StoreInfo[an][siPickup] = CreatePickup(1273, 23, StoreInfo[an][siPos_X], StoreInfo[an][siPos_Y], StoreInfo[an][siPos_Z], -1);

					StoreInfo[an][siBesitzer] = 0;
					format(StoreInfo[an][siBesitzer], 0, "");
					StoreInfo[an][siKasse] = 0;
					if(SpielerInfo[playerid][sHaus] > 0)
					{
						SpielerInfo[playerid][sBankkonto] += StoreInfo[an][siPreis];
						GovVars[govKasse] -= StoreInfo[an][siPreis];
					}
					else
					{
						SpielerInfo[playerid][sBankkonto] += StoreInfo[an][siPreis]/2;
						GovVars[govKasse] -= StoreInfo[an][siPreis]/2;
					}
					SpielerInfo[playerid][sStore] = 0;
					DeletePVar(playerid,"Verwaltung");
       			}
	 	 		else if(GetPVarInt(playerid,"Verwaltung") == 4)//Haus
        		{
					new hs = SpielerInfo[playerid][sHaus];
					format(string,164,"Du hast dein Haus für {FF0000}%d${00CDFF} an den Staat verkauft. Der Staat hat dir das Geld überwiesen.",HausInfo[hs][hsPreis]/2);
					SendClientMessage(playerid,COLOR_INFO,string);

					DestroyDynamic3DTextLabel(HausInfo[hs][hsText]);
					HausInfo[hs][hsText] = Text3D:INVALID_3DTEXT_ID;
					DestroyDynamicPickup(HausInfo[hs][hsPickup]);

				    if(HausInfo[hs][hsTyp] == 1)//Appartment
				    {
		   				format(string, sizeof(string), "Appartment 'ID: {FF0000}%d{FFFFFF}' zu verkaufen!\nBesitzer: {FF0000}Staat{FFFFFF}\nPreis: {FF0000}%d${FFFFFF}\nBenutze '{FF0000}/kaufen{FFFFFF}'\num dir das Appartment zu kaufen", hs, HausInfo[hs][hsPreis]);
					}
					else if(HausInfo[hs][hsTyp] == 2)//Haus
		   			{
		  				format(string, sizeof(string), "Haus 'ID: {FF0000}%d{FFFFFF}' zu verkaufen!\nBesitzer: {FF0000}Staat{FFFFFF}\nPreis: {FF0000}%d${FFFFFF}\nBenutze '{FF0000}/kaufen{FFFFFF}'\num dir das Haus zu kaufen", hs, HausInfo[hs][hsPreis]);
		   			}
		   			else if(HausInfo[hs][hsTyp] == 3)//Villa
		   			{
		  				format(string, sizeof(string), "Villa 'ID: {FF0000}%d{FFFFFF}' zu verkaufen!\nBesitzer: {FF0000}Staat{FFFFFF}\nPreis: {FF0000}%d${FFFFFF}\nBenutze '{FF0000}/kaufen{FFFFFF}'\num dir die Villa zu kaufen", hs, HausInfo[hs][hsPreis]);
		   			}
		   			HausInfo[hs][hsPickup] = CreateDynamicPickup(1273, 23, HausInfo[hs][hsPos_X], HausInfo[hs][hsPos_Y], HausInfo[hs][hsPos_Z], -1);
		        	HausInfo[hs][hsText] = CreateDynamic3DTextLabel(string, COLOR_WHITE, HausInfo[hs][hsPos_X], HausInfo[hs][hsPos_Y], HausInfo[hs][hsPos_Z], 10.0);

		        	HausInfo[hs][hsHealth] = 0;
		        	HausInfo[hs][hsMiete] = 0;
		        	HausInfo[hs][hsMietbar] = 0;
		        	HausInfo[hs][hsLocked] = 0;
					HausInfo[hs][hsBesitzer] = 0;
					format(HausInfo[hs][hsBesitzer], 0, "");
					SpielerInfo[playerid][sBankkonto] += HausInfo[hs][hsPreis]/2;
					SpielerInfo[playerid][sHaus] = 0;
					if(SpielerInfo[playerid][sSpawn] == 2){SpielerInfo[playerid][sSpawn] = 0;}
					DeletePVar(playerid,"Verwaltung");
					//Furniture System
					DeleteAllFurnitures(hs);

       			}
 	 			else if(GetPVarInt(playerid,"Verwaltung") == 5)//Gruppenhaus
        		{
					new hs = SpielerInfo[playerid][sGHaus], query2[164], count3 = 0;
					format(string,164,"Du hast dein Gruppenhaus für {FF0000}%d${00CDFF} an den Staat verkauft. Der Staat hat dir das Geld überwiesen.",HausInfo[hs][hsPreis]/2);
					SendClientMessage(playerid,COLOR_INFO,string);

					DestroyDynamic3DTextLabel(HausInfo[hs][hsText]);
					HausInfo[hs][hsText] = Text3D:INVALID_3DTEXT_ID;
					DestroyDynamicPickup(HausInfo[hs][hsPickup]);

				    if(HausInfo[hs][hsTyp] == 1)//Appartment
				    {
		   				format(string, sizeof(string), "Appartment 'ID: {FF0000}%d{FFFFFF}' zu verkaufen!\nBesitzer: {FF0000}Staat{FFFFFF}\nPreis: {FF0000}%d${FFFFFF}\nBenutze '{FF0000}/kaufen{FFFFFF}'\num dir das Appartment zu kaufen", hs, HausInfo[hs][hsPreis]);
					}
					else if(HausInfo[hs][hsTyp] == 2)//Haus
		   			{
		  				format(string, sizeof(string), "Haus 'ID: {FF0000}%d{FFFFFF}' zu verkaufen!\nBesitzer: {FF0000}Staat{FFFFFF}\nPreis: {FF0000}%d${FFFFFF}\nBenutze '{FF0000}/kaufen{FFFFFF}'\num dir das Haus zu kaufen", hs, HausInfo[hs][hsPreis]);
		   			}
		   			else if(HausInfo[hs][hsTyp] == 3)//Villa
		   			{
		  				format(string, sizeof(string), "Villa 'ID: {FF0000}%d{FFFFFF}' zu verkaufen!\nBesitzer: {FF0000}Staat{FFFFFF}\nPreis: {FF0000}%d${FFFFFF}\nBenutze '{FF0000}/kaufen{FFFFFF}'\num dir die Villa zu kaufen", hs, HausInfo[hs][hsPreis]);
		   			}
		   			HausInfo[hs][hsPickup] = CreateDynamicPickup(1273, 23, HausInfo[hs][hsPos_X], HausInfo[hs][hsPos_Y], HausInfo[hs][hsPos_Z], -1);
		        	HausInfo[hs][hsText] = CreateDynamic3DTextLabel(string, COLOR_WHITE, HausInfo[hs][hsPos_X], HausInfo[hs][hsPos_Y], HausInfo[hs][hsPos_Z], 10.0);
		        	HausInfo[hs][hsHealth] = 0;
		        	HausInfo[hs][hsMiete] = 0;
		        	HausInfo[hs][hsMietbar] = 0;
		        	HausInfo[hs][hsLocked] = 0;
					HausInfo[hs][hsBesitzer] = 0;
					format(HausInfo[hs][hsBesitzer], 0, "");

					mysql_format(sqlHandle, string, sizeof(string),"SELECT `Name` FROM `accounts` WHERE `Gruppenhaus` = '%d' AND `Online` = '0' AND `Gruppenhaus` != '0'", SpielerInfo[playerid][sGHaus]);
					new Cache:result = mysql_query(sqlHandle, string);
					new rows = cache_num_rows();
					for(new i = 0; i < rows; i++)
					{
					    cache_get_value_name(i, "Name",name44[count3]);
					  	count3++;
					}
					cache_delete(result);
					for(new i=0;i<count3;i++)
					{
						mysql_format(sqlHandle, query2, sizeof(query2), "UPDATE `accounts` SET `Spawn` = '0', `Gruppenhaus` = '0' WHERE `Name`='%s'", name44[i]);
						mysql_tquery(sqlHandle, query2);
					}
					foreach(new i : Player)
					{
					    if(i == playerid)continue;
					    if(SpielerInfo[i][sGruppe] != SpielerInfo[playerid][sGruppe])continue;
					    if(SpielerInfo[i][sGHaus] != SpielerInfo[playerid][sGHaus])continue;
					    if(SpielerInfo[i][sSpawn] == 3)
						{
							SendClientMessage(i,COLOR_RED,"[Info]: {FFFFFF}Hinweis: Das Gruppenhaus wurde verkauft. Ab sofort spawnst du wieder am Zivispawn.");
							SpielerInfo[i][sSpawn] = 0;
						}
						SpielerInfo[i][sGHaus] = 0;
					}

					SpielerInfo[playerid][sBankkonto] += HausInfo[hs][hsPreis]/2;
					GovVars[govKasse] -= HausInfo[hs][hsPreis]/2;
					SpielerInfo[playerid][sGHaus] = 0;
					if(SpielerInfo[playerid][sSpawn] == 3){SpielerInfo[playerid][sSpawn] = 0;}
					DeletePVar(playerid,"Verwaltung");
       			}
       			else if(GetPVarInt(playerid,"Verwaltung") == 6)//Garage
        		{
					new hs = SpielerInfo[playerid][sGarage];
					format(string,164,"Du hast deine Garage für {FF0000}%d${00CDFF} an den Staat verkauft. Der Staat hat dir das Geld überwiesen.",GaragenInfo[hs][giPreis]/2);
					SendClientMessage(playerid,COLOR_INFO,string);

					DestroyDynamic3DTextLabel(GaragenInfo[hs][giText]);
					GaragenInfo[hs][giText] = Text3D:INVALID_3DTEXT_ID;
					DestroyDynamicPickup(GaragenInfo[hs][giPickup]);

					format(string, sizeof(string), "Garage 'ID: {FF0000}%d{FFFFFF}' zu verkaufen!\nBesitzer: {FF0000}Staat{FFFFFF}\nPreis: {FF0000}%d${FFFFFF}\nBenutze '{FF0000}/kaufen{FFFFFF}'\num dir die Garage zu kaufen", hs, GaragenInfo[hs][giPreis]);

		   			GaragenInfo[hs][giPickup] = CreateDynamicPickup(1273, 23, GaragenInfo[hs][giPos_X], GaragenInfo[hs][giPos_Y], GaragenInfo[hs][giPos_Z], -1);
		        	GaragenInfo[hs][giText] = CreateDynamic3DTextLabel(string, COLOR_WHITE, GaragenInfo[hs][giPos_X], GaragenInfo[hs][giPos_Y], GaragenInfo[hs][giPos_Z], 10.0);

		        	GaragenInfo[hs][giMiete] = 0;
		        	GaragenInfo[hs][giMietbar] = 0;
		        	GaragenInfo[hs][giLocked] = 0;
					GaragenInfo[hs][giBesitzer] = 0;
					format(GaragenInfo[hs][giBesitzer], 0, "");
					SpielerInfo[playerid][sBankkonto] += GaragenInfo[hs][giPreis]/2;
					GovVars[govKasse] -= GaragenInfo[hs][giPreis]/2;
					SpielerInfo[playerid][sGarage] = 0;
					DeletePVar(playerid,"Verwaltung");
       			}
		    }
		}
		case DIALOG_BUSINESS_VERKAUFEN:
		{
			if(response==0)//Zurück
			{
				if(GetPVarInt(playerid,"Verwaltung") != 4)
				{
					ShowPlayerDialog(playerid,DIALOG_VERWALTUNG,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Upgrades\nPreise\nVerkaufen","Weiter","Abbrechen");
				}
			}
		    else if(response==1)//Weiter
		    {
	         	new string[164];
				switch(listitem)
		        {
	      			case 0://Staat
	             	{
	 	    			if(GetPVarInt(playerid,"Verwaltung") == 1)//Tankstelle
						{
	             	    	format(string,sizeof(string),"{FFFFFF}Bist du dir sicher das du deine Tankstelle (ID:{FF0000}%d{FFFFFF})\nfür {FF0000}%d${FFFFFF} an den Staat verkaufen möchtest ?",SpielerInfo[playerid][sTankstelle],TankstellenInfo[SpielerInfo[playerid][sTankstelle]][tsPreis]/2);
	             	    	ShowPlayerDialog(playerid,DIALOG_BUSINESS_STAAT,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung",string,"Ja","Zurück");
						}
	  					else if(GetPVarInt(playerid,"Verwaltung") == 2)//Ammunation
						{
	    					format(string,sizeof(string),"{FFFFFF}Bist du dir sicher das du dein Ammunation (ID:{FF0000}%d{FFFFFF})\nfür {FF0000}%d${FFFFFF} an den Staat verkaufen möchtest ?",SpielerInfo[playerid][sAmmunation],AmmunationInfo[SpielerInfo[playerid][sAmmunation]][amPreis]/2);
	             	    	ShowPlayerDialog(playerid,DIALOG_BUSINESS_STAAT,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung",string,"Ja","Zurück");
						}
						else if(GetPVarInt(playerid,"Verwaltung") == 3)//24/7
						{
	    					format(string,sizeof(string),"{FFFFFF}Bist du dir sicher das du dein 24/7 (ID:{FF0000}%d{FFFFFF})\nfür {FF0000}%d${FFFFFF} an den Staat verkaufen möchtest ?",SpielerInfo[playerid][sStore],StoreInfo[SpielerInfo[playerid][sStore]][siPreis]/2);
	             	    	ShowPlayerDialog(playerid,DIALOG_BUSINESS_STAAT,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung",string,"Ja","Zurück");
						}
	  					else if(GetPVarInt(playerid,"Verwaltung") == 4)//Haus
						{
	             	    	format(string,sizeof(string),"{FFFFFF}Bist du dir sicher das du dein Haus (ID:{FF0000}%d{FFFFFF})\nfür {FF0000}%d${FFFFFF} an den Staat verkaufen möchtest ?",SpielerInfo[playerid][sHaus],HausInfo[SpielerInfo[playerid][sHaus]][hsPreis]/2);
	             	    	ShowPlayerDialog(playerid,DIALOG_BUSINESS_STAAT,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung",string,"Ja","Zurück");
						}
						else if(GetPVarInt(playerid,"Verwaltung") == 5)//Gruppenhaus
						{
	             	    	format(string,sizeof(string),"{FFFFFF}Bist du dir sicher das du dein Gruppenhaus (ID:{FF0000}%d{FFFFFF})\nfür {FF0000}%d${FFFFFF} an den Staat verkaufen möchtest ?",SpielerInfo[playerid][sGHaus],HausInfo[SpielerInfo[playerid][sGHaus]][hsPreis]/2);
	             	    	ShowPlayerDialog(playerid,DIALOG_BUSINESS_STAAT,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung",string,"Ja","Zurück");
						}
						else if(GetPVarInt(playerid,"Verwaltung") == 6)//Garage
						{
	             	    	format(string,sizeof(string),"{FFFFFF}Bist du dir sicher das du deine Garage (ID:{FF0000}%d{FFFFFF})\nfür {FF0000}%d${FFFFFF} an den Staat verkaufen möchtest ?",SpielerInfo[playerid][sGarage],GaragenInfo[SpielerInfo[playerid][sGarage]][giPreis]/2);
	             	    	ShowPlayerDialog(playerid,DIALOG_BUSINESS_STAAT,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung",string,"Ja","Zurück");
						}
	             	}
	             	case 1://Spieler
	             	{
	  					if(GetPVarInt(playerid,"Verwaltung") == 1)//Tankstelle
						{
	             	    	ShowPlayerDialog(playerid,DIALOG_BUSINESS_SPIELER,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Gib unten die SpielerID an, an den du\ndeine Tankstelle verkaufen möchtest.","Weiter","Zurück");
						}
	  					else if(GetPVarInt(playerid,"Verwaltung") == 2)//Ammunation
						{
							ShowPlayerDialog(playerid,DIALOG_BUSINESS_SPIELER,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Gib unten die SpielerID an, an den du\ndein Ammunation verkaufen möchtest.","Weiter","Zurück");
						}
						else if(GetPVarInt(playerid,"Verwaltung") == 3)//24/7
						{
							ShowPlayerDialog(playerid,DIALOG_BUSINESS_SPIELER,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Gib unten die SpielerID an, an den du\ndein 24/7 verkaufen möchtest.","Weiter","Zurück");
						}
	  					else if(GetPVarInt(playerid,"Verwaltung") == 4)//Haus
						{
							ShowPlayerDialog(playerid,DIALOG_BUSINESS_SPIELER,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Gib unten die SpielerID an, an den du\ndein Haus verkaufen möchtest.","Weiter","Zurück");
						}
						else if(GetPVarInt(playerid,"Verwaltung") == 5)//Gruppenhaus
						{
							ShowPlayerDialog(playerid,DIALOG_BUSINESS_SPIELER,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Gib unten die SpielerID an, an den du\ndein Gruppenhaus verkaufen möchtest.","Weiter","Zurück");
						}
						else if(GetPVarInt(playerid,"Verwaltung") == 6)//Garage
						{
							ShowPlayerDialog(playerid,DIALOG_BUSINESS_SPIELER,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Gib unten die SpielerID an, an den du\ndeine Garage verkaufen möchtest.","Weiter","Zurück");
						}
	             	}
				}
			}
		}
		case DIALOG_BUSINESS_SPIELER:
		{
		    if(response==0){ShowPlayerDialog(playerid,DIALOG_BUSINESS_VERKAUFEN,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Staat\nSpieler","Weiter","Zurück");}//Zurück
		    else if(response==1)//Weiter
		    {
   				if(strval(inputtext) > 0 && strval(inputtext) < MAX_PLAYERS && IsNumeric(inputtext))
				{
				    if(IsPlayerConnectedEx(strval(inputtext)))
				    {
				        if(playerid != strval(inputtext))
				        {
							if(GetPVarInt(playerid,"Verwaltung") == 1)//Tankstelle
							{
								SetPVarInt(playerid,"TankstelleVID",strval(inputtext));
          	    			   	ShowPlayerDialog(playerid,DIALOG_BUSINESS_SPIELERV,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Gib unten nun den Verkaufspreis an.","Weiter","Zurück");
							}
		  					else if(GetPVarInt(playerid,"Verwaltung") == 2)//Ammunation
							{
							    SetPVarInt(playerid,"AmmunationVID",strval(inputtext));
								ShowPlayerDialog(playerid,DIALOG_BUSINESS_SPIELERV,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Gib unten nun den Verkaufspreis an.","Weiter","Zurück");
							}
  							else if(GetPVarInt(playerid,"Verwaltung") == 3)//24/7
							{
							    SetPVarInt(playerid,"StoreVID",strval(inputtext));
								ShowPlayerDialog(playerid,DIALOG_BUSINESS_SPIELERV,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Gib unten nun den Verkaufspreis an.","Weiter","Zurück");
							}
		  					else if(GetPVarInt(playerid,"Verwaltung") == 4)//Haus
							{
							    SetPVarInt(playerid,"HausVID",strval(inputtext));
								ShowPlayerDialog(playerid,DIALOG_BUSINESS_SPIELERV,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Gib unten nun den Verkaufspreis an.","Weiter","Zurück");
							}
  							else if(GetPVarInt(playerid,"Verwaltung") == 5)//Gruppenhaus
							{
							    SetPVarInt(playerid,"GHausVID",strval(inputtext));
								ShowPlayerDialog(playerid,DIALOG_BUSINESS_SPIELERV,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Gib unten nun den Verkaufspreis an.","Weiter","Zurück");
							}
							else if(GetPVarInt(playerid,"Verwaltung") == 6)//Garage
							{
							    SetPVarInt(playerid,"GarageVID",strval(inputtext));
								ShowPlayerDialog(playerid,DIALOG_BUSINESS_SPIELERV,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Gib unten nun den Verkaufspreis an.","Weiter","Zurück");
							}
						}
						else
						{
							if(GetPVarInt(playerid,"Verwaltung") == 1)//Tankstelle
							{
		             	    	ShowPlayerDialog(playerid,DIALOG_BUSINESS_SPIELER,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Gib unten die SpielerID an, an den du\ndeine Tankstelle verkaufen möchtest.\n\n{FF0000}Du kannst die Tankstelle nicht an dich selber verkaufen.","Weiter","Zurück");
							}
		  					else if(GetPVarInt(playerid,"Verwaltung") == 2)//Ammunation
							{
								ShowPlayerDialog(playerid,DIALOG_BUSINESS_SPIELER,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Gib unten die SpielerID an, an den du\ndein Ammunation verkaufen möchtest.\n\n{FF0000}Du kannst das Ammunation nicht an dich selber verkaufen.","Weiter","Zurück");
							}
 							else if(GetPVarInt(playerid,"Verwaltung") == 3)//24/7
							{
								ShowPlayerDialog(playerid,DIALOG_BUSINESS_SPIELER,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Gib unten die SpielerID an, an den du\ndein 24/7 verkaufen möchtest.\n\n{FF0000}Du kannst das 24/7 nicht an dich selber verkaufen.","Weiter","Zurück");
							}
		  					else if(GetPVarInt(playerid,"Verwaltung") == 4)//Haus
							{
								ShowPlayerDialog(playerid,DIALOG_BUSINESS_SPIELER,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Gib unten die SpielerID an, an den du\ndein Haus verkaufen möchtest.\n\n{FF0000}Du kannst das Haus nicht an dich selber verkaufen.","Weiter","Zurück");
							}
  							else if(GetPVarInt(playerid,"Verwaltung") == 5)//Gruppenhaus
							{
								ShowPlayerDialog(playerid,DIALOG_BUSINESS_SPIELER,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Gib unten die SpielerID an, an den du\ndein Gruppenhaus verkaufen möchtest.\n\n{FF0000}Du kannst das Gruppenhaus nicht an dich selber verkaufen.","Weiter","Zurück");
							}
							else if(GetPVarInt(playerid,"Verwaltung") == 6)//Garage
							{
								ShowPlayerDialog(playerid,DIALOG_BUSINESS_SPIELER,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Gib unten die SpielerID an, an den du\ndein Gruppenhaus verkaufen möchtest.\n\n{FF0000}Du kannst deine Garage nicht an dich selber verkaufen.","Weiter","Zurück");
							}
						}
					}
					else
					{
						if(GetPVarInt(playerid,"Verwaltung") == 1)//Tankstelle
						{
	             	    	ShowPlayerDialog(playerid,DIALOG_BUSINESS_SPIELER,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Gib unten die SpielerID an, an den du\ndeine Tankstelle verkaufen möchtest.\n\n{FF0000}Der angegebene Spieler ist nicht Online.","Weiter","Zurück");
						}
	  					else if(GetPVarInt(playerid,"Verwaltung") == 2)//Ammunation
						{
							ShowPlayerDialog(playerid,DIALOG_BUSINESS_SPIELER,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Gib unten die SpielerID an, an den du\ndein Ammunation verkaufen möchtest.\n\n{FF0000}Der angegebene Spieler ist nicht Online.","Weiter","Zurück");
						}
 						else if(GetPVarInt(playerid,"Verwaltung") == 3)//24/7
						{
							ShowPlayerDialog(playerid,DIALOG_BUSINESS_SPIELER,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Gib unten die SpielerID an, an den du\ndein 24/7 verkaufen möchtest.\n\n{FF0000}Der angegebene Spieler ist nicht Online.","Weiter","Zurück");
						}
	  					else if(GetPVarInt(playerid,"Verwaltung") == 4)//Haus
						{
							ShowPlayerDialog(playerid,DIALOG_BUSINESS_SPIELER,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Gib unten die SpielerID an, an den du\ndein Haus verkaufen möchtest.\n\n{FF0000}Der angegebene Spieler ist nicht Online.","Weiter","Zurück");
						}
 						else if(GetPVarInt(playerid,"Verwaltung") == 5)//Gruppenhaus
						{
							ShowPlayerDialog(playerid,DIALOG_BUSINESS_SPIELER,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Gib unten die SpielerID an, an den du\ndein Gruppenhaus verkaufen möchtest.\n\n{FF0000}Der angegebene Spieler ist nicht Online.","Weiter","Zurück");
						}
						else if(GetPVarInt(playerid,"Verwaltung") == 6)//Garage
						{
							ShowPlayerDialog(playerid,DIALOG_BUSINESS_SPIELER,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Gib unten die SpielerID an, an den du\ndeine Garage verkaufen möchtest.\n\n{FF0000}Der angegebene Spieler ist nicht Online.","Weiter","Zurück");
						}
					}
				}
				else
				{
					if(GetPVarInt(playerid,"Verwaltung") == 1)//Tankstelle
					{
             	    	ShowPlayerDialog(playerid,DIALOG_BUSINESS_SPIELER,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Gib unten die SpielerID an, an den du\ndeine Tankstelle verkaufen möchtest.","Weiter","Zurück");
					}
  					else if(GetPVarInt(playerid,"Verwaltung") == 2)//Ammunation
					{
						ShowPlayerDialog(playerid,DIALOG_BUSINESS_SPIELER,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Gib unten die SpielerID an, an den du\ndein Ammunation verkaufen möchtest.","Weiter","Zurück");
					}
					else if(GetPVarInt(playerid,"Verwaltung") == 3)//24/7
					{
						ShowPlayerDialog(playerid,DIALOG_BUSINESS_SPIELER,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Gib unten die SpielerID an, an den du\ndein 24/7 verkaufen möchtest.","Weiter","Zurück");
					}
  					else if(GetPVarInt(playerid,"Verwaltung") == 4)//Haus
					{
						ShowPlayerDialog(playerid,DIALOG_BUSINESS_SPIELER,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Gib unten die SpielerID an, an den du\ndein Haus verkaufen möchtest.","Weiter","Zurück");
					}
					else if(GetPVarInt(playerid,"Verwaltung") == 5)//Gruppenhaus
					{
						ShowPlayerDialog(playerid,DIALOG_BUSINESS_SPIELER,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Gib unten die SpielerID an, an den du\ndein Gruppenhaus verkaufen möchtest.","Weiter","Zurück");
					}
					else if(GetPVarInt(playerid,"Verwaltung") == 6)//Garage
					{
						ShowPlayerDialog(playerid,DIALOG_BUSINESS_SPIELER,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Gib unten die SpielerID an, an den du\ndeine Garage verkaufen möchtest.","Weiter","Zurück");
					}
				}
		    }
		}
		case DIALOG_BUSINESS_SPIELERV:
		{
		    if(response==0){}//Abbrechen
		    else if(response==1)//Weiter
		    {
     			if(strval(inputtext) > 0 && strval(inputtext) < 1000001 && IsNumeric(inputtext))
				{
					if(GetPVarInt(playerid,"Verwaltung") == 1)//Tankstelle
        			{
					    new pID = GetPVarInt(playerid,"TankstelleVID");
					    SetPVarInt(pID,"TankstelleAngebot",SpielerInfo[playerid][sTankstelle]);
					    SetPVarInt(pID,"TankstelleAngebotID",playerid);
					    SetPVarInt(pID,"TankstelleAngebotPreis",strval(inputtext));
					    new string[164];
					    format(string,sizeof(string),"Du hast dem Spieler {FF0000}%s{00CDFF} deine Tankstelle für {FF0000}%d${00CDFF} angeboten.",SpielerInfo[pID][sName],strval(inputtext));
						SendClientMessage(playerid,COLOR_INFO,string);

		    			format(string,sizeof(string),"Spieler {FF0000}%s{00CDFF} bietet dir seine Tankstelle (ID:{FF0000}%d{00CDFF}) für {FF0000}%d${00CDFF} an.",SpielerInfo[playerid][sName],SpielerInfo[playerid][sTankstelle],strval(inputtext));
						SendClientMessage(pID,COLOR_INFO,string);

						SendClientMessage(pID,COLOR_INFO,"Benutze '/angebot annehmen' oder '/angebot ablehnen'");
 					}
	 	 			else if(GetPVarInt(playerid,"Verwaltung") == 2)//Ammunation
        			{
  					    new pID = GetPVarInt(playerid,"AmmunationVID");
					    SetPVarInt(pID,"AmmunationAngebot",SpielerInfo[playerid][sAmmunation]);
					    SetPVarInt(pID,"AmmunationAngebotID",playerid);
					    SetPVarInt(pID,"AmmunationAngebotPreis",strval(inputtext));
					    new string[164];
					    format(string,sizeof(string),"Du hast dem Spieler {FF0000}%s{00CDFF} dein Ammunation für {FF0000}%d${00CDFF} angeboten.",SpielerInfo[pID][sName],strval(inputtext));
						SendClientMessage(playerid,COLOR_INFO,string);

		    			format(string,sizeof(string),"Spieler {FF0000}%s{00CDFF} bietet dir sein Ammunation (ID:{FF0000}%d{00CDFF}) für {FF0000}%d${00CDFF} an.",SpielerInfo[playerid][sName],SpielerInfo[playerid][sAmmunation],strval(inputtext));
						SendClientMessage(pID,COLOR_INFO,string);

						SendClientMessage(pID,COLOR_INFO,"Benutze '/angebot annehmen' oder '/angebot ablehnen'");
					}
					else if(GetPVarInt(playerid,"Verwaltung") == 3)//24/7
        			{
  					    new pID = GetPVarInt(playerid,"StoreVID");
					    SetPVarInt(pID,"StoreAngebot",SpielerInfo[playerid][sAmmunation]);
					    SetPVarInt(pID,"StoreAngebotID",playerid);
					    SetPVarInt(pID,"StoreAngebotPreis",strval(inputtext));
					    new string[164];
					    format(string,sizeof(string),"Du hast dem Spieler {FF0000}%s{00CDFF} dein 24/7 für {FF0000}%d${00CDFF} angeboten.",SpielerInfo[pID][sName],strval(inputtext));
						SendClientMessage(playerid,COLOR_INFO,string);

		    			format(string,sizeof(string),"Spieler {FF0000}%s{00CDFF} bietet dir sein 24/7 (ID:{FF0000}%d{00CDFF}) für {FF0000}%d${00CDFF} an.",SpielerInfo[playerid][sName],SpielerInfo[playerid][sStore],strval(inputtext));
						SendClientMessage(pID,COLOR_INFO,string);

						SendClientMessage(pID,COLOR_INFO,"Benutze '/angebot annehmen' oder '/angebot ablehnen'");
					}
	 				else if(GetPVarInt(playerid,"Verwaltung") == 4)//Haus
        			{
  					    new pID = GetPVarInt(playerid,"HausVID");
					    SetPVarInt(pID,"HausAngebot",SpielerInfo[playerid][sHaus]);
					    SetPVarInt(pID,"HausAngebotID",playerid);
					    SetPVarInt(pID,"HausAngebotPreis",strval(inputtext));
					    new string[164];
					    format(string,sizeof(string),"Du hast dem Spieler {FF0000}%s{00CDFF} dein Haus für {FF0000}%d${00CDFF} angeboten.",SpielerInfo[pID][sName],strval(inputtext));
						SendClientMessage(playerid,COLOR_INFO,string);

		    			format(string,sizeof(string),"Spieler {FF0000}%s{00CDFF} bietet dir sein Haus (ID:{FF0000}%d{00CDFF}) für {FF0000}%d${00CDFF} an.",SpielerInfo[playerid][sName],SpielerInfo[playerid][sHaus],strval(inputtext));
						SendClientMessage(pID,COLOR_INFO,string);

						SendClientMessage(pID,COLOR_INFO,"Benutze '/angebot annehmen' oder '/angebot ablehnen'");
        			}
	 				else if(GetPVarInt(playerid,"Verwaltung") == 5)//Gruppenhaus
        			{
  					    new pID = GetPVarInt(playerid,"GHausVID");
					    SetPVarInt(pID,"GHausAngebot",SpielerInfo[playerid][sGHaus]);
					    SetPVarInt(pID,"GHausAngebotID",playerid);
					    SetPVarInt(pID,"GHausAngebotPreis",strval(inputtext));
					    new string[164];
					    format(string,sizeof(string),"Du hast dem Spieler {FF0000}%s{00CDFF} dein Gruppenhaus für {FF0000}%d${00CDFF} angeboten.",SpielerInfo[pID][sName],strval(inputtext));
						SendClientMessage(playerid,COLOR_INFO,string);

		    			format(string,sizeof(string),"Spieler {FF0000}%s{00CDFF} bietet dir sein Gruppenhaus (ID:{FF0000}%d{00CDFF}) für {FF0000}%d${00CDFF} an.",SpielerInfo[playerid][sName],SpielerInfo[playerid][sGHaus],strval(inputtext));
						SendClientMessage(pID,COLOR_INFO,string);

						SendClientMessage(pID,COLOR_INFO,"Benutze '/angebot annehmen' oder '/angebot ablehnen'");
        			}
        			else if(GetPVarInt(playerid,"Verwaltung") == 6)//Garage
        			{
  					    new pID = GetPVarInt(playerid,"GarageVID");
					    SetPVarInt(pID,"GarageAngebot",SpielerInfo[playerid][sGarage]);
					    SetPVarInt(pID,"GarageAngebotID",playerid);
					    SetPVarInt(pID,"GarageAngebotPreis",strval(inputtext));
					    new string[164];
					    format(string,sizeof(string),"Du hast dem Spieler {FF0000}%s{00CDFF} deine Garage für {FF0000}%d${00CDFF} angeboten.",SpielerInfo[pID][sName],strval(inputtext));
						SendClientMessage(playerid,COLOR_INFO,string);

		    			format(string,sizeof(string),"Spieler {FF0000}%s{00CDFF} bietet dir seine Garage (ID:{FF0000}%d{00CDFF}) für {FF0000}%d${00CDFF} an.",SpielerInfo[playerid][sName],SpielerInfo[playerid][sGarage],strval(inputtext));
						SendClientMessage(pID,COLOR_INFO,string);

						SendClientMessage(pID,COLOR_INFO,"Benutze '/angebot annehmen' oder '/angebot ablehnen'");
        			}
				}
				else ShowPlayerDialog(playerid,DIALOG_BUSINESS_SPIELERV,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Kaufbestätigung","Bitte gebe unten nun den Verkaufpreis an.\n\nDer Preis darf nicht kleiner als 0 und höher als 1000000$ sein.","Weiter","Abbrechen");
			}
		}
		case DIALOG_TANKSTELLENINFO:
		{
		    if(response==0){}//Abbrechen
		    else if(response==1)//Weiter
		    {
      			new tstelledialog[800], merker = true;
				for(new tsid = 1;tsid<MAX_TSTELLEN;tsid++)
			    {
			        if(TankstellenInfo[tsid][tsErstellt] == false)continue;
			        if(TankstellenInfo[tsid][tsBenzinLiter] < 10000 || TankstellenInfo[tsid][tsDieselLiter] < 10000 || TankstellenInfo[tsid][tsKerosinLiter] < 10000)
			        {
			            if(tsid > 5 && tsid < 11)
			            {
			                format(tstelledialog,sizeof(tstelledialog),"%s\n{FFFFFF}Tankstelle: {007DFF}%d{FFFFFF} | Benzin: {007DFF}%d{FFFFFF}L/10000L | Diesel: {007DFF}%d{FFFFFF}L/10000L | Kerosin: {007DFF}%d{FFFFFF}L/10000L",tstelledialog,tsid,TankstellenInfo[tsid][tsBenzinLiter],TankstellenInfo[tsid][tsDieselLiter],TankstellenInfo[tsid][tsKerosinLiter]);
							merker = false;
						}
					}
				}
				if(merker)
				{
				    SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Im moment benötigt keine Tankstelle Treibstoff.");
				    return 1;
				}
				else
				{
			    	ShowPlayerDialog(playerid,DIALOG_TANKSTELLENINFO2,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Tankstelleninfo",tstelledialog,"Seite 3","Zurück");
				    return 1;
				}
		    }
		}
		case DIALOG_TANKSTELLENINFO2:
		{
		    if(response==0)//Zurück
		    {
   				new tstelledialog[800], merker = true;
				for(new tsid = 1;tsid<MAX_TSTELLEN;tsid++)
			    {
			        if(TankstellenInfo[tsid][tsErstellt] == false)continue;
			        if(TankstellenInfo[tsid][tsBenzinLiter] < 10000 || TankstellenInfo[tsid][tsDieselLiter] < 10000 || TankstellenInfo[tsid][tsKerosinLiter] < 10000)
			        {
			            if(tsid < 5)
			            {
			                format(tstelledialog,sizeof(tstelledialog),"%s\n{FFFFFF}Tankstelle: {007DFF}%d{FFFFFF} | Benzin: {007DFF}%d{FFFFFF}L/10000L | Diesel: {007DFF}%d{FFFFFF}L/10000L | Kerosin: {007DFF}%d{FFFFFF}L/10000L",tstelledialog,tsid,TankstellenInfo[tsid][tsBenzinLiter],TankstellenInfo[tsid][tsDieselLiter],TankstellenInfo[tsid][tsKerosinLiter]);
							merker = false;
						}
					}
				}
				if(merker)
				{
				    SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Im moment benötigt keine Tankstelle Treibstoff.");
				    return 1;
				}
				else
				{
			    	ShowPlayerDialog(playerid,DIALOG_TANKSTELLENINFO,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Tankstelleninfo",tstelledialog,"Seite 3","Zurück");
				    return 1;
				}
		    }
		    else if(response==1)//Weiter
		    {
      			new tstelledialog[800], merker = true;
				for(new tsid = 1;tsid<MAX_TSTELLEN;tsid++)
			    {
			        if(TankstellenInfo[tsid][tsErstellt] == false)continue;
			        if(TankstellenInfo[tsid][tsBenzinLiter] < 10000 || TankstellenInfo[tsid][tsDieselLiter] < 10000 || TankstellenInfo[tsid][tsKerosinLiter] < 10000)
			        {
			            if(tsid > 10 && tsid < 16)
			            {
			                format(tstelledialog,sizeof(tstelledialog),"%s\n{FFFFFF}Tankstelle: {007DFF}%d{FFFFFF} | Benzin: {007DFF}%d{FFFFFF}L/10000L | Diesel: {007DFF}%d{FFFFFF}L/10000L | Kerosin: {007DFF}%d{FFFFFF}L/10000L",tstelledialog,tsid,TankstellenInfo[tsid][tsBenzinLiter],TankstellenInfo[tsid][tsDieselLiter],TankstellenInfo[tsid][tsKerosinLiter]);
							merker = false;
						}
					}
				}
				if(merker)
				{
				    SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Im moment benötigt keine Tankstelle Treibstoff.");
				    return 1;
				}
				else
				{
			    	ShowPlayerDialog(playerid,DIALOG_TANKSTELLENINFO3,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Tankstelleninfo",tstelledialog,"Seite 4","Zurück");
				    return 1;
				}
		    }
		}
		case DIALOG_TANKSTELLENINFO3:
		{
		    if(response==0)//Zurück
			{
				new tstelledialog[800], merker = true;
				for(new tsid = 1;tsid<MAX_TSTELLEN;tsid++)
			    {
			        if(TankstellenInfo[tsid][tsErstellt] == false)continue;
			        if(TankstellenInfo[tsid][tsBenzinLiter] < 10000 || TankstellenInfo[tsid][tsDieselLiter] < 10000 || TankstellenInfo[tsid][tsKerosinLiter] < 10000)
			        {
			            if(tsid > 5 && tsid < 11)
			            {
			                format(tstelledialog,sizeof(tstelledialog),"%s\n{FFFFFF}Tankstelle: {007DFF}%d{FFFFFF} | Benzin: {007DFF}%d{FFFFFF}L/10000L | Diesel: {007DFF}%d{FFFFFF}L/10000L | Kerosin: {007DFF}%d{FFFFFF}L/10000L",tstelledialog,tsid,TankstellenInfo[tsid][tsBenzinLiter],TankstellenInfo[tsid][tsDieselLiter],TankstellenInfo[tsid][tsKerosinLiter]);
							merker = false;
						}
					}
				}
				if(merker)
				{
				    SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Im Moment benötigt keine Tankstelle Treibstoff.");
				    return 1;
				}
				else
				{
			    	ShowPlayerDialog(playerid,DIALOG_TANKSTELLENINFO2,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Tankstelleninfo",tstelledialog,"Seite 4","Zurück");
				    return 1;
				}
			}
		    else if(response==1)//Weiter
		    {
      			new tstelledialog[800], merker = true;
				for(new tsid = 1;tsid<MAX_TSTELLEN;tsid++)
			    {
			        if(TankstellenInfo[tsid][tsErstellt] == false)continue;
			        if(TankstellenInfo[tsid][tsBenzinLiter] < 10000 || TankstellenInfo[tsid][tsDieselLiter] < 10000 || TankstellenInfo[tsid][tsKerosinLiter] < 10000)
			        {
			            if(tsid > 15)
			            {
			                format(tstelledialog,sizeof(tstelledialog),"%s\n{FFFFFF}Tankstelle: {007DFF}%d{FFFFFF} | Benzin: {007DFF}%d{FFFFFF}L/10000L | Diesel: {007DFF}%d{FFFFFF}L/10000L | Kerosin: {007DFF}%d{FFFFFF}L/10000L",tstelledialog,tsid,TankstellenInfo[tsid][tsBenzinLiter],TankstellenInfo[tsid][tsDieselLiter],TankstellenInfo[tsid][tsKerosinLiter]);
							merker = false;
						}
					}
				}
				if(merker)
				{
				    SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Im Moment benötigt keine Tankstelle Treibstoff.");
				    return 1;
				}
				else
				{
			    	ShowPlayerDialog(playerid,9992,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Tankstelleninfo",tstelledialog,"Schliessen","");
				    return 1;
				}
		    }
		}
		case DIALOG_TRAILER_TTANKAUSWAHL:
		{
		    if(response==0){}//Abbrechen
		    else if(response==1)//Weiter
		    {
  				switch(listitem)
		        {
          			case 0://Benzin
		            {
		                ShowPlayerDialog(playerid,DIALOG_TRAILER_BETANKEN,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Anhänger auffuellen","Wie viel Liter Benzin möchtest du in deinen Anhänger füllen ?","Weiter","Zurück");
		                SetPVarInt(playerid,"TrailerBetanken",1);
		            }
           			case 1://Diesel
		            {
		                ShowPlayerDialog(playerid,DIALOG_TRAILER_BETANKEN,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Anhänger auffuellen","Wie viel Liter Diesel möchtest du in deinen Anhänger füllen ?","Weiter","Zurück");
                        SetPVarInt(playerid,"TrailerBetanken",2);
		            }
           			case 2://Kerosin
		            {
		                ShowPlayerDialog(playerid,DIALOG_TRAILER_BETANKEN,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Anhänger auffuellen","Wie viel Liter Kerosin möchtest du in deinen Anhänger füllen ?","Weiter","Zurück");
                        SetPVarInt(playerid,"TrailerBetanken",3);
		            }
				}
			}
		}
		case DIALOG_TRAILER_BETANKEN:
		{
		    if(response==0){ShowPlayerDialog(playerid,DIALOG_TRAILER_TTANKAUSWAHL,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Anhänger auffuellen","Benzin\nDiesel\nKerosin","Weiter","");}//Zurück
		    else if(response==1)//Weiter
		    {
      			if(strval(inputtext) > 0 && strval(inputtext) <= 1000 && IsNumeric(inputtext))
				{
					SetPVarInt(playerid,"TrailerKapazität",strval(inputtext));
					PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
					SetTimerEx("TrailerBetanken",20000,false,"i",playerid);
					GameTextForPlayer(playerid, "Dein Anheanger wird aufgefuellt~n~~n~~r~Bitte warten...", 20000, 5);

					InterpolateCameraPos(playerid, 2602.650634, -2209.854492, 17.676725, 2623.280517, -2180.119384, 24.060914, 17500);
					InterpolateCameraLookAt(playerid, 2599.261718, -2213.513183, 17.317659, 2619.958984, -2183.195800, 21.938997, 17500);
				}
				else
				{
				    if(GetPVarInt(playerid,"TrailerBetanken") == 1)
				    {
				        ShowPlayerDialog(playerid,DIALOG_TRAILER_BETANKEN,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Anhänger auffuellen","Wie viel Liter Benzin möchtest du in deinen Anhänger füllen ?\n\n{FF0000}(1-1000L)","Weiter","Zurück");
				    }
				    else if(GetPVarInt(playerid,"TrailerBetanken") == 2)
				    {
				        ShowPlayerDialog(playerid,DIALOG_TRAILER_BETANKEN,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Anhänger auffuellen","Wie viel Liter Diesel möchtest du in deinen Anhänger füllen ?\n\n{FF0000}(1-1000L)","Weiter","Zurück");
				    }
				    else if(GetPVarInt(playerid,"TrailerBetanken") == 3)
				    {
				        ShowPlayerDialog(playerid,DIALOG_TRAILER_BETANKEN,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Anhänger auffuellen","Wie viel Liter Kerosin möchtest du in deinen Anhänger füllen ?\n\n{FF0000}(1-1000L)","Weiter","Zurück");
				    }
				}
		    }
		}
		case DIALOG_NEBENJOBS:
		{
		    if(response==0)//Zurück
			{
			    DeletePVar(playerid,"NebenjobAuswahl");
				InterpolateCameraPos(playerid, 369.133270, 173.748519, 1010.823974, 364.557189, 169.982406, 1010.493774, 1000);
				InterpolateCameraLookAt(playerid, 364.636047, 173.921264, 1008.645629, 361.581481, 173.667617, 1008.892395, 1000);
				TogglePlayerControllable(playerid, false);
				ShowPlayerMenu(playerid, RATHAUS_MENU, "Stadthalle Los Santos");
			    AddPlayerMenuItem(playerid, "Nebenjobs", "Alle unsere geliebten und grossartigen Nebenjobs.");
			    //AddPlayerMenuItem(playerid, "Ausweise", "Aktuell noch keine Funktion.");
			    AddPlayerMenuItem(playerid, "Versicherungen", "Aktuell noch keine Funktion.");
			    AddPlayerMenuItem(playerid, "Verlassen", "");
			}
		    else if(response==1)//Weiter
		    {
  				switch(listitem)
		        {
          			case 0://Lkw-Fahrer
		            {
		                new string[600];
		                SetPVarInt(playerid,"NebenjobAuswahl",1);
		                format(string,sizeof(string),"{007DFF}%s{FFFFFF}, deine Aufgabe als LKW-Fahrer / Trucker ist es staatliche Gewerbe und Geschäfte zu beliefern.\nSo wirst du beispielsweise staatliche Tankstelle mit Kerosin, Benzin oder Diesel beliefern.\n\n",SpielerInfo[playerid][sName]);
		                format(string,sizeof(string),"%sDu erhälst ein festes Gehalt von {FE0000}%d${FFFFFF} für jede Tour.\nDu wirst für diesen Nebenjob allerdings einen {FE0000}LKW-Führerschein{FFFFFF} benötigen.",string,JobInfo[1][jiGehalt]);
		                ShowPlayerDialog(playerid,DIALOG_NEBENJOB_INFOS,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - LKW-Fahrer / Trucker",string,"Annehmen","Zurück");
		            }
           			case 1://Pizzabote
		            {
		                new string[600];
		                SetPVarInt(playerid,"NebenjobAuswahl",2);
		                format(string,sizeof(string),"{007DFF}%s{FFFFFF}, deine Aufgabe als Pizzabote ist es Pizza zu den Kunden zu bringen.\nSo wirst du beispielsweise Kunden mit Thunfisch, Salami oder Hawaii-Pizzen beliefern.\n",SpielerInfo[playerid][sName]);
		                format(string,sizeof(string),"%sDu erhälst ein festes Gehalt von {FE0000}%d${FFFFFF} für jede Tour.\nDu wirst für diesen Nebenjob allerdings einen {FE0000}Auto-Führerschein{FFFFFF} benötigen.",string,JobInfo[2][jiGehalt]);
						ShowPlayerDialog(playerid,DIALOG_NEBENJOB_INFOS,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Pizzabote",string,"Annehmen","Zurück");
		            }
 					case 2://Kehrmaschinenfahrer
		            {
		                new string[600];
		                SetPVarInt(playerid,"NebenjobAuswahl",3);
		                format(string,sizeof(string),"{007DFF}%s{FFFFFF}, deine Aufgabe als Kehrmaschinenfahrer ist es die Straßen von Los Santos sauber zuhalten.\nDu wirst daher mit einer Kehrmaschine den Müll aufkehren.\n",SpielerInfo[playerid][sName]);
		                format(string,sizeof(string),"%sDu erhälst ein festes Gehalt von {FE0000}%d${FFFFFF} für jede Tour.\nDu wirst für diesen Nebenjob allerdings einen {FE0000}Auto-Führerschein{FFFFFF} benötigen.",string,JobInfo[3][jiGehalt]);
						ShowPlayerDialog(playerid,DIALOG_NEBENJOB_INFOS,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Kehrmaschinenfahrer",string,"Annehmen","Zurück");
		            }
 					case 3://Pilot
		            {
		                new string[600];
		                SetPVarInt(playerid,"NebenjobAuswahl",4);
		                format(string,sizeof(string),"{007DFF}%s{FFFFFF}, deine Aufgabe als Pilot ist es Waren von Los Santos nach San Fierro anschließend\nnach Las Venturas und wieder zurück nach Los Santos.\nDu wirst daher je nach Erfahrung mit einem bestimmten Flugzeug fliegen.\n",SpielerInfo[playerid][sName]);
		                format(string,sizeof(string),"%sDu erhälst ein festes Gehalt von {FE0000}%d${FFFFFF} für jede Tour.\nDu wirst für diesen Nebenjob allerdings einen {FE0000}Flugzeug-Führerschein{FFFFFF} benötigen.",string,JobInfo[4][jiGehalt]);
						ShowPlayerDialog(playerid,DIALOG_NEBENJOB_INFOS,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Pilot",string,"Annehmen","Zurück");
		            }
 					case 4://Busfahrer
		            {
		                new string[600];
		                SetPVarInt(playerid,"NebenjobAuswahl",5);
		                format(string,sizeof(string),"{007DFF}%s{FFFFFF}, deine Aufgabe als Busfahrer ist es Personen zu beförden\nDu wirst daher je nach Erfahrung mit einem bestimmten Bus fahren.\n",SpielerInfo[playerid][sName]);
		                format(string,sizeof(string),"%sDu erhälst ein festes Gehalt von {FE0000}%d${FFFFFF} für jede Tour.\nDu wirst für diesen Nebenjob allerdings einen {FE0000}Auto-Führerschein{FFFFFF} benötigen.",string,JobInfo[5][jiGehalt]);
						ShowPlayerDialog(playerid,DIALOG_NEBENJOB_INFOS,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Busfahrer",string,"Annehmen","Zurück");
		            }
 					case 5://Müllmann
		            {
		                new string[600];
		                SetPVarInt(playerid,"NebenjobAuswahl",6);
		                format(string,sizeof(string),"{007DFF}%s{FFFFFF}, deine Aufgabe als Müllmann ist es den Müll von den Häusern abzuholen.\n",SpielerInfo[playerid][sName]);
		                format(string,sizeof(string),"%sDu erhälst ein festes Gehalt von {FE0000}%d${FFFFFF} für jede Tour.\nDu wirst für diesen Nebenjob allerdings einen {FE0000}Auto-Führerschein{FFFFFF} benötigen.",string,JobInfo[6][jiGehalt]);
						ShowPlayerDialog(playerid,DIALOG_NEBENJOB_INFOS,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Müllmann",string,"Annehmen","Zurück");
		            }
 					case 6://Landwirt
		            {
		                new string[600];
		                SetPVarInt(playerid,"NebenjobAuswahl",7);
		                format(string,sizeof(string),"{007DFF}%s{FFFFFF}, deine Aufgabe als Landwirt ist es die Felder in Blueberry zu bewirtschaften.\n",SpielerInfo[playerid][sName]);
		                format(string,sizeof(string),"%sDu erhälst ein festes Gehalt von {FE0000}%d${FFFFFF} für jede Tour.\nDu wirst für diesen Nebenjob allerdings einen {FE0000}Auto-Führerschein{FFFFFF} benötigen.",string,JobInfo[7][jiGehalt]);
						ShowPlayerDialog(playerid,DIALOG_NEBENJOB_INFOS,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Landwirt",string,"Annehmen","Zurück");
		            }
 					case 7://Geldlieferant
		            {
		                new string[700];
		                SetPVarInt(playerid,"NebenjobAuswahl",8);
		                format(string,sizeof(string),"{007DFF}%s{FFFFFF}, deine Aufgabe als Geldlieferant ist, Bankautomaten mit genügend Geld zu versorgen.\n",SpielerInfo[playerid][sName]);
		                format(string,sizeof(string),"%sJe nach dem mit wie viel Geld du ein Bankautomat in einer Stunde belieferst, desto höher ist dein Gehalt.\n",string);
		                format(string,sizeof(string),"%sDu wirst für diesen Nebenjob allerdings einen {FE0000}LKW-Führerschein{FFFFFF} benötigen.",string);
						ShowPlayerDialog(playerid,DIALOG_NEBENJOB_INFOS,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Geldlieferant",string,"Annehmen","Zurück");
		            }
 					case 8://Elektriker
		            {
		                new string[700];
		                SetPVarInt(playerid,"NebenjobAuswahl",9);
		                format(string,sizeof(string),"{007DFF}%s{FFFFFF}, deine Aufgabe als Elektriker ist, Bankautomaten, Blitzer, Schranken & CO zu reparieren.\n",SpielerInfo[playerid][sName]);
		                format(string,sizeof(string),"%sJe nach dem wie viel du in einer Stunde reparierst, desto höher ist dein Gehalt.\n",string);
		                format(string,sizeof(string),"%sDu wirst für diesen Nebenjob allerdings einen {FE0000}Auto-Führerschein{FFFFFF} benötigen.",string);
						ShowPlayerDialog(playerid,DIALOG_NEBENJOB_INFOS,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Elektriker",string,"Annehmen","Zurück");
		            }
		            case 9://Zugfahrer
		            {
		                new string[700];
		                SetPVarInt(playerid,"NebenjobAuswahl",10);
		                format(string,sizeof(string),"{007DFF}%s{FFFFFF}, deine Aufgabe als Zugfahrer ist es gueter durch die einzelnen Staaten zu fahren.\n",SpielerInfo[playerid][sName]);
		                format(string,sizeof(string),"%sPro Tour erhälst du {FE0000}%d${FFFFFF} auf deinen PayDay gutgeschrieben. Du kannst so oft fahren wie du möchtest.\n",string,JobInfo[14][jiGehalt]);
		                format(string,sizeof(string),"%sFür diesen Job wirst du {FE0000}keine besondere Fahrerlaubnis{FFFFFF} benötigen.",string);
						ShowPlayerDialog(playerid,DIALOG_NEBENJOB_INFOS,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Zugfahrer",string,"Annehmen","Zurück");
		            }
		            case 10://Detektiv
		            {
		                new string[700];
		                SetPVarInt(playerid,"NebenjobAuswahl",11);
		                format(string,sizeof(string),"{007DFF}%s{FFFFFF}, deine Aufgabe als Detektiv ist es Personen ausfindig zu machen.\n",SpielerInfo[playerid][sName]);
		                format(string,sizeof(string),"%sJe nach dem wie viel du pro Auftrag verlangst, desto höher ist dein Gehalt.\n",string);
		                format(string,sizeof(string),"%sDu wirst für diesen Nebenjob keine {FE0000}Fahr oder Flug-Erlaubnis{FFFFFF} benötigen.",string);
						ShowPlayerDialog(playerid,DIALOG_NEBENJOB_INFOS,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Detektiv",string,"Annehmen","Zurück");
		            }
		            case 11://Langstreckenfahrer
		            {
		                new string[900];
		                SetPVarInt(playerid,"NebenjobAuswahl",12);
		                format(string,sizeof(string),"{007DFF}%s{FFFFFF}, deine Aufgabe als Langstreckenfahrer ist gueter von der Ölfabrik abzuholen und\n",SpielerInfo[playerid][sName]);
		                format(string,sizeof(string),"%shinzubringen. Du kannst dabei auch Schmuggelware mitnehmen, musst du aber nicht.\n",string);
		                format(string,sizeof(string),"%sDu wirst für diesen Nebenjob allerdings eine {FE0000}LKW-Fahrerlaubnis{FFFFFF} benötigen.",string);
		                format(string,sizeof(string),"%sDein Gehalt liegt ohne Schmuggelware bei {FE0000}%d$ pro Fahrt{FFFFFF} und {FE0000}%d EXP{FFFFFF}.",string,JobInfo[16][jiGehalt],JobInfo[16][jiEXP]);
						ShowPlayerDialog(playerid,DIALOG_NEBENJOB_INFOS,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Langstreckenfahrer",string,"Annehmen","Zurück");
		            }
					case 12://Fluglieferant
		            {
		                new string[900];
		                SetPVarInt(playerid,"NebenjobAuswahl",13);
		                format(string,sizeof(string),"{007DFF}%s{FFFFFF}, deine Aufgabe als Fluglieferant ist es, die Ware über der jeweiligen\n",SpielerInfo[playerid][sName]);
		                format(string,sizeof(string),"%sDein Gehalt liegt bei {FE0000}%d$ pro Abwurf{FFFFFF} und {FE0000}%d EXP{FFFFFF}.",string,JobInfo[17][jiGehalt],JobInfo[17][jiEXP]);
						ShowPlayerDialog(playerid,DIALOG_NEBENJOB_INFOS,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Fluglieferant",string,"Annehmen","Zurück");
		            }
					case 13://Hochseefischer
		            {
		                new string[900];
		                SetPVarInt(playerid,"NebenjobAuswahl",14);
		                format(string,sizeof(string),"{007DFF}%s{FFFFFF}, deine Aufgabe als Hochseefischer ist es, mit deinem Boot Fische zu fangen\n",SpielerInfo[playerid][sName]);
		                format(string,sizeof(string),"%sDein Gehalt errechnet sich nach dem jeweiligen Fang sowie deine EXP.",string);
						ShowPlayerDialog(playerid,DIALOG_NEBENJOB_INFOS,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Hochseefischer",string,"Annehmen","Zurück");
		            }
				}
			}
		}
		case DIALOG_NEBENJOB_INFOS:
		{
		    if(response==0){ShowPlayerDialog(playerid,DIALOG_NEBENJOBS,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Nebenjobs","LKW-Fahrer / Trucker\nPizzabote\nKehrmaschinenfahrer\nPilot\nBusfahrer\nMüllmann\nLandwirt\nGeldlieferant\nElektriker\nZugfahrer\nDetektiv\nLangstreckenfahrer\nFluglieferant\nHochseefischer","Weiter","Zurück");}//Zurück
		    else if(response==1)//Weiter
		    {

		        if(GetPVarInt(playerid,"NebenjobAuswahl") == 1)//LKW-Fahrer
		        {
		            DeleteJobFahrzeug(playerid);
			        SpielerInfo[playerid][sNebenjob] = 1;
			        SendClientMessage(playerid,COLOR_WHITE," ");
			        SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Super! Du hast den Nebenjob 'LKW-Fahrer / Trucker' angenommen.");
			        SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Du kannst deine Jobbefehle unter '/help' nachschlagen. Dein Arbeitsplatz findest du mit '/jobbase'.");
			        SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Ich wünsche dir ganz viel Spaß in deinem neuem Nebenjob und viel Erfolg.");
			        TogglePlayerControllable(playerid, true);
					SetCameraBehindPlayer(playerid);
					DeletePVar(playerid,"Rathaus");
					DeletePVar(playerid,"NebenjobAuswahl");
					if(SpielerInfo[playerid][sTutorial] == 6){SpielerInfo[playerid][sTutorial] = 7; ShowPlayerTutorial(playerid);}
				}
				else if(GetPVarInt(playerid,"NebenjobAuswahl") == 2)//Pizzabote
		        {
		            DeleteJobFahrzeug(playerid);
		        	SpielerInfo[playerid][sNebenjob] = 2;
			        SendClientMessage(playerid,COLOR_WHITE," ");
			        SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Super! Du hast den Nebenjob 'Pizzabote' angenommen.");
			        SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Du kannst deine Jobbefehle unter '/help' nachschlagen. Dein Arbeitsplatz findest du mit '/jobbase'.");
			        SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Ich wünsche dir ganz viel Spaß in deinem neuem Nebenjob und viel Erfolg.");
			        TogglePlayerControllable(playerid, true);
					SetCameraBehindPlayer(playerid);
					DeletePVar(playerid,"Rathaus");
					DeletePVar(playerid,"NebenjobAuswahl");
					if(SpielerInfo[playerid][sTutorial] == 6){SpielerInfo[playerid][sTutorial] = 7; ShowPlayerTutorial(playerid);}
		        }
				else if(GetPVarInt(playerid,"NebenjobAuswahl") == 3)//Kehrmaschinenfahrer
		        {
		            DeleteJobFahrzeug(playerid);
		        	SpielerInfo[playerid][sNebenjob] = 3;
			        SendClientMessage(playerid,COLOR_WHITE," ");
			        SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Super! Du hast den Nebenjob 'Kehrmaschinenfahrer' angenommen.");
			        SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Du kannst deine Jobbefehle unter '/help' nachschlagen. Dein Arbeitsplatz findest du mit '/jobbase'.");
			        SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Ich wünsche dir ganz viel Spaß in deinem neuem Nebenjob und viel Erfolg.");
			        TogglePlayerControllable(playerid, true);
					SetCameraBehindPlayer(playerid);
					DeletePVar(playerid,"Rathaus");
					DeletePVar(playerid,"NebenjobAuswahl");
					if(SpielerInfo[playerid][sTutorial] == 6){SpielerInfo[playerid][sTutorial] = 7; ShowPlayerTutorial(playerid);}
		        }
 				else if(GetPVarInt(playerid,"NebenjobAuswahl") == 4)//Pilot
		        {
		            DeleteJobFahrzeug(playerid);
		        	SpielerInfo[playerid][sNebenjob] = 4;
			        SendClientMessage(playerid,COLOR_WHITE," ");
			        SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Super! Du hast den Nebenjob 'Pilot' angenommen.");
			        SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Du kannst deine Jobbefehle unter '/help' nachschlagen. Dein Arbeitsplatz findest du mit '/jobbase'.");
			        SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Ich wünsche dir ganz viel Spaß in deinem neuem Nebenjob und viel Erfolg.");
			        TogglePlayerControllable(playerid, true);
					SetCameraBehindPlayer(playerid);
					DeletePVar(playerid,"Rathaus");
					DeletePVar(playerid,"NebenjobAuswahl");
					if(SpielerInfo[playerid][sTutorial] == 6){SpielerInfo[playerid][sTutorial] = 7; ShowPlayerTutorial(playerid);}
		        }
 				else if(GetPVarInt(playerid,"NebenjobAuswahl") == 5)//Busfahrer
		        {
		            DeleteJobFahrzeug(playerid);
		        	SpielerInfo[playerid][sNebenjob] = 5;
			        SendClientMessage(playerid,COLOR_WHITE," ");
			        SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Super! Du hast den Nebenjob 'Busfahrer' angenommen.");
			        SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Du kannst deine Jobbefehle unter '/help' nachschlagen. Dein Arbeitsplatz findest du mit '/jobbase'.");
			        SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Ich wünsche dir ganz viel Spaß in deinem neuem Nebenjob und viel Erfolg.");
			        TogglePlayerControllable(playerid, true);
					SetCameraBehindPlayer(playerid);
					DeletePVar(playerid,"Rathaus");
					DeletePVar(playerid,"NebenjobAuswahl");
					if(SpielerInfo[playerid][sTutorial] == 6){SpielerInfo[playerid][sTutorial] = 7; ShowPlayerTutorial(playerid);}
		        }
 				else if(GetPVarInt(playerid,"NebenjobAuswahl") == 6)//Müllmann
		        {
		            DeleteJobFahrzeug(playerid);
		        	SpielerInfo[playerid][sNebenjob] = 6;
			        SendClientMessage(playerid,COLOR_WHITE," ");
			        SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Super! Du hast den Nebenjob 'Müllmann' angenommen.");
			        SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Du kannst deine Jobbefehle unter '/help' nachschlagen. Dein Arbeitsplatz findest du mit '/jobbase'.");
			        SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Ich wünsche dir ganz viel Spaß in deinem neuem Nebenjob und viel Erfolg.");
			        TogglePlayerControllable(playerid, true);
					SetCameraBehindPlayer(playerid);
					DeletePVar(playerid,"Rathaus");
					DeletePVar(playerid,"NebenjobAuswahl");
					if(SpielerInfo[playerid][sTutorial] == 6){SpielerInfo[playerid][sTutorial] = 7; ShowPlayerTutorial(playerid);}
		        }
 				else if(GetPVarInt(playerid,"NebenjobAuswahl") == 7)//Landwirt
		        {
		            DeleteJobFahrzeug(playerid);
		        	SpielerInfo[playerid][sNebenjob] = 7;
			        SendClientMessage(playerid,COLOR_WHITE," ");
			        SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Super! Du hast den Nebenjob 'Landwirt' angenommen.");
			        SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Du kannst deine Jobbefehle unter '/help' nachschlagen. Dein Arbeitsplatz findest du mit '/jobbase'.");
			        SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Ich wünsche dir ganz viel Spaß in deinem neuem Nebenjob und viel Erfolg.");
					TogglePlayerControllable(playerid, true);
					SetCameraBehindPlayer(playerid);
					DeletePVar(playerid,"Rathaus");
					DeletePVar(playerid,"NebenjobAuswahl");
					if(SpielerInfo[playerid][sTutorial] == 6){SpielerInfo[playerid][sTutorial] = 7; ShowPlayerTutorial(playerid);}
		        }
 				else if(GetPVarInt(playerid,"NebenjobAuswahl") == 8)//Geldlieferant
		        {
		            DeleteJobFahrzeug(playerid);
		        	SpielerInfo[playerid][sNebenjob] = 10;
			        SendClientMessage(playerid,COLOR_WHITE," ");
			        SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Super! Du hast den Nebenjob 'Geldliefarant' angenommen.");
			        SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Du kannst deine Jobbefehle unter '/help' nachschlagen. Dein Arbeitsplatz findest du mit '/jobbase'.");
			        SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Ich wünsche dir ganz viel Spaß in deinem neuem Nebenjob und viel Erfolg.");
					TogglePlayerControllable(playerid, true);
					SetCameraBehindPlayer(playerid);
					DeletePVar(playerid,"Rathaus");
					DeletePVar(playerid,"NebenjobAuswahl");
					if(SpielerInfo[playerid][sTutorial] == 6){SpielerInfo[playerid][sTutorial] = 7; ShowPlayerTutorial(playerid);}
		        }
 				else if(GetPVarInt(playerid,"NebenjobAuswahl") == 9)//Elektriker
		        {
		            DeleteJobFahrzeug(playerid);
		        	SpielerInfo[playerid][sNebenjob] = 11;
			        SendClientMessage(playerid,COLOR_WHITE," ");
			        SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Super! Du hast den Nebenjob 'Elektriker' angenommen.");
			        SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Du kannst deine Jobbefehle unter '/help' nachschlagen. Dein Arbeitsplatz findest du mit '/jobbase'.");
			        SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Ich wünsche dir ganz viel Spaß in deinem neuem Nebenjob und viel Erfolg.");
					TogglePlayerControllable(playerid, true);
					SetCameraBehindPlayer(playerid);
					DeletePVar(playerid,"Rathaus");
					DeletePVar(playerid,"NebenjobAuswahl");
					if(SpielerInfo[playerid][sTutorial] == 6){SpielerInfo[playerid][sTutorial] = 7; ShowPlayerTutorial(playerid);}
		        }
		        else if(GetPVarInt(playerid,"NebenjobAuswahl") == 10)//Zugfahrer
		        {
		            DeleteJobFahrzeug(playerid);
		        	SpielerInfo[playerid][sNebenjob] = 14;
			        SendClientMessage(playerid,COLOR_WHITE," ");
			        SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Super! Du hast den Nebenjob 'Zugfahrer' angenommen.");
			        SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Du kannst deine Jobbefehle unter '/help' nachschlagen. Dein Arbeitsplatz findest du mit '/jobbase'.");
			        SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Ich wünsche dir ganz viel Spaß in deinem neuem Nebenjob und viel Erfolg.");
					TogglePlayerControllable(playerid, true);
					SetCameraBehindPlayer(playerid);
					DeletePVar(playerid,"Rathaus");
					DeletePVar(playerid,"NebenjobAuswahl");
					if(SpielerInfo[playerid][sTutorial] == 6){SpielerInfo[playerid][sTutorial] = 7; ShowPlayerTutorial(playerid);}
		        }
		        else if(GetPVarInt(playerid,"NebenjobAuswahl") == 11)//Detektiv
		        {
		            //DeleteJobFahrzeug(playerid);
		        	SpielerInfo[playerid][sNebenjob] = 15;
			        SendClientMessage(playerid,COLOR_WHITE," ");
			        SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Super! Du hast den Nebenjob 'Detektiv' angenommen.");
			        SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Du kannst deine Jobbefehle unter '/help' nachschlagen..");
			        SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Ich wünsche dir ganz viel Spaß in deinem neuem Nebenjob und viel Erfolg.");
					TogglePlayerControllable(playerid, true);
					SetCameraBehindPlayer(playerid);
					DeletePVar(playerid,"Rathaus");
					DeletePVar(playerid,"NebenjobAuswahl");
					if(SpielerInfo[playerid][sTutorial] == 6){SpielerInfo[playerid][sTutorial] = 7; ShowPlayerTutorial(playerid);}
		        }
		        else if(GetPVarInt(playerid,"NebenjobAuswahl") == 12)//Langstreckenfahrer
		        {
		            //DeleteJobFahrzeug(playerid);
		        	SpielerInfo[playerid][sNebenjob] = 16;
			        SendClientMessage(playerid,COLOR_WHITE," ");
			        SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Super! Du hast den Nebenjob 'Langstreckenfahrer' angenommen.");
			        SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Du kannst deine Jobbefehle unter '/help' nachschlagen..");
			        SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Ich wünsche dir ganz viel Spaß in deinem neuem Nebenjob und viel Erfolg.");
					TogglePlayerControllable(playerid, true);
					SetCameraBehindPlayer(playerid);
					DeletePVar(playerid,"Rathaus");
					DeletePVar(playerid,"NebenjobAuswahl");
					if(SpielerInfo[playerid][sTutorial] == 6){SpielerInfo[playerid][sTutorial] = 7; ShowPlayerTutorial(playerid);}
		        }
				else if(GetPVarInt(playerid,"NebenjobAuswahl") == 13)//Fluglieferant
		        {
		            //DeleteJobFahrzeug(playerid);
		        	SpielerInfo[playerid][sNebenjob] = 17;
			        SendClientMessage(playerid,COLOR_WHITE," ");
			        SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Super! Du hast den Nebenjob 'Fluglieferant' angenommen.");
			        SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Du kannst deine Jobbefehle unter '/help' nachschlagen..");
			        SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Ich wünsche dir ganz viel Spaß in deinem neuem Nebenjob und viel Erfolg.");
					TogglePlayerControllable(playerid, true);
					SetCameraBehindPlayer(playerid);
					DeletePVar(playerid,"Rathaus");
					DeletePVar(playerid,"NebenjobAuswahl");
					if(SpielerInfo[playerid][sTutorial] == 6){SpielerInfo[playerid][sTutorial] = 7; ShowPlayerTutorial(playerid);}
		        }
				else if(GetPVarInt(playerid,"NebenjobAuswahl") == 14)//Hochseefischer
		        {
		            //DeleteJobFahrzeug(playerid);
		        	SpielerInfo[playerid][sNebenjob] = 18;
			        SendClientMessage(playerid,COLOR_WHITE," ");
			        SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Super! Du hast den Nebenjob 'Hochseefischer' angenommen.");
			        SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Du kannst deine Jobbefehle unter '/help' nachschlagen..");
			        SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Ich wünsche dir ganz viel Spaß in deinem neuem Nebenjob und viel Erfolg.");
					TogglePlayerControllable(playerid, true);
					SetCameraBehindPlayer(playerid);
					DeletePVar(playerid,"Rathaus");
					DeletePVar(playerid,"NebenjobAuswahl");
					if(SpielerInfo[playerid][sTutorial] == 6){SpielerInfo[playerid][sTutorial] = 7; ShowPlayerTutorial(playerid);}
		        }
		    }
		}
		case DIALOG_MISSIONEN:
		{
		    if(response==0){}//Abbrechen
		    else if(response==1)//Weiter
		    {
		        switch(listitem)
		        {
		            case 0://Raube ein Geschäft aus
		            {
		                if(GetPVarInt(playerid,"MissionActive") == 1)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast diese Mission bereits angenommen.");
		                if(SpielerInfo[playerid][sMissionSolved][1] == 1)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast diese Mission bereits abgeschlossen.");
                        SetPVarInt(playerid,"MissionActive",1);
                        SendClientMessage(playerid,COLOR_LIGHTGREEN,"[Mission]: Du hast die Mission angenommen. Erledige Sie um die Belohnung zu kassieren.");
		            }
                    case 1://Erreiche 10 Wanteds
		            {
		                if(GetPVarInt(playerid,"MissionActive") == 2)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast diese Mission bereits angenommen.");
		                if(SpielerInfo[playerid][sMissionSolved][2] == 1)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast diese Mission bereits abgeschlossen.");
                        SetPVarInt(playerid,"MissionActive",2);
                        SendClientMessage(playerid,COLOR_LIGHTGREEN,"[Mission]: Du hast die Mission angenommen. Erledige Sie um die Belohnung zu kassieren.");
		            }
		            case 2://Kaufe Drogen von einer Gang
		            {
		                if(GetPVarInt(playerid,"MissionActive") == 3)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast diese Mission bereits angenommen.");
		                if(SpielerInfo[playerid][sMissionSolved][3] == 1)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast diese Mission bereits abgeschlossen.");
                        SetPVarInt(playerid,"MissionActive",3);
                        SendClientMessage(playerid,COLOR_LIGHTGREEN,"[Mission]: Du hast die Mission angenommen. Erledige Sie um die Belohnung zu kassieren.");
		            }
		            case 3://Erhalte 175HP durch /usedrugs
		            {
		                if(GetPVarInt(playerid,"MissionActive") == 4)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast diese Mission bereits angenommen.");
		                if(SpielerInfo[playerid][sMissionSolved][4] == 1)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast diese Mission bereits abgeschlossen.");
                        SetPVarInt(playerid,"MissionActive",4);
                        SendClientMessage(playerid,COLOR_LIGHTGREEN,"[Mission]: Du hast die Mission angenommen. Erledige Sie um die Belohnung zu kassieren.");
		            }
		            case 4://Pfandflaschen
		            {
		                if(GetPVarInt(playerid,"MissionActive") == 5)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast diese Mission bereits angenommen.");
		                if(SpielerInfo[playerid][sMissionSolved][5] == 1)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast diese Mission bereits abgeschlossen.");
                        SetPVarInt(playerid,"MissionActive",5);
                        SendClientMessage(playerid,COLOR_LIGHTGREEN,"[Mission]: Du hast die Mission angenommen. Erledige Sie um die Belohnung zu kassieren.");
		            }
		            case 5://Emilio Wanteds entfernen
		            {
		                if(GetPVarInt(playerid,"MissionActive") == 6)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast diese Mission bereits angenommen.");
		                if(SpielerInfo[playerid][sMissionSolved][6] == 1)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast diese Mission bereits abgeschlossen.");
                        SetPVarInt(playerid,"MissionActive",6);
                        SendClientMessage(playerid,COLOR_LIGHTGREEN,"[Mission]: Du hast die Mission angenommen. Erledige Sie um die Belohnung zu kassieren.");
		            }
		        }
		    }
		}
		case DIALOG_HELP:
		{
		    if(response==0){}//Abbrechen
		    else if(response==1)
		    {
				switch(listitem)
				{
					case 0://Admin Befehle
					{
     					if(SpielerInfo[playerid][sAdmin] == 0)return NichtBerechtigt
						ShowAdminBefehle(playerid);
	 				}
					case 1://Allgemeine Befehle
					{
	    				SendClientMessage(playerid,COLOR_RED,"=============================== | "SERV_NAME" - Allgemeine Befehle | ===============================");
					    SendClientMessage(playerid,COLOR_WHITE,"/icp | /admins | /spawnchange | /ct | /knastzeit | /bank | /atm | /autohaus | /tanken | /stadthalle | /id");
					    SendClientMessage(playerid,COLOR_WHITE,"/s | /me | /kaufen | /pay | /ad | /accept | /erstehilfe | /ooc | /support | /contract | /anrufen | /auflegen");
					    SendClientMessage(playerid,COLOR_WHITE,"/animlist | /whisper | /leise | /b | /stadtplan | /eject | /usedrugs | /jobstats | /connection | /stats | /achiv");
					    SendClientMessage(playerid,COLOR_WHITE,"/hacken | /knacken | /getnewspaper");
					}
					case 2://Fraktions Befehle
					{
					    if(SpielerInfo[playerid][sFraktion] == 0)return NichtBerechtigt
					    SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}=============================== | "SERV_NAME" - Fraktions Befehle | ===============================");
					    if(SpielerInfo[playerid][sFraktion] == 1)
					    {
					        SendClientMessage(playerid,COLOR_WHITE,"/govkasse");
					    	SendClientMessage(playerid,COLOR_WHITE,"Präsident: /govmessage, /govsenator, /setsteuern");
					    }
					    else if(SpielerInfo[playerid][sFraktion] == 2)//San Andreas Police Department
					    {
					        SendClientMessage(playerid,COLOR_YELLOW,"Abnahme: {FFFFFF}/take, /takemats, /takedrugs, /takegun, /takeguns, /destroydroge");
					        SendClientMessage(playerid,COLOR_YELLOW,"Strafe: {FFFFFF}/su(spect), /givepunkte, /ticket");
					        SendClientMessage(playerid,COLOR_YELLOW,"De-Strafe: {FFFFFF}/unarrest, /clear");
					        SendClientMessage(playerid,COLOR_YELLOW,"Festnahme: {FFFFFF}/hs, /cuff, /arrest, /unarrest, /grab, /afkarrest");
					        SendClientMessage(playerid,COLOR_YELLOW,"Kontrolle: {FFFFFF}/mautkontrolle, /mautstationen, /akte, /frisk");
					        SendClientMessage(playerid,COLOR_YELLOW,"Verfolgung: {FFFFFF}/orten, /horten, /sorten");
					        SendClientMessage(playerid,COLOR_YELLOW,"Straße: {FFFFFF}/blitzerinfo, /addblitzer, /delblitzer, /schild, /delschild, /sperre, /delsperre, /nagelband(/nb), /delnagelband(/dnb), /blitzerorten");
					        SendClientMessage(playerid,COLOR_YELLOW,"Fahrzeug: {FFFFFF}/sirene, /sirenehupe, /usirene, /beisatz, /dashcam, /vehlabel");
					        SendClientMessage(playerid,COLOR_YELLOW,"Allgemein: {FFFFFF}/notruf, /tazer, /flock, /members, /r, /d, /m, /maske, /unmask, /bk, /showmarke");
					        SendClientMessage(playerid,COLOR_YELLOW,"Information: {FFFFFF}/wanteds, /knastinfo, /notrufliste, /hkennzeichen, /kennung, /letzterfahrer");
					        SendClientMessage(playerid,COLOR_YELLOW,"Dienst: {FFFFFF}/cop");
					        SendClientMessage(playerid,COLOR_YELLOW,"Hinweis: Tore & Türen öffnen sich mit der 'TASTE N'.");
						}
						else if(SpielerInfo[playerid][sFraktion] == 5)//SA Rettungsdienst
						{
						    SendClientMessage(playerid,COLOR_WHITE,"/heal | /rea | /totliste | /cptot | /paket | /members | /d | /m | /r | /notrufliste | /notruf | /sirenehupe | /letzterfahrer");
						    SendClientMessage(playerid,COLOR_WHITE,"/orten | /givebaseheal");
						}
		    			else if(SpielerInfo[playerid][sFraktion] == 6)//Federal Bureau of Investigation
					    {
					        SendClientMessage(playerid,COLOR_WHITE,"/ticket | /(su)spect | /clear | /wanteds | /hs | /cuff | /uncuff | /grab | /arrest | /unarrest | /r | /sperre | /nagelband(/nb) | /schild");
					        SendClientMessage(playerid,COLOR_WHITE,"/delnagelband(/dnb) | /delsperre | /delschild | /sirene | /usirene | /knastinfo");
					        SendClientMessage(playerid,COLOR_WHITE,"/flock  | /members | /d | /m | /take | /notrufliste | /notruf | /tazer | /destroydroge");
					        SendClientMessage(playerid,COLOR_WHITE,"/letzterfahrer | /givepunkte | /strafpunkte | /sirenehupe | /addblitzer | /delblitzer | /blitzerinfo | /maske | /bk");
					        SendClientMessage(playerid,COLOR_WHITE,"/showmarke | /mautkontrolle | /mautstationen | /gov | /akte | /orten | /horten | /hkennzeichen | /unmask | /listgps");
					        SendClientMessage(playerid,COLOR_YELLOW,"Hinweis: Tore & Türen öffnen sich mit der 'TASTE N'.");
						}
						else if(SpielerInfo[playerid][sFraktion] == 7)//Ordnungsamt
						{
						    SendClientMessage(playerid,COLOR_YELLOW,"O-AMT: {FFFFFF}/parkkralle, /givepunkte, /repair, /abschleppen, /ticket");
						    SendClientMessage(playerid,COLOR_YELLOW,"Fahrzeug: {FFFFFF}/vehlabel, /sirene");
						    SendClientMessage(playerid,COLOR_YELLOW,"Bau: {FFFFFF}/addblitzer, /delblitzer, /blitzerinfo, /blitzerorten, /schild, /delschild, /delallschilder(Leader)");
						    SendClientMessage(playerid,COLOR_YELLOW,"Hinweis: Die Schranke im Hof öffnet sich mit der 'TASTE N'.");
						    SendClientMessage(playerid,COLOR_YELLOW,"Hinweis: Fahrzeug werden mit 'STRG' an den Haken genommen.");
						}
						else if(SpielerInfo[playerid][sFraktion] == 8)//SanNews
						{
							SendClientMessage(playerid,COLOR_WHITE,"/n | /live | /startlotto | /r | /searchwerbetafel | /clearwtafel | /listwtafel | /wtafeltext");
							SendClientMessage(playerid,COLOR_WHITE,"/itstandorte | /getfarbe | /getpapier | /newspaper | /itlager | /newskiosk");
						}
						else if(SpielerInfo[playerid][sFraktion] > 8 && SpielerInfo[playerid][sFraktion] < 19)//Gangs
					    {
							SendClientMessage(playerid,COLOR_WHITE,"/f | /kidnap | /gangfight | /gebietinfo | /ctf | /flock | /members | /letzterfahrer | /gangwars | /fl");
							SendClientMessage(playerid,COLOR_WHITE,"/createdroge | /ernten | /selldrugs | /baseheal | /destroydroge | /gup | /fesseln");
						}
					    else if(SpielerInfo[playerid][sFraktion] == 19)
					    {
 							SendClientMessage(playerid,COLOR_WHITE,"/members | /contracts | /maske | /uad | /f");
					    }
						if(SpielerInfo[playerid][sRank] > 5)
						{
						    if(SpielerInfo[playerid][sFraktion] == 2 || SpielerInfo[playerid][sFraktion] == 6)
						    {
						    	SendClientMessage(playerid,COLOR_WHITE,"Leader Befehle: /frakv | /invite | /uninvite | /fpark | /fcarsell | /pdswat | /clearakte");
						    	SendClientMessage(playerid,COLOR_WHITE,"Leader Befehle: /setrang | /delallnagelband(/danb) | /dellallsperre | /delallschilder | /delpunkte");
						    }
						    else if(SpielerInfo[playerid][sFraktion] >= 9 && SpielerInfo[playerid][sFraktion] != 19)
						    {
						        SendClientMessage(playerid,COLOR_WHITE,"Leader Befehle: /frakv | /invite | /uninvite | /fpark | /fcarsell | /setrang | /gangwar | /maske | /baseheal");
						    }
						    else if(SpielerInfo[playerid][sFraktion] == 19 || SpielerInfo[playerid][sFraktion] == 5)
						    {
						        SendClientMessage(playerid,COLOR_WHITE,"Leader Befehle: /frakv | /invite | /uninvite | /fpark | /fcarsell | /setrang");
		  					}
						}
					}
					case 3://Nebenjob Befehle
					{
					    if(SpielerInfo[playerid][sNebenjob] == 0)return SendClientMessage(playerid,COLOR_RED,"Du besitzt kein Nebenjob.");
					    if(SpielerInfo[playerid][sNebenjob] == 1)//Trucker
					    {
						    SendClientMessage(playerid,COLOR_RED,"=============================== | "SERV_NAME" - Trucker Befehle | ===============================");
						    SendClientMessage(playerid,COLOR_WHITE,"/beliefern | /auffuellen | /jc | /jobbase | /kuendigen");
						}
		    			else if(SpielerInfo[playerid][sNebenjob] == 2)//Pizzabote
					    {
						    SendClientMessage(playerid,COLOR_RED,"=============================== | "SERV_NAME" - Pizzabote Befehle | ===============================");
						    SendClientMessage(playerid,COLOR_WHITE,"/pizza | /reinlegen | /ausliefern | /jc | /jobbase | /kuendigen");
						}
						else if(SpielerInfo[playerid][sNebenjob] == 3)//Kehrmaschinenfahrer
					    {
						    SendClientMessage(playerid,COLOR_RED,"=============================== | "SERV_NAME" - Kehrmaschinenfahrer Befehle | ===============================");
						    SendClientMessage(playerid,COLOR_WHITE,"/startjob | /jc | /jobbase | /kuendigen");
						}
						else if(SpielerInfo[playerid][sNebenjob] == 4)//Pilot
					    {
						    SendClientMessage(playerid,COLOR_RED,"=============================== | "SERV_NAME" - Pilot Befehle | ===============================");
						    SendClientMessage(playerid,COLOR_WHITE,"/startjob | /jc | /jobbase | /kuendigen");
						}
						else if(SpielerInfo[playerid][sNebenjob] == 5)//Busfahrer
					    {
						    SendClientMessage(playerid,COLOR_RED,"=============================== | "SERV_NAME" - Busfahrer Befehle | ===============================");
						    SendClientMessage(playerid,COLOR_WHITE,"/startjob | /jc | /jobbase | /kuendigen");
						}
						else if(SpielerInfo[playerid][sNebenjob] == 6)//Müllmann
					    {
						    SendClientMessage(playerid,COLOR_RED,"=============================== | "SERV_NAME" - Müllmann Befehle | ===============================");
						    SendClientMessage(playerid,COLOR_WHITE,"/startjob | /jc | /jobbase | /kuendigen");
						}
						else if(SpielerInfo[playerid][sNebenjob] == 7)//Landwirt
					    {
						    SendClientMessage(playerid,COLOR_RED,"=============================== | "SERV_NAME" - Landwirt Befehle | ===============================");
						    SendClientMessage(playerid,COLOR_WHITE,"/startjob | /jc | /jobbase | /kuendigen");
						}
						else if(SpielerInfo[playerid][sNebenjob] == 10)//Geldlieferant
					    {
					    	SendClientMessage(playerid,COLOR_RED,"=============================== | "SERV_NAME" - Geldlieferant Befehle | ===============================");
						    SendClientMessage(playerid,COLOR_WHITE,"/startjob | /jc | /jobbase | /kuendigen | /auffuellen | /atmlist | /geldkoffer | /reinlegen | /beenden");
						}
						else if(SpielerInfo[playerid][sNebenjob] == 11)//Elektriker
					    {
					    	SendClientMessage(playerid,COLOR_RED,"=============================== | "SERV_NAME" - Elektriker Befehle | ===============================");
						    SendClientMessage(playerid,COLOR_WHITE,"/startjob | /jc | /jobbase | /kuendigen | /reparieren | /auftragsliste | /werkzeug | /reinlegen | /beenden");
						}
						else if(SpielerInfo[playerid][sNebenjob] == 12)//Drogendealer
					    {
					    	SendClientMessage(playerid,COLOR_RED,"=============================== | "SERV_NAME" - Drogendealer Befehle | ===============================");
						    SendClientMessage(playerid,COLOR_WHITE,"/selldrugs | /kuendigen");
						}
						else if(SpielerInfo[playerid][sNebenjob] == 13)//Waffendealer
					    {
					    	SendClientMessage(playerid,COLOR_RED,"=============================== | "SERV_NAME" - Waffendealer Befehle | ===============================");
						    SendClientMessage(playerid,COLOR_WHITE,"/giveweapon | /guninfo | /buymats | /matsdealer | /kuendigen");
						}
						else if(SpielerInfo[playerid][sNebenjob] == 14)//Zugfahrer
					    {
					    	SendClientMessage(playerid,COLOR_RED,"=============================== | "SERV_NAME" - Zugfahrer Befehle | ===============================");
						    SendClientMessage(playerid,COLOR_WHITE,"/jobbase | /gueter | /kuendigen");
						}
						else if(SpielerInfo[playerid][sNebenjob] == 15)//Detektiv
					    {
					    	SendClientMessage(playerid,COLOR_RED,"=============================== | "SERV_NAME" - Detektiv Befehle | ===============================");
						    SendClientMessage(playerid,COLOR_WHITE,"/horten | /kuendigen");
						}
						else if(SpielerInfo[playerid][sNebenjob] == 16)//Langstreckenfahrer
					    {
					    	SendClientMessage(playerid,COLOR_RED,"=============================== | "SERV_NAME" - Langstreckenfahrer Befehle | ===============================");
						    SendClientMessage(playerid,COLOR_WHITE,"/jobbase | /truck | /kuendigen");
						}
						else if(SpielerInfo[playerid][sNebenjob] == 17)//Fluglieferant
					    {
					    	SendClientMessage(playerid,COLOR_RED,"=============================== | "SERV_NAME" - Fluglieferant Befehle | ===============================");
						    SendClientMessage(playerid,COLOR_WHITE,"/kuendigen | Um einen Auftrag zu starten, setze dich einfach in ein Jobfahrzeug");
						}
						else if(SpielerInfo[playerid][sNebenjob] == 18)//Hochseefischer
					    {
					    	SendClientMessage(playerid,COLOR_RED,"=============================== | "SERV_NAME" - Hochseefischer Befehle | ===============================");
						    SendClientMessage(playerid,COLOR_WHITE,"/kuendigen | /fishing");
						}
					}
					case 4://Fahrzeug Befehle
					{
					    SendClientMessage(playerid,COLOR_RED,"======================================== | "SERV_NAME" - Fahrzeug Befehle | ========================================");
					    SendClientMessage(playerid,COLOR_WHITE,"/fahrzeug | /motor | /licht | /carradio | /carsell | /tanken | /kanister | /ktanken | /tuningmelden | /fahrzeugschein");
	    				SendClientMessage(playerid,COLOR_RED,"Private Fahrzeuge: /parken | /carlock | /givecarkey | /takecarkey | /throwcarkey | /carlist");
					}
					case 5://Geschäft Befehle
					{
         				if(SpielerInfo[playerid][sTankstelle] != 0 || SpielerInfo[playerid][sAmmunation] != 0 || SpielerInfo[playerid][sStore] != 0)
         				{
	         				SendClientMessage(playerid,COLOR_RED,"=============================== | "SERV_NAME" - Geschäft Befehle | ===============================");
	         				SendClientMessage(playerid,COLOR_WHITE,"/verwaltung");
						}
						else SendClientMessage(playerid,COLOR_GREY,"[Info]: Du besitzt kein Geschäft.");
					}
					case 6://Gruppen Befehle
					{
					    if(SpielerInfo[playerid][sGruppe] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist in keiner Gruppe.");
					    if(SpielerInfo[playerid][sGruppe] == 0)return SendClientMessage(playerid,COLOR_GREY,"[Info]: Du bist in keiner Gruppe.");
					    if(SpielerInfo[playerid][sGRank] < 6)
		 				{
							SendClientMessage(playerid,COLOR_RED,"=============================== | "SERV_NAME" - Gruppen Befehle | ===============================");
							SendClientMessage(playerid,COLOR_WHITE,"/glock | /gmembers | /gc");
						}
						else
						{
							SendClientMessage(playerid,COLOR_RED,"=============================== | "SERV_NAME" - Gruppen Befehle | ===============================");
							SendClientMessage(playerid,COLOR_WHITE,"/glock | /gmembers | /gpark | /gruppenv | /ginvite | /guninvite | /setgrang | /gc");
						}
					}
					case 7://Garagen Befehle
					{
						SendClientMessage(playerid,COLOR_RED,"=============================== | "SERV_NAME" - Garagen Befehle | ===============================");
						SendClientMessage(playerid,COLOR_WHITE,"/garage | /verwaltung [Garage] | /kaufen [Garage]");
					}
					case 8://Haus Befehle
					{
						SendClientMessage(playerid,COLOR_RED,"=============================== | "SERV_NAME" - Haus Befehle | ===============================");
						SendClientMessage(playerid,COLOR_WHITE,"/kaufen [Haus] | /verkaufen [Haus] | /verwaltung [Haus] | /heilen");
					}
					case 9://Handy Befehle
					{
						SendClientMessage(playerid,COLOR_RED,"=============================== | "SERV_NAME" - Handy Befehle | ===============================");
						SendClientMessage(playerid,COLOR_WHITE,"/guthaben | /nummer | /anrufen | /auflegen | /sms | /kontakte");
					}
				}
		    }
		}
		case DIALOG_FREIKAUFEN:
		{
		    if(response==0){}//Abbrechen
		    else if(response==1)
		    {
				new vstelledialog[340], merker = true, count = 0, string[364], var[64];
				switch(listitem)
				{
					case 0://Fraktionsfahrzeug
					{
     					mysql_format(sqlHandle, string, sizeof(string),"SELECT * FROM `vehicles` WHERE `Fraktion` = '%d' AND `Abgeschleppt` = '1'", SpielerInfo[playerid][sFraktion]);
    					new Cache:result = mysql_query(sqlHandle, string);
    					
						for(new i = 0; i < cache_num_rows(); i++)
						{
						 	merker = false;
          					cache_get_value_name(i, "ModelID",var); FreikaufModelID[playerid][count] = strval(var);
          					cache_get_value_name(i, "ID",var); FreikaufDatabaseID[playerid][count] = strval(var);
						  	count++;
						}
						cache_delete(result);
						for(new i=0;i<count;i++)
						{
 							new str[4], iValue = FreikaufModelID[playerid][i];
							valstr(str,iValue);
							new Freikaufpreis = mysql_GetInt("carinfos", "Freikaufpreis", "ModelID", str);
							format(vstelledialog,sizeof vstelledialog,"%s\n%s		| Kosten: {D70000}%d$",vstelledialog,FahrzeugName[FreikaufModelID[playerid][i]-400],Freikaufpreis);
						}
						if(merker)
						{
						    SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Es befindet sich kein Fraktionsfahrzeug in der Verwahrstelle.");
						    return 1;
	  					}
		    			ShowPlayerDialog(playerid,DIALOG_FREIKAUFEN_FAHRZEUG,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwahrstelle",vstelledialog,"Freikaufen","Abbrechen");
					    return 1;
					}
					case 1://Privatfahrzeug
					{
     					mysql_format(sqlHandle, string, sizeof(string),"SELECT * FROM `vehicles` WHERE `Besitzer` = '%s' AND `Abgeschleppt` = '1'", SpielerInfo[playerid][sName]);
    					new Cache:result = mysql_query(sqlHandle, string);
    					
						for(new i = 0; i < cache_num_rows(); i++)
						{
						 	merker = false;
          					cache_get_value_name(i, "ModelID",var); FreikaufModelID[playerid][count] = strval(var);
          					cache_get_value_name(i, "ID",var); FreikaufDatabaseID[playerid][count] = strval(var);
						  	count++;
						}
						cache_delete(result);
						for(new i=0;i<count;i++)
						{
 							new str[4], iValue = FreikaufModelID[playerid][i];
							valstr(str,iValue);
							new Freikaufpreis = mysql_GetInt("carinfos", "Freikaufpreis", "ModelID", str);
							format(vstelledialog,sizeof vstelledialog,"%s\n%s		| Kosten: {D70000}%d$",vstelledialog,FahrzeugName[FreikaufModelID[playerid][i]-400],Freikaufpreis);
						}
						if(merker)
						{
						    SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Es befindet sich kein Privatfahrzeug in der Verwahrstelle.");
						    return 1;
	  					}
		    			ShowPlayerDialog(playerid,DIALOG_FREIKAUFEN_FAHRZEUG,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwahrstelle",vstelledialog,"Freikaufen","Abbrechen");
					    return 1;
					}
					case 2://Gruppenfahrzeug
					{
					    if(SpielerInfo[playerid][sGruppe] < 1)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist in keiner Gruppe.");
     					mysql_format(sqlHandle, string, sizeof(string),"SELECT * FROM `vehicles` WHERE `Gruppe` = '%d' AND `Abgeschleppt` = '1'", SpielerInfo[playerid][sGruppe]);
    					new Cache:result = mysql_query(sqlHandle, string);
    					
						for(new i = 0; i < cache_num_rows(); i++)
						{
						 	merker = false;
          					cache_get_value_name(i, "ModelID",var); FreikaufModelID[playerid][count] = strval(var);
          					cache_get_value_name(i, "ID",var); FreikaufDatabaseID[playerid][count] = strval(var);
						  	count++;
						}
						cache_delete(result);
						for(new i=0;i<count;i++)
						{
 							new str[4], iValue = FreikaufModelID[playerid][i];
							valstr(str,iValue);
							new Freikaufpreis = mysql_GetInt("carinfos", "Freikaufpreis", "ModelID", str);
							format(vstelledialog,sizeof vstelledialog,"%s\n%s		| Kosten: {D70000}%d$",vstelledialog,FahrzeugName[FreikaufModelID[playerid][i]-400],Freikaufpreis);
						}
						if(merker)
						{
						    SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Es befindet sich kein Gruppenfahrzeug in der Verwahrstelle.");
						    return 1;
	  					}
		    			ShowPlayerDialog(playerid,DIALOG_FREIKAUFEN_FAHRZEUG,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwahrstelle",vstelledialog,"Freikaufen","Abbrechen");
					    return 1;
					}
				}
			}
		}
		case DIALOG_TOG:
	    {
	        if(response==0){}//Zurück
			else if(response==1)//Weiter
			{
			    switch(listitem)
			    {
			        case 0://OOC
			        {
			            new string[128];
			            if(GlobalVars[OOC] == 0)
			            {
			                format(string,sizeof(string),"%s %s hat den OOC Chat angeschaltet.",AdminName(playerid),SpielerInfo[playerid][sName]);
							SendClientMessageToAll(COLOR_INFO,string);
							GlobalVars[OOC] = 1;
							return 1;
						}
						else
   						{
         					format(string,sizeof(string),"%s %s hat den OOC Chat ausgeschaltet.",AdminName(playerid),SpielerInfo[playerid][sName]);
							SendClientMessageToAll(COLOR_INFO,string);
							GlobalVars[OOC] = 0;
   						}
					}
     				case 1://Werbung
			        {
			            new string[128];
			            if(GlobalVars[Werbung] == 0)
			            {
			                format(string,sizeof(string),"%s %s hat die Werbung deaktiviert.",AdminName(playerid),SpielerInfo[playerid][sName]);
							SendClientMessageToAll(COLOR_INFO,string);
							GlobalVars[Werbung] = 1;
							return 1;
						}
						else
   						{
         					format(string,sizeof(string),"%s %s hat die Werbung aktiviert.",AdminName(playerid),SpielerInfo[playerid][sName]);
							SendClientMessageToAll(COLOR_INFO,string);
							GlobalVars[Werbung] = 0;
   						}
					}
					case 2://Double-EXP
			        {
			            new string[128];
			            if(GlobalVars[DoubleEXP] == true)
			            {
			                format(string,sizeof(string),"[Double-EXP]: {FFFFFF}%s %s hat die Double-EXP Phase deaktiviert.",AdminName(playerid),SpielerInfo[playerid][sName]);
							SendClientMessageToAll(COLOR_INFO,string);
							GlobalVars[DoubleEXP] = false;
							foreach(new i : Player)
							{
								TextDrawHideForPlayer(i, DoubleEXPTD[0]);
								TextDrawHideForPlayer(i, DoubleEXPTD[1]);
							}
							SendRconCommand("hostname "SERV_STAG" "SERV_NAME" - "SERV_SLOG"");
							mysql_SetInt("allgemein", "DoubleEXP", 0, "ServerID", "1");
							return 1;
						}
						else
   						{
         					format(string,sizeof(string),"[Double-EXP]: {FFFFFF}%s %s hat die Double-EXP Phase aktiviert.",AdminName(playerid),SpielerInfo[playerid][sName]);
							SendClientMessageToAll(COLOR_INFO,string);
							SendClientMessageToAll(COLOR_INFO,"[Double-EXP]: {FFFFFF}Absofort erhält man die doppelte Menge an gesammelten Erfahrungspunkten!");
							GlobalVars[DoubleEXP] = true;
							TextDrawSetString(DoubleEXPTD[0], "! Double EXP Event !");
							TextDrawSetString(DoubleEXPTD[1], "! Double EXP Event !");
							foreach(new i : Player)
							{
								TextDrawShowForPlayer(i, DoubleEXPTD[0]);
								TextDrawShowForPlayer(i, DoubleEXPTD[1]);
							}
							SendRconCommand("hostname "SERV_STAG" "SERV_NAME" - "SERV_SLOG" - DOUBLE EXP");
							mysql_SetInt("allgemein", "DoubleEXP", 1, "ServerID", "1");
   						}
					}
					case 3://Easter Event
					{
						new string[128];
			            if(GlobalVars[EasterEvent] == true)
			            {
			                format(string,sizeof(string),"[OsterEvent]: {FFFFFF}%s %s hat das OsterEvent deaktiviert.",AdminName(playerid),SpielerInfo[playerid][sName]);
							SendClientMessageToAll(COLOR_INFO,string);
							GlobalVars[EasterEvent] = false;

							foreach(new i : Player)
							{
 								TextDrawHideForPlayer(i, DoubleEXPTD[0]);
	    						TextDrawHideForPlayer(i, DoubleEXPTD[1]);
							}

							Easter_OnGamemodeExit();

							SendRconCommand("hostname "SERV_STAG" "SERV_NAME" - "SERV_SLOG"");
							mysql_SetInt("allgemein", "EasterEvent", 0, "ServerID", "1");
							return 1;
						}
						else
   						{
         					format(string,sizeof(string),"[EasterEvent]: {FFFFFF}%s %s hat das OsterEvent aktiviert.",AdminName(playerid),SpielerInfo[playerid][sName]);
							SendClientMessageToAll(COLOR_INFO,string);
							GlobalVars[EasterEvent] = true;

							TextDrawSetString(DoubleEXPTD[0], "! Oster-Event !");
							TextDrawSetString(DoubleEXPTD[1], "! Oster-Event !");

							foreach(new i : Player)
							{
								TextDrawShowForPlayer(i, DoubleEXPTD[0]);
								TextDrawShowForPlayer(i, DoubleEXPTD[1]);
							}

							Easter_OnGameModeInit();

							SendRconCommand("hostname "SERV_STAG" "SERV_NAME" - OSTER-EVENT");
							mysql_SetInt("allgemein", "EasterEvent", 1, "ServerID", "1");
   						}
					}
					case 4: {
						new string[128];

						if(GlobalVars[HalloweenEvent]) {
							
							format(string,sizeof(string),"[HalloweenEvent]: {FFFFFF}%s %s hat das Halloween Event deaktiviert.",AdminName(playerid),SpielerInfo[playerid][sName]);
							SendClientMessageToAll(COLOR_INFO,string);

							foreach(new i : Player)
							{
 								TextDrawHideForPlayer(i, DoubleEXPTD[0]);
	    						TextDrawHideForPlayer(i, DoubleEXPTD[1]);
							}

							GlobalVars[HalloweenEvent] = false;

							ExitHalloweenEvent();

							SendRconCommand("hostname "SERV_STAG" "SERV_NAME" - "SERV_SLOG"");
							mysql_SetInt("allgemein", "HalloweenEvent", 0, "ServerID", "1");
						} else {
							format(string,sizeof(string),"[HalloweenEvent]: {FFFFFF}%s %s hat das Halloween Event aktiviert.",AdminName(playerid),SpielerInfo[playerid][sName]);
							SendClientMessageToAll(COLOR_INFO,string);

							TextDrawSetString(DoubleEXPTD[0], "! HALLOWEEN !");
							TextDrawSetString(DoubleEXPTD[1], "! HALLOWEEN !");

							foreach(new i : Player)
							{
								TextDrawShowForPlayer(i, DoubleEXPTD[0]);
								TextDrawShowForPlayer(i, DoubleEXPTD[1]);
							}

							GlobalVars[HalloweenEvent] = true;

							InitHalloweenEvent();

							SendRconCommand("hostname "SERV_STAG" "SERV_NAME" - HALLOWEEN-EVENT");
							mysql_SetInt("allgemein", "HalloweenEvent", 1, "ServerID", "1");
						}
					}
					case 5://WinterMode
			        {
			            new string[128];
			            if(!GlobalVars[WinterMode])
			            {
			                format(string,sizeof(string),"%s %s hat den WinterMode aktiviert.",AdminName(playerid),SpielerInfo[playerid][sName]);
							SendClientMessageToAll(COLOR_INFO,string);
							GlobalVars[WinterMode] = 1;

							mysql_SetInt("allgemein", "WinterMode", 1, "ServerID", "1");

							foreach(new i : Player) {
								Winter_SetSnowflakeStatus(i, true);
								Winter_ShowSnowObjects(i, true);
								Winter_SetColdBreathStatus(i, true);
							}

							return 1;
						}
						else
   						{
         					format(string,sizeof(string),"%s %s hat den WinterMode deaktiviert.",AdminName(playerid),SpielerInfo[playerid][sName]);
							SendClientMessageToAll(COLOR_INFO,string);
							GlobalVars[WinterMode] = 0;

							mysql_SetInt("allgemein", "WinterMode", 0, "ServerID", "1");

							foreach(new i : Player) {
								Winter_SetSnowflakeStatus(i, true);
								Winter_ShowSnowObjects(i, true);
								Winter_SetColdBreathStatus(i, true);
							}
   						}
					}
				}
			}
		}
		case DIALOG_BUYGUN:
	    {
	        if(response==0){}//Zurück
			else if(response==1)//Weiter
			{
				new an = GetPVarInt(playerid,"AmmunationID");
				new string[164];
			    switch(listitem)
       			{
			        case 0://Rüstung
			        {
						if(SpielerInfo[playerid][sFraktion] != 2)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Du musst eine Beamtenmarke vorlegen um eine kugelsichere Weste zu erhalten!");
			            SetPVarInt(playerid,"Buygun",1);
			            if(strlen(AmmunationInfo[an][amBesitzer]) > 2)
			            {
			                if(AmmunationInfo[an][amArmour] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Dieser Waffenladen verkauft keine Rüstung.");
			                format(string,sizeof(string),"Möchtest du dir eine Rüstung für %d$ kaufen ?",AmmunationInfo[an][amArmour]);
			                ShowPlayerDialog(playerid,DIALOG_GUN_KAUFEN,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Waffenladen",string,"Kaufen","Zurück");
			            }
			            else
			            {
			                ShowPlayerDialog(playerid,DIALOG_GUN_KAUFEN,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Waffenladen","Möchtest du dir eine Rüstung für 1.500$ kaufen ?","Kaufen","Zurück");
			            }
			        }
       				case 1://Schlagring
			        {
           				SetPVarInt(playerid,"Buygun",2);
			            if(strlen(AmmunationInfo[an][amBesitzer]) > 2)
			            {
			                if(AmmunationInfo[an][amSchlagring] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Dieser Waffenladen verkauft kein Schlagring.");
			                format(string,sizeof(string),"Möchtest du dir ein Schlagring für %d$ kaufen ?",AmmunationInfo[an][amSchlagring]);
			                ShowPlayerDialog(playerid,DIALOG_GUN_KAUFEN,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Waffenladen",string,"Kaufen","Zurück");
			            }
			            else
			            {
			                ShowPlayerDialog(playerid,DIALOG_GUN_KAUFEN,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Waffenladen","Möchtest du dir ein Schlagring für 1.100$ kaufen ?","Kaufen","Zurück");
			            }
			        }
       				case 2://Messer
			        {
       					SetPVarInt(playerid,"Buygun",3);
			            if(strlen(AmmunationInfo[an][amBesitzer]) > 2)
			            {
			                if(AmmunationInfo[an][amMesser] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Dieser Waffenladen verkauft kein Messer.");
			                format(string,sizeof(string),"Möchtest du dir ein Messer für %d$ kaufen ?",AmmunationInfo[an][amMesser]);
			                ShowPlayerDialog(playerid,DIALOG_GUN_KAUFEN,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Waffenladen",string,"Kaufen","Zurück");
			            }
			            else
			            {
			                ShowPlayerDialog(playerid,DIALOG_GUN_KAUFEN,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Waffenladen","Möchtest du dir ein Messer für 1.200$ kaufen ?","Kaufen","Zurück");
			            }
			        }
					case 3://Baseballschläger
			        {
      					SetPVarInt(playerid,"Buygun",4);
			            if(strlen(AmmunationInfo[an][amBesitzer]) > 2)
			            {
			                if(AmmunationInfo[an][amBaseball] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Dieser Waffenladen verkauft kein Baseballschläger.");
			                format(string,sizeof(string),"Möchtest du dir ein Baseballschläger für %d$ kaufen ?",AmmunationInfo[an][amBaseball]);
			                ShowPlayerDialog(playerid,DIALOG_GUN_KAUFEN,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Waffenladen",string,"Kaufen","Zurück");
			            }
			            else
			            {
			                ShowPlayerDialog(playerid,DIALOG_GUN_KAUFEN,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Waffenladen","Möchtest du dir ein Baseballschläger für 1.200$ kaufen ?","Kaufen","Zurück");
			            }
			        }
       				case 4://Deagle
			        {
			            if(SpielerInfo[playerid][sWeaponLic] < 2)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Du benötigst für diese Waffe eine höhre Waffenschein Klasse!");
       					SetPVarInt(playerid,"Buygun",5);
			            if(strlen(AmmunationInfo[an][amBesitzer]) > 2)
			            {
			                if(AmmunationInfo[an][amDeagle] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Dieser Waffenladen verkauft keine Desert Eagle.");
			                format(string,sizeof(string),"Möchtest du dir eine Desert Eagle für %d$ kaufen ?",AmmunationInfo[an][amDeagle]);
			                ShowPlayerDialog(playerid,DIALOG_GUN_KAUFEN,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Waffenladen",string,"Kaufen","Zurück");
			            }
			            else
			            {
			                ShowPlayerDialog(playerid,DIALOG_GUN_KAUFEN,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Waffenladen","Möchtest du dir eine Desert Eagle für 5.000$ kaufen ?","Kaufen","Zurück");
			            }
			        }
       				case 5://MP5
			        {
			            if(SpielerInfo[playerid][sWeaponLic] < 3)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Du benötigst für diese Waffe eine höhre Waffenschein Klasse!");
      					SetPVarInt(playerid,"Buygun",6);
			            if(strlen(AmmunationInfo[an][amBesitzer]) > 2)
			            {
			                if(AmmunationInfo[an][amMP5] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Dieser Waffenladen verkauft keine MP5.");
			                format(string,sizeof(string),"Möchtest du dir eine MP5 für %d$ kaufen ?",AmmunationInfo[an][amMP5]);
			                ShowPlayerDialog(playerid,DIALOG_GUN_KAUFEN,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Waffenladen",string,"Kaufen","Zurück");
			            }
			            else
			            {
			                ShowPlayerDialog(playerid,DIALOG_GUN_KAUFEN,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Waffenladen","Möchtest du dir eine MP5 für 7.500$ kaufen ?","Kaufen","Zurück");
			            }
			        }
       				case 6://AK-47
			        {
			            if(SpielerInfo[playerid][sWeaponLic] < 3)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Du benötigst für diese Waffe eine höhre Waffenschein Klasse!");
      					SetPVarInt(playerid,"Buygun",7);
			            if(strlen(AmmunationInfo[an][amBesitzer]) > 2)
			            {
			                if(AmmunationInfo[an][amAK] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Dieser Waffenladen verkauft keine AK-47.");
			                format(string,sizeof(string),"Möchtest du dir eine AK-47 für %d$ kaufen ?",AmmunationInfo[an][amAK]);
			                ShowPlayerDialog(playerid,DIALOG_GUN_KAUFEN,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Waffenladen",string,"Kaufen","Zurück");
			            }
			            else
			            {
			                ShowPlayerDialog(playerid,DIALOG_GUN_KAUFEN,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Waffenladen","Möchtest du dir eine AK-47 für 11.000$ kaufen ?","Kaufen","Zurück");
			            }
			        }
       				case 7://M4
			        {
			            if(SpielerInfo[playerid][sWeaponLic] < 3)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Du benötigst für diese Waffe eine höhre Waffenschein Klasse!");
      					SetPVarInt(playerid,"Buygun",8);
			            if(strlen(AmmunationInfo[an][amBesitzer]) > 2)
			            {
			                if(AmmunationInfo[an][amM4] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Dieser Waffenladen verkauft keine M4.");
			                format(string,sizeof(string),"Möchtest du dir eine M4 für %d$ kaufen ?",AmmunationInfo[an][amM4]);
			                ShowPlayerDialog(playerid,DIALOG_GUN_KAUFEN,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Waffenladen",string,"Kaufen","Zurück");
			            }
			            else
			            {
			                ShowPlayerDialog(playerid,DIALOG_GUN_KAUFEN,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Waffenladen","Möchtest du dir eine M4 für 12.000$ kaufen ?","Kaufen","Zurück");
			            }
			        }
       				case 8://Sniper
			        {
			            if(SpielerInfo[playerid][sWeaponLic] < 4)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF} Du benötigst für diese Waffe eine höhre Waffenschein Klasse!");
      					SetPVarInt(playerid,"Buygun",9);
			            if(strlen(AmmunationInfo[an][amBesitzer]) > 2)
			            {
			                if(AmmunationInfo[an][amSniper] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Dieser Waffenladen verkauft keine Sniper.");
			                format(string,sizeof(string),"Möchtest du dir eine Sniper für %d$ kaufen ?",AmmunationInfo[an][amSniper]);
			                ShowPlayerDialog(playerid,DIALOG_GUN_KAUFEN,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Waffenladen",string,"Kaufen","Zurück");
			            }
			            else
			            {
			                ShowPlayerDialog(playerid,DIALOG_GUN_KAUFEN,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Waffenladen","Möchtest du dir eine Sniper für 40.000$ kaufen ?","Kaufen","Zurück");
			            }
			        }
       				case 9://Fallschirm
			        {
      					SetPVarInt(playerid,"Buygun",10);
			            if(strlen(AmmunationInfo[an][amBesitzer]) > 2)
			            {
			                if(AmmunationInfo[an][amFallschirm] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Dieser Waffenladen verkauft keine Fallschirme.");
			                format(string,sizeof(string),"Möchtest du dir ein Fallschirm für %d$ kaufen ?",AmmunationInfo[an][amFallschirm]);
			                ShowPlayerDialog(playerid,DIALOG_GUN_KAUFEN,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Waffenladen",string,"Kaufen","Zurück");
			            }
			            else
			            {
			                ShowPlayerDialog(playerid,DIALOG_GUN_KAUFEN,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Waffenladen","Möchtest du dir ein Fallschirme für 50$ kaufen ?","Kaufen","Zurück");
			            }
			        }
				}
			}
  		}
		case DIALOG_GUN_KAUFEN:
	    {
	        if(response==0){ShowPlayerDialog(playerid,DIALOG_BUYGUN,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Waffenladen","{FFFFFF}Rüstung\nSchlagring\nMesser\nBaseballschläger\nDesert Eagle\nMP5\nAK-47\nM4\nSniper\nFallschirm","Kaufen","Verlassen");}//Zurück
			else if(response==1)//Weiter
			{
			    new string[164], an = GetPVarInt(playerid,"AmmunationID");
			    if(GetPVarInt(playerid,"Buygun") == 1)
			    {
       				if(strlen(AmmunationInfo[an][amBesitzer]) > 2)
           			{
           			    if(GetPlayerMoneyEx(playerid) < AmmunationInfo[an][amArmour])return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
           			    format(string,sizeof(string),"Du hast dir eine Rüstung für %d$ gekauft.",AmmunationInfo[an][amArmour]);
           			    SendClientMessage(playerid,COLOR_SUPER,string);
           			    GivePlayerMoneyEx(playerid,-AmmunationInfo[an][amArmour]);
           			    AmmunationInfo[an][amKasse] += AmmunationInfo[an][amArmour];
           			    SetPlayerArmour(playerid,99.0);
           			}
           			else
           			{
           			    if(GetPlayerMoneyEx(playerid) < 1500)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
           			    SendClientMessage(playerid,COLOR_SUPER,"Du hast dir eine Rüstung für 1500$ gekauft.");
           			    GivePlayerMoneyEx(playerid,-1500);
           			    SetPlayerArmour(playerid,99.0);
           			}
			    }
			    else if(GetPVarInt(playerid,"Buygun") == 2)
	   			{
   					if(strlen(AmmunationInfo[an][amBesitzer]) > 2)
           			{
           			    if(GetPlayerMoneyEx(playerid) < AmmunationInfo[an][amSchlagring])return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
                        if(AmmunationInfo[an][amSchlagring] > 1000 && FrakInfo[SpielerInfo[playerid][sFraktion]][fiAmmunationUpgrade] > 0)
           			    {
           			        SendClientMessage(playerid,COLOR_SUPER,"[Gangupgrade]: {FFFFFF}100$ Rabatt da Gangupgrade erworben.");
           			        GivePlayerMoneyEx(playerid,100);
           			    }
					   	format(string,sizeof(string),"Du hast dir ein Schlagring für %d$ gekauft.",AmmunationInfo[an][amSchlagring]);
           			    SendClientMessage(playerid,COLOR_SUPER,string);
           			    GivePlayerMoneyEx(playerid,-AmmunationInfo[an][amSchlagring]);
           			    AmmunationInfo[an][amKasse] += AmmunationInfo[an][amSchlagring];
           			    GivePlayerWeapon(playerid,WEAPON:1,1);
           			}
           			else
           			{
           			    if(GetPlayerMoneyEx(playerid) < 1100)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
           			    if(FrakInfo[SpielerInfo[playerid][sFraktion]][fiAmmunationUpgrade] > 0)
           			    {
           			        SendClientMessage(playerid,COLOR_SUPER,"[Gangupgrade]: {FFFFFF}100$ Rabatt da Gangupgrade erworben.");
           			        GivePlayerMoneyEx(playerid,100);
           			    }
           			    SendClientMessage(playerid,COLOR_SUPER,"Du hast dir ein Schlagring für 1100$ gekauft.");
           			    GivePlayerMoneyEx(playerid,-1100);
           			    GivePlayerWeapon(playerid,WEAPON:1,1);
           			}
	   			}
			    else if(GetPVarInt(playerid,"Buygun") == 3)
	   			{
   					if(strlen(AmmunationInfo[an][amBesitzer]) > 2)
           			{
           			    if(GetPlayerMoneyEx(playerid) < AmmunationInfo[an][amMesser])return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
                        if(AmmunationInfo[an][amMesser] > 1000 && FrakInfo[SpielerInfo[playerid][sFraktion]][fiAmmunationUpgrade] > 0)
           			    {
           			        SendClientMessage(playerid,COLOR_SUPER,"[Gangupgrade]: {FFFFFF}100$ Rabatt da Gangupgrade erworben.");
           			        GivePlayerMoneyEx(playerid,100);
           			    }
						format(string,sizeof(string),"Du hast dir ein Messer für %d$ gekauft.",AmmunationInfo[an][amMesser]);
           			    SendClientMessage(playerid,COLOR_SUPER,string);
           			    GivePlayerMoneyEx(playerid,-AmmunationInfo[an][amMesser]);
           			    AmmunationInfo[an][amKasse] += AmmunationInfo[an][amMesser];
           			    GivePlayerWeapon(playerid,WEAPON:4,1);
           			}
           			else
           			{
           			    if(GetPlayerMoneyEx(playerid) < 1200)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
           			    if(FrakInfo[SpielerInfo[playerid][sFraktion]][fiAmmunationUpgrade] > 0)
           			    {
           			        SendClientMessage(playerid,COLOR_SUPER,"[Gangupgrade]: {FFFFFF}100$ Rabatt da Gangupgrade erworben.");
           			        GivePlayerMoneyEx(playerid,100);
           			    }
           			    SendClientMessage(playerid,COLOR_SUPER,"Du hast dir ein Messer für 1200$ gekauft.");
           			    GivePlayerMoneyEx(playerid,-1200);
           			    GivePlayerWeapon(playerid,WEAPON:4,1);
           			}
	   			}
			    else if(GetPVarInt(playerid,"Buygun") == 4)
	   			{
   					if(strlen(AmmunationInfo[an][amBesitzer]) > 2)
           			{
           			    if(GetPlayerMoneyEx(playerid) < AmmunationInfo[an][amBaseball])return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
           			    if(AmmunationInfo[an][amBaseball] > 1000 && FrakInfo[SpielerInfo[playerid][sFraktion]][fiAmmunationUpgrade] > 0)
           			    {
           			        SendClientMessage(playerid,COLOR_SUPER,"[Gangupgrade]: {FFFFFF}100$ Rabatt da Gangupgrade erworben.");
           			        GivePlayerMoneyEx(playerid,100);
           			    }
           			    format(string,sizeof(string),"Du hast dir ein Baseballschläger für %d$ gekauft.",AmmunationInfo[an][amBaseball]);
           			    SendClientMessage(playerid,COLOR_SUPER,string);
           			    GivePlayerMoneyEx(playerid,-AmmunationInfo[an][amBaseball]);
           			    AmmunationInfo[an][amKasse] += AmmunationInfo[an][amBaseball];
           			    GivePlayerWeapon(playerid,WEAPON:5,1);
           			    GovVars[govKasse] += 100;
           			    AmmunationInfo[an][amKasse] -= 100;
           			}
           			else
           			{
           			    if(GetPlayerMoneyEx(playerid) < 1200)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
           			    if(FrakInfo[SpielerInfo[playerid][sFraktion]][fiAmmunationUpgrade] > 0)
           			    {
           			        SendClientMessage(playerid,COLOR_SUPER,"[Gangupgrade]: {FFFFFF}100$ Rabatt da Gangupgrade erworben.");
           			        GivePlayerMoneyEx(playerid,100);
           			    }
           			    SendClientMessage(playerid,COLOR_SUPER,"Du hast dir ein Baseballschläger für 1200$ gekauft.");
           			    GivePlayerMoneyEx(playerid,-1200);
           			    GivePlayerWeapon(playerid,WEAPON:5,1);
           			}
   				}
				else if(GetPVarInt(playerid,"Buygun") == 5)
				{
   					if(strlen(AmmunationInfo[an][amBesitzer]) > 2)
           			{
           			    if(GetPlayerMoneyEx(playerid) < AmmunationInfo[an][amDeagle])return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
           			    if(AmmunationInfo[an][amDeagle] > 1000 && FrakInfo[SpielerInfo[playerid][sFraktion]][fiAmmunationUpgrade] > 0)
           			    {
           			        SendClientMessage(playerid,COLOR_SUPER,"[Gangupgrade]: {FFFFFF}100$ Rabatt da Gangupgrade erworben.");
           			        GivePlayerMoneyEx(playerid,100);
           			    }
           			    format(string,sizeof(string),"Du hast dir eine Desert Eagle für %d$ gekauft.",AmmunationInfo[an][amDeagle]);
           			    SendClientMessage(playerid,COLOR_SUPER,string);
           			    GivePlayerMoneyEx(playerid,-AmmunationInfo[an][amDeagle]);
           			    AmmunationInfo[an][amKasse] += AmmunationInfo[an][amDeagle];
           			    GivePlayerWeapon(playerid,WEAPON:24,50);
           			    GovVars[govKasse] += 2500;
           			    AmmunationInfo[an][amKasse] -= 2500;
           			}
           			else
           			{
           			    if(GetPlayerMoneyEx(playerid) < 5000)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
           			    if(FrakInfo[SpielerInfo[playerid][sFraktion]][fiAmmunationUpgrade] > 0)
           			    {
           			        SendClientMessage(playerid,COLOR_SUPER,"[Gangupgrade]: {FFFFFF}100$ Rabatt da Gangupgrade erworben.");
           			        GivePlayerMoneyEx(playerid,100);
           			    }
           			    SendClientMessage(playerid,COLOR_SUPER,"Du hast dir eine Desert Eagle für 5.000$ gekauft.");
           			    GivePlayerMoneyEx(playerid,-5000);
           			    GivePlayerWeapon(playerid,WEAPON:24,50);
           			}
				}
				else if(GetPVarInt(playerid,"Buygun") == 6)
				{
   					if(strlen(AmmunationInfo[an][amBesitzer]) > 2)
           			{
           			    if(GetPlayerMoneyEx(playerid) < AmmunationInfo[an][amMP5])return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
           			    if(AmmunationInfo[an][amMP5] > 1000 && FrakInfo[SpielerInfo[playerid][sFraktion]][fiAmmunationUpgrade] > 0)
           			    {
           			        SendClientMessage(playerid,COLOR_SUPER,"[Gangupgrade]: {FFFFFF}100$ Rabatt da Gangupgrade erworben.");
           			        GivePlayerMoneyEx(playerid,100);
           			    }
           			    format(string,sizeof(string),"Du hast dir eine MP5 für %d$ gekauft.",AmmunationInfo[an][amMP5]);
           			    SendClientMessage(playerid,COLOR_SUPER,string);
           			    GivePlayerMoneyEx(playerid,-AmmunationInfo[an][amMP5]);
           			    AmmunationInfo[an][amKasse] += AmmunationInfo[an][amMP5];
           			    GivePlayerWeapon(playerid,WEAPON:29,200);
           			    GovVars[govKasse] += 3750;
           			    AmmunationInfo[an][amKasse] -= 3750;
           			}
           			else
           			{
           			    if(GetPlayerMoneyEx(playerid) < 7500)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
           			    if(FrakInfo[SpielerInfo[playerid][sFraktion]][fiAmmunationUpgrade] > 0)
           			    {
           			        SendClientMessage(playerid,COLOR_SUPER,"[Gangupgrade]: {FFFFFF}100$ Rabatt da Gangupgrade erworben.");
           			        GivePlayerMoneyEx(playerid,100);
           			    }
           			    SendClientMessage(playerid,COLOR_SUPER,"Du hast dir eine MP5 für 7.500$ gekauft.");
           			    GivePlayerMoneyEx(playerid,-7500);
           			    GivePlayerWeapon(playerid,WEAPON:29,200);
           			}
				}
				else if(GetPVarInt(playerid,"Buygun") == 7)
				{
   					if(strlen(AmmunationInfo[an][amBesitzer]) > 2)
           			{
           			    if(GetPlayerMoneyEx(playerid) < AmmunationInfo[an][amAK])return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
           			    if(AmmunationInfo[an][amAK] > 1000 && FrakInfo[SpielerInfo[playerid][sFraktion]][fiAmmunationUpgrade] > 0)
           			    {
           			        SendClientMessage(playerid,COLOR_SUPER,"[Gangupgrade]: {FFFFFF}100$ Rabatt da Gangupgrade erworben.");
           			        GivePlayerMoneyEx(playerid,100);
           			    }
           			    format(string,sizeof(string),"Du hast dir eine AK-47 für %d$ gekauft.",AmmunationInfo[an][amAK]);
           			    SendClientMessage(playerid,COLOR_SUPER,string);
           			    GivePlayerMoneyEx(playerid,-AmmunationInfo[an][amAK]);
           			    AmmunationInfo[an][amKasse] += AmmunationInfo[an][amAK];
           			    GivePlayerWeapon(playerid,WEAPON:30,300);
           			    GovVars[govKasse] += 5500;
           			    AmmunationInfo[an][amKasse] -= 5500;
           			}
           			else
           			{
           			    if(GetPlayerMoneyEx(playerid) < 11000)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
           			    if(FrakInfo[SpielerInfo[playerid][sFraktion]][fiAmmunationUpgrade] > 0)
           			    {
           			        SendClientMessage(playerid,COLOR_SUPER,"[Gangupgrade]: {FFFFFF}100$ Rabatt da Gangupgrade erworben.");
           			        GivePlayerMoneyEx(playerid,100);
           			    }
           			    SendClientMessage(playerid,COLOR_SUPER,"Du hast dir eine AK-47 für 11.000$ gekauft.");
           			    GivePlayerMoneyEx(playerid,-11000);
           			    GivePlayerWeapon(playerid,WEAPON:30,300);
           			}
				}
				else if(GetPVarInt(playerid,"Buygun") == 8)
				{
   					if(strlen(AmmunationInfo[an][amBesitzer]) > 2)
           			{
           			    if(GetPlayerMoneyEx(playerid) < AmmunationInfo[an][amM4])return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
           			    if(AmmunationInfo[an][amM4] > 1000 && FrakInfo[SpielerInfo[playerid][sFraktion]][fiAmmunationUpgrade] > 0)
           			    {
           			        SendClientMessage(playerid,COLOR_SUPER,"[Gangupgrade]: {FFFFFF}100$ Rabatt da Gangupgrade erworben.");
           			        GivePlayerMoneyEx(playerid,100);
           			    }
           			    format(string,sizeof(string),"Du hast dir eine M4 für %d$ gekauft.",AmmunationInfo[an][amM4]);
           			    SendClientMessage(playerid,COLOR_SUPER,string);
           			    GivePlayerMoneyEx(playerid,-AmmunationInfo[an][amM4]);
           			    AmmunationInfo[an][amKasse] += AmmunationInfo[an][amM4];
           			    GivePlayerWeapon(playerid,WEAPON:31,300);
           			    GovVars[govKasse] += 6000;
           			    AmmunationInfo[an][amKasse] -= 6000;
           			}
           			else
           			{
           			    if(GetPlayerMoneyEx(playerid) < 12000)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
           			    if(FrakInfo[SpielerInfo[playerid][sFraktion]][fiAmmunationUpgrade] > 0)
           			    {
           			        SendClientMessage(playerid,COLOR_SUPER,"[Gangupgrade]: {FFFFFF}100$ Rabatt da Gangupgrade erworben.");
           			        GivePlayerMoneyEx(playerid,100);
           			    }
           			    SendClientMessage(playerid,COLOR_SUPER,"Du hast dir eine M4 für 12.000$ gekauft.");
           			    GivePlayerMoneyEx(playerid,-12000);
           			    GivePlayerWeapon(playerid,WEAPON:31,300);
           			}
				}
				else if(GetPVarInt(playerid,"Buygun") == 9)
				{
   					if(strlen(AmmunationInfo[an][amBesitzer]) > 2)
           			{
           			    if(GetPlayerMoneyEx(playerid) < AmmunationInfo[an][amSniper])return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
           			    if(AmmunationInfo[an][amSniper] > 1000 && FrakInfo[SpielerInfo[playerid][sFraktion]][fiAmmunationUpgrade] > 0)
           			    {
           			        SendClientMessage(playerid,COLOR_SUPER,"[Gangupgrade]: {FFFFFF}100$ Rabatt da Gangupgrade erworben.");
           			        GivePlayerMoneyEx(playerid,100);
           			    }
           			    format(string,sizeof(string),"Du hast dir eine Sniper für %d$ gekauft.",AmmunationInfo[an][amSniper]);
           			    SendClientMessage(playerid,COLOR_SUPER,string);
           			    GivePlayerMoneyEx(playerid,-AmmunationInfo[an][amSniper]);
           			    AmmunationInfo[an][amKasse] += AmmunationInfo[an][amSniper];
           			    GivePlayerWeapon(playerid,WEAPON:34,50);
           			    GovVars[govKasse] += 20000;
           			    AmmunationInfo[an][amKasse] -= 20000;
           			}
           			else
           			{
           			    if(GetPlayerMoneyEx(playerid) < 40000)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
           			    if(FrakInfo[SpielerInfo[playerid][sFraktion]][fiAmmunationUpgrade] > 0)
           			    {
           			        SendClientMessage(playerid,COLOR_SUPER,"[Gangupgrade]: {FFFFFF}100$ Rabatt da Gangupgrade erworben.");
           			        GivePlayerMoneyEx(playerid,100);
           			    }
           			    SendClientMessage(playerid,COLOR_SUPER,"Du hast dir eine Sniper für 40.000$ gekauft.");
           			    GivePlayerMoneyEx(playerid,-40000);
           			    GivePlayerWeapon(playerid,WEAPON:34,50);
           			}
				}
				else if(GetPVarInt(playerid,"Buygun") == 10)
				{
   					if(strlen(AmmunationInfo[an][amBesitzer]) > 2)
           			{
           			    if(GetPlayerMoneyEx(playerid) < AmmunationInfo[an][amFallschirm])return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
           			    if(AmmunationInfo[an][amFallschirm] > 1000 && FrakInfo[SpielerInfo[playerid][sFraktion]][fiAmmunationUpgrade] > 0)
           			    {
           			        SendClientMessage(playerid,COLOR_SUPER,"[Gangupgrade]: {FFFFFF}100$ Rabatt da Gangupgrade erworben.");
           			        GivePlayerMoneyEx(playerid,100);
           			    }
           			    format(string,sizeof(string),"Du hast dir ein Fallschirm für %d$ gekauft.",AmmunationInfo[an][amFallschirm]);
           			    SendClientMessage(playerid,COLOR_SUPER,string);
           			    GivePlayerMoneyEx(playerid,-AmmunationInfo[an][amFallschirm]);
           			    AmmunationInfo[an][amKasse] += AmmunationInfo[an][amFallschirm];
           			    GivePlayerWeapon(playerid,WEAPON:46,1);
           			}
           			else
           			{
           			    if(GetPlayerMoneyEx(playerid) < 50)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
           			    SendClientMessage(playerid,COLOR_SUPER,"Du hast dir ein Fallschirm für 50$ gekauft.");
           			    GivePlayerMoneyEx(playerid,-50);
           			    GivePlayerWeapon(playerid,WEAPON:46,1);
           			}
				}
				DeletePVar(playerid,"Buygun");
				ShowPlayerDialog(playerid,DIALOG_BUYGUN,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Waffenladen","{FFFFFF}Rüstung\nSchlagring\nMesser\nBaseballschläger\nDesert Eagle\nMP5\nAK-47\nM4\nSniper\nFallschirm","Kaufen","Verlassen");
			}
		}
		case DIALOG_GARAGE_VERWALTUNG:
	    {
	        if(response==0){}//Zurück
			else if(response==1)//Weiter
			{
			    new hs = SpielerInfo[playerid][sGarage], string[264];
			    switch(listitem)
       			{
			        case 0://Upgrades
			        {
			            KeineFunktion
					}
     				case 1://Mietbar
			        {
						if(GaragenInfo[hs][giMietbar] == 0)
						{
						    GaragenInfo[hs][giMietbar] = 1;
                        	SendClientMessage(playerid,COLOR_SUPER,"Deine Garage ist nun Mietbar. Bitte denke daran den Mietpreis zu ändern.");
                        	DestroyDynamic3DTextLabel(GaragenInfo[hs][giText]);
                        	GaragenInfo[hs][giText] = Text3D:INVALID_3DTEXT_ID;
			   				format(string, sizeof(string), "Garage 'ID: {FF0000}%d{FFFFFF}'\nBesitzer: {FF0000}%s{FFFFFF}\nMiete: {FF0000}%d${FFFFFF}\nBenutze '{FF0000}/mieten{FFFFFF}' um\ndeine Fahrzeuge hier unterzubringen", hs, GaragenInfo[hs][giBesitzer], GaragenInfo[hs][giMiete]);
                        }
                        else
                        {
						    GaragenInfo[hs][giMietbar] = 0;
                        	SendClientMessage(playerid,COLOR_SUPER,"Deine Garage ist nun nicht mehr Mietbar.");
                        	DestroyDynamic3DTextLabel(GaragenInfo[hs][giText]);
                        	GaragenInfo[hs][giText] = Text3D:INVALID_3DTEXT_ID;
			   				format(string, sizeof(string), "Garage 'ID: {FF0000}%d{FFFFFF}'\nBesitzer: {FF0000}%s", hs, GaragenInfo[hs][giBesitzer]);
						}
						GaragenInfo[hs][giText] = CreateDynamic3DTextLabel(string, COLOR_WHITE, GaragenInfo[hs][giPos_X], GaragenInfo[hs][giPos_Y], GaragenInfo[hs][giPos_Z], 10.0);
						format(string, sizeof(string), "Upgrades\nMietbar: %s\nMiete\n%s\nVerkaufen", GarageMietbar(playerid), GarageLocked(playerid));
						ShowPlayerDialog(playerid,DIALOG_GARAGE_VERWALTUNG,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung",string,"Weiter","Abbrechen");
					}
     				case 2://Miete
			        {
						ShowPlayerDialog(playerid,DIALOG_GARAGE_MIETE,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Bitte gebe unten den Mietpreis an.","Bestätigen","Zurück");
					}
					case 3://Aufschließen/zuschließen
			        {
                        if(GaragenInfo[hs][giLocked] == 1)
                        {
                            SendClientMessage(playerid,COLOR_SUPER,"Du hast deine Garage aufgeschlossen.");
                            GaragenInfo[hs][giLocked] = 0;
                        }
                        else
                        {
							SendClientMessage(playerid,COLOR_SUPER,"Du hast deine Garage abgeschlossen.");
                            GaragenInfo[hs][giLocked] = 1;
                        }
						format(string, sizeof(string), "Upgrades\nMietbar: %s\nMiete\n%s\nVerkaufen", GarageMietbar(playerid), GarageLocked(playerid));
						ShowPlayerDialog(playerid,DIALOG_GARAGE_VERWALTUNG,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung",string,"Weiter","Abbrechen");
					}
     				case 4://Verkaufen
			        {
                        ShowPlayerDialog(playerid,DIALOG_BUSINESS_VERKAUFEN,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Staat\nSpieler","Weiter","Zurück");
					}
				}
			}
		}
		case DIALOG_GARAGE_MIETE:
	    {
	        if(response==0){}//Zurück
			else if(response==1)//Weiter
			{
				new string[224], hs = SpielerInfo[playerid][sGarage];
  				if(strval(inputtext) > 0 && strval(inputtext) < 10000 && IsNumeric(inputtext))
				{
				    GaragenInfo[hs][giMiete] = strval(inputtext);
				    format(string, sizeof(string), "Die Miete beträgt ab sofort %d$.", strval(inputtext));
				    SendClientMessage(playerid,COLOR_SUPER,string);
       				DestroyDynamic3DTextLabel(GaragenInfo[hs][giText]);
       				GaragenInfo[hs][giText] = Text3D:INVALID_3DTEXT_ID;
	   				format(string, sizeof(string), "Garage 'ID: {FF0000}%d{FFFFFF}'\nBesitzer: {FF0000}%s{FFFFFF}\nMiete: {FF0000}%d${FFFFFF}\nBenutze '{FF0000}/mieten{FFFFFF}' um\ndeine Fahrzeuge hier unterzubringen", hs, GaragenInfo[hs][giBesitzer], GaragenInfo[hs][giMiete]);
		   			GaragenInfo[hs][giText] = CreateDynamic3DTextLabel(string, COLOR_WHITE, GaragenInfo[hs][giPos_X], GaragenInfo[hs][giPos_Y], GaragenInfo[hs][giPos_Z], 10.0);
					format(string, sizeof(string), "Upgrades\nMietbar: %s\nMiete\n%s\nVerkaufen", GarageMietbar(playerid), GarageLocked(playerid));
					ShowPlayerDialog(playerid,DIALOG_GARAGE_VERWALTUNG,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung",string,"Weiter","Abbrechen");
				}
			}
		}
		case DIALOG_GHAUS_VERWALTUNG:
	    {
	        if(response==0){}//Zurück
			else if(response==1)//Weiter
			{
			    new hs = SpielerInfo[playerid][sGHaus], string[264];
			    switch(listitem)
       			{
			        case 0://Upgrades
			        {
			            ShowPlayerDialog(playerid,DIALOG_GHAUS_UPGRADES,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Health-Upgrade","Weiter","Zurück");
					}
 					case 1://HausKasse
			        {
                        KeineFunktion
					}
					case 2://Aufschließen/zuschließen
			        {
                        if(HausInfo[hs][hsLocked] == 1)
                        {
                            SendClientMessage(playerid,COLOR_SUPER,"Du hast dein Gruppenhaus aufgeschlossen.");
                            HausInfo[hs][hsLocked] = 0;
                        }
                        else
                        {
							SendClientMessage(playerid,COLOR_SUPER,"Du hast dein Gruppenhaus abgeschlossen.");
                            HausInfo[hs][hsLocked] = 1;
                        }
						format(string, sizeof(string), "Upgrades\nHauskasse\n%s\nAnzeige\nVerkaufen", GHausLocked(playerid));
						ShowPlayerDialog(playerid,DIALOG_GHAUS_VERWALTUNG,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung",string,"Weiter","Abbrechen");
					}
					case 3://Anzeige
					{
					    ShowPlayerDialog(playerid,DIALOG_GHAUS_ANZEIGE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Eigener Name\nGruppenname","Weiter","Zurück");
					}
     				case 4://Verkaufen
			        {
                        ShowPlayerDialog(playerid,DIALOG_BUSINESS_VERKAUFEN,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Staat\nSpieler","Weiter","Zurück");
					}
				}
			}
		}
		case DIALOG_GHAUS_ANZEIGE:
		{
		    if(response==0)//Zurück
			{
			    new string[128];
				format(string, sizeof(string), "Upgrades\nHauskasse\n%s\nAnzeige\nVerkaufen", GHausLocked(playerid));
				ShowPlayerDialog(playerid,DIALOG_GHAUS_VERWALTUNG,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung",string,"Weiter","Abbrechen");
			}
		    else if(response==1)//Weiter
		    {
		        new hs = SpielerInfo[playerid][sGHaus], Text[128];
		        switch(listitem)
		        {
		            case 0://Eigener Name
		            {
						new hs_mysql[4]; format(hs_mysql,sizeof(hs_mysql),"%i",hs);
					 	mysql_SetInt("hauser", "GruppenAnzeige", 0, "ID", hs_mysql);
						SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Es wird nun dein eigener Name als Besitzer des Hauses angezeigt.");
						if(HausInfo[hs][hsTyp] == 1)//Appartment
					    {
			    			format(Text, sizeof(Text), "Appartment 'ID: {FF0000}%d{FFFFFF}'\nBesitzer: {FF0000}%s", hs, HausInfo[hs][hsBesitzer]);
						}
						else if(HausInfo[hs][hsTyp] == 2)//Haus
			   			{
			   				format(Text, sizeof(Text), "Haus 'ID: {FF0000}%d{FFFFFF}'\nBesitzer: {FF0000}%s", hs, HausInfo[hs][hsBesitzer]);
			   			}
			   			else if(HausInfo[hs][hsTyp] == 3)//Villa
			   			{
			   				format(Text, sizeof(Text), "Villa 'ID: {FF0000}%d{FFFFFF}'\nBesitzer: {FF0000}%s", hs, HausInfo[hs][hsBesitzer]);
			   			}
			   			UpdateDynamic3DTextLabelText(HausInfo[hs][hsText], COLOR_WHITE, Text);
		            }
		            case 1://Gruppennname
		            {
						new hs_mysql[4]; format(hs_mysql,sizeof(hs_mysql),"%i",hs);
						mysql_SetInt("hauser", "Gruppe", SpielerInfo[playerid][sGruppe], "ID", hs_mysql);
					 	mysql_SetInt("hauser", "GruppenAnzeige", 1, "ID", hs_mysql);
					 	HausInfo[hs][hsGruppe] = SpielerInfo[playerid][sGruppe];
						SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Es wird nun der Name deiner Gruppe als Besitzer des Hauses angezeigt.");
						if(HausInfo[hs][hsTyp] == 1)//Appartment
					    {
			    			format(Text, sizeof(Text), "Appartment 'ID: {FF0000}%d{FFFFFF}'\nBesitzer: {FF0000}%s", hs, GruppenInfo[HausInfo[hs][hsGruppe]][gName]);
						}
						else if(HausInfo[hs][hsTyp] == 2)//Haus
			   			{
			   				format(Text, sizeof(Text), "Haus 'ID: {FF0000}%d{FFFFFF}'\nBesitzer: {FF0000}%s", hs, GruppenInfo[HausInfo[hs][hsGruppe]][gName]);
			   			}
			   			else if(HausInfo[hs][hsTyp] == 3)//Villa
			   			{
			   				format(Text, sizeof(Text), "Villa 'ID: {FF0000}%d{FFFFFF}'\nBesitzer: {FF0000}%s", hs, GruppenInfo[HausInfo[hs][hsGruppe]][gName]);
			   			}
			   			UpdateDynamic3DTextLabelText(HausInfo[hs][hsText], COLOR_WHITE, Text);
		            }
		        }
		    }
		}
		case DIALOG_HAUS_VERWALTUNG:
	    {
	        if(response==0){}//Zurück
			else if(response==1)//Weiter
			{
			    new hs = SpielerInfo[playerid][sHaus], string[264];
			    switch(listitem)
       			{
			        case 0://Upgrades
			        {
			            ShowPlayerDialog(playerid,DIALOG_HAUS_UPGRADES,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Health-Upgrade","Weiter","Zurück");
					}
     				case 1://Mietbar
			        {
						if(HausInfo[SpielerInfo[playerid][sHaus]][hsMietbar] == 0)
						{
						    HausInfo[SpielerInfo[playerid][sHaus]][hsMietbar] = 1;
                        	SendClientMessage(playerid,COLOR_SUPER,"Dein Haus ist nun Mietbar. Bitte denke daran den Mietpreis zu ändern.");
                        	DestroyDynamic3DTextLabel(HausInfo[hs][hsText]);
                        	HausInfo[hs][hsText] = Text3D:INVALID_3DTEXT_ID;
    	 					if(HausInfo[hs][hsTyp] == 1)//Appartment
			    			{
			    				format(string, sizeof(string), "Appartment 'ID: {FF0000}%d{FFFFFF}'\nBesitzer: {FF0000}%s{FFFFFF}\nMiete: {FF0000}%d${FFFFFF}\nBenutze '{FF0000}/mieten{FFFFFF}' um\ndich hier einzumieten", hs, HausInfo[hs][hsBesitzer], HausInfo[hs][hsMiete]);
							}
							else if(HausInfo[hs][hsTyp] == 2)//Haus
				   			{
				   				format(string, sizeof(string), "Haus 'ID: {FF0000}%d{FFFFFF}'\nBesitzer: {FF0000}%s{FFFFFF}\nMiete: {FF0000}%d${FFFFFF}\nBenutze '{FF0000}/mieten{FFFFFF}' um\ndich hier einzumieten", hs, HausInfo[hs][hsBesitzer], HausInfo[hs][hsMiete]);
				   			}
				   			else if(HausInfo[hs][hsTyp] == 3)//Villa
				   			{
				   				format(string, sizeof(string), "Villa 'ID: {FF0000}%d{FFFFFF}'\nBesitzer: {FF0000}%s{FFFFFF}\nMiete: {FF0000}%d${FFFFFF}\nBenutze '{FF0000}/mieten{FFFFFF}' um\ndich hier einzumieten", hs, HausInfo[hs][hsBesitzer], HausInfo[hs][hsMiete]);
				   			}
                        }
                        else
                        {
						    HausInfo[SpielerInfo[playerid][sHaus]][hsMietbar] = 0;
                        	SendClientMessage(playerid,COLOR_SUPER,"Dein Haus ist nun nicht mehr Mietbar.");
                        	DestroyDynamic3DTextLabel(HausInfo[hs][hsText]);
                        	HausInfo[hs][hsText] = Text3D:INVALID_3DTEXT_ID;
				    		if(HausInfo[hs][hsTyp] == 1)//Appartment
						    {
				    			format(string, sizeof(string), "Appartment 'ID: {FF0000}%d{FFFFFF}'\nBesitzer: {FF0000}%s", hs, HausInfo[hs][hsBesitzer]);
							}
							else if(HausInfo[hs][hsTyp] == 2)//Haus
				   			{
				   				format(string, sizeof(string), "Haus 'ID: {FF0000}%d{FFFFFF}'\nBesitzer: {FF0000}%s", hs, HausInfo[hs][hsBesitzer]);
				   			}
				   			else if(HausInfo[hs][hsTyp] == 3)//Villa
				   			{
				   				format(string, sizeof(string), "Villa 'ID: {FF0000}%d{FFFFFF}'\nBesitzer: {FF0000}%s", hs, HausInfo[hs][hsBesitzer]);
				   			}
						}
						HausInfo[hs][hsText] = CreateDynamic3DTextLabel(string, COLOR_WHITE, HausInfo[hs][hsPos_X], HausInfo[hs][hsPos_Y], HausInfo[hs][hsPos_Z], 10.0);
						format(string, sizeof(string), "Upgrades\nMietbar: %s\nMiete\nHauskasse\n%s\nVerkaufen", HausMietbar(playerid), HausLocked(playerid));
						ShowPlayerDialog(playerid,DIALOG_HAUS_VERWALTUNG,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung",string,"Weiter","Abbrechen");
					}
     				case 2://Miete
			        {
						ShowPlayerDialog(playerid,DIALOG_HAUS_MIETE,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Bitte gebe unten den Mietpreis an.","Bestätigen","Zurück");
					}
 					case 3://HausKasse
			        {
                        KeineFunktion
					}
					case 4://Aufschließen/zuschließen
			        {
                        if(HausInfo[SpielerInfo[playerid][sHaus]][hsLocked] == 1)
                        {
                            SendClientMessage(playerid,COLOR_SUPER,"Du hast dein Haus aufgeschlossen.");
                            HausInfo[SpielerInfo[playerid][sHaus]][hsLocked] = 0;
                        }
                        else
                        {
							SendClientMessage(playerid,COLOR_SUPER,"Du hast dein Haus abgeschlossen.");
                            HausInfo[SpielerInfo[playerid][sHaus]][hsLocked] = 1;
                        }
						format(string, sizeof(string), "Upgrades\nMietbar: %s\nMiete\nHauskasse\n%s\nVerkaufen", HausMietbar(playerid), HausLocked(playerid));
						ShowPlayerDialog(playerid,DIALOG_HAUS_VERWALTUNG,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung",string,"Weiter","Abbrechen");
					}
     				case 5://Verkaufen
			        {
                        ShowPlayerDialog(playerid,DIALOG_BUSINESS_VERKAUFEN,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","Staat\nSpieler","Weiter","Zurück");
					}
				}
			}
		}
		case DIALOG_HAUS_MIETE:
	    {
	        if(response==0)//Zurück
			{
			    new string[200];
                format(string, sizeof(string), "Upgrades\nMietbar: %s\nMiete\nHauskasse\n%s\nVerkaufen", HausMietbar(playerid), HausLocked(playerid));
				ShowPlayerDialog(playerid,DIALOG_HAUS_VERWALTUNG,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung",string,"Weiter","Abbrechen");
			}
			else if(response==1)//Weiter
			{
				new string[224], hs = SpielerInfo[playerid][sHaus];
  				if(strval(inputtext) > 0 && strval(inputtext) < 10000 && IsNumeric(inputtext))
				{
				    HausInfo[SpielerInfo[playerid][sHaus]][hsMiete] = strval(inputtext);
				    format(string, sizeof(string), "Die Miete beträgt ab sofort %d$.", strval(inputtext));
				    SendClientMessage(playerid,COLOR_SUPER,string);
       				DestroyDynamic3DTextLabel(HausInfo[hs][hsText]);
       				HausInfo[hs][hsText] = Text3D:INVALID_3DTEXT_ID;
 					if(HausInfo[hs][hsTyp] == 1)//Appartment
	    			{
	    				format(string, sizeof(string), "Appartment 'ID: {FF0000}%d{FFFFFF}'\nBesitzer: {FF0000}%s{FFFFFF}\nMiete: {FF0000}%d${FFFFFF}\nBenutze '{FF0000}/mieten{FFFFFF}' um\ndich hier einzumieten", hs, HausInfo[hs][hsBesitzer], HausInfo[hs][hsMiete]);
					}
					else if(HausInfo[hs][hsTyp] == 2)//Haus
		   			{
		   				format(string, sizeof(string), "Haus 'ID: {FF0000}%d{FFFFFF}'\nBesitzer: {FF0000}%s{FFFFFF}\nMiete: {FF0000}%d${FFFFFF}\nBenutze '{FF0000}/mieten{FFFFFF}' um\ndich hier einzumieten", hs, HausInfo[hs][hsBesitzer], HausInfo[hs][hsMiete]);
		   			}
		   			else if(HausInfo[hs][hsTyp] == 3)//Villa
		   			{
		   				format(string, sizeof(string), "Villa 'ID: {FF0000}%d{FFFFFF}'\nBesitzer: {FF0000}%s{FFFFFF}\nMiete: {FF0000}%d${FFFFFF}\nBenutze '{FF0000}/mieten{FFFFFF}' um\ndich hier einzumieten", hs, HausInfo[hs][hsBesitzer], HausInfo[hs][hsMiete]);
		   			}
		   			HausInfo[hs][hsText] = CreateDynamic3DTextLabel(string, COLOR_WHITE, HausInfo[hs][hsPos_X], HausInfo[hs][hsPos_Y], HausInfo[hs][hsPos_Z], 10.0);
					format(string, sizeof(string), "Upgrades\nMietbar: %s\nMiete\nHauskasse\n%s\nVerkaufen", HausMietbar(playerid), HausLocked(playerid));
					ShowPlayerDialog(playerid,DIALOG_HAUS_VERWALTUNG,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung",string,"Weiter","Abbrechen");
				}
			}
		}
		case DIALOG_HAUS_UPGRADES:
	    {
	        if(response==0)//Zurück
			{
			    new string[200];
                format(string, sizeof(string), "Upgrades\nMietbar: %s\nMiete\nHauskasse\n%s\nVerkaufen", HausMietbar(playerid), HausLocked(playerid));
				ShowPlayerDialog(playerid,DIALOG_HAUS_VERWALTUNG,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung",string,"Weiter","Abbrechen");
			}
			else if(response==1)//Weiter
			{
			    new string[224], hs = SpielerInfo[playerid][sHaus];
				if(GetPVarInt(playerid,"HausVerwaltung") == 0)
				{
				    if(HausInfo[hs][hsHealth] == 0)
				    {
				        SetPVarInt(playerid,"HausVerwaltung",1);
				        ShowPlayerDialog(playerid,DIALOG_HAUS_UPGRADES,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Möchtest du dir das Heath-Upgrade für {FF0000}3500${FFFFFF} kaufen ?","Ja","Nein");
				    }
				    else
				    {
				        SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Dein Haus besitzt bereits das Health-Upgrade.");
       					format(string, sizeof(string), "Upgrades\nMietbar: %s\nMiete\nHauskasse\n%s\nVerkaufen", HausMietbar(playerid), HausLocked(playerid));
						ShowPlayerDialog(playerid,DIALOG_HAUS_VERWALTUNG,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung",string,"Weiter","Abbrechen");
				    }
				}
				else
				{
					if(SpielerInfo[playerid][sBankkonto] < 3500)
				 	{
	 				    SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld auf dem Konto.");
	 				    DeletePVar(playerid,"HausVerwaltung");
				 	}
	 				else
	 				{
	 				    SpielerInfo[playerid][sBankkonto] -= 3500;
	 				    HausInfo[hs][hsHealth] = 1;
		    			SendClientMessage(playerid,COLOR_SUPER,"Dein Haus besitzt nun das Health-Upgrade. Das Geld wurde von deinem Konto abgebucht.");
	 				    DeletePVar(playerid,"HausVerwaltung");
	 				}
		 			format(string, sizeof(string), "Upgrades\nMietbar: %s\nMiete\nHauskasse\n%s\nVerkaufen", HausMietbar(playerid), HausLocked(playerid));
					ShowPlayerDialog(playerid,DIALOG_HAUS_VERWALTUNG,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung",string,"Weiter","Abbrechen");
				}
			}
		}
		case DIALOG_GHAUS_UPGRADES:
	    {
	        if(response==0){}//Zurück
			else if(response==1)//Weiter
			{
			    new string[224], hs = SpielerInfo[playerid][sGHaus];
				if(GetPVarInt(playerid,"HausVerwaltung") == 0)
				{
				    if(HausInfo[hs][hsHealth] == 0)
				    {
				        SetPVarInt(playerid,"HausVerwaltung",1);
				        ShowPlayerDialog(playerid,DIALOG_GHAUS_UPGRADES,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung","{FFFFFF}Möchtest du dir das Heath-Upgrade für {FF0000}3500${FFFFFF} kaufen ?","Ja","Nein");
				    }
				    else
				    {
				        SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Dein Gruppenhaus besitzt bereits das Health-Upgrade.");
       					format(string, sizeof(string), "Upgrades\nHauskasse\n%s\nAnzeige\nVerkaufen", GHausLocked(playerid));
						ShowPlayerDialog(playerid,DIALOG_GHAUS_VERWALTUNG,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung",string,"Weiter","Abbrechen");
				    }
				}
				else
				{
					if(SpielerInfo[playerid][sBankkonto] < 3500)
				 	{
	 				    SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld auf dem Girokonto.");
	 				    DeletePVar(playerid,"HausVerwaltung");
				 	}
	 				else
	 				{
	 				    SpielerInfo[playerid][sBankkonto] -= 3500;
	 				    HausInfo[hs][hsHealth] = 1;
		    			SendClientMessage(playerid,COLOR_SUPER,"Dein Gruppenhaus besitzt nun das Health-Upgrade. Das Geld wurde von deinem Girokonto abgebucht.");
	 				    DeletePVar(playerid,"HausVerwaltung");
	 				}
		 			format(string, sizeof(string), "Upgrades\nHauskasse\n%s\nAnzeige\nVerkaufen", GHausLocked(playerid));
					ShowPlayerDialog(playerid,DIALOG_GHAUS_VERWALTUNG,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Verwaltung",string,"Weiter","Abbrechen");
				}
			}
		}
		case DIALOG_HAUS_MIETEN:
	    {
	        if(response==0){}//Zurück
			else if(response==1)//Weiter
			{
			    new hs = GetNearHausID(playerid);
				if(SpielerInfo[playerid][sBankkonto] < GetPVarInt(playerid,"MietPreis"))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld auf dem Konto.");
				SpielerInfo[playerid][sBankkonto] -= HausInfo[hs][hsMiete];
                SpielerInfo[playerid][sMieter] = hs;
				SendClientMessage(playerid,COLOR_SUPER,"Herzlichen Glückwunsch zur Wohnung. Das Geld wurde von deinem Konto abgebucht.");
				SendClientMessage(playerid,COLOR_INFO,"Tipp: Benutze '/spawnchange' um dein Spawnpunkt zu ändern.");
			}
		}
		case DIALOG_FRAKKISTE:
		{
			if(response==0){}//Zurück
			else if(response==1)//Weiter
			{
			    new string[164];
				switch(listitem)
				{
				    case 0://Waffen
				    {
 			    		format(string,sizeof(string),"Desert Eagle	(235 Mats)\nMP5		(525 Mats)\nShotgun	(700 Mats)\nAK-47		(950 Mats)\nAlle Waffen	(2.010 Mats)\n{E0E0E0}Materialien vorhanden: %d",FrakInfo[SpielerInfo[playerid][sFraktion]][fiMats]);
 						ShowPlayerDialog(playerid,DIALOG_FRAKKISTE_WAFFEN,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionskiste",string,"Weiter","Abbrechen");
				    }
				    case 1://Drogen
				    {
						ShowPlayerDialog(playerid,DIALOG_FRAKKISTE_DROGEN,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionskiste","Drogen reinlegen\nDrogen nehmen\nDrogen-Stand","Weiter","Abbrechen");
				    }
				    case 2://Materialien
				    {
                        ShowPlayerDialog(playerid,DIALOG_FRAKKISTE_MATS,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionskiste","Materialien reinlegen\nMaterialien-Stand","Weiter","Abbrechen");
				    }
				    case 3://Bombe
				    {
				    	ShowPlayerDialog(playerid,DIALOG_FRAKKISTE_BOMBE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionskiste","Bombe reinlegen\nBombe nehmen\nBomben-Stand","Weiter","Abbrechen");
				    }
				}
			}
		}
		case DIALOG_FRAKKISTE_WAFFEN:
		{
			if(response==0){ShowPlayerDialog(playerid,DIALOG_FRAKKISTE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionskiste","Waffen\nDrogen\nMaterialien\nBombe","Weiter","Zurück");}//Zurück
			else if(response==1)//Weiter
			{
			    new string[164];
				switch(listitem)
				{
				    case 0://Desert Eagle
				    {
				        if(FrakInfo[SpielerInfo[playerid][sFraktion]][fiMats] < 235)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Es sind nicht mehr genügend Materialien vorhanden.");
				        GivePlayerWeapon(playerid,WEAPON:24,60);
				        FrakInfo[SpielerInfo[playerid][sFraktion]][fiMats] -= 235;
                        format(string,sizeof(string),"%s baut sich eine Desert Eagle aus 235 Materialien.",SpielerInfo[playerid][sName]);
						ProxDetector(7.0, playerid, string, 0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA);
				    }
				    case 1://MP5
				    {
				        if(FrakInfo[SpielerInfo[playerid][sFraktion]][fiMats] < 525)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Es sind nicht mehr genügend Materialien vorhanden.");
				        GivePlayerWeapon(playerid,WEAPON:29,400);
				        FrakInfo[SpielerInfo[playerid][sFraktion]][fiMats] -= 525;
                        format(string,sizeof(string),"%s baut sich eine MP5 aus 525 Materialien zusammen.",SpielerInfo[playerid][sName]);
						ProxDetector(7.0, playerid, string, 0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA);
				    }
				    case 2://Shotgun
				    {
				        if(FrakInfo[SpielerInfo[playerid][sFraktion]][fiMats] < 700)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Es sind nicht mehr genügend Materialien vorhanden.");
				        GivePlayerWeapon(playerid,WEAPON:25,90);
				        FrakInfo[SpielerInfo[playerid][sFraktion]][fiMats] -= 700;
                        format(string,sizeof(string),"%s baut sich eine Shotgun aus 700 Materialien zusammen.",SpielerInfo[playerid][sName]);
						ProxDetector(7.0, playerid, string, 0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA);
				    }
				    case 3://AK-47
				    {
				        if(FrakInfo[SpielerInfo[playerid][sFraktion]][fiMats] < 950)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Es sind nicht mehr genügend Materialien vorhanden.");
				        GivePlayerWeapon(playerid,WEAPON:30,600);
				        FrakInfo[SpielerInfo[playerid][sFraktion]][fiMats] -= 950;
                        format(string,sizeof(string),"%s baut sich eine AK-47 aus 950 Materialien zusammen.",SpielerInfo[playerid][sName]);
						ProxDetector(7.0, playerid, string, 0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA);
				    }
				    case 4://Alle Waffen
				    {
				    	if(FrakInfo[SpielerInfo[playerid][sFraktion]][fiMats] < 2410)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Es sind nicht mehr genügend Materialien vorhanden.");
				        GivePlayerWeapon(playerid,WEAPON:24,60);
				        GivePlayerWeapon(playerid,WEAPON:29,400);
				        GivePlayerWeapon(playerid,WEAPON:25,90);
				        GivePlayerWeapon(playerid,WEAPON:30,600);
				        FrakInfo[SpielerInfo[playerid][sFraktion]][fiMats] -= 2410;
                        format(string,sizeof(string),"%s baut sich aus 2.410 Materialien alle Waffen zusammen.",SpielerInfo[playerid][sName]);
						ProxDetector(7.0, playerid, string, 0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA,0xC2A2DAAA);
				    }
				}
	    		format(string,sizeof(string),"Desert Eagle	(235 Mats)\nMP5		(525 Mats)\nShotgun	(700 Mats)\nAK-47		(950 Mats)\nAlle Waffen	(2.410 Mats)\n{E0E0E0}Materialien vorhanden: %d",FrakInfo[SpielerInfo[playerid][sFraktion]][fiMats]);
				ShowPlayerDialog(playerid,DIALOG_FRAKKISTE_WAFFEN,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionskiste",string,"Weiter","Abbrechen");
			}
		}
		case DIALOG_FRAKKISTE_MATS:
		{
			if(response==0){ShowPlayerDialog(playerid,DIALOG_FRAKKISTE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionskiste","Waffen\nDrogen\nMaterialien\nBombe","Weiter","Zurück"); }//Zurück
			else if(response==1)//Weiter
			{
			    new string[150];
				switch(listitem)
				{
				    case 0://Reinlegen
				    {
						if(SpielerInfo[playerid][sMaterialien] != 0)
						{
						    format(string,sizeof(string),"[Info]: {FFFFFF}Du hast {007DFF}%d{FFFFFF} Materialien in die Fraktionskiste gelegt.",SpielerInfo[playerid][sMaterialien]);
						    SendClientMessage(playerid,COLOR_INFO,string);
						    FrakInfo[SpielerInfo[playerid][sFraktion]][fiMats] += SpielerInfo[playerid][sMaterialien];
						    if(GetPVarInt(playerid,"FraktionsMaske") > 0){format(string,sizeof(string),"* Unbekannter legt %d Materialien in die Fraktionskiste.",SpielerInfo[playerid][sMaterialien]);}
						    else format(string,sizeof(string),"* %s %s legt %d Materialien in die Fraktionskiste.",RangName(playerid),SpielerInfo[playerid][sName],SpielerInfo[playerid][sMaterialien]);
							ProxDetector(12, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						    SpielerInfo[playerid][sMaterialien] = 0;
						    ShowPlayerDialog(playerid,DIALOG_FRAKKISTE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionskiste","Waffen\nDrogen\nMaterialien\nBombe","Weiter","Abbrechen");
						}
						else
						{
							SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt keine Waffenteile, die du in die Fraktionskiste legen kannst.");
							ShowPlayerDialog(playerid,DIALOG_FRAKKISTE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionskiste","Waffen\nDrogen\nMaterialien\nBombe","Weiter","Abbrechen");
						}
				    }
				    case 1://Materialien - Stand
				    {
    					format(string,sizeof(string),"[Info]: {FFFFFF}In der Fraktionskiste liegen derzeit {007DFF}%d{FFFFFF} Materialien.",FrakInfo[SpielerInfo[playerid][sFraktion]][fiMats]);
						SendClientMessage(playerid,COLOR_INFO,string);
						ShowPlayerDialog(playerid,DIALOG_FRAKKISTE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionskiste","Waffen\nDrogen\nMaterialien\nBombe","Weiter","Abbrechen");
				    }
				}
			}
		}
        case DIALOG_FRAKKISTE_DROGEN:
		{
			if(response==0){ShowPlayerDialog(playerid,DIALOG_FRAKKISTE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionskiste","Waffen\nDrogen\nMaterialien\nBombe","Weiter","Abbrechen");}//Zurück
			else if(response==1)//Weiter
			{
			    new string[150];
				switch(listitem)
				{
				    case 0://Reinlegen
				    {
				        ShowPlayerDialog(playerid,DIALOG_FRAKKISTE_DROGEN_REIN,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionskiste","Wie viel Gramm möchtest du in die Fraktionskiste legen?","Reinlegen","Zurück");
				    }
				    case 1://Rausholen
				    {
				        ShowPlayerDialog(playerid,DIALOG_FRAKKISTE_DROGEN_RAUS,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionskiste","Wie viel Gramm möchtest du aus der Fraktionskiste rausnehmen?","Rausnehmen","Zurück");
				    }
				    case 2://Drogen - Stand
				    {
    					format(string,sizeof(string),"[Info]: {FFFFFF}In der Fraktionskiste liegen derzeit {007DFF}%dg{FFFFFF} Drogen.",FrakInfo[SpielerInfo[playerid][sFraktion]][fiDrogen]);
						SendClientMessage(playerid,COLOR_INFO,string);
						ShowPlayerDialog(playerid,DIALOG_FRAKKISTE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionskiste","Waffen\nDrogen\nMaterialien\nBombe","Weiter","Abbrechen");
				    }
				}
			}
		}
		case DIALOG_FRAKKISTE_DROGEN_REIN:
		{
		    if(response==0)//Zurück
		    {
		        ShowPlayerDialog(playerid,DIALOG_FRAKKISTE_DROGEN,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionskiste","Drogen reinlegen\nDrogen nehmen\nDrogen-Stand","Weiter","Abbrechen");
		    }
		    else if(response==1)//Reinlegen
		    {
		        if(!IsNumeric(inputtext))return ShowPlayerDialog(playerid,DIALOG_FRAKKISTE_DROGEN_REIN,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionskiste","Wie viel Gramm möchtest du in die Fraktionskiste legen?\n\nUngültiger Wert.","Reinlegen","Zurück");
				if(strval(inputtext) < 1)return ShowPlayerDialog(playerid,DIALOG_FRAKKISTE_DROGEN_REIN,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionskiste","Wie viel Gramm möchtest du in die Fraktionskiste legen?\n\nUngültiger Wert.","Reinlegen","Zurück");
				if(SpielerInfo[playerid][sDrogen] >= strval(inputtext))
				{
				    SpielerInfo[playerid][sDrogen] -= strval(inputtext);
				    FrakInfo[SpielerInfo[playerid][sFraktion]][fiDrogen] += strval(inputtext);
				    new string[128];
				    if(GetPVarInt(playerid,"FraktionsMaske") > 0){format(string,sizeof(string),"* Unbekannter legt %d Gramm Drogen in die Fraktionskiste.",strval(inputtext));}
				    else format(string,sizeof(string),"* %s %s legt %d Gramm Drogen in die Fraktionskiste.",RangName(playerid),SpielerInfo[playerid][sName],strval(inputtext));
					ProxDetector(12, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    ShowPlayerDialog(playerid,DIALOG_FRAKKISTE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionskiste","Waffen\nDrogen\nMaterialien\nBombe","Weiter","Abbrechen");
				}
				else return ShowPlayerDialog(playerid,DIALOG_FRAKKISTE_DROGEN_REIN,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionskiste","Wie viel Gramm möchtest du in die Fraktionskiste legen?\n\nSo viele Drogen hast du nicht bei dir.","Reinlegen","Zurück");
		    }
		}
		case DIALOG_FRAKKISTE_DROGEN_RAUS:
		{
		    if(response==0)//Zurück
		    {
		        ShowPlayerDialog(playerid,DIALOG_FRAKKISTE_DROGEN,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionskiste","Drogen reinlegen\nDrogen nehmen\nDrogen-Stand","Weiter","Abbrechen");
		    }
		    else if(response==1)//Rausnehmen
		    {
		        if(!IsNumeric(inputtext))return ShowPlayerDialog(playerid,DIALOG_FRAKKISTE_DROGEN_RAUS,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionskiste","Wie viel Gramm möchtest du aus der Fraktionskiste rausnehmen?\n\nUngültiger Wert.","Reinlegen","Zurück");
                if(strval(inputtext) < 1)return ShowPlayerDialog(playerid,DIALOG_FRAKKISTE_DROGEN_RAUS,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionskiste","Wie viel Gramm möchtest du aus der Fraktionskiste rausnehmen?\n\nUngültiger Wert.","Reinlegen","Zurück");
				if(FrakInfo[SpielerInfo[playerid][sFraktion]][fiDrogen] >= strval(inputtext))
				{
				    SpielerInfo[playerid][sDrogen] += strval(inputtext);
				    FrakInfo[SpielerInfo[playerid][sFraktion]][fiDrogen] -= strval(inputtext);
				    new string[128];
				    if(GetPVarInt(playerid,"FraktionsMaske") > 0){format(string,sizeof(string),"* Unbekannter nimmt %d Gramm Drogen aus der Fraktionskiste.",strval(inputtext));}
				    else format(string,sizeof(string),"* %s %s nimmt %d Gramm Drogen aus der Fraktionskiste.",RangName(playerid),SpielerInfo[playerid][sName],strval(inputtext));
					ProxDetector(12, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    ShowPlayerDialog(playerid,DIALOG_FRAKKISTE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionskiste","Waffen\nDrogen\nMaterialien\nBombe","Weiter","Abbrechen");
				}
				else return ShowPlayerDialog(playerid,DIALOG_FRAKKISTE_DROGEN_RAUS,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionskiste","Wie viel Gramm möchtest du aus der Fraktionsbox rausnehmen?\n\nSo viele Drogen liegen nicht in der Fraktionskiste.","Reinlegen","Zurück");
		    }
		}
		case DIALOG_FRAKKISTE_BOMBE:
		{
			if(response==0){ShowPlayerDialog(playerid,DIALOG_FRAKKISTE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionskiste","Waffen\nDrogen\nMaterialien\nBombe","Weiter","Abbrechen");}//Zurück
			else if(response==1)//Weiter
			{
			    new string[150];
				switch(listitem)
				{
				    case 0://Reinlegen
				    {
						if(SpielerInfo[playerid][sBombe] > 0)
						{
						    SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Du hast eine Bombe in die Fraktionskiste gelegt.");
						    SpielerInfo[playerid][sBombe] = 0;
						    FrakInfo[SpielerInfo[playerid][sFraktion]][fiBomb] += 1;
				    		if(GetPVarInt(playerid,"FraktionsMaske") > 0){format(string,sizeof(string),"* Unbekannter legt eine Bombe in die Fraktionskiste.");}
				    		else format(string,sizeof(string),"* %s %s legt eine Bombe in die Fraktionskiste.",RangName(playerid),SpielerInfo[playerid][sName],strval(inputtext));
							ProxDetector(12, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						    ShowPlayerDialog(playerid,DIALOG_FRAKKISTE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionskiste","Waffen\nDrogen\nMaterialien\nBombe","Weiter","Abbrechen");
						}
						else
						{
							SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt keine Bombe, die du in die Fraktionskiste legen kannst.");
							ShowPlayerDialog(playerid,DIALOG_FRAKKISTE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionskiste","Waffen\nDrogen\nMaterialien\nBombe","Weiter","Abbrechen");
						}
				    }
				    case 1://Rausholen
				    {
						if(SpielerInfo[playerid][sBombe] == 0)
						{
						    if(SpielerInfo[playerid][sRank] >= 2)
						    {
								if(FrakInfo[SpielerInfo[playerid][sFraktion]][fiBomb] >= 1)
								{
								    SendClientMessage(playerid,COLOR_INFO,"Du hast eine Bombe aus der Fraktionskiste genommen.");
								    FrakInfo[SpielerInfo[playerid][sFraktion]][fiBomb] -= 1;
								    SpielerInfo[playerid][sBombe] = 1;
								    if(GetPVarInt(playerid,"FraktionsMaske") > 0){format(string,sizeof(string),"* Unbekannter nimmt eine Bombe aus der Fraktionskiste.");}
								    else format(string,sizeof(string),"* %s %s nimmt eine Bombe aus der Fraktionskiste.",RangName(playerid),SpielerInfo[playerid][sName],strval(inputtext));
									ProxDetector(12, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
								    ShowPlayerDialog(playerid,DIALOG_FRAKKISTE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionskiste","Waffen\nDrogen\nMaterialien\nBombe","Weiter","Abbrechen");
								}
								else
								{
				    				SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Es befindet sich keine Bombe in der Fraktionskiste.");
							    	ShowPlayerDialog(playerid,DIALOG_FRAKKISTE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionskiste","Waffen\nDrogen\nMaterialien\nBombe","Weiter","Abbrechen");
								}
							}
							else
							{
							    SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Nur Mitglieder ab Rang 2 können Bomben aus der Fraktionskiste nehmen.");
							    ShowPlayerDialog(playerid,DIALOG_FRAKKISTE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionskiste","Waffen\nDrogen\nMaterialien\nBombe","Weiter","Abbrechen");
							}
						}
						else
						{
							SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du kannst max. nur eine Bombe tragen.");
							ShowPlayerDialog(playerid,DIALOG_FRAKKISTE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionskiste","Waffen\nDrogen\nMaterialien\nBombe","Weiter","Abbrechen");
						}
				    }
				    case 2://Bomben - Stand
				    {
    					format(string,sizeof(string),"[Info]: {FFFFFF}In der Fraktionskiste liegen derzeit {FF0000}%d{00CDFF} Bomben.",FrakInfo[SpielerInfo[playerid][sFraktion]][fiBomb]);
						SendClientMessage(playerid,COLOR_INFO,string);
						ShowPlayerDialog(playerid,DIALOG_FRAKKISTE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionskiste","Waffen\nDrogen\nMaterialien\nBombe","Weiter","Abbrechen");
				    }
				}
			}
		}
		case DIALOG_FSCHULE_THEORI:
		{
			if(response==0){}//Zurück
			else if(response==1)//Weiter
			{
			    new string[10][164];
				new str[900];
		    	if(GetPVarInt(playerid,"Theori") == 1)
		    	{
					if(GetPVarInt(playerid,"FSchein") == 1 || GetPVarInt(playerid,"FSchein") == 3 || GetPVarInt(playerid,"FSchein") == 4)
					{
	    				SetPVarInt(playerid,"Theori",2);
						format(string[0],164,"{FF0000}~ Straßen-Verkehrs-Ordnung (StVO) ~");
						format(string[1],164,"{FFFFFF}Auf mehrspurigen Straßen gilt das Rechtsfahrgebot. Es darf nur auf der linken Spur überholt werden.");
						format(string[2],164,"{FFFFFF}Auf einspurigen Straßen darf nur überholt werden, wenn man den Gegenverkehr nicht gefährdet.");
						format(string[3],164,"{FFFFFF}An ungeregelten Kreuzungen zählt die Rechtsregel. Absperrungen dürfen nicht ignoriert werden.");
						format(string[4],164,"{FFFFFF}Das überholen von rechts, ist auf allen Straßen verboten.");
						format(string[5],164,"{FFFFFF}In ganz San Andreas gilt das Fahren mit Licht ab 19:00h! Einschalten nicht vergessen!");
						format(str,sizeof str,"%s\n\n%s\n%s\n%s\n%s\n%s",string[0],string[1],string[2],string[3],string[4],string[5]);
						ShowPlayerDialog(playerid,DIALOG_FSCHULE_THEORI,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Fahrschule",str,"Weiter","");
					}
					else if(GetPVarInt(playerid,"FSchein") == 2)
					{
 						SetPVarInt(playerid,"Theori",2);
						format(string[0],164,"{FF0000}~ Flug-Verkehrs-Ordnung (FVO) ~");
						format(string[1],164,"{FFFFFF}Im Flugverkehr gilt das Tiefflugverbot (Mind. doppelte Höhe von dem Gebäude, das überflogen wird). ");
						format(string[2],164,"{FFFFFF}Das Landen von Hubschraubern oder Flugzeugen außerhalb von Landebahnen oder Landeplätzen ist verboten!");
						format(string[3],164,"{FFFFFF}Staatsgebäude wie Polizei,- F.B.I,- oder Regierungseinrichtungen zählen als Flugverbotszone!");
						format(string[4],164,"{FFFFFF}Bei Missachtung der Flugverbotszone kann man mit Wanteds oder gar einem Abschuss rechnen.");
						format(str,sizeof str,"%s\n\n%s\n%s\n%s\n%s",string[0],string[1],string[2],string[3],string[4]);
						ShowPlayerDialog(playerid,DIALOG_FSCHULE_THEORI,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Fahrschule",str,"Weiter","");
					}
		    	}
		    	else if(GetPVarInt(playerid,"Theori") == 2)
		    	{
  					if(GetPVarInt(playerid,"FSchein") == 1 || GetPVarInt(playerid,"FSchein") == 3 || GetPVarInt(playerid,"FSchein") == 4)
					{
			    	    SetPVarInt(playerid,"Theori",3);
			    	    format(string[0],164,"{FF0000}~ Geschwindigkeit ~");
						format(string[1],164,"{FFFFFF}Auf dem Fahrzeug-Tacho wird dir deine aktuelle Geschwindigkeit in KM/H angezeigt.");
						format(string[2],164,"{FFFFFF}Solltest du die maximal erlaubte Geschwindigkeit von 90 KM/H innerhalb der Stadt erreicht haben,");
						format(string[3],164,"{FFFFFF}wird die Tacho-Anzeige mit einer gelben Farbe hinterlegt. Auf Landstraßen und");
						format(string[4],164,"{FFFFFF}Autobahnen gibt es keine Geschwindigkeitsbegrenzung. Die empfohlene maximale");
						format(string[5],164,"{FFFFFF}Geschwindigkeit liegt bei 160 KM/H. Solltest du diese Geschwindigkeit überschreiten,");
						format(string[6],164,"{FFFFFF}wird deine Tacho-Anzeige rot hinterlegt. Drive Safe!");
						format(string[7],164,"{FFFFFF}Weiße, eckige Schilder mit einer schwarzen Zahl am Straßenrand bedeuten dass die auf");
						format(string[8],164,"{FFFFFF}dem Schild angezeigte Zahl die maximal Geschwindigkeit darstellt. Solange bis sie durch ein");
						format(string[9],164,"{FFFFFF}weißes eckiges Schild ohne Zahl aufgehoben wird oder die Straßenführung sich verändert.");
						format(str,sizeof str,"%s\n\n%s\n%s\n%s\n%s\n%s\n%s",string[0],string[1],string[2],string[3],string[4],string[5],string[6]);
						ShowPlayerDialog(playerid,DIALOG_FSCHULE_THEORI,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Fahrschule",str,"Weiter","");
					}
					else if(GetPVarInt(playerid,"FSchein") == 2)
					{
	    				SetPVarInt(playerid,"Theori",3);
			    	    format(string[0],164,"{FF0000}~ Fliegen bei Nacht ~");
						format(string[1],164,"{FFFFFF}In der Nacht ist das Fliegen mit erhöhter Vorsicht erlaubt.");
						format(string[2],164,"{FFFFFF}Polizei und Rettungsdienst-Einheiten sind rund um die Uhr im Einsatz");
						format(string[3],164,"{FFFFFF}und dürfen bei ihrer Arbeit nicht behindert werden!");
						format(string[4],164,"{FFFFFF}Bei Nacht sollte eine Platzrunde um den Flughafen geflogen werden.");
						format(string[5],164,"{FFFFFF}So kann man sich überzeugen, dass die Landebahn auch wirklich frei ist.");
						format(str,sizeof str,"%s\n\n%s\n%s\n%s\n%s\n%s",string[0],string[1],string[2],string[3],string[4],string[5]);
						ShowPlayerDialog(playerid,DIALOG_FSCHULE_THEORI,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Fahrschule",str,"Weiter","");
					}
		    	}
		    	else if(GetPVarInt(playerid,"Theori") == 3)
		    	{
  					if(GetPVarInt(playerid,"FSchein") == 1 || GetPVarInt(playerid,"FSchein") == 3 || GetPVarInt(playerid,"FSchein") == 4)
					{
	                    SetPVarInt(playerid,"Theori",4);
	                    format(string[0],164,"{FF0000}~ Einsatzfahrzeuge ~");
						format(string[1],164,"{FFFFFF}Einsatzfahrzeuge zählen als solche, wenn das Blaulicht und die Sirene eingeschalten sind.");
						format(string[2],164,"{FFFFFF}Sollte ein Einsatzfahrzeug hinter dir fahren, so musst du rechts ran fahren um Platz zu machen.");
						format(string[3],164,"{FFFFFF}Das Blockieren von Einsatzfahrzeugen kann mit dem Entzug des Führerscheins geahndet werden.");
						format(string[4],164,"{FFFFFF}Eine Geldstrafe von bis zu 5000$ kann ebenso verlangt werden.");
						format(str,sizeof str,"%s\n\n%s\n%s\n%s\n%s",string[0],string[1],string[2],string[3],string[4]);
						ShowPlayerDialog(playerid,DIALOG_FSCHULE_THEORI,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Fahrschule",str,"Weiter","");
					}
					else if(GetPVarInt(playerid,"FSchein") == 2)
					{
     					SetPVarInt(playerid,"Theori",4);
			            format(string[0],164,"{FF0000}~ Ende der Theorie ~");
						format(string[1],164,"{FFFFFF}Hoffentlich hast du dir alles mit vollster Aufmerksamkeit durchgelesen und gemerkt. Du");
						format(string[2],164,"{FFFFFF}hast den Crashkurs nun hinter dir. Es folgt jetzt im direkten Anschluss die");
						format(string[3],164,"{FFFFFF}theoretische Prüfung. Bitte beantworte die folgenden Fragen, indem du mit den");
						format(string[4],164,"{FFFFFF}'PFEILTASTEN', die deiner Meinung nach, richtige Antwort auswählst und mit deiner");
						format(string[5],164,"{FFFFFF}'SPRINTTASTE' die Auswahl bestätigst.");
						format(str,sizeof str,"%s\n\n%s\n%s\n%s\n%s\n%s",string[0],string[1],string[2],string[3],string[4],string[5]);
						ShowPlayerDialog(playerid,DIALOG_FSCHULE_THEORI,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Fahrschule",str,"Weiter","");
					}
		    	}
		    	else if(GetPVarInt(playerid,"Theori") == 4)
		    	{
  					if(GetPVarInt(playerid,"FSchein") == 1 || GetPVarInt(playerid,"FSchein") == 3 || GetPVarInt(playerid,"FSchein") == 4)
					{
			    	    SetPVarInt(playerid,"Theori",5);
	                	format(string[0],164,"{FF0000}~ Parkmöglichkeiten ~");
						format(string[1],164,"{FFFFFF}Das Parken deines Fahrzeuges ist lediglich auf Parkplätzen erlaubt. Falls du dein Fahrzeug am");
						format(string[2],164,"{FFFFFF}Seitenrand abstellen möchtest gilt das sogenannte 'Kiss & Ride'-Verfahren. Dies bedeutet");
						format(string[3],164,"{FFFFFF}das du dein Fahrzeug für maximal 3 Minuten dort stehen lassen darfst. Anders ist es wenn");
						format(string[4],164,"{FFFFFF}dein Fahrzeug eine Panne oder keinen Treibstoff mehr hat. Dann hast du sogar die Pflicht das");
						format(string[5],164,"{FFFFFF}Fahrzeug solange an den Rand zu stellen, bis es abgeschleppt wird. Die Polizei sollte informiert werden.");
						format(str,sizeof str,"%s\n\n%s\n%s\n%s\n%s\n%s",string[0],string[1],string[2],string[3],string[4],string[5]);
						ShowPlayerDialog(playerid,DIALOG_FSCHULE_THEORI,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Fahrschule",str,"Weiter","");
					}
					else if(GetPVarInt(playerid,"FSchein") == 2)
					{
  						DeletePVar(playerid,"Theori");
						ShowPlayerMenu(playerid, TEST1_MENU, "Fahrschule", "Fahrschulfragebogen");
					    AddPlayerMenuItem(playerid, "Antwort A", "");
					    AddPlayerMenuItem(playerid, "Antwort B", "");
					    AddPlayerMenuItem(playerid, "Antwort C", "");
						SetPVarInt(playerid,"TheoriTest",1);
						TheoriFlugAufgaben(playerid);
					}
		    	}
		    	else if(GetPVarInt(playerid,"Theori") == 5)
		    	{
                    SetPVarInt(playerid,"Theori",6);
		            format(string[0],164,"{FF0000}~ Ende der Theorie ~");
					format(string[1],164,"{FFFFFF}Hoffentlich hast du dir alles mit vollster Aufmerksamkeit durchgelesen und gemerkt. Du");
					format(string[2],164,"{FFFFFF}hast den Crashkurs nun hinter dir. Es folgt jetzt im direkten Anschluss die");
					format(string[3],164,"{FFFFFF}theoretische Prüfung. Bitte beantworte die folgenden Fragen, indem du mit den");
					format(string[4],164,"{FFFFFF}'PFEILTASTEN', die deiner Meinung nach, richtige Antwort auswählst und mit deiner");
					format(string[5],164,"{FFFFFF}'SPRINTTASTE' die Auswahl bestätigst.");
					format(str,sizeof str,"%s\n\n%s\n%s\n%s\n%s\n%s",string[0],string[1],string[2],string[3],string[4],string[5]);
					ShowPlayerDialog(playerid,DIALOG_FSCHULE_THEORI,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Fahrschule",str,"Weiter","");
		    	}
		    	else if(GetPVarInt(playerid,"Theori") == 6)
		    	{
  	    			DeletePVar(playerid,"Theori");
					ShowPlayerMenu(playerid, TEST1_MENU, "Fahrschule");
				    AddPlayerMenuItem(playerid, "Antwort A", "");
				    AddPlayerMenuItem(playerid, "Antwort B", "");
				    AddPlayerMenuItem(playerid, "Antwort C", "");
					SetPVarInt(playerid,"TheoriTest",1);
					TheoriAufgaben(playerid);
		    	}
			}
		}
		case DIALOG_STADTPLAN:
		{
			if(response==0){}//Zurück
			else if(response==1)//Weiter
			{
				switch(listitem)
				{
				    case 0://Stadthalle
				    {
						SendClientMessage(playerid,COLOR_INFO,"Die Stadthalle wurde dir auf der Minimap rot markiert.");
				        SetPlayerCheckpointEx(playerid,1479.3213,-1738.0897,13.5469,5.0);
					}
	    			case 1://Bank
				    {
  						SendClientMessage(playerid,COLOR_INFO,"Die Bank wurde dir auf der Minimap rot markiert.");
				        SetPlayerCheckpointEx(playerid,1779.4395,-1722.1451,13.5390,5.0);
					}
					case 2://Fahrschule
				    {
						SendClientMessage(playerid,COLOR_INFO,"Die Fahrschule wurde dir auf der Minimap rot markiert.");
				        SetPlayerCheckpointEx(playerid,2114.9937,-1930.7943,13.3838,5.0);
					}
				    case 3://Autohaus - Los Santos
				    {
						SendClientMessage(playerid,COLOR_INFO,"Das Autohaus in Los Santos wurde dir auf der Minimap rot markiert.");
				        SetPlayerCheckpointEx(playerid,1863.7770,-1604.8413,13.5391,5.0);
					}
					case 4://Motorradhändler - Los Santos
				    {
						SendClientMessage(playerid,COLOR_INFO,"Der Motorradhändler in Los Santos wurde dir auf der Minimap rot markiert.");
				        SetPlayerCheckpointEx(playerid,1835.1718,-1397.2781,13.5631,5.0);
					}
	    			case 5://Autohaus - San Fierro
				    {
  						SendClientMessage(playerid,COLOR_INFO,"Das Autohaus in San Fierro wurde dir auf der Minimap rot markiert.");
				        SetPlayerCheckpointEx(playerid,-1551.6277,1168.3820,7.1875,5.0);
					}
					case 6://Paintball Arena
				    {
						SendClientMessage(playerid,COLOR_INFO,"Die Paintball Arena wurde dir auf der Minimap rot markiert.");
				        SetPlayerCheckpointEx(playerid,1024.1968,-968.8276,42.2900,5.0);
					}
				}
			}
		}
		case DIALOG_NAVI:
		{
			if(response==0){}//Zurück
			else if(response==1)//Weiter
			{
				switch(listitem)
				{
				    case 0://Öffentliche Gebäuden
				    {
						ShowPlayerDialog(playerid,DIALOG_NAVI1,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Navi","Stadthalle\nBank\nFahrschule\nPaintball Arena\nOBI Baumarkt\nHelmshop\nLottoladen\nVictim\nSan Andreas Mine\nPlayroom Los Santos\nFahrzeugupgrades\nHolzfäller","Weiter","Zurück");
					}
  					case 1://Nebenjobs
				    {
        				ShowPlayerDialog(playerid,DIALOG_NAVI2,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Navi","Trucker\nPizzabote\nKehrmaschinenfahrer\nPilot\nBusfahrer\nMüllmann\nLandwirt\nGeldlieferant\nElektriker","Weiter","Zurück");
					}
	    			case 2://Autohäuser
				    {
        				ShowPlayerDialog(playerid,DIALOG_NAVI3,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Navi","Autohaus - Los Santos\nAutohaus - San Fierro\nMotorradhändler - Los Santos\nFlugzeug Autohaus - Los Santos\nBootshändler - Los Santos","Weiter","Zurück");
					}
  					case 3://Ammunations
				    {
        				new ammudialog[564];
						for(new amid = 1;amid<MAX_AMMUS;amid++)
					    {
					        if(AmmunationInfo[amid][amErstellt] == false)continue;
        					format(ammudialog,sizeof(ammudialog),"%s\n{FFFFFF}Ammunation: {007DFF}%d{FFFFFF}",ammudialog,amid);
						}
						ShowPlayerDialog(playerid,DIALOG_NAVI4,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Navi",ammudialog,"Marker setzen","Zurück");
					}
					case 4://24/7
				    {
        				new storedialog[564];
						for(new stid = 1;stid<MAX_STORES;stid++)
					    {
							if(StoreInfo[stid][siErstellt] == false)continue;
       						format(storedialog,sizeof(storedialog),"%s\n{FFFFFF}24/7: {007DFF}%d{FFFFFF}",storedialog,stid);
						}
						ShowPlayerDialog(playerid,DIALOG_NAVI5,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Navi",storedialog,"Marker setzen","Zurück");
					}
  					case 5://Tankstellen
				    {
    					new tstelledialog[864];
						for(new tsid = 1;tsid<MAX_TSTELLEN;tsid++)
					    {
							if(TankstellenInfo[tsid][tsErstellt] == false)continue;
       						format(tstelledialog,sizeof(tstelledialog),"%s\n{FFFFFF}Tankstelle: {007DFF}%d{FFFFFF}",tstelledialog,tsid);
						}
						ShowPlayerDialog(playerid,DIALOG_NAVI6,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Navi",tstelledialog,"Marker setzen","Zurück");
					}
  					case 6://Gym
				    {
        				ShowPlayerDialog(playerid,DIALOG_NAVI7,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Navi","Gym - Los Santos\nGym - San Fierro\nGym - Las Venturas","Weiter","Zurück");
					}
					case 7://Immobilien
				    {
        				ShowPlayerDialog(playerid,DIALOG_NAVI8,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Navi","Häuser\nGaragen","Weiter","Zurück");
					}
					case 8://Schwarzmarkt
					{
					    SetPlayerCheckpointEx(playerid,-1634.1162,-2241.6426,31.4766,3.0);
					    SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Der Schwarzmarkt wurde dir auf der Minimap rot markiert.");
					}
				}
			}
		}
		case DIALOG_NAVI1:
		{
			if(response==0){ShowPlayerDialog(playerid,DIALOG_NAVI,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Navi","Öffentliche Gebäuden\nNebenjobs\nAutohäuser\nAmmunations\n24/7\nTankstellen\nGym\nImmobilien\nSchwarzmarkt","Weiter","Zurück");}//Zurück
			else if(response==1)//Weiter
			{
				switch(listitem)
				{
				    case 0://Stadthalle
				    {
						SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Die Stadthalle wurde dir auf der Minimap rot markiert.");
				        SetPlayerCheckpointEx(playerid,1479.3213,-1738.0897,13.5469,5.0);
					}
	    			case 1://Bank
				    {
  						SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Die Bank wurde dir auf der Minimap rot markiert.");
				        SetPlayerCheckpointEx(playerid,1779.4395,-1722.1451,13.5390,5.0);
					}
					case 2://Fahrschule
				    {
						SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Die Fahrschule wurde dir auf der Minimap rot markiert.");
				        SetPlayerCheckpointEx(playerid,2114.9937,-1930.7943,13.3838,5.0);
					}
					case 3://Paintball Arena
				    {
						SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Die Paintball Arena wurde dir auf der Minimap rot markiert.");
				        SetPlayerCheckpointEx(playerid,1024.1968,-968.8276,42.2900,5.0);
					}
					case 4://OBI Baumarkt
				    {
						SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Der OBI Baumarkt wurde dir auf der Minimap rot markiert.");
				        SetPlayerCheckpointEx(playerid,2512.8335,-1520.2406,23.9982,5.0);
					}
					case 5://Helmshop
				    {
						SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Der Helmshop wurde dir auf der Minimap rot markiert.");
				        SetPlayerCheckpointEx(playerid,2512.8335,-1520.2406,23.9982,5.0);
					}
					case 6://Lottoladen
				    {
						SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Der Lottoladen wurde dir auf der Minimap rot markiert.");
				        SetPlayerCheckpointEx(playerid,639.5648,-1358.2751,13.4113,5.0);
					}
					case 7://Victim
				    {
						SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Der Victim wurde dir auf der Minimap rot markiert.");
				        SetPlayerCheckpointEx(playerid,461.4087,-1500.8523,31.0597,5.0);
					}
					case 8://Mine
				    {
						SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Die San Andreas Mine wurde dir auf der Minimap rot markiert.");
				        SetPlayerCheckpointEx(playerid, 817.1186, 856.8585, 12.7891, 5.0);
					}
					case 9: //Playroom Los Santos
					{
						SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Die Beachbar 'Playroom' in Los Santos wurde dir auf der Minimap rot markiert.");
						SetPlayerCheckpointEx(playerid, 334.1801,-1808.2698,4.5069, 5.0);
					}
					case 10: //Fahrzeugupgrades
					{
						SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Der Fahrzeugupgrade Shop wurde dir auf der Minimap rot markiert.");
						SetPlayerCheckpointEx(playerid, 2130.0513,-1144.9211,24.3021, 5.0);
					}
					case 11:
					{
						//ShowWoodBuyersLocationDialog(playerid);
					}
				}
			}
		}
		case DIALOG_NAVI2:
		{
			if(response==0){ShowPlayerDialog(playerid,DIALOG_NAVI,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Navi","Öffentliche Gebäuden\nNebenjobs\nAutohäuser\nAmmunations\n24/7\nTankstellen\nGym\nImmobilien\nSchwarzmarkt","Weiter","Zurück");}//Zurück
			else if(response==1)//Weiter
			{
				switch(listitem)
				{
				    case 0://Trucker
				    {
						SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Der Trucker Job wurde dir auf der Minimap rot markiert.");
				        SetPlayerCheckpointEx(playerid,2221.0283,-2227.3401,13.2517,5.0);
					}
	    			case 1://Pizzabote
				    {
						SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Der Pizzabote Job wurde dir auf der Minimap rot markiert.");
				        SetPlayerCheckpointEx(playerid,2113.1394,-1769.8885,13.0996,5.0);
					}
  					case 2://Kehrmschinenfahrer
				    {
						SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Der Kehrmschinenfahrer Job wurde dir auf der Minimap rot markiert.");
				        SetPlayerCheckpointEx(playerid,1416.9246,-1648.7014,13.3828,5.0);
					}
					case 3://Pilot
				    {
						SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Der Pilot Job wurde dir auf der Minimap rot markiert.");
				        SetPlayerCheckpointEx(playerid,1957.0295,-2183.6008,13.5469,5.0);
					}
					case 4://Busfahrer
				    {
						SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Der Busfahrer Job wurde dir auf der Minimap rot markiert.");
				        SetPlayerCheckpointEx(playerid,1514.1377,-2319.1445,13.3828,5.0);
					}
					case 5://Müllmann
				    {
						SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Der Müllmann Job wurde dir auf der Minimap rot markiert.");
				        SetPlayerCheckpointEx(playerid,1734.5929,-2060.1526,13.5910,5.0);
					}
					case 6://Landwirt
				    {
						SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Der Landwirt Job wurde dir auf der Minimap rot markiert.");
				        SetPlayerCheckpointEx(playerid,-62.7901,76.2742,3.1172,5.0);
					}
					case 7://Geldlieferant
				    {
						SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Der Geldlieferanten Job wurde dir auf der Minimap rot markiert.");
				        SetPlayerCheckpointEx(playerid,1789.4388,-1704.9324,13.5509,5.0);
					}
					case 8://Elektriker
				    {
						SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Der Elektriker Job wurde dir auf der Minimap rot markiert.");
				        SetPlayerCheckpointEx(playerid,2147.0122,-1733.2238,13.5624,5.0);
					}
				}
			}
		}
		case DIALOG_NAVI3:
		{
			if(response==0){ShowPlayerDialog(playerid,DIALOG_NAVI,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Navi","Öffentliche Gebäuden\nNebenjobs\nAutohäuser\nAmmunations\n24/7\nTankstellen\nGym\nImmobilien\nSchwarzmarkt","Weiter","Zurück");}//Zurück
			else if(response==1)//Weiter
			{
				switch(listitem)
				{
				    case 0://Autohaus - Los Santos
				    {
						SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Das Autohaus in Los Santos wurde dir auf der Minimap rot markiert.");
				        SetPlayerCheckpointEx(playerid,1863.7770,-1604.8413,13.5391,5.0);
					}
	    			case 1://Autohaus - San Fierro
				    {
  						SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Das Autohaus in San Fierro wurde dir auf der Minimap rot markiert.");
				        SetPlayerCheckpointEx(playerid,-1551.6277,1168.3820,7.1875,5.0);
					}
					case 2://Motorradhändler - Los Santos
				    {
						SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Der Motorradhändler in Los Santos wurde dir auf der Minimap rot markiert.");
				        SetPlayerCheckpointEx(playerid,1835.1718,-1397.2781,13.5631,5.0);
					}
					case 3://Flugzeug Autohaus - Los Santos
					{
						SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Das Flugzeug Autohaus in Los Santos wurde dir auf der Minimap rot markiert.");
				        SetPlayerCheckpointEx(playerid,595.3383,-1510.0638,15.1829,5.0);
					}
					case 4://Boots Autohaus - Los Santos
					{
						SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Der Bootshändler in Los Santos wurde dir auf der Minimap rot markiert.");
				        SetPlayerCheckpointEx(playerid,2938.4565,-2056.2478,3.5650,5.0);
					}
				}
			}
		}
		case DIALOG_NAVI4:
		{
			if(response==0){ShowPlayerDialog(playerid,DIALOG_NAVI,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Navi","Öffentliche Gebäuden\nNebenjobs\nAutohäuser\nAmmunations\n24/7\nTankstellen\nGym\nImmobilien\nSchwarzmarkt","Weiter","Zurück");}//Zurück
			else if(response==1)//Weiter
			{
			    new str[128], ammuid = listitem;
			    ammuid += 1;
				format(str,sizeof(str),"[Info]: {FFFFFF}Das Ammunation %d wurde dir auf der Minimap rot markiert.",ammuid);
				SendClientMessage(playerid,COLOR_SUPER,str);
				SetPlayerCheckpointEx(playerid,AmmunationInfo[ammuid][amPos_X],AmmunationInfo[ammuid][amPos_Y],AmmunationInfo[ammuid][amPos_Z],5.0);
			}
		}
		case DIALOG_NAVI5:
		{
			if(response==0){ShowPlayerDialog(playerid,DIALOG_NAVI,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Navi","Öffentliche Gebäuden\nNebenjobs\nAutohäuser\nAmmunations\n24/7\nTankstellen\nGym\nImmobilien\nSchwarzmarkt","Weiter","Zurück");}//Zurück
			else if(response==1)//Weiter
			{
			    new str[128], storeid = listitem;
			    storeid += 1;
				format(str,sizeof(str),"[Info]: {FFFFFF}Der 24/7 %d wurde dir auf der Minimap rot markiert.",storeid);
				SendClientMessage(playerid,COLOR_SUPER,str);
				SetPlayerCheckpointEx(playerid,StoreInfo[storeid][siPos_X],StoreInfo[storeid][siPos_Y],StoreInfo[storeid][siPos_Z],5.0);
			}
		}
		case DIALOG_NAVI6:
		{
			if(response==0){ShowPlayerDialog(playerid,DIALOG_NAVI,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Navi","Öffentliche Gebäuden\nNebenjobs\nAutohäuser\nAmmunations\n24/7\nTankstellen\nGym\nImmobilien\nSchwarzmarkt","Weiter","Zurück");}//Zurück
			else if(response==1)//Weiter
			{
			    new str[128], tsid = listitem;
			    tsid += 1;
				format(str,sizeof(str),"[Info]: {FFFFFF}Die Tankstelle %d wurde dir auf der Minimap rot markiert.",tsid);
				SendClientMessage(playerid,COLOR_SUPER,str);
				SetPlayerCheckpointEx(playerid,TankstellenInfo[tsid][tsPos_X],TankstellenInfo[tsid][tsPos_Y],TankstellenInfo[tsid][tsPos_Z],5.0);
			}
		}
		case DIALOG_NAVI7:
		{
			if(response==0){ShowPlayerDialog(playerid,DIALOG_NAVI,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Navi","Öffentliche Gebäuden\nNebenjobs\nAutohäuser\nAmmunations\n24/7\nTankstellen\nGym\nImmobilien\nSchwarzmarkt","Weiter","Zurück");}//Zurück
			else if(response==1)//Weiter
			{
				switch(listitem)
				{
				    case 0://Gym - Los Santos
				    {
						SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Das Gym wurde dir auf der Minimap rot markiert.");
				        SetPlayerCheckpointEx(playerid,2227.0601,-1724.0667,13.5506,5.0);
					}
	    			case 1://Gym - San Fierro
				    {
  						SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Das Gym wurde dir auf der Minimap rot markiert.");
				        SetPlayerCheckpointEx(playerid,-2266.7964,-155.8903,35.3203,5.0);
					}
					case 2://Gym - Las Venturas
				    {
						SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Das Gym wurde dir auf der Minimap rot markiert.");
				        SetPlayerCheckpointEx(playerid,1953.9388,2294.3423,10.8203,5.0);
					}
				}
			}
		}
		case DIALOG_NAVI8:
		{
			if(response==0){ShowPlayerDialog(playerid,DIALOG_NAVI,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Navi","Öffentliche Gebäuden\nNebenjobs\nAutohäuser\nAmmunations\n24/7\nTankstellen\nGym\nImmobilien\nSchwarzmarkt","Weiter","Zurück");}//Zurück
			else if(response==1)//Weiter
			{
				switch(listitem)
				{
				    case 0://Häuser
				    {
						SetPVarInt(playerid,"NaviSearch",1);
						ShowPlayerDialog(playerid,DIALOG_NAVI_SEARCH,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Navi","{FFFFFF}Tippe bitte die Haus ID unten ein:","Wegpunkt","Zurück");
					}
	    			case 1://Garagen
				    {
				        SetPVarInt(playerid,"NaviSearch",2);
				        ShowPlayerDialog(playerid,DIALOG_NAVI_SEARCH,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Navi","{FFFFFF}Tippe bitte die Garagen ID unten ein:","Wegpunkt","Zurück");
					}
				}
			}
		}
		case DIALOG_NAVI_SEARCH:
		{
			if(response==0){DeletePVar(playerid,"NaviSearch"); ShowPlayerDialog(playerid,DIALOG_NAVI8,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Navi","Häuser\nGaragen","Weiter","Zurück");}
		    else if(response==1)
	    	{
      			if(strlen(inputtext) > 0 && strlen(inputtext) < 3000)
		        {
		            if(GetPVarInt(playerid,"NaviSearch") == 1) //Haus
		            {
		                if(HausInfo[strlen(inputtext)][hsErstellt] == false)return ShowPlayerDialog(playerid,DIALOG_NAVI_SEARCH,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Navi","{FFFFFF}Tippe bitte die Haus ID unten ein:\n\n{FF0000}Dieses Haus existiert nicht!","Wegpunkt","Zurück");
		                DeletePVar(playerid,"NaviSearch");
		                SetPlayerCheckpointEx(playerid,HausInfo[strlen(inputtext)][hsIPos_X],HausInfo[strlen(inputtext)][hsIPos_Y],HausInfo[strlen(inputtext)][hsIPos_Z],3.5);
		                //HausInfo[hs][hsIPos_X],HausInfo[hs][hsIPos_Y],HausInfo[hs][hsIPos_Z]
		                //SetPlayerCheckpointEx(playerid,HausInfo[strlen(inputtext)][hsPos_X],HausInfo[strlen(inputtext)][hsPos_Y],HausInfo[strlen(inputtext)][hsPos_Z],3.5);
		                SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Das Haus wurde dir rot auf der Minimap markiert.");
		            }
		            else if(GetPVarInt(playerid,"NaviSearch") == 2) //Garage
		            {
		                if(GaragenInfo[strlen(inputtext)][giErstellt] == false)return ShowPlayerDialog(playerid,DIALOG_NAVI_SEARCH,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Navi","{FFFFFF}Tippe bitte die Haus ID unten ein:\n\n{FF0000}Diese Garage existiert nicht!","Wegpunkt","Zurück");
		                DeletePVar(playerid,"NaviSearch");
		                SetPlayerCheckpointEx(playerid,GaragenInfo[strlen(inputtext)][giPos_X],GaragenInfo[strlen(inputtext)][giPos_Y],GaragenInfo[strlen(inputtext)][giPos_Z],3.5);
		                SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Die Garage wurde dir rot auf der Minimap markiert.");
		            }
		        }
		        else
		  		{
   					if(GetPVarInt(playerid,"NaviSearch") == 1) //Haus
		            {
		                ShowPlayerDialog(playerid,DIALOG_NAVI_SEARCH,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Navi","{FFFFFF}Tippe bitte die Haus ID unten ein:","Wegpunkt","Zurück");
		            }
		            else if(GetPVarInt(playerid,"NaviSearch") == 2) //Garage
		            {
		                ShowPlayerDialog(playerid,DIALOG_NAVI_SEARCH,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Navi","{FFFFFF}Tippe bitte die Garagen ID unten ein:","Wegpunkt","Zurück");
		            }
                }
			}
		}
		case DIALOG_STORE:
		{
			if(response==0){}//Zurück
			else if(response==1)//Weiter
			{
			    new string2[128], an = GetPVarInt(playerid,"StoreID");
				switch(listitem)
				{
				    case 0://Navigationsgerät
				    {
				        if(GetPVarInt(playerid,"StoreBesitzer") == 1)
				        {
				            if(StoreInfo[an][siNavi] == 0)
							{
								SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Dieser 24/7 verkauft leider keine Navigationsgeräte.");
								ShowPlayerDialog(playerid,DIALOG_STORE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - 24/7","Navigationsgerät\nHandy\nTelefonbuch\nRepairkit\nKamera\nPfandflaschen verkaufen","Weiter","Zurück");
							}
							else
							{
							    if(SpielerInfo[playerid][sNavi] == 1)
								{
									SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt bereits ein Navigationsgerät. Benutze '/navi' um es zu benutzen.");
									ShowPlayerDialog(playerid,DIALOG_STORE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - 24/7","Navigationsgerät\nHandy\nTelefonbuch\nRepairkit\nKamera\nPfandflaschen verkaufen","Weiter","Zurück");
								}
								else
								{
    								SetPVarInt(playerid,"StoreItems",1);
    								format(string2,sizeof(string2),"{FFFFFF}Bist du dir sicher, dass du dir ein\nNavigationsgerät für %d$ kaufen möchtest ?",StoreInfo[an][siNavi]);
		                			ShowPlayerDialog(playerid,DIALOG_STORE_KAUFEN,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Kaufbestätigung",string2,"Ja","Nein");
								}
							}
				        }
				        else
				        {
						    if(SpielerInfo[playerid][sNavi] == 1)
							{
								SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt bereits ein Navigationsgerät. Benutze '/navi' um es zu benutzen.");
								ShowPlayerDialog(playerid,DIALOG_STORE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - 24/7","Navigationsgerät\nHandy\nTelefonbuch\nRepairkit\nKamera\nPfandflaschen verkaufen","Weiter","Zurück");
							}
							else
							{
								SetPVarInt(playerid,"StoreItems",1);
								SetPVarInt(playerid,"StaatItems",1);
	                			ShowPlayerDialog(playerid,DIALOG_STORE_KAUFEN,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Kaufbestätigung","{FFFFFF}Bist du dir sicher, dass du dir ein\nNavigationsgerät für 500$ kaufen möchtest ?","Ja","Nein");
							}
				        }
				    }
				    case 1://Handy
				    {
				        if(GetPVarInt(playerid,"StoreBesitzer") == 1)
				        {
				            if(StoreInfo[an][siHandy] == 0)
							{
								SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Dieser 24/7 verkauft leider keine Handy´s.");
								ShowPlayerDialog(playerid,DIALOG_STORE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - 24/7","Navigationsgerät\nHandy\nTelefonbuch\nRepairkit\nKamera\nPfandflaschen verkaufen","Weiter","Zurück");
							}
							else
							{
							    if(SpielerInfo[playerid][sHandy] == 1)
								{
									SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt bereits ein Handy. Benutze '/help > Handy Befehle' um Hilfe zu erhalten.");
									ShowPlayerDialog(playerid,DIALOG_STORE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - 24/7","Navigationsgerät\nHandy\nTelefonbuch\nRepairkit\nKamera\nPfandflaschen verkaufen","Weiter","Zurück");
								}
								else
								{
    								SetPVarInt(playerid,"StoreItems",2);
    								format(string2,sizeof(string2),"{FFFFFF}Bist du dir sicher, dass du dir ein\nHandy für %d$ kaufen möchtest ?",StoreInfo[an][siHandy]);
		                			ShowPlayerDialog(playerid,DIALOG_STORE_KAUFEN,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Kaufbestätigung",string2,"Ja","Nein");
								}
							}
				        }
				        else
				        {
						    if(SpielerInfo[playerid][sHandy] != 0)
							{
								SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt bereits ein Handy. Benutze '/help > Handy Befehle' um Hilfe zu erhalten.");
								ShowPlayerDialog(playerid,DIALOG_STORE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - 24/7","Navigationsgerät\nHandy\nTelefonbuch\nRepairkit\nKamera\nPfandflaschen verkaufen","Weiter","Zurück");
							}
							else
							{
								SetPVarInt(playerid,"StoreItems",2);
								SetPVarInt(playerid,"StaatItems",1);
	                			ShowPlayerDialog(playerid,DIALOG_STORE_KAUFEN,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Kaufbestätigung","{FFFFFF}Bist du dir sicher, dass du dir ein\nHandy für 500$ kaufen möchtest ?","Ja","Nein");
							}
				        }
				    }
				    case 2://Telefonbuch
				    {
				        if(GetPVarInt(playerid,"StoreBesitzer") == 1)
				        {
				            if(StoreInfo[an][siTelefonbuch] == 0)
							{
								SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Dieser 24/7 verkauft leider keine Telefonbücher.");
								ShowPlayerDialog(playerid,DIALOG_STORE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - 24/7","Navigationsgerät\nHandy\nTelefonbuch\nRepairkit\nKamera\nPfandflaschen verkaufen","Weiter","Zurück");
							}
							else
							{
							    if(SpielerInfo[playerid][sTelefonbuch] == 1)
								{
									SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt bereits ein Telefonbuch. Benutze '/nummer' um das Telefonbuch zu benutzen.");
									ShowPlayerDialog(playerid,DIALOG_STORE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - 24/7","Navigationsgerät\nHandy\nTelefonbuch\nRepairkit\nKamera\nPfandflaschen verkaufen","Weiter","Zurück");
								}
								else
								{
    								SetPVarInt(playerid,"StoreItems",3);
    								format(string2,sizeof(string2),"{FFFFFF}Bist du dir sicher, dass du dir ein\nTelefonbuch %d$ kaufen möchtest ?",StoreInfo[an][siTelefonbuch]);
		                			ShowPlayerDialog(playerid,DIALOG_STORE_KAUFEN,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Kaufbestätigung",string2,"Ja","Nein");
								}
							}
				        }
				        else
				        {
						    if(SpielerInfo[playerid][sTelefonbuch] == 1)
							{
								SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt bereits ein Telefonbuch. Benutze '/nummer' um das Telefonbuch zu benutzen.");
								ShowPlayerDialog(playerid,DIALOG_STORE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - 24/7","Navigationsgerät\nHandy\nTelefonbuch\nRepairkit\nKamera\nPfandflaschen verkaufen","Weiter","Zurück");
							}
							else
							{
								SetPVarInt(playerid,"StoreItems",3);
								SetPVarInt(playerid,"StaatItems",1);
	                			ShowPlayerDialog(playerid,DIALOG_STORE_KAUFEN,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Kaufbestätigung","{FFFFFF}Bist du dir sicher, dass du dir ein\nTelefonbuch für 500$ kaufen möchtest ?","Ja","Nein");
							}
				        }
				    }
				    case 3://Repairkit
				    {
				        if(GetPVarInt(playerid,"StoreBesitzer") == 1)
				        {
				            if(StoreInfo[an][siRepairkit] == 0)
							{
								SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Dieser 24/7 verkauft leider kein Repairkit.");
								ShowPlayerDialog(playerid,DIALOG_STORE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - 24/7","Navigationsgerät\nHandy\nTelefonbuch\nRepairkit\nKamera\nPfandflaschen verkaufen","Weiter","Zurück");
							}
							else
							{
							    if(SpielerInfo[playerid][sRepairkit] > 0)
								{
									SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt bereits ein Repairkit. Benutze '/repairkit' um es zu benutzen.");
									ShowPlayerDialog(playerid,DIALOG_STORE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - 24/7","Navigationsgerät\nHandy\nTelefonbuch\nRepairkit\nKamera\nPfandflaschen verkaufen","Weiter","Zurück");
								}
								else
								{
    								SetPVarInt(playerid,"StoreItems",4);
    								format(string2,sizeof(string2),"{FFFFFF}Bist du dir sicher, dass du dir ein\nRepairkit für %d$ kaufen möchtest ?",StoreInfo[an][siRepairkit]);
		                			ShowPlayerDialog(playerid,DIALOG_STORE_KAUFEN,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Kaufbestätigung",string2,"Ja","Nein");
								}
							}
				        }
				        else
				        {
						    if(SpielerInfo[playerid][sRepairkit] > 3)
							{
								SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du besitzt bereits ein Repairkit. Benutze '/repairkit' um es zu benutzen.");
								ShowPlayerDialog(playerid,DIALOG_STORE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - 24/7","Navigationsgerät\nHandy\nTelefonbuch\nRepairkit\nKamera\nPfandflaschen verkaufen","Weiter","Zurück");
							}
							else
							{
								SetPVarInt(playerid,"StoreItems",4);
								SetPVarInt(playerid,"StaatItems",1);
	                			ShowPlayerDialog(playerid,DIALOG_STORE_KAUFEN,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Kaufbestätigung","{FFFFFF}Bist du dir sicher, dass du dir ein\nRepairkit für 500$ kaufen möchtest ?","Ja","Nein");
							}
				        }
				    }
				    case 4://Kamera
				    {
				        if(GetPVarInt(playerid,"StoreBesitzer") == 1)
				        {
				            if(StoreInfo[an][siKamera] == 0)
							{
								SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Dieser 24/7 verkauft leider keine Kamera.");
								ShowPlayerDialog(playerid,DIALOG_STORE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - 24/7","Navigationsgerät\nHandy\nTelefonbuch\nRepairkit\nKamera\nPfandflaschen verkaufen","Weiter","Zurück");
							}
							else
							{
								SetPVarInt(playerid,"StoreItems",5);
								format(string2,sizeof(string2),"{FFFFFF}Bist du dir sicher, dass du dir eine\nKamera für %d$ kaufen möchtest ?",StoreInfo[an][siKamera]);
	                			ShowPlayerDialog(playerid,DIALOG_STORE_KAUFEN,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Kaufbestätigung",string2,"Ja","Nein");
							}
				        }
				        else
				        {
							SetPVarInt(playerid,"StoreItems",5);
							SetPVarInt(playerid,"StaatItems",1);
                			ShowPlayerDialog(playerid,DIALOG_STORE_KAUFEN,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Kaufbestätigung","{FFFFFF}Bist du dir sicher, dass du dir eine\nKamera für 100$ kaufen möchtest ?","Ja","Nein");
				        }
				    }
				    case 5://Pfandflaschen verkaufen
				    {
						if(SpielerInfo[playerid][sPfandflaschen] == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast keine Pfandflaschen.");
						new Geld = SpielerInfo[playerid][sPfandflaschen]*25, pfandstring[264];
						format(pfandstring,sizeof(pfandstring),"{FFFFFF}Möchstest du deine %d Pfandflasche(n) für %d$ verkaufen ?\nHinweis: Pro Pfandflasche erhält man +25$",SpielerInfo[playerid][sPfandflaschen],Geld);
						ShowPlayerDialog(playerid,DIALOG_PFANDFLASCHEN,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Verkaufbestätigung",pfandstring,"Ja","Nein");
				    }
				}
			}
		}
		case DIALOG_PFANDFLASCHEN:
		{
			if(response==0){ShowPlayerDialog(playerid,DIALOG_STORE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - 24/7","Navigationsgerät\nHandy\nTelefonbuch\nRepairkit\nKamera\nPfandflaschen verkaufen","Weiter","Zurück");}//Zurück
			else if(response==1)//Weiter
			{
			    new Geld = SpielerInfo[playerid][sPfandflaschen]*25, str[128];
			    format(str,sizeof(str),"[Info]: {FFFFFF}Du hast deine Pfandflaschen für %d$ verkauft.",Geld);
			    SendClientMessage(playerid,COLOR_SUPER,str);
				GivePlayerMoneyEx(playerid,Geld);
				SpielerInfo[playerid][sBeutel]--;
				if(SpielerInfo[playerid][sAchivPfand] < 1 && GetPVarInt(playerid,"MissionActive") != 5)
				{
				    SpielerInfo[playerid][sAchivPfand] = 1;
				    ShowAchievement(playerid,"Verkaufe Pfandflaschen","+ 50 EXP");
				    GivePlayerEXP(playerid,50);
				}
				if(GetPVarInt(playerid,"MissionActive") == 5 && SpielerInfo[playerid][sPfandflaschen] > 14)
				{
				    DeletePVar(playerid,"MissionActive");
				    ShowAchievement(playerid,"~g~Mission 5","Belohnung: ~n~~g~250 EXP!");
	                SendClientMessage(playerid,COLOR_LIGHTGREEN,"[Mission]: Du hast die Mission abgeschlossen! +250 EXP!");
	   				GivePlayerEXP(playerid,250);
	   				SpielerInfo[playerid][sMissionSolved][5] = 1;
				}
				SpielerInfo[playerid][sPfandflaschen] = 0;
			}
		}
		case DIALOG_STORE_KAUFEN:
		{
			if(response==0){ShowPlayerDialog(playerid,DIALOG_STORE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - 24/7","Navigationsgerät\nHandy\nTelefonbuch\nRepairkit\nKamera\nPfandflaschen verkaufen","Weiter","Zurück");}//Zurück
			else if(response==1)//Weiter
			{
			    new an = GetPVarInt(playerid,"StoreID");
			    if(GetPVarInt(playerid,"StoreItems") == 1)//Navigationsgerät
			    {
			        if(GetPVarInt(playerid,"StaatItems") == 0)
			        {
				        if(GetPlayerMoneyEx(playerid) < StoreInfo[an][siNavi])return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
						GivePlayerMoneyEx(playerid,-StoreInfo[an][siNavi]);
						StoreInfo[an][siKasse] += StoreInfo[an][siNavi];
						StoreInfo[an][siKasse] -= 250;
						GovVars[govKasse] += 250;
						SpielerInfo[playerid][sNavi] = 1;
						SendClientMessage(playerid,COLOR_SUPER,"Du hast dir ein Navigationsgerät gekauft. Benutze '/navi' um es zu benutzen.");
						ShowPlayerDialog(playerid,DIALOG_STORE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - 24/7","Navigationsgerät\nHandy\nTelefonbuch\nRepairkit\nKamera\nPfandflaschen verkaufen","Weiter","Zurück");
					}
					else
					{
     					if(GetPlayerMoneyEx(playerid) < 500)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
						GivePlayerMoneyEx(playerid,-500);
						SpielerInfo[playerid][sNavi] = 1;
						SendClientMessage(playerid,COLOR_SUPER,"Du hast dir ein Navigationsgerät gekauft. Benutze '/navi' um es zu benutzen.");
						ShowPlayerDialog(playerid,DIALOG_STORE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - 24/7","Navigationsgerät\nHandy\nTelefonbuch\nRepairkit\nKamera\nPfandflaschen verkaufen","Weiter","Zurück");
					}
			    }
			    else if(GetPVarInt(playerid,"StoreItems") == 2)//Handy
			    {
			        if(GetPVarInt(playerid,"StaatItems") == 0)
			        {
				        if(GetPlayerMoneyEx(playerid) < StoreInfo[an][siNavi])return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
						GivePlayerMoneyEx(playerid,-StoreInfo[an][siHandy]);
						StoreInfo[an][siKasse] += StoreInfo[an][siHandy];
						StoreInfo[an][siKasse] -= 250;
						GovVars[govKasse] += 250;
						new Nummer[5], message[128];
						format(Nummer, 5, "%d%d%d%d", random(8)+1, random(8)+1, random(8)+1, random(8)+1);
						SpielerInfo[playerid][sHandy] = strval(Nummer);
						SpielerInfo[playerid][sGuthaben] = 30;
						format(message,sizeof(message),"Du hast dir ein Handy gekauft. Deine Handynummer lautet: {FF0000}%d",SpielerInfo[playerid][sHandy]);
						SendClientMessage(playerid,COLOR_SUPER,message);
						SendClientMessage(playerid,COLOR_INFO,"Hinweis: Du hast 30$ Startguthaben erhalten. Benutze '/guthaben' um dein aktuelles Guthaben zu sehen.");
						ShowPlayerDialog(playerid,DIALOG_STORE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - 24/7","Navigationsgerät\nHandy\nTelefonbuch\nRepairkit\nKamera\nPfandflaschen verkaufen","Weiter","Zurück");
					}
					else
					{
     					if(GetPlayerMoneyEx(playerid) < 500)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
						GivePlayerMoneyEx(playerid,-500);
						new Nummer[5], message[128];
						format(Nummer, 5, "%d%d%d%d", random(8)+1, random(8)+1, random(8)+1, random(8)+1);
						SpielerInfo[playerid][sHandy] = strval(Nummer);
						SpielerInfo[playerid][sGuthaben] = 30;
						format(message,sizeof(message),"Du hast dir ein Handy gekauft. Deine Handynummer lautet: {FF0000}%d",SpielerInfo[playerid][sHandy]);
						SendClientMessage(playerid,COLOR_SUPER,message);
						SendClientMessage(playerid,COLOR_INFO,"Hinweis: Du hast 30$ Startguthaben erhalten. Benutze '/guthaben' um dein aktuelles Guthaben zu sehen.");
						ShowPlayerDialog(playerid,DIALOG_STORE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - 24/7","Navigationsgerät\nHandy\nTelefonbuch\nRepairkit\nKamera\nPfandflaschen verkaufen","Weiter","Zurück");
					}
			    }
   				if(GetPVarInt(playerid,"StoreItems") == 3)//Telefonbuch
			    {
			        if(GetPVarInt(playerid,"StaatItems") == 0)
			        {
				        if(GetPlayerMoneyEx(playerid) < StoreInfo[an][siTelefonbuch])return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
						GivePlayerMoneyEx(playerid,-StoreInfo[an][siTelefonbuch]);
						StoreInfo[an][siKasse] += StoreInfo[an][siTelefonbuch];
						SpielerInfo[playerid][sTelefonbuch] = 1;
						StoreInfo[an][siKasse] -= 250;
						GovVars[govKasse] += 250;
						SendClientMessage(playerid,COLOR_SUPER,"Du hast dir ein Telefonbuch gekauft. Benutze '/nummer' um das Telefonbuch zu benutzen.");
						ShowPlayerDialog(playerid,DIALOG_STORE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - 24/7","Navigationsgerät\nHandy\nTelefonbuch\nRepairkit\nKamera\nPfandflaschen verkaufen","Weiter","Zurück");
					}
					else
					{
     					if(GetPlayerMoneyEx(playerid) < 500)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
						GivePlayerMoneyEx(playerid,-500);
						SpielerInfo[playerid][sTelefonbuch] = 1;
						SendClientMessage(playerid,COLOR_SUPER,"Du hast dir ein Telefonbuch gekauft. Benutze '/nummer' um das Telefonbuch zu benutzen.");
						ShowPlayerDialog(playerid,DIALOG_STORE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - 24/7","Navigationsgerät\nHandy\nTelefonbuch\nRepairkit\nKamera\nPfandflaschen verkaufen","Weiter","Zurück");
					}
			    }
				if(GetPVarInt(playerid,"StoreItems") == 4)//Repairkit
			    {
			        if(GetPVarInt(playerid,"StaatItems") == 0)
			        {
				        if(GetPlayerMoneyEx(playerid) < StoreInfo[an][siRepairkit])return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
				        if(SpielerInfo[playerid][sRepairkit] > 3)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Noch mehr Repairkits kannst du nicht tragen.");
						GivePlayerMoneyEx(playerid,-StoreInfo[an][siRepairkit]);
						StoreInfo[an][siKasse] += StoreInfo[an][siRepairkit];
						SpielerInfo[playerid][sRepairkit] += 1;
						StoreInfo[an][siKasse] -= 250;
						GovVars[govKasse] += 250;
						SendClientMessage(playerid,COLOR_SUPER,"Du hast dir ein Repairkit gekauft. Benutze '/repairkit' um es zu benutzen.");
						ShowPlayerDialog(playerid,DIALOG_STORE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - 24/7","Navigationsgerät\nHandy\nTelefonbuch\nRepairkit\nKamera\nPfandflaschen verkaufen","Weiter","Zurück");
					}
					else
					{
     					if(GetPlayerMoneyEx(playerid) < 500)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
     					if(SpielerInfo[playerid][sRepairkit] > 3)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Noch mehr Repairkits kannst du nicht tragen.");
						GivePlayerMoneyEx(playerid,-500);
						SpielerInfo[playerid][sRepairkit] += 1;
						SendClientMessage(playerid,COLOR_SUPER,"Du hast dir ein Repairkit gekauft. Benutze '/repairkit' um es zu benutzen.");
						ShowPlayerDialog(playerid,DIALOG_STORE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - 24/7","Navigationsgerät\nHandy\nTelefonbuch\nRepairkit\nKamera\nPfandflaschen verkaufen","Weiter","Zurück");
					}
			    }
			    if(GetPVarInt(playerid,"StoreItems") == 5)//Kamera
			    {
			        if(GetPVarInt(playerid,"StaatItems") == 0)
			        {
				        if(GetPlayerMoneyEx(playerid) < StoreInfo[an][siKamera])return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
						GivePlayerMoneyEx(playerid,-StoreInfo[an][siKamera]);
						StoreInfo[an][siKasse] += StoreInfo[an][siKamera];
						StoreInfo[an][siKasse] -= 50;
						GovVars[govKasse] += 50;
						GivePlayerWeapon(playerid,WEAPON:43,25);
						SendClientMessage(playerid,COLOR_SUPER,"Du hast dir eine Kamera gekauft.");
						ShowPlayerDialog(playerid,DIALOG_STORE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - 24/7","Navigationsgerät\nHandy\nTelefonbuch\nRepairkit\nKamera\nPfandflaschen verkaufen","Weiter","Zurück");
					}
					else
					{
     					if(GetPlayerMoneyEx(playerid) < 100)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
						GivePlayerMoneyEx(playerid,-100);
						GivePlayerWeapon(playerid,WEAPON:43,25);
						SendClientMessage(playerid,COLOR_SUPER,"Du hast dir eine Kamera gekauft.");
						ShowPlayerDialog(playerid,DIALOG_STORE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - 24/7","Navigationsgerät\nHandy\nTelefonbuch\nRepairkit\nKamera\nPfandflaschen verkaufen","Weiter","Zurück");
					}
			    }
			}
		}
		case DIALOG_SERVICE_DESC_OAMT:
		{
		    if(response==0){}//Abbrechen
		    else if(response==1)
		    {
		        if(strlen(inputtext) < 1 || strlen(inputtext) > 32)
		        {
		            ShowPlayerDialog(playerid,DIALOG_SERVICE_DESC,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Service","Bitte beschreibe deinen Notruf kurz (max. 32 Zeichen).","Weiter","Abbrechen");
		        }
		        else
		        {
					if(NotrufSperre[playerid][4] == 1)
					{
	    				SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast bereits das Ordnungsamt angefordert.");
	    				return 1;
					}
					new str[164], str2[164];
					new Float:x,Float:y,Float:z;
					GetPlayerPos(playerid,x,y,z);
					if(OAmtDuty <= 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Es sind derzeit keine OAmt-Beamte im Dienst.");
		 			if((x > -992.5172 && x < 4000.0000) && (y < 528.0000 && y > -4000.0000))//Los Santos
					{
				    	format(str,sizeof(str),"%s (ID:%d) benötigt das Ordnungsamt. Ort: Los Santos | Benutze '/notruf [SpielerID]'",SpielerInfo[playerid][sName],playerid);
				    	format(str2,sizeof(str2),"[Notruf]: {FFFFFF}%s gab folgende Informationen an: %s",SpielerInfo[playerid][sName],inputtext);
				    }
					else if((x > -4000.0000 && x < -992.5172) && (y < 4000.0000 && y > -4000.0000))//San Fierro
					{
				    	format(str,sizeof(str),"%s (ID:%d) benötigt das Ordnungsamt. Ort: San San Fierro | Benutze '/notruf [SpielerID]'",SpielerInfo[playerid][sName],playerid);
				    	format(str2,sizeof(str2),"[Notruf]: {FFFFFF}%s gab folgende Informationen an: %s",SpielerInfo[playerid][sName],inputtext);
					}
					else if((x > -992.5172 && x < 4000.0000) && (y < 4000.0000 && y > 528.0000))//Las Venturas
					{
				    	format(str,sizeof(str),"%s (ID:%d) benötigt das Ordnungsamt. Ort: Las Venturas | Benutze '/notruf [SpielerID]'",SpielerInfo[playerid][sName],playerid);
				    	format(str2,sizeof(str2),"[Notruf]: {FFFFFF}%s gab folgende Informationen an: %s",SpielerInfo[playerid][sName],inputtext);
					}
	    			foreach(new i : Player)
					{
						if(SpielerInfo[i][sFraktion] != 7)continue;
						if(GetPVarInt(i,"OAmtDuty") == 0)continue;
						SendClientMessage(i,COLOR_INFO,str);
						SendClientMessage(i,COLOR_INFO,str2);
					}
					NotrufSperre[playerid][4] = 1;
					KillTimer(NotrufTimer[playerid][4]);
					NotrufTimer[playerid][4] = SetTimerEx("NotrufTimer5",180000,false,"i",playerid);
					SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Es wurden alle verfügbaren OAmt-Beamte informiert.");
					SetPVarInt(playerid,"NotrufID",5);
				}
			}
		}
		case DIALOG_SERVICE_DESC:
		{
		    if(response==0){}//Abbrechen
		    else if(response==1)
		    {
		        if(strlen(inputtext) < 1 || strlen(inputtext) > 32)
		        {
		            ShowPlayerDialog(playerid,DIALOG_SERVICE_DESC,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Service","Bitte beschreibe deinen Notruf kurz (max. 32 Zeichen).","Weiter","Abbrechen");
		        }
		        else
		        {
		            if(NotrufSperre[playerid][0] == 1)
					{
	    				SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast bereits einen Streifenwagen angefordert.");
	    				return 1;
					}
					new str[164], str2[164];
					new Float:x,Float:y,Float:z;
					GetPlayerPos(playerid,x,y,z);
					if(CopDuty <= 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Es sind derzeit keine Polizisten im Dienst.");
	 				if((x > -992.5172 && x < 4000.0000) && (y < 528.0000 && y > -4000.0000))//Los Santos
					{
				    	format(str,sizeof(str),"[Notruf]: {FFFFFF}%s (ID:%d) benötigt einen Streifenwagen. Ort: LS - %s | Benutze '/notruf [SpielerID]'",SpielerInfo[playerid][sName],playerid,GetPlayerArea(playerid));
				    	format(str2,sizeof(str2),"[Notruf]: {FFFFFF}%s gab folgende Informationen an: %s",SpielerInfo[playerid][sName],inputtext);
				    }
					else if((x > -4000.0000 && x < -992.5172) && (y < 4000.0000 && y > -4000.0000))//San Fierro
					{
				    	format(str,sizeof(str),"[Notruf]: {FFFFFF}%s (ID:%d) benötigt einen Streifenwagen. Ort: SF - %s | Benutze '/notruf [SpielerID]'",SpielerInfo[playerid][sName],playerid,GetPlayerArea(playerid));
				    	format(str2,sizeof(str2),"[Notruf]: {FFFFFF}%s gab folgende Informationen an: %s",SpielerInfo[playerid][sName],inputtext);
					}
					else if((x > -992.5172 && x < 4000.0000) && (y < 4000.0000 && y > 528.0000))//Las Venturas
					{
				    	format(str,sizeof(str),"[Notruf]: {FFFFFF}%s (ID:%d) benötigt einen Streifenwagen. Ort: LV - %s | Benutze '/notruf [SpielerID]'",SpielerInfo[playerid][sName],playerid,GetPlayerArea(playerid));
				    	format(str2,sizeof(str2),"[Notruf]: {FFFFFF}%s gab folgende Informationen an: %s",SpielerInfo[playerid][sName],inputtext);
					}
	    			foreach(new i : Player)
					{
						if(SpielerInfo[i][sFraktion] != 2)continue;
						if(GetPVarInt(i,"CopDuty") == 0)continue;
						SendClientMessage(i,COLOR_INFO,str);
						SendClientMessage(i,COLOR_INFO,str2);
					}
					NotrufSperre[playerid][0] = 1;
					KillTimer(NotrufTimer[playerid][0]);
					NotrufTimer[playerid][0] = SetTimerEx("NotrufTimer1",180000,false,"i",playerid);
					SendClientMessage(playerid,COLOR_INFO,"[Notruf]: {FFFFFF}Alle verfügbaren Polizisten wurden informiert.");
					SetPVarInt(playerid,"NotrufID",1);
		        }
		    }
		}
		case DIALOG_SERVICE:
		{
			if(response==0){}//Zurück
			else if(response==1)//Weiter
			{
			    new str[164],Float:x,Float:y,Float:z;
				GetPlayerPos(playerid,x,y,z);
				switch(listitem)
				{
				    case 0://Polizei
				    {
				        ShowPlayerDialog(playerid,DIALOG_SERVICE_DESC,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Service","Bitte beschreibe deinen Notruf kurz (max. 32 Zeichen).","Weiter","Abbrechen");
				    }
				    case 1://FBI
				    {
				        if(NotrufSperre[playerid][1] == 1)
						{
		    				SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast bereits das FBI angefordert.");
		    				return 1;
						}
						if(FBIDuty <= 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Es sind derzeit keine FBI Agenten im Dienst.");
		 				if((x > -992.5172 && x < 4000.0000) && (y < 528.0000 && y > -4000.0000))//Los Santos
						{
					    	format(str,sizeof(str),"%s (ID:%d) benötigt dringend das FBI. Ort: Los Santos | Benutze '/notruf [SpielerID]'",SpielerInfo[playerid][sName],playerid);
					    }
						else if((x > -4000.0000 && x < -992.5172) && (y < 4000.0000 && y > -4000.0000))//San Fierro
						{
					    	format(str,sizeof(str),"%s (ID:%d) benötigt dringend das FBI. Ort: San San Fierro | Benutze '/notruf [SpielerID]'",SpielerInfo[playerid][sName],playerid);
						}
						else if((x > -992.5172 && x < 4000.0000) && (y < 4000.0000 && y > 528.0000))//Las Venturas
						{
					    	format(str,sizeof(str),"%s (ID:%d) benötigt dringend das FBI. Ort: Las Venturas | Benutze '/notruf [SpielerID]'",SpielerInfo[playerid][sName],playerid);
						}
		    			foreach(new i : Player)
						{
							if(SpielerInfo[i][sFraktion] != 6)continue;
							if(GetPVarInt(i,"FBIDuty") == 0)continue;
							SendClientMessage(i,COLOR_INFO,str);
						}
						NotrufSperre[playerid][1] = 1;
                        KillTimer(NotrufTimer[playerid][1]);
						NotrufTimer[playerid][1] = SetTimerEx("NotrufTimer2",180000,false,"i",playerid);
						SendClientMessage(playerid,COLOR_INFO,"Das FBI wurde über deinen Anruf informiert.");
						SetPVarInt(playerid,"NotrufID",2);
				    }
				    case 2://SA Feuerwehr
					{
     					if(NotrufSperre[playerid][2] == 1)
						{
		    				SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast bereits die Feuerwehr angefordert.");
		    				return 1;
						}
						if(FeuerwehrDuty <= 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Es sind derzeit keine Feuerwehrmänner im Dienst.");
			 			if((x > -992.5172 && x < 4000.0000) && (y < 528.0000 && y > -4000.0000))//Los Santos
						{
					    	format(str,sizeof(str),"%s (ID:%d) benötigt die Feuerwehr. Ort: Los Santos | Benutze '/notruf [SpielerID]'",SpielerInfo[playerid][sName],playerid);
					    }
						else if((x > -4000.0000 && x < -992.5172) && (y < 4000.0000 && y > -4000.0000))//San Fierro
						{
					    	format(str,sizeof(str),"%s (ID:%d) benötigt die Feuerwehr. Ort: San San Fierro | Benutze '/notruf [SpielerID]'",SpielerInfo[playerid][sName],playerid);
						}
						else if((x > -992.5172 && x < 4000.0000) && (y < 4000.0000 && y > 528.0000))//Las Venturas
						{
					    	format(str,sizeof(str),"%s (ID:%d) benötigt die Feuerwehr. Ort: Las Venturas | Benutze '/notruf [SpielerID]'",SpielerInfo[playerid][sName],playerid);
						}
		    			foreach(new i : Player)
						{
							if(SpielerInfo[i][sFraktion] != 5)continue;
							if(GetPVarInt(i,"FeuerwehrDuty") == 0)continue;
							SendClientMessage(i,COLOR_INFO,str);
						}
						NotrufSperre[playerid][2] = 1;
						KillTimer(NotrufTimer[playerid][2]);
						NotrufTimer[playerid][2] = SetTimerEx("NotrufTimer3",180000,false,"i",playerid);
						SendClientMessage(playerid,COLOR_INFO,"Es wurden alle verfügbaren Feuerwehrmänner informiert.");
						SetPVarInt(playerid,"NotrufID",3);
					}
				    case 3://SA Rettungsdienst
					{
     					if(NotrufSperre[playerid][3] == 1)
						{
		    				SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast bereits einen Sanitäter angefordert.");
		    				return 1;
						}
						if(MedicDuty <= 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Es sind derzeit keine Sanitäter im Dienst.");
			 			if((x > -992.5172 && x < 4000.0000) && (y < 528.0000 && y > -4000.0000))//Los Santos
						{
					    	format(str,sizeof(str),"%s (ID:%d) benötigt einen Rettungswagen. Ort: Los Santos | Benutze '/notruf [SpielerID]'",SpielerInfo[playerid][sName],playerid);
					    }
						else if((x > -4000.0000 && x < -992.5172) && (y < 4000.0000 && y > -4000.0000))//San Fierro
						{
					    	format(str,sizeof(str),"%s (ID:%d) benötigt einen Rettungswagen. Ort: San San Fierro | Benutze '/notruf [SpielerID]'",SpielerInfo[playerid][sName],playerid);
						}
						else if((x > -992.5172 && x < 4000.0000) && (y < 4000.0000 && y > 528.0000))//Las Venturas
						{
					    	format(str,sizeof(str),"%s (ID:%d) benötigt einen Rettungswagen. Ort: Las Venturas | Benutze '/notruf [SpielerID]'",SpielerInfo[playerid][sName],playerid);
						}
		    			foreach(new i : Player)
						{
							if(SpielerInfo[i][sFraktion] != 5)continue;
							if(GetPVarInt(i,"MedicDuty") == 0)continue;
							SendClientMessage(i,COLOR_INFO,str);
						}
						NotrufSperre[playerid][3] = 1;
						KillTimer(NotrufTimer[playerid][3]);
						NotrufTimer[playerid][3] = SetTimerEx("NotrufTimer4",180000,false,"i",playerid);
						SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Es wurden alle verfügbaren Sanitäter informiert.");
						SetPVarInt(playerid,"NotrufID",4);
					}
					case 4://Ordnungsamt
					{
					    ShowPlayerDialog(playerid,DIALOG_SERVICE_DESC_OAMT,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Service","Bitte beschreibe deinen Notruf kurz (max. 32 Zeichen).","Weiter","Abbrechen");
                    }
				}
			}
		}
		case DIALOG_CREATECAR:
		{
		    if(response==0){}//Abbrechen
		    else if(response==1)//Weiter
		    {
				SetPVarInt(playerid,"CreateCar_Typ",listitem+1);
				ShowPlayerDialog(playerid,DIALOG_CREATECAR_STEP1,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fahrzeugerstellung","Bitte gebe die ModelID für das Fahrzeug an.","Weiter","Zurück");
		    }
		}
		case DIALOG_CREATECAR_STEP1:
		{
		    if(response==0)//Zurück
		    {
		        ShowPlayerDialog(playerid,DIALOG_CREATECAR,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fahrzeugerstellung","Fraktionsfahrzeug\nAutohausfahrzeug\nNebenjobfahrzeug","Weiter","Abbrechen");
		    }
		    else if(response==1)//Weiter
		    {
		        if(strval(inputtext) < 400 || strval(inputtext) > 611 || !IsNumeric(inputtext))return ShowPlayerDialog(playerid,DIALOG_CREATECAR_STEP1,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fahrzeugerstellung","Bitte gebe die ModelID für das Fahrzeug an.","Weiter","Zurück");
				SetPVarInt(playerid,"CreateCar_ModelID",strval(inputtext));
				//Fraktionsfahrzeug
				if(GetPVarInt(playerid,"CreateCar_Typ") == 1){ShowPlayerDialog(playerid,DIALOG_CREATECAR_STEP2,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fahrzeugerstellung","Bitte gebe an welche Fraktion das Fahrzeug erhalten soll.","Weiter","Zurück");}
                //Autohausfahrzeug
				if(GetPVarInt(playerid,"CreateCar_Typ") == 2){ShowPlayerDialog(playerid,DIALOG_CREATECAR_STEP2,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fahrzeugerstellung","Bitte gebe an welches Autohaus das Fahrzeug erhalten soll.","Weiter","Zurück");}
				//Nebenjobfahrzeug
				if(GetPVarInt(playerid,"CreateCar_Typ") == 3){ShowPlayerDialog(playerid,DIALOG_CREATECAR_STEP2,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fahrzeugerstellung","Bitte gebe an welcher Nebenjob das Fahrzeug erhalten soll.","Weiter","Zurück");}
				//Fahrschule
				if(GetPVarInt(playerid,"CreateCar_Typ") == 4) {
		            ShowPlayerDialog(playerid,DIALOG_CREATECAR_STEP3,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fahrzeugerstellung","Bitte gebe die erste Farbe für das Fahrzeug an.","Weiter","Zurück");
				}
			}
		}
		case DIALOG_CREATECAR_STEP2:
		{
		    if(response==0)//Zurück
		    {
		        ShowPlayerDialog(playerid,DIALOG_CREATECAR_STEP1,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fahrzeugerstellung","Bitte gebe die ModelID für das Fahrzeug an.","Weiter","Zurück");
		    }
		    else if(response==1)//Weiter
		    {
		        if(strval(inputtext) < 0 || strval(inputtext) > 19 || !IsNumeric(inputtext))
		        {
		            //Fraktionsfahrzeug
					if(GetPVarInt(playerid,"CreateCar_Typ") == 1){ShowPlayerDialog(playerid,DIALOG_CREATECAR_STEP2,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fahrzeugerstellung","Bitte gebe an welche Fraktion das Fahrzeug erhalten soll.","Weiter","Zurück");}
	                //Autohausfahrzeug
					if(GetPVarInt(playerid,"CreateCar_Typ") == 2){ShowPlayerDialog(playerid,DIALOG_CREATECAR_STEP2,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fahrzeugerstellung","Bitte gebe an welches Autohaus das Fahrzeug erhalten soll.","Weiter","Zurück");}
					//Nebenjobfahrzeug
					if(GetPVarInt(playerid,"CreateCar_Typ") == 3){ShowPlayerDialog(playerid,DIALOG_CREATECAR_STEP2,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fahrzeugerstellung","Bitte gebe an welcher Nebenjob das Fahrzeug erhalten soll.","Weiter","Zurück");}
		        }
		        else
		        {
		            SetPVarInt(playerid,"CreateCar_TypWert",strval(inputtext));
		            ShowPlayerDialog(playerid,DIALOG_CREATECAR_STEP3,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fahrzeugerstellung","Bitte gebe die erste Farbe für das Fahrzeug an.","Weiter","Zurück");
		        }
		    }
		}
		case DIALOG_CREATECAR_STEP3:
		{
		    if(response==0)//Zurück
		    {
		        //Fraktionsfahrzeug
				if(GetPVarInt(playerid,"CreateCar_Typ") == 1){ShowPlayerDialog(playerid,DIALOG_CREATECAR_STEP2,DIALOG_STYLE_INPUT,"","Bitte gebe an welche Fraktion das Fahrzeug erhalten soll.","Weiter","Zurück");}
                //Autohausfahrzeug
				if(GetPVarInt(playerid,"CreateCar_Typ") == 2){ShowPlayerDialog(playerid,DIALOG_CREATECAR_STEP2,DIALOG_STYLE_INPUT,"","Bitte gebe an welches Autohaus das Fahrzeug erhalten soll.","Weiter","Zurück");}
				//Nebenjobfahrzeug
				if(GetPVarInt(playerid,"CreateCar_Typ") == 3){ShowPlayerDialog(playerid,DIALOG_CREATECAR_STEP2,DIALOG_STYLE_INPUT,"","Bitte gebe an welcher Nebenjob das Fahrzeug erhalten soll.","Weiter","Zurück");}
				//Fahrschule
				if(GetPVarInt(playerid,"CreateCar_Typ") == 4)
				{
					ShowPlayerDialog(playerid,DIALOG_CREATECAR_STEP1,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fahrzeugerstellung","Bitte gebe die ModelID für das Fahrzeug an.","Weiter","Zurück");
				}
		    }
		    else if(response==1)//Weiter
		    {
		        if(strval(inputtext) < 0 || strval(inputtext) > 255 || !IsNumeric(inputtext))return ShowPlayerDialog(playerid,DIALOG_CREATECAR_STEP3,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fahrzeugerstellung","Bitte gebe die erste Farbe für das Fahrzeug an.","Weiter","Zurück");
		        SetPVarInt(playerid,"CreateCar_Color1",strval(inputtext));
		        ShowPlayerDialog(playerid,DIALOG_CREATECAR_STEP4,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fahrzeugerstellung","Bitte gebe die zweite Farbe für das Fahrzeug an.","Weiter","Zurück");
		    }
		}
		case DIALOG_CREATECAR_STEP4:
		{
		    if(response==0)//Zurück
		    {
		        ShowPlayerDialog(playerid,DIALOG_CREATECAR_STEP3,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fahrzeugerstellung","Bitte gebe die erste Farbe für das Fahrzeug an.","Weiter","Zurück");
		    }
		    else if(response==1)//Weiter
		    {
		        if(strval(inputtext) < 0 || strval(inputtext) > 255 || !IsNumeric(inputtext))return ShowPlayerDialog(playerid,DIALOG_CREATECAR_STEP4,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fahrzeugerstellung","Bitte gebe die zweite Farbe für das Fahrzeug an.","Weiter","Zurück");
                SetPVarInt(playerid,"CreateCar_Color2",strval(inputtext));
				//Fraktionsfahrzeug
		        if(GetPVarInt(playerid,"CreateCar_Typ") == 1)
				{
    				new vehicleid, Float:Position[4], crstring[256];
				    GetPlayerPos(playerid,Position[0],Position[1],Position[2]);
				    GetPlayerFacingAngle(playerid,Position[3]);

				    vehicleid = CreateVehicle(GetPVarInt(playerid,"CreateCar_ModelID"),Position[0],Position[1],Position[2],Position[3],GetPVarInt(playerid,"CreateCar_Color1"),strval(inputtext),-1);
                    CreateFrakNummernSchild(vehicleid,GetPVarInt(playerid,"CreateCar_TypWert"));
					format(crstring,sizeof(crstring),"* Du hast ein Fraktionsfahrzeug erstellt (ModelID: '%d' - Farben: '%d' & '%d' - Fraktion: '%d')",GetPVarInt(playerid,"CreateCar_ModelID"),GetPVarInt(playerid,"CreateCar_Color1"),strval(inputtext),GetPVarInt(playerid,"CreateCar_TypWert"),-1);
					SendClientMessage(playerid,COLOR_INFO,crstring);
					PutPlayerInVehicle(playerid,vehicleid,0);

					FahrzeugInfo[vehicleid][fErstellt] = true; FahrzeugInfo[vehicleid][fModelID] = GetPVarInt(playerid,"CreateCar_ModelID");
					FahrzeugInfo[vehicleid][fPosition][0] = Position[0]; FahrzeugInfo[vehicleid][fPosition][1] = Position[1]; FahrzeugInfo[vehicleid][fPosition][2] = Position[2]; FahrzeugInfo[vehicleid][fPosition][3] = Position[3]; FahrzeugInfo[vehicleid][fColor][1] = GetPVarInt(playerid,"CreateCar_Color2");
				 	FahrzeugInfo[vehicleid][fAbgeschleppt] = 0; FahrzeugInfo[vehicleid][fParkkralle] = 0; FahrzeugInfo[vehicleid][fKilometer] = 0; FahrzeugInfo[vehicleid][fColor][0] = GetPVarInt(playerid,"CreateCar_Color1"); FahrzeugInfo[vehicleid][fPaintjob] = 3;
					FahrzeugInfo[vehicleid][fTank] = VehicleData[GetVehicleModel(vehicleid)-400][vehLiter]; FahrzeugInfo[vehicleid][fRang] = 0; FahrzeugInfo[vehicleid][fFraktion] = GetPVarInt(playerid,"CreateCar_TypWert"); FahrzeugInfo[vehicleid][fGruppe] = 0;
					FahrzeugInfo[vehicleid][fAutohaus] = 0; FahrzeugInfo[vehicleid][fNebenjob] = 0; FahrzeugInfo[vehicleid][fGarage] = 0; FahrzeugInfo[vehicleid][fGPark] = 0; FahrzeugInfo[vehicleid][fFahrschule] = 0;
					FahrzeugInfo[vehicleid][fSupmobil] = 0; FahrzeugInfo[vehicleid][fZiviroller] = 0; FahrzeugInfo[vehicleid][fImportCar] = 0; FahrzeugInfo[vehicleid][fKurrierCar] = 0;
					FahrzeugInfo[vehicleid][fPreis] = 0; FahrzeugInfo[vehicleid][fBesitzer] = 0; format(FahrzeugInfo[vehicleid][fBesitzer], 0, ""); FahrzeugInfo[vehicleid][fBesitzerID] = 0; FahrzeugInfo[vehicleid][fTuning][0] = 0; FahrzeugInfo[vehicleid][fTuning][1] = 0; FahrzeugInfo[vehicleid][fTuning][2] = 0;
					FahrzeugInfo[vehicleid][fTuning][3] = 0; FahrzeugInfo[vehicleid][fTuning][4] = 0; FahrzeugInfo[vehicleid][fTuning][5] = 0; FahrzeugInfo[vehicleid][fTuning][6] = 0; FahrzeugInfo[vehicleid][fTuning][7] = 0;
					FahrzeugInfo[vehicleid][fTuning][8] = 0; FahrzeugInfo[vehicleid][fTuning][9] = 0; FahrzeugInfo[vehicleid][fTuning][10] = 0; FahrzeugInfo[vehicleid][fTuning][11] = 0; FahrzeugInfo[vehicleid][fTuning][12] = 0; FahrzeugInfo[vehicleid][fTuning][13] = 0; FahrzeugInfo[vehicleid][fJobEXP] = 0;

					GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
					SetVehicleParamsEx(vehicleid, engine, lights, alarm, true, bonnet, boot, objective);

					Motor[vehicleid] = false;
					Licht[vehicleid] = false;
					DOOR[vehicleid] = true;
					Motorhaube[vehicleid] = false;
					Kofferraum[vehicleid] = false;

					mysql_format(sqlHandle, crstring,sizeof(crstring),"INSERT INTO `vehicles` (`ModelID`, `PositionX`, `PositionY`, `PositionZ`, `PositionA`, `Farbe1`, `Farbe2`, `Fraktion`, `Kennzeichen`) VALUES ('%d', '%f', '%f', '%f', '%f', '%d', '%d', '%d', 'Fraktion')"
					,FahrzeugInfo[vehicleid][fModelID],FahrzeugInfo[vehicleid][fPosition][0],FahrzeugInfo[vehicleid][fPosition][1],FahrzeugInfo[vehicleid][fPosition][2],FahrzeugInfo[vehicleid][fPosition][3], FahrzeugInfo[vehicleid][fColor][0], FahrzeugInfo[vehicleid][fColor][1],
					FahrzeugInfo[vehicleid][fFraktion]);
					mysql_tquery(sqlHandle, crstring, "OnVehicleRegistered", "d", vehicleid);

					DeletePVar(playerid,"CreateCar_Typ");
					DeletePVar(playerid,"CreateCar_TypWert");
					DeletePVar(playerid,"CreateCar_ModelID");
					DeletePVar(playerid,"CreateCar_Color1");
				}
				//Autohausfahrzeug
		        else if(GetPVarInt(playerid,"CreateCar_Typ") == 2)
				{
		        	ShowPlayerDialog(playerid,DIALOG_CREATECAR_STEP5,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fahrzeugerstellung","Bitte gebe einen Verkaufspreis für das Fahrzeug an.","Weiter","Zurück");
				}
				//Nebenjobfahrzeug
				else if(GetPVarInt(playerid,"CreateCar_Typ") == 3)
				{
				    new vehicleid, Float:Position[4], crstring[256];
				    GetPlayerPos(playerid,Position[0],Position[1],Position[2]);
				    GetPlayerFacingAngle(playerid,Position[3]);


					if(GetPVarInt(playerid,"CreateCar_TypWert") == 1 || GetPVarInt(playerid,"CreateCar_TypWert") == 3 || GetPVarInt(playerid,"CreateCar_TypWert") == 4 ||
					GetPVarInt(playerid,"CreateCar_TypWert") == 5 || GetPVarInt(playerid,"CreateCar_TypWert") == 6 || GetPVarInt(playerid,"CreateCar_TypWert") == 10)
					{
					    vehicleid = CreateVehicle(GetPVarInt(playerid,"CreateCar_ModelID"),Position[0],Position[1],Position[2],Position[3],GetPVarInt(playerid,"CreateCar_Color1"),strval(inputtext),180);
					}
		   			else if(GetPVarInt(playerid,"CreateCar_TypWert") == 2 || GetPVarInt(playerid,"CreateCar_TypWert") == 7  || GetPVarInt(playerid,"CreateCar_TypWert") == 10
					   || GetPVarInt(playerid,"CreateCar_TypWert") == 11 || GetPVarInt(playerid,"CreateCar_TypWert") == 16 || GetPVarInt(playerid, "CreateCar_TypWert") == 17 || GetPVarInt(playerid, "CreateCar_TypWert") == 18)//Pizzabote || Landwirt || Geldlieferant || Elektriker || Langstreckenfahrer
				    {
						vehicleid = CreateVehicle(GetPVarInt(playerid,"CreateCar_ModelID"),Position[0],Position[1],Position[2],Position[3],GetPVarInt(playerid,"CreateCar_Color1"),strval(inputtext),1800);
					}
					format(crstring,sizeof(crstring),"* Du hast ein Nebenjobfahrzeug erstellt (ModelID: '%d' - Farben: '%d' & '%d' - Nebenjob: '%d')",GetPVarInt(playerid,"CreateCar_ModelID"),GetPVarInt(playerid,"CreateCar_Color1"),GetPVarInt(playerid,"CreateCar_Color2"),GetPVarInt(playerid,"CreateCar_TypWert"));
					SendClientMessage(playerid,COLOR_INFO,crstring);
					PutPlayerInVehicle(playerid,vehicleid,0);

					FahrzeugInfo[vehicleid][fErstellt] = true; FahrzeugInfo[vehicleid][fModelID] = GetPVarInt(playerid,"CreateCar_ModelID");
					FahrzeugInfo[vehicleid][fPosition][0] = Position[0]; FahrzeugInfo[vehicleid][fPosition][1] = Position[1]; FahrzeugInfo[vehicleid][fPosition][2] = Position[2]; FahrzeugInfo[vehicleid][fPosition][3] = Position[3]; FahrzeugInfo[vehicleid][fColor][1] = GetPVarInt(playerid,"CreateCar_Color2");
					format(FahrzeugInfo[vehicleid][fKennzeichen], 0, "Nebenjob"); FahrzeugInfo[vehicleid][fAbgeschleppt] = 0; FahrzeugInfo[vehicleid][fParkkralle] = 0; FahrzeugInfo[vehicleid][fKilometer] = 0; FahrzeugInfo[vehicleid][fColor][0] = GetPVarInt(playerid,"CreateCar_Color1"); FahrzeugInfo[vehicleid][fPaintjob] = 3;
					FahrzeugInfo[vehicleid][fTank] = VehicleData[GetVehicleModel(vehicleid)-400][vehLiter]; FahrzeugInfo[vehicleid][fRang] = 0; FahrzeugInfo[vehicleid][fFraktion] = 0; FahrzeugInfo[vehicleid][fGruppe] = 0; FahrzeugInfo[vehicleid][fAutohaus] = 0; FahrzeugInfo[vehicleid][fNebenjob] = GetPVarInt(playerid,"CreateCar_TypWert");
					FahrzeugInfo[vehicleid][fGarage] = 0; FahrzeugInfo[vehicleid][fGPark] = 0; FahrzeugInfo[vehicleid][fFahrschule] = 0;
					FahrzeugInfo[vehicleid][fSupmobil] = 0; FahrzeugInfo[vehicleid][fZiviroller] = 0; FahrzeugInfo[vehicleid][fImportCar] = 0; FahrzeugInfo[vehicleid][fKurrierCar] = 0;
					FahrzeugInfo[vehicleid][fPreis] = 0; FahrzeugInfo[vehicleid][fBesitzer] = 0; format(FahrzeugInfo[vehicleid][fBesitzer], 0, ""); FahrzeugInfo[vehicleid][fBesitzerID] = 0; FahrzeugInfo[vehicleid][fTuning][0] = 0; FahrzeugInfo[vehicleid][fTuning][1] = 0; FahrzeugInfo[vehicleid][fTuning][2] = 0;
					FahrzeugInfo[vehicleid][fTuning][3] = 0; FahrzeugInfo[vehicleid][fTuning][4] = 0; FahrzeugInfo[vehicleid][fTuning][5] = 0; FahrzeugInfo[vehicleid][fTuning][6] = 0; FahrzeugInfo[vehicleid][fTuning][7] = 0;
					FahrzeugInfo[vehicleid][fTuning][8] = 0; FahrzeugInfo[vehicleid][fTuning][9] = 0; FahrzeugInfo[vehicleid][fTuning][10] = 0; FahrzeugInfo[vehicleid][fTuning][11] = 0; FahrzeugInfo[vehicleid][fTuning][12] = 0; FahrzeugInfo[vehicleid][fTuning][13] = 0; FahrzeugInfo[vehicleid][fJobEXP] = 0;
					SetVehicleNumberPlate(vehicleid,"Nebenjob");
					AddOther(vehicleid);

					Motor[vehicleid] = false;
					Licht[vehicleid] = false;
					DOOR[vehicleid] = false;
					Motorhaube[vehicleid] = false;
					Kofferraum[vehicleid] = false;

					mysql_format(sqlHandle, crstring,sizeof(crstring),"INSERT INTO `vehicles` (`ModelID`, `PositionX`, `PositionY`, `PositionZ`, `PositionA`, `Farbe1`, `Farbe2`, `Nebenjob`, `Kennzeichen`) VALUES ('%d', '%f', '%f', '%f', '%f', '%d', '%d', '%d', 'Nebenjob')"
					,FahrzeugInfo[vehicleid][fModelID],FahrzeugInfo[vehicleid][fPosition][0],FahrzeugInfo[vehicleid][fPosition][1],FahrzeugInfo[vehicleid][fPosition][2],FahrzeugInfo[vehicleid][fPosition][3], FahrzeugInfo[vehicleid][fColor][0], FahrzeugInfo[vehicleid][fColor][1],
					FahrzeugInfo[vehicleid][fNebenjob]);
					mysql_tquery(sqlHandle, crstring, "OnVehicleRegistered", "d", vehicleid);

					DeletePVar(playerid,"CreateCar_Typ");
					DeletePVar(playerid,"CreateCar_TypWert");
					DeletePVar(playerid,"CreateCar_ModelID");
					DeletePVar(playerid,"CreateCar_Color1");
					DeletePVar(playerid,"CreateCar_Color2");
				}
				//Fahrschule
				else if(GetPVarInt(playerid,"CreateCar_Typ") == 3)
				{
				    new vehicleid, Float:Position[4], crstring[256];
				    GetPlayerPos(playerid,Position[0],Position[1],Position[2]);
				    GetPlayerFacingAngle(playerid,Position[3]);



					vehicleid = CreateVehicle(GetPVarInt(playerid,"CreateCar_ModelID"),Position[0],Position[1],Position[2],Position[3],GetPVarInt(playerid,"CreateCar_Color1"),strval(inputtext),1800);
					
					format(crstring,sizeof(crstring),"* Du hast ein Fahrschulfahrzeug erstellt (ModelID: '%d' - Farben: '%d' & '%d')",GetPVarInt(playerid,"CreateCar_ModelID"),GetPVarInt(playerid,"CreateCar_Color1"),GetPVarInt(playerid,"CreateCar_Color2"));
					SendClientMessage(playerid,COLOR_INFO,crstring);
					PutPlayerInVehicle(playerid,vehicleid,0);

					FahrzeugInfo[vehicleid][fErstellt] = true; FahrzeugInfo[vehicleid][fModelID] = GetPVarInt(playerid,"CreateCar_ModelID");
					FahrzeugInfo[vehicleid][fPosition][0] = Position[0]; FahrzeugInfo[vehicleid][fPosition][1] = Position[1]; FahrzeugInfo[vehicleid][fPosition][2] = Position[2]; FahrzeugInfo[vehicleid][fPosition][3] = Position[3]; FahrzeugInfo[vehicleid][fColor][1] = GetPVarInt(playerid,"CreateCar_Color2");
					format(FahrzeugInfo[vehicleid][fKennzeichen], 0, "Fahrschule"); FahrzeugInfo[vehicleid][fAbgeschleppt] = 0; FahrzeugInfo[vehicleid][fParkkralle] = 0; FahrzeugInfo[vehicleid][fKilometer] = 0; FahrzeugInfo[vehicleid][fColor][0] = GetPVarInt(playerid,"CreateCar_Color1"); FahrzeugInfo[vehicleid][fPaintjob] = 3;
					FahrzeugInfo[vehicleid][fTank] = VehicleData[GetVehicleModel(vehicleid)-400][vehLiter]; FahrzeugInfo[vehicleid][fRang] = 0; FahrzeugInfo[vehicleid][fFraktion] = 0; FahrzeugInfo[vehicleid][fGruppe] = 0; FahrzeugInfo[vehicleid][fAutohaus] = 0; FahrzeugInfo[vehicleid][fNebenjob] = 0;
					FahrzeugInfo[vehicleid][fGarage] = 0; FahrzeugInfo[vehicleid][fGPark] = 0; FahrzeugInfo[vehicleid][fFahrschule] = 1;
					FahrzeugInfo[vehicleid][fSupmobil] = 0; FahrzeugInfo[vehicleid][fZiviroller] = 0; FahrzeugInfo[vehicleid][fImportCar] = 0; FahrzeugInfo[vehicleid][fKurrierCar] = 0;
					FahrzeugInfo[vehicleid][fPreis] = 0; FahrzeugInfo[vehicleid][fBesitzer] = 0; format(FahrzeugInfo[vehicleid][fBesitzer], 0, ""); FahrzeugInfo[vehicleid][fBesitzerID] = 0; FahrzeugInfo[vehicleid][fTuning][0] = 0; FahrzeugInfo[vehicleid][fTuning][1] = 0; FahrzeugInfo[vehicleid][fTuning][2] = 0;
					FahrzeugInfo[vehicleid][fTuning][3] = 0; FahrzeugInfo[vehicleid][fTuning][4] = 0; FahrzeugInfo[vehicleid][fTuning][5] = 0; FahrzeugInfo[vehicleid][fTuning][6] = 0; FahrzeugInfo[vehicleid][fTuning][7] = 0;
					FahrzeugInfo[vehicleid][fTuning][8] = 0; FahrzeugInfo[vehicleid][fTuning][9] = 0; FahrzeugInfo[vehicleid][fTuning][10] = 0; FahrzeugInfo[vehicleid][fTuning][11] = 0; FahrzeugInfo[vehicleid][fTuning][12] = 0; FahrzeugInfo[vehicleid][fTuning][13] = 0; FahrzeugInfo[vehicleid][fJobEXP] = 0;
					SetVehicleNumberPlate(vehicleid,"Fahrschule");
					AddOther(vehicleid);

					Motor[vehicleid] = false;
					Licht[vehicleid] = false;
					DOOR[vehicleid] = false;
					Motorhaube[vehicleid] = false;
					Kofferraum[vehicleid] = false;

					mysql_format(sqlHandle, crstring,sizeof(crstring),"INSERT INTO `vehicles` (`ModelID`, `PositionX`, `PositionY`, `PositionZ`, `PositionA`, `Farbe1`, `Farbe2`, `Fahrschule`, `Kennzeichen`) VALUES ('%d', '%f', '%f', '%f', '%f', '%d', '%d', '%d', '%s')"
					,FahrzeugInfo[vehicleid][fModelID],FahrzeugInfo[vehicleid][fPosition][0],FahrzeugInfo[vehicleid][fPosition][1],FahrzeugInfo[vehicleid][fPosition][2],FahrzeugInfo[vehicleid][fPosition][3], FahrzeugInfo[vehicleid][fColor][0], FahrzeugInfo[vehicleid][fColor][1],
					FahrzeugInfo[vehicleid][fFahrschule], FahrzeugInfo[vehicleid][fKennzeichen]);
					mysql_tquery(sqlHandle, crstring, "OnVehicleRegistered", "d", vehicleid);

					DeletePVar(playerid,"CreateCar_Typ");
					DeletePVar(playerid,"CreateCar_TypWert");
					DeletePVar(playerid,"CreateCar_ModelID");
					DeletePVar(playerid,"CreateCar_Color1");
					DeletePVar(playerid,"CreateCar_Color2");
				}
		    }
		}
		case DIALOG_CREATECAR_STEP5:
		{
		    if(response==0)//Zurück
		    {
		        ShowPlayerDialog(playerid,DIALOG_CREATECAR_STEP3,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fahrzeugerstellung","Bitte gebe die erste Farbe für das Fahrzeug an.","Weiter","Zurück");
		    }
		    else if(response==1)//Weiter
		    {
		        if(strval(inputtext) < 0 || strval(inputtext) > 1000000 || !IsNumeric(inputtext))return ShowPlayerDialog(playerid,DIALOG_CREATECAR_STEP5,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fahrzeugerstellung","Bitte gebe einen Verkaufspreis für das Fahrzeug an.","Weiter","Zurück");
		    	new vehicleid, Float:Position[4], crstring[256];
				GetPlayerPos(playerid,Position[0],Position[1],Position[2]);
				GetPlayerFacingAngle(playerid,Position[3]);
				vehicleid = CreateVehicle(GetPVarInt(playerid,"CreateCar_ModelID"),Position[0],Position[1],Position[2],Position[3],GetPVarInt(playerid,"CreateCar_Color1"),GetPVarInt(playerid,"CreateCar_Color2"),180);
				format(crstring,sizeof(crstring),"* Du hast ein Autohausfahrzeug erstellt (ModelID: '%d' - Farben: '%d' & '%d' - Autohaus: '%d' - Preis: '%d')",GetPVarInt(playerid,"CreateCar_ModelID"),GetPVarInt(playerid,"CreateCar_Color1"),GetPVarInt(playerid,"CreateCar_Color2"),GetPVarInt(playerid,"CreateCar_TypWert"),strval(inputtext));
				SendClientMessage(playerid,COLOR_INFO,crstring);
				PutPlayerInVehicle(playerid,vehicleid,0);

				GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(vehicleid, true, false, false, true, false, false, false);

				FahrzeugInfo[vehicleid][fErstellt] = true;
				FahrzeugInfo[vehicleid][fModelID] = GetPVarInt(playerid,"CreateCar_ModelID");
				FahrzeugInfo[vehicleid][fPosition][0] = Position[0];
				FahrzeugInfo[vehicleid][fPosition][1] = Position[1];
				FahrzeugInfo[vehicleid][fPosition][2] = Position[2];
				FahrzeugInfo[vehicleid][fPosition][3] = Position[3];
				FahrzeugInfo[vehicleid][fColor][1] = GetPVarInt(playerid,"CreateCar_Color2");
				format(FahrzeugInfo[vehicleid][fKennzeichen], 0, "Autohaus");
				FahrzeugInfo[vehicleid][fAbgeschleppt] = 0;
				FahrzeugInfo[vehicleid][fParkkralle] = 0;
				FahrzeugInfo[vehicleid][fKilometer] = 0;
				FahrzeugInfo[vehicleid][fColor][0] = GetPVarInt(playerid,"CreateCar_Color1");
				FahrzeugInfo[vehicleid][fPaintjob] = 3;
				FahrzeugInfo[vehicleid][fTank] = VehicleData[GetVehicleModel(vehicleid)-400][vehLiter];
				FahrzeugInfo[vehicleid][fRang] = 0;
				FahrzeugInfo[vehicleid][fFraktion] = 0;
				FahrzeugInfo[vehicleid][fGruppe] = 0;
				FahrzeugInfo[vehicleid][fAutohaus] = GetPVarInt(playerid,"CreateCar_TypWert");
				FahrzeugInfo[vehicleid][fNebenjob] = 0;
				FahrzeugInfo[vehicleid][fGarage] = 0;
				FahrzeugInfo[vehicleid][fGPark] = 0;
				FahrzeugInfo[vehicleid][fFahrschule] = 0;
				FahrzeugInfo[vehicleid][fSupmobil] = 0;
				FahrzeugInfo[vehicleid][fZiviroller] = 0;
				FahrzeugInfo[vehicleid][fImportCar] = 0;
				FahrzeugInfo[vehicleid][fKurrierCar] = 0;
				FahrzeugInfo[vehicleid][fJobEXP] = 0;
				FahrzeugInfo[vehicleid][fPreis] = strval(inputtext);
				FahrzeugInfo[vehicleid][fBesitzer] = 0;
				format(FahrzeugInfo[vehicleid][fBesitzer], 0, "");
				FahrzeugInfo[vehicleid][fBesitzerID] = 0;
				FahrzeugInfo[vehicleid][fTuning][0] = 0; FahrzeugInfo[vehicleid][fTuning][1] = 0; FahrzeugInfo[vehicleid][fTuning][2] = 0;
				FahrzeugInfo[vehicleid][fTuning][3] = 0; FahrzeugInfo[vehicleid][fTuning][4] = 0; FahrzeugInfo[vehicleid][fTuning][5] = 0;
				FahrzeugInfo[vehicleid][fTuning][6] = 0; FahrzeugInfo[vehicleid][fTuning][7] = 0; FahrzeugInfo[vehicleid][fTuning][8] = 0;
				FahrzeugInfo[vehicleid][fTuning][9] = 0; FahrzeugInfo[vehicleid][fTuning][10] = 0; FahrzeugInfo[vehicleid][fTuning][11] = 0;
				FahrzeugInfo[vehicleid][fTuning][12] = 0; FahrzeugInfo[vehicleid][fTuning][13] = 0;
				SetVehicleNumberPlate(vehicleid,"Autohaus");

				format(crstring,sizeof(crstring),"{FE0000}%s {FFFFFF}zu verkaufen!\nPreis: {FE0000}%d$",FahrzeugName[FahrzeugInfo[vehicleid][fModelID]-400],strval(inputtext));
				FahrzeugInfo[vehicleid][fLabel] = CreateDynamic3DTextLabel(crstring, 0xFFFFFFFF, 0.0, 0.0, 0.0, 7.0, INVALID_PLAYER_ID, vehicleid);
				Attach3DTextLabelToVehicle(FahrzeugInfo[vehicleid][fLabel],vehicleid,0.0,0.0,0.2);

				Motor[vehicleid] = true;
				Licht[vehicleid] = false;
				DOOR[vehicleid] = false;
				Motorhaube[vehicleid] = false;
				Kofferraum[vehicleid] = false;

				mysql_format(sqlHandle, crstring,sizeof(crstring),"INSERT INTO `vehicles` (`ModelID`, `PositionX`, `PositionY`, `PositionZ`, `PositionA`, `Farbe1`, `Farbe2`, `Autohaus`, `Preis`, `Kennzeichen`) VALUES ('%d', '%f', '%f', '%f', '%f', '%d', '%d', '%d', '%d', 'Autohaus')"
				,FahrzeugInfo[vehicleid][fModelID],FahrzeugInfo[vehicleid][fPosition][0],FahrzeugInfo[vehicleid][fPosition][1],FahrzeugInfo[vehicleid][fPosition][2],FahrzeugInfo[vehicleid][fPosition][3], GetPVarInt(playerid,"CreateCar_Color1"),GetPVarInt(playerid,"CreateCar_Color2"),
				FahrzeugInfo[vehicleid][fAutohaus],strval(inputtext));
				mysql_tquery(sqlHandle, crstring, "OnVehicleRegistered", "d", vehicleid);

				DeletePVar(playerid,"CreateCar_Typ");
				DeletePVar(playerid,"CreateCar_TypWert");
				DeletePVar(playerid,"CreateCar_ModelID");
				DeletePVar(playerid,"CreateCar_Color1");
				DeletePVar(playerid,"CreateCar_Color2");
			}
		}
		case DIALOG_KOFFERRAUM:
		{
		    new i = GetPVarInt(playerid,"FahrzeugID");
			if(response==0)//Zurück
			{
			    DeletePVar(playerid,"FahrzeugID");
   				GetVehicleParamsEx(i, engine, lights, alarm, doors, bonnet, boot, objective);
    			SetVehicleParamsEx(i, engine, lights, alarm, doors, bonnet, false, objective);
				Kofferraum[i] = false;
			}
			else if(response==1)//Weiter
			{
				switch(listitem)
				{
				    case 0://Geld
				    {
  						ShowPlayerDialog(playerid,DIALOG_KOFFERRAUM_GELD,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Kofferraum","Rausholen\nReinlegen","Weiter","Zurück");
				    }
				    case 1://Waffen
				    {
				        ShowPlayerDialog(playerid,DIALOG_KOFFERRAUM_WAFFE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Kofferraum","Rausholen\nReinlegen","Weiter","Zurück");
				    }
				    case 2://Drogen
				    {
				        ShowPlayerDialog(playerid,DIALOG_KOFFERRAUM_DROGEN,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Kofferraum","Rausholen\nReinlegen","Weiter","Zurück");
				    }
				    case 3://Materialien
				    {
				        DeletePVar(playerid,"FahrzeugID");
						KeineFunktion
						GetVehicleParamsEx(i, engine, lights, alarm, doors, bonnet, boot, objective);
						SetVehicleParamsEx(i, engine, lights, alarm, doors, bonnet, false, objective);
						Kofferraum[i] = false;
				    }
				}
			}
		}
		case DIALOG_KOFFERRAUM_DROGEN:
		{
		    new i = GetPVarInt(playerid,"FahrzeugID"), str[264];
			if(response==0){ ShowPlayerDialog(playerid,DIALOG_KOFFERRAUM,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Kofferraum","Geld\nWaffen\nDrogen\nMaterialien","Weiter","Schließen");}//Zurück
			else if(response==1)//Weiter
			{
				switch(listitem)
				{
				    case 0://Rausholen
				    {
				        SetPVarInt(playerid,"Kofferraum",1);
				        format(str,sizeof(str),"{FFFFFF}Drogen im Kofferraum: {FF0000}%d Gramm\n\n{FFFFFF}Wie viel Gramm möchtest du aus dem Kofferraum holen ?",FahrzeugInfo[i][fkDrogen]);
				        ShowPlayerDialog(playerid,DIALOG_KOFFERRAUM_DROGEN1,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Kofferraum",str,"Weiter","Zurück");
				    }
				    case 1://Reinlegen
					{
					    SetPVarInt(playerid,"Kofferraum",2);
	        			format(str,sizeof(str),"{FFFFFF}Drogen im Kofferraum: {FF0000}%d Gramm\n\n{FFFFFF}Wie viel Gramm möchtest du in den Kofferraum legen ?",FahrzeugInfo[i][fkDrogen]);
				        ShowPlayerDialog(playerid,DIALOG_KOFFERRAUM_DROGEN1,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Kofferraum",str,"Weiter","Zurück");
					}
				}
			}
		}
		case DIALOG_KOFFERRAUM_DROGEN1:
		{
		    new i = GetPVarInt(playerid,"FahrzeugID"), str[364];
			if(response==0){ShowPlayerDialog(playerid,DIALOG_KOFFERRAUM_DROGEN,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Kofferraum","Rausholen\nReinlegen","Weiter","Zurück");}//Zurück
			else if(response==1)//Weiter
			{
			    if(GetPVarInt(playerid,"Kofferraum") == 1)//Rausholen
	   			{
	   			    if(strval(inputtext) > 0 && strval(inputtext) < 100000 && IsNumeric(inputtext))
					{
	   			    	if(FahrzeugInfo[i][fkDrogen] >= strval(inputtext))
						{
						    SetPVarInt(playerid,"Kofferraum",3);
						    SpielerInfo[playerid][sDrogen] += strval(inputtext);
						    FahrzeugInfo[i][fkDrogen] -= strval(inputtext);
							format(str,sizeof(str),"{FFFFFF}Drogen im Kofferraum: {FF0000}%d Gramm\n\n{FFFFFF}Du hast {FF0000}%d Gramm{FFFFFF} aus dem Kofferraum genommen.",FahrzeugInfo[i][fkDrogen],strval(inputtext));
				        	ShowPlayerDialog(playerid,DIALOG_KOFFERRAUM_DROGEN1,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Kofferraum",str,"Zurück","");
						}
						else
						{
							format(str,sizeof(str),"{FFFFFF}Drogen im Kofferraum: {FF0000}%d Gramm\n\n{FFFFFF}Wie viel Gramm möchtest du aus dem Kofferraum holen ?\n{FF0000}Du kannst nicht soviel Gramm aus dem Kofferraum holen. (max. %d Gramm)",FahrzeugInfo[i][fkDrogen],FahrzeugInfo[i][fkDrogen]);
				        	ShowPlayerDialog(playerid,DIALOG_KOFFERRAUM_DROGEN1,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Kofferraum",str,"Weiter","Zurück");
						}
	 				}
	 				else
	 				{
   						format(str,sizeof(str),"{FFFFFF}Drogen im Kofferraum: {FF0000}%d Gramm\n\n{FFFFFF}Wie viel Gramm möchtest du aus dem Kofferraum holen ?\n{FF0000}Du kannst nicht soviel Gramm aus dem Kofferraum holen.",FahrzeugInfo[i][fkDrogen]);
				        ShowPlayerDialog(playerid,DIALOG_KOFFERRAUM_DROGEN1,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Kofferraum",str,"Weiter","Zurück");
	  				}
	   			}
	   			else if(GetPVarInt(playerid,"Kofferraum") == 2)//Reinlegen
	   			{
	   			    if(strval(inputtext) > 0 && strval(inputtext) < 1000000 && IsNumeric(inputtext))
					{
	   			        new Betrag = strval(inputtext)+FahrzeugInfo[i][fkDrogen];
	   			    	if(SpielerInfo[playerid][sDrogen] < strval(inputtext))
	   			    	{
	   			    	    ShowPlayerDialog(playerid,DIALOG_KOFFERRAUM_DROGEN,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Kofferraum","Rausholen\nReinlegen","Weiter","Zurück");
	   			    	    SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Gramm bei dir.");
	   			    	    return 1;
	   			    	}
	   			    	if(Betrag <= 100000)
						{
						    SetPVarInt(playerid,"Kofferraum",3);
						    SpielerInfo[playerid][sDrogen] -= strval(inputtext);
						    FahrzeugInfo[i][fkDrogen] += Betrag;
							format(str,sizeof(str),"{FFFFFF}Drogen im Kofferraum: {FF0000}%d Gramm\n\n{FFFFFF}Die Drogen in Höhe von {FF0000}%d Gramm{FFFFFF} wurden in den Kofferraum gelegt.",FahrzeugInfo[i][fkDrogen],strval(inputtext));
				        	ShowPlayerDialog(playerid,DIALOG_KOFFERRAUM_DROGEN1,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Kofferraum",str,"Zurück","");
						}
						else
						{
							format(str,sizeof(str),"{FFFFFF}Drogen im Kofferraum: {FF0000}%d Gramm\n\n{FFFFFF}Wie viel Gramm möchtest du in den Kofferraum legen ?\n{FF0000}Du kannst nicht soviel Gramm in das Fahreug legen. (max. 100.000)",FahrzeugInfo[i][fkDrogen]);
				        	ShowPlayerDialog(playerid,DIALOG_KOFFERRAUM_DROGEN1,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Kofferraum",str,"Weiter","Zurück");
						}
	 				}
	 				else
	 				{
   						format(str,sizeof(str),"{FFFFFF}Drogen im Kofferraum: {FF0000}%d Gramm\n\n{FFFFFF}Wie viel Gramm möchtest du in den Kofferraum legen ?\n{FF0000}Du kannst nicht soviel Drogen in das Fahreug legen.",FahrzeugInfo[i][fkDrogen]);
				        ShowPlayerDialog(playerid,DIALOG_KOFFERRAUM_DROGEN1,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Kofferraum",str,"Weiter","Zurück");
	  				}
	   			}
	   			else if(GetPVarInt(playerid,"Kofferraum") == 3)//Erfolgreich
	   			{
	   			    DeletePVar(playerid,"Kofferraum");
	   			    ShowPlayerDialog(playerid,DIALOG_KOFFERRAUM_DROGEN,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Kofferraum","Rausholen\nReinlegen","Weiter","Zurück");
	   			}
			}
		}
		case DIALOG_KOFFERRAUM_GELD:
		{
		    new i = GetPVarInt(playerid,"FahrzeugID"), str[264];
			if(response==0){ ShowPlayerDialog(playerid,DIALOG_KOFFERRAUM,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Kofferraum","Geld\nWaffen\nDrogen\nMaterialien","Weiter","Schließen");}//Zurück
			else if(response==1)//Weiter
			{
				switch(listitem)
				{
				    case 0://Rausholen
				    {
				        SetPVarInt(playerid,"Kofferraum",1);
				        format(str,sizeof(str),"{FFFFFF}Geld im Kofferraum: {FF0000}%d$\n\n{FFFFFF}Wie viel Geld möchtest du aus dem Kofferraum holen ?",FahrzeugInfo[i][fkGeld]);
				        ShowPlayerDialog(playerid,DIALOG_KOFFERRAUM_GELD1,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Kofferraum",str,"Weiter","Zurück");
				    }
				    case 1://Reinlegen
					{
					    SetPVarInt(playerid,"Kofferraum",2);
	        			format(str,sizeof(str),"{FFFFFF}Geld im Kofferraum: {FF0000}%d$\n\n{FFFFFF}Wie viel Geld möchtest du in den Kofferraum legen ?",FahrzeugInfo[i][fkGeld]);
				        ShowPlayerDialog(playerid,DIALOG_KOFFERRAUM_GELD1,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Kofferraum",str,"Weiter","Zurück");
					}
				}
			}
		}
		case DIALOG_KOFFERRAUM_GELD1:
		{
		    new i = GetPVarInt(playerid,"FahrzeugID"), str[364];
			if(response==0){ShowPlayerDialog(playerid,DIALOG_KOFFERRAUM_GELD,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Kofferraum","Rausholen\nReinlegen","Weiter","Zurück");}//Zurück
			else if(response==1)//Weiter
			{
			    if(GetPVarInt(playerid,"Kofferraum") == 1)//Rausholen
	   			{
	   			    if(strval(inputtext) > 0 && strval(inputtext) < 100000 && IsNumeric(inputtext))
					{
	   			    	if(FahrzeugInfo[i][fkGeld] >= strval(inputtext))
						{
						    SetPVarInt(playerid,"Kofferraum",3);
						    GivePlayerMoneyEx(playerid,strval(inputtext));
						    FahrzeugInfo[i][fkGeld] -= strval(inputtext);
							format(str,sizeof(str),"{FFFFFF}Geld im Kofferraum: {FF0000}%d$\n\n{FFFFFF}Du hast {FF0000}%d${FFFFFF} aus dem Kofferraum genommen.",FahrzeugInfo[i][fkGeld],strval(inputtext));
				        	ShowPlayerDialog(playerid,DIALOG_KOFFERRAUM_GELD1,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Kofferraum",str,"Zurück","");
						}
						else
						{
							format(str,sizeof(str),"{FFFFFF}Geld im Kofferraum: {FF0000}%d$\n\n{FFFFFF}Wie viel Geld möchtest du aus dem Kofferraum holen ?\n{FF0000}Du kannst nicht soviel Geld aus dem Kofferraum holen. (max. %d$)",FahrzeugInfo[i][fkGeld],FahrzeugInfo[i][fkGeld]);
				        	ShowPlayerDialog(playerid,DIALOG_KOFFERRAUM_GELD1,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Kofferraum",str,"Weiter","Zurück");
						}
	 				}
	 				else
	 				{
   						format(str,sizeof(str),"{FFFFFF}Geld im Kofferraum: {FF0000}%d$\n\n{FFFFFF}Wie viel Geld möchtest du aus dem Kofferraum holen ?\n{FF0000}Du kannst nicht soviel Geld aus dem Kofferraum holen.",FahrzeugInfo[i][fkGeld]);
				        ShowPlayerDialog(playerid,DIALOG_KOFFERRAUM_GELD1,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Kofferraum",str,"Weiter","Zurück");
	  				}
	   			}
	   			else if(GetPVarInt(playerid,"Kofferraum") == 2)//Reinlegen
	   			{
	   			    if(strval(inputtext) > 0 && strval(inputtext) < 1000000 && IsNumeric(inputtext))
					{
	   			        new Betrag = strval(inputtext)+FahrzeugInfo[i][fkGeld];
	   			    	if(GetPlayerMoneyEx(playerid) < strval(inputtext))
	   			    	{
	   			    	    ShowPlayerDialog(playerid,DIALOG_KOFFERRAUM_GELD,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Kofferraum","Rausholen\nReinlegen","Weiter","Zurück");
	   			    	    SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
	   			    	    return 1;
	   			    	}
	   			    	if(Betrag <= 100000)
						{
						    SetPVarInt(playerid,"Kofferraum",3);
						    GivePlayerMoneyEx(playerid,-strval(inputtext));
						    FahrzeugInfo[i][fkGeld] += Betrag;
							format(str,sizeof(str),"{FFFFFF}Geld im Kofferraum: {FF0000}%d$\n\n{FFFFFF}Das Geld in Höhe von {FF0000}%d${FFFFFF} wurde in den Kofferraum gelegt.",FahrzeugInfo[i][fkGeld],strval(inputtext));
				        	ShowPlayerDialog(playerid,DIALOG_KOFFERRAUM_GELD1,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Kofferraum",str,"Zurück","");
						}
						else
						{
							format(str,sizeof(str),"{FFFFFF}Geld im Kofferraum: {FF0000}%d$\n\n{FFFFFF}Wie viel Geld möchtest du in den Kofferraum legen ?\n{FF0000}Du kannst nicht soviel Geld in das Fahreug legen. (max. 100.000$)",FahrzeugInfo[i][fkGeld]);
				        	ShowPlayerDialog(playerid,DIALOG_KOFFERRAUM_GELD1,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Kofferraum",str,"Weiter","Zurück");
						}
	 				}
	 				else
	 				{
   						format(str,sizeof(str),"{FFFFFF}Geld im Kofferraum: {FF0000}%d$\n\n{FFFFFF}Wie viel Geld möchtest du in den Kofferraum legen ?\n{FF0000}Du kannst nicht soviel Geld in das Fahreug legen.",FahrzeugInfo[i][fkGeld]);
				        ShowPlayerDialog(playerid,DIALOG_KOFFERRAUM_GELD1,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Kofferraum",str,"Weiter","Zurück");
	  				}
	   			}
	   			else if(GetPVarInt(playerid,"Kofferraum") == 3)//Erfolgreich
	   			{
	   			    DeletePVar(playerid,"Kofferraum");
	   			    ShowPlayerDialog(playerid,DIALOG_KOFFERRAUM_GELD,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Kofferraum","Rausholen\nReinlegen","Weiter","Zurück");
	   			}
			}
		}
		case DIALOG_KOFFERRAUM_WAFFE:
		{
            new i = GetPVarInt(playerid,"FahrzeugID"), str[264];
            if(response==0){ ShowPlayerDialog(playerid,DIALOG_KOFFERRAUM,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Kofferraum","Geld\nWaffen\nDrogen\nMaterialien","Weiter","Schließen");}//Zurück
            else if(response==1)//Weiter
            {
                switch(listitem)
                {
                    case 0://Rausholen
                    {
                        if(FahrzeugInfo[i][fkWaffe][0] < 1)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Im Kofferraum liegt keine Waffe.");
                        GivePlayerWeapon(playerid, WEAPON:FahrzeugInfo[i][fkWaffe][0], FahrzeugInfo[i][fkWaffe][1]);
                        format(str,sizeof(str),"* %s beugt sich leicht und nimmt etwas aus dem Kofferraum (%s).",SpielerInfo[playerid][sName],WaffenName(FahrzeugInfo[i][fkWaffe][0]));
						ProxDetector(12, playerid, str,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						FahrzeugInfo[i][fkWaffe][0] = 0; FahrzeugInfo[i][fkWaffe][0] = 0;
                    }
                    case 1://Reinlegen
                    {
                        if(FahrzeugInfo[i][fkWaffe][0] > 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Im Kofferraum liegt bereits eine Waffe.");
                        if(GetPlayerWeapon(playerid) < WEAPON:1)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast keine Waffe in der Hand, die du reinlegen könntest.");
						SetPlayerAmmo(playerid, GetPlayerWeapon(playerid), WEAPON:0);
						format(str,sizeof(str),"* %s beugt sich leicht und legt etwas in den Kofferraum (%s).",SpielerInfo[playerid][sName],WaffenName(GetPlayerWeapon(playerid)));
						ProxDetector(12, playerid, str,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						FahrzeugInfo[i][fkWaffe][0] = GetPlayerWeapon(playerid); FahrzeugInfo[i][fkWaffe][1] = GetPlayerAmmo(playerid);
                    }
                }
            }
		}
		case DIALOG_PAINTBALL:
		{
		    new str[264];
			if(response==0){}//Zurück
			else if(response==1)//Weiter
			{
				switch(listitem)
				{
				    case 0://Deagle Only
				    {
				        SavePlayerWeapons(playerid);
				        SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Du kannst die Paintballarena jederzeit mit '/verlassen' verlassen.");
				        foreach(new i : Player)
						{
							if(GetPVarInt(i,"Paintball") != 1)continue;
							format(str,sizeof(str),"%s hat die Paintballarena betreten.",SpielerInfo[playerid][sName]);
							SendClientMessage(i,COLOR_YELLOW,str);
						}
						PaintballSpieler[0]++;
						SetPVarInt(playerid,"Paintball",1);
						GivePlayerMoneyEx(playerid,-250);
						ResetPlayerWeapons(playerid);
						GivePlayerWeapon(playerid,WEAPON:24,200);
						SetPlayerArmour(playerid,0);
						SetPlayerHealth(playerid,100);
		    			SetPlayerInterior(playerid,1);
					    SetPlayerVirtualWorld(playerid,1);

						new rand = random(8);
						if(rand == 0)//Position 1
						{
			   				SetPlayerPos(playerid,2169.461181,1618.798339,999.976562);
						}
						else if(rand == 1)//Position 2
						{
						    SetPlayerPos(playerid,2175.5515,1577.9655,999.9684);
						    SetPlayerFacingAngle(playerid,356.6723);
						}
						else if(rand == 2)//Position 3
						{
		    				SetPlayerPos(playerid,2190.0120,1577.5569,999.9658);
						    SetPlayerFacingAngle(playerid,54.3028);
						}
						else if(rand == 3)//Position 4
						{
		    				SetPlayerPos(playerid,2205.3918,1580.6798,999.9794);
						    SetPlayerFacingAngle(playerid,353.1789);
						}
						else if(rand == 4)//Position 5
						{
						    SetPlayerPos(playerid,2208.2175,1552.1301,1007.2906);
						    SetPlayerFacingAngle(playerid,268.2413);
						}
						else if(rand == 5)//Position 6
						{
						    SetPlayerPos(playerid,2229.6868,1597.1917,999.9677);
						    SetPlayerFacingAngle(playerid,98.4130);
						}
						else if(rand == 6)//Position 7
		    			{
						    SetPlayerPos(playerid,2218.3252,1613.9906,999.9827);
						    SetPlayerFacingAngle(playerid,356.2654);
						}
						else if(rand == 7)//Position 8
		    			{
						    SetPlayerPos(playerid,2204.7673,1609.1569,999.9720);
						    SetPlayerFacingAngle(playerid,358.4588);
						}
				    }
				    case 1://Deagle Shoutgun
				    {
				        SavePlayerWeapons(playerid);
				        SendClientMessage(playerid,COLOR_INFO,"Du kannst die Paintballarena jederzeit mit '/verlassen' verlassen.");
        				foreach(new i : Player)
						{
							if(GetPVarInt(i,"Paintball") != 2)continue;
							format(str,sizeof(str),"%s hat die Paintballarena betreten.",SpielerInfo[playerid][sName]);
							SendClientMessage(i,COLOR_YELLOW,str);
						}
						PaintballSpieler[1]++;
						SetPVarInt(playerid,"Paintball",2);
						GivePlayerMoneyEx(playerid,-250);
						ResetPlayerWeapons(playerid);
						GivePlayerWeapon(playerid,WEAPON:24,200);
						GivePlayerWeapon(playerid,WEAPON:25,200);
						SetPlayerArmour(playerid,0);
						SetPlayerHealth(playerid,100);
		    			SetPlayerInterior(playerid,1);
					    SetPlayerVirtualWorld(playerid,2);

						new rand = random(8);
						if(rand == 0)//Position 1
						{
			   				SetPlayerPos(playerid,2169.461181,1618.798339,999.976562);
						}
						else if(rand == 1)//Position 2
						{
						    SetPlayerPos(playerid,2175.5515,1577.9655,999.9684);
						    SetPlayerFacingAngle(playerid,356.6723);
						}
						else if(rand == 2)//Position 3
						{
		    				SetPlayerPos(playerid,2190.0120,1577.5569,999.9658);
						    SetPlayerFacingAngle(playerid,54.3028);
						}
						else if(rand == 3)//Position 4
						{
		    				SetPlayerPos(playerid,2205.3918,1580.6798,999.9794);
						    SetPlayerFacingAngle(playerid,353.1789);
						}
						else if(rand == 4)//Position 5
						{
						    SetPlayerPos(playerid,2208.2175,1552.1301,1007.2906);
						    SetPlayerFacingAngle(playerid,268.2413);
						}
						else if(rand == 5)//Position 6
						{
						    SetPlayerPos(playerid,2229.6868,1597.1917,999.9677);
						    SetPlayerFacingAngle(playerid,98.4130);
						}
						else if(rand == 6)//Position 7
		    			{
						    SetPlayerPos(playerid,2218.3252,1613.9906,999.9827);
						    SetPlayerFacingAngle(playerid,356.2654);
						}
						else if(rand == 7)//Position 8
		    			{
						    SetPlayerPos(playerid,2204.7673,1609.1569,999.9720);
						    SetPlayerFacingAngle(playerid,358.4588);
						}
				    }
				    case 2://1vs1
				    {
				        SavePlayerWeapons(playerid);
    					format(str,sizeof(str),"{FFFFFF}Arena: {FF0000}1{FFFFFF} 		| Spieler: {FF0000}%d/2\n{FFFFFF}Arena: {FF0000}2{FFFFFF} 		| Spieler: {FF0000}%d/2\n{FFFFFF}Arena: {FF0000}3{FFFFFF} 		| Spieler: {FF0000}%d/2",PaintballSpieler[2],PaintballSpieler[3],PaintballSpieler[4]);
						ShowPlayerDialog(playerid,DIALOG_PAINTBALL_1VS1,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Paintball",str,"Beitreten","Zurück");
				    }
				}
			}
		}
		case DIALOG_PAINTBALL_1VS1:
		{
		    new str[264];
			if(response==0)//Zurück
			{
				format(str,sizeof(str),"{FFFFFF}Arena: {FF0000}Deagle Only{FFFFFF} 			| Spieler: {FF0000}%d\n{FFFFFF}Arena: {FF0000}Deagle & Shotgun{FFFFFF} 		| Spieler: {FF0000}%d\n{FFFFFF}Arena: {FF0000}1vs1{FFFFFF}",PaintballSpieler[0],PaintballSpieler[1]);
				ShowPlayerDialog(playerid,DIALOG_PAINTBALL,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Paintball",str,"Weiter","Zurück");
			}
			else if(response==1)//Weiter
			{
				switch(listitem)
				{
				    case 0://Arena1
				    {
				        if(PaintballSpieler[2] < 2)
				        {
				            SendClientMessage(playerid,COLOR_INFO,"Du kannst die Paintballarena jederzeit mit '/verlassen' verlassen.");
        					foreach(new i : Player)
							{
								if(GetPVarInt(i,"Paintball") != 3)continue;
								format(str,sizeof(str),"%s hat die Paintballarena betreten.",SpielerInfo[playerid][sName]);
								SendClientMessage(i,COLOR_YELLOW,str);
							}
							PaintballSpieler[2]++;
							SetPVarInt(playerid,"Paintball",3);
							GivePlayerMoneyEx(playerid,-250);
							ResetPlayerWeapons(playerid);
							GivePlayerWeapon(playerid,WEAPON:24,200);
							SetPlayerArmour(playerid,0);
							SetPlayerHealth(playerid,100);
			    			SetPlayerInterior(playerid,1);
						    SetPlayerVirtualWorld(playerid,3);

							new rand = random(8);
							if(rand == 0)//Position 1
							{
				   				SetPlayerPos(playerid,2169.461181,1618.798339,999.976562);
							}
							else if(rand == 1)//Position 2
							{
							    SetPlayerPos(playerid,2175.5515,1577.9655,999.9684);
							    SetPlayerFacingAngle(playerid,356.6723);
							}
							else if(rand == 2)//Position 3
							{
			    				SetPlayerPos(playerid,2190.0120,1577.5569,999.9658);
							    SetPlayerFacingAngle(playerid,54.3028);
							}
							else if(rand == 3)//Position 4
							{
			    				SetPlayerPos(playerid,2205.3918,1580.6798,999.9794);
							    SetPlayerFacingAngle(playerid,353.1789);
							}
							else if(rand == 4)//Position 5
							{
							    SetPlayerPos(playerid,2208.2175,1552.1301,1007.2906);
							    SetPlayerFacingAngle(playerid,268.2413);
							}
							else if(rand == 5)//Position 6
							{
							    SetPlayerPos(playerid,2229.6868,1597.1917,999.9677);
							    SetPlayerFacingAngle(playerid,98.4130);
							}
							else if(rand == 6)//Position 7
			    			{
							    SetPlayerPos(playerid,2218.3252,1613.9906,999.9827);
							    SetPlayerFacingAngle(playerid,356.2654);
							}
							else if(rand == 7)//Position 8
			    			{
							    SetPlayerPos(playerid,2204.7673,1609.1569,999.9720);
							    SetPlayerFacingAngle(playerid,358.4588);
							}
				        }
				        else SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Die Arena 1 ist belegt.");
				    }
				    case 1://Arena2
				    {
        				if(PaintballSpieler[3] < 2)
				        {
				            SendClientMessage(playerid,COLOR_INFO,"Du kannst die Paintballarena jederzeit mit '/verlassen' verlassen.");
        					foreach(new i : Player)
							{
								if(GetPVarInt(i,"Paintball") != 4)continue;
								format(str,sizeof(str),"%s hat die Paintballarena betreten.",SpielerInfo[playerid][sName]);
								SendClientMessage(i,COLOR_YELLOW,str);
							}
							PaintballSpieler[3]++;
							SetPVarInt(playerid,"Paintball",4);
							GivePlayerMoneyEx(playerid,-250);
							ResetPlayerWeapons(playerid);
							GivePlayerWeapon(playerid,WEAPON:24,200);
							SetPlayerArmour(playerid,0);
							SetPlayerHealth(playerid,100);
			    			SetPlayerInterior(playerid,1);
						    SetPlayerVirtualWorld(playerid,4);

							new rand = random(8);
							if(rand == 0)//Position 1
							{
				   				SetPlayerPos(playerid,2169.461181,1618.798339,999.976562);
							}
							else if(rand == 1)//Position 2
							{
							    SetPlayerPos(playerid,2175.5515,1577.9655,999.9684);
							    SetPlayerFacingAngle(playerid,356.6723);
							}
							else if(rand == 2)//Position 3
							{
			    				SetPlayerPos(playerid,2190.0120,1577.5569,999.9658);
							    SetPlayerFacingAngle(playerid,54.3028);
							}
							else if(rand == 3)//Position 4
							{
			    				SetPlayerPos(playerid,2205.3918,1580.6798,999.9794);
							    SetPlayerFacingAngle(playerid,353.1789);
							}
							else if(rand == 4)//Position 5
							{
							    SetPlayerPos(playerid,2208.2175,1552.1301,1007.2906);
							    SetPlayerFacingAngle(playerid,268.2413);
							}
							else if(rand == 5)//Position 6
							{
							    SetPlayerPos(playerid,2229.6868,1597.1917,999.9677);
							    SetPlayerFacingAngle(playerid,98.4130);
							}
							else if(rand == 6)//Position 7
			    			{
							    SetPlayerPos(playerid,2218.3252,1613.9906,999.9827);
							    SetPlayerFacingAngle(playerid,356.2654);
							}
							else if(rand == 7)//Position 8
			    			{
							    SetPlayerPos(playerid,2204.7673,1609.1569,999.9720);
							    SetPlayerFacingAngle(playerid,358.4588);
							}
				        }
				        else SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Die Arena 2 ist belegt.");
				    }
				    case 2://Arena3
				    {
    					if(PaintballSpieler[4] < 2)
				        {
				            SendClientMessage(playerid,COLOR_INFO,"Du kannst die Paintballarena jederzeit mit '/verlassen' verlassen.");
        					foreach(new i : Player)
							{
								if(GetPVarInt(i,"Paintball") != 5)continue;
								format(str,sizeof(str),"%s hat die Paintballarena betreten.",SpielerInfo[playerid][sName]);
								SendClientMessage(i,COLOR_YELLOW,str);
							}
							PaintballSpieler[4]++;
							SetPVarInt(playerid,"Paintball",5);
							GivePlayerMoneyEx(playerid,-250);
							ResetPlayerWeapons(playerid);
							GivePlayerWeapon(playerid,WEAPON:24,200);
							SetPlayerArmour(playerid,0);
							SetPlayerHealth(playerid,100);
			    			SetPlayerInterior(playerid,1);
						    SetPlayerVirtualWorld(playerid,5);

							new rand = random(8);
							if(rand == 0)//Position 1
							{
				   				SetPlayerPos(playerid,2169.461181,1618.798339,999.976562);
							}
							else if(rand == 1)//Position 2
							{
							    SetPlayerPos(playerid,2175.5515,1577.9655,999.9684);
							    SetPlayerFacingAngle(playerid,356.6723);
							}
							else if(rand == 2)//Position 3
							{
			    				SetPlayerPos(playerid,2190.0120,1577.5569,999.9658);
							    SetPlayerFacingAngle(playerid,54.3028);
							}
							else if(rand == 3)//Position 4
							{
			    				SetPlayerPos(playerid,2205.3918,1580.6798,999.9794);
							    SetPlayerFacingAngle(playerid,353.1789);
							}
							else if(rand == 4)//Position 5
							{
							    SetPlayerPos(playerid,2208.2175,1552.1301,1007.2906);
							    SetPlayerFacingAngle(playerid,268.2413);
							}
							else if(rand == 5)//Position 6
							{
							    SetPlayerPos(playerid,2229.6868,1597.1917,999.9677);
							    SetPlayerFacingAngle(playerid,98.4130);
							}
							else if(rand == 6)//Position 7
			    			{
							    SetPlayerPos(playerid,2218.3252,1613.9906,999.9827);
							    SetPlayerFacingAngle(playerid,356.2654);
							}
							else if(rand == 7)//Position 8
			    			{
							    SetPlayerPos(playerid,2204.7673,1609.1569,999.9720);
							    SetPlayerFacingAngle(playerid,358.4588);
							}
				        }
				        else SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Die Arena 3 ist belegt.");
				    }
				}
			}
		}
		case DIALOG_BASE_AUSWAHL:
		{
			if(response==0){ShowPlayerDialog(playerid,DIALOG_BASE_AUSWAHL,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Base Auswahl","Los Santos\nSan Fierro\nLas Venturas\nDillimore","Auswählen","");}//Zurück
			else if(response==1)//Weiter
			{
				switch(listitem)
				{
				    case 0://Los Santos
				    {
  		    			SetTimerEx("Unfreeze",5000,false,"i",playerid);
   		    			TogglePlayerControllable(playerid, false);
   		   				SetPlayerSkin(playerid,mysql_GetInt("accounts", "SkinID", "Name", SpielerInfo[playerid][sName]));
				        SetPlayerPos(playerid,298.3004,1828.1854,2241.5850);
					    SetPlayerFacingAngle(playerid, 273.5245);
					    SetPlayerInterior(playerid,0);
					    SetCameraBehindPlayer(playerid);
					    PlayerPlaySound(playerid,2086,0,0,0);
				    }
				    case 1://San Fierro
				    {
				        TogglePlayerControllable(playerid, true);
		  		    	SetPlayerSkin(playerid,mysql_GetInt("accounts", "SkinID", "Name", SpielerInfo[playerid][sName]));
				        SetPlayerPos(playerid,227.9015,109.3576,1003.2188);
					    SetPlayerFacingAngle(playerid, 1.8993);
					    SetPlayerInterior(playerid,10);
					    SetCameraBehindPlayer(playerid);
					    PlayerPlaySound(playerid,2128,0,0,0);
				    }
				    case 2://Las Venturas
				    {
				        TogglePlayerControllable(playerid, true);
  		    			SetPlayerSkin(playerid,mysql_GetInt("accounts", "SkinID", "Name", SpielerInfo[playerid][sName]));
				        SetPlayerPos(playerid,196.9430,168.7099,1003.0234);
					    SetPlayerFacingAngle(playerid, 271.0790);
					    SetPlayerInterior(playerid,3);
					    SetCameraBehindPlayer(playerid);
					    DeletePVar(playerid,"PolizeiBase");
					    PlayerPlaySound(playerid,2078,0,0,0);
				    }
 				   	case 3://Dillimore
				    {
				        TogglePlayerControllable(playerid, true);
  		    			SetPlayerSkin(playerid,mysql_GetInt("accounts", "SkinID", "Name", SpielerInfo[playerid][sName]));
				        SetPlayerPos(playerid,321.9377,308.5419,999.1484);
					    SetPlayerFacingAngle(playerid, 180.5249);
					    SetPlayerInterior(playerid,5);
					    SetCameraBehindPlayer(playerid);
					    DeletePVar(playerid,"PolizeiBase");
					    PlayerPlaySound(playerid,2024,0,0,0);
				    }
				}
			}
		}
		case DIALOG_MISSION:
		{
		    if(response==0){SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast die Mission abgelehnt.");}
		    else if(response==1)
		    {
		        new Float:Pos[4], Color[2], modelid, vehicleid, str[144];
				if(GetPVarInt(playerid,"Mission") == 1)
				{
			        if(Importfahrzeug == true)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Derzeit kann keine weitere Importfahrzeug der Stunde gestartet werden.");
					SetPlayerWantedLevelEx(playerid, GetPlayerWantedLevelEx(playerid) +2);
	   				SendCopMessage(COLOR_BLUE,"ZENTRALE: AN ALLE EINHEITEN !! DAS IMPORTFAHRZEUG DER STUNDE WURDE GESTOHLEN.");
			    	format(str,sizeof(str),"ZENTRALE: Verbrecher %s",SpielerInfo[playerid][sName]);
					SendCopMessage(COLOR_BLUE,str);
					SendClientMessage(playerid,COLOR_ORANGE,"Begib dich zum Flugzeugfriedhof und besorge dir das Importfahrzeug. (Roter Marker)");

     				ImportCarTime = 45;
					ImportCarTimer = SetTimer("ImportCarPlayer",60000,true);
					Importfahrzeug = true;

					new rand = random(5);
					if(rand == 0){Pos[0] = 325.0465; Pos[1] = 2543.3140; Pos[2] = 16.5128; Pos[3] = 178.7146;}
	   				else if(rand == 1){Pos[0] = 254.0919; Pos[1] = 2431.4382; Pos[2] = 16.1900; Pos[3] = 184.8636;}
	   				else if(rand == 2){Pos[0] = 115.2781; Pos[1] = 2425.6956; Pos[2] = 16.1876; Pos[3] = 44.3526;}
	   				else if(rand == 3){Pos[0] = 233.8764; Pos[1] = 2605.6589; Pos[2] = 16.1820; Pos[3] = 223.6322;}
	   				else if(rand == 4){Pos[0] = 324.7590; Pos[1] = 2607.1711; Pos[2] = 16.1898; Pos[3] = 134.9797;}

					new rand2 = random(4);
					if(rand2 == 0){modelid = 568; Color[0] = 0; Color[1] = 0;}
	   				else if(rand2 == 1){modelid = 495; Color[0] = 18; Color[1] = 6;}
					else if(rand2 == 2){modelid = 434; Color[0] = 0; Color[1] = 0;}
					else if(rand2 == 3){modelid = 424; Color[0] = 0; Color[1] = 1;}

					vehicleid = CreateVehicle(modelid,Pos[0],Pos[1],Pos[2],Pos[3],Color[0],Color[1],-1);
					ImportCar = vehicleid;
			  		format(FahrzeugInfo[vehicleid][fKennzeichen], 9, "IMPORT");
					SetVehicleNumberPlate(vehicleid,"IMPORT");
					FahrzeugInfo[vehicleid][fModelID] = modelid;
			        FahrzeugInfo[vehicleid][fTank] = VehicleData[GetVehicleModel(vehicleid)-400][vehLiter];

					GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
					SetVehicleParamsEx(vehicleid, false, false, false, false, false, false, false);

					FahrzeugInfo[vehicleid][fDatabaseID] = 0; FahrzeugInfo[vehicleid][fErstellt] = true;
					FahrzeugInfo[vehicleid][fPosition][0] = Pos[0]; FahrzeugInfo[vehicleid][fPosition][1] = Pos[1]; FahrzeugInfo[vehicleid][fPosition][2] = Pos[2]; FahrzeugInfo[vehicleid][fPosition][3] = Pos[3]; FahrzeugInfo[vehicleid][fColor][1] = Color[1];
					FahrzeugInfo[vehicleid][fAbgeschleppt] = 0; FahrzeugInfo[vehicleid][fParkkralle] = 0; FahrzeugInfo[vehicleid][fKilometer] = 0; FahrzeugInfo[vehicleid][fColor][0] = Color[0]; FahrzeugInfo[vehicleid][fPaintjob] = 3;
					FahrzeugInfo[vehicleid][fRang] = 0; FahrzeugInfo[vehicleid][fFraktion] = 0; FahrzeugInfo[vehicleid][fGruppe] = 0; FahrzeugInfo[vehicleid][fAutohaus] = 0; FahrzeugInfo[vehicleid][fNebenjob] = 0; FahrzeugInfo[vehicleid][fGarage] = 0; FahrzeugInfo[vehicleid][fGPark] = 0; FahrzeugInfo[vehicleid][fFahrschule] = 0;
					FahrzeugInfo[vehicleid][fSupmobil] = 0; FahrzeugInfo[vehicleid][fZiviroller] = 0; FahrzeugInfo[vehicleid][fImportCar] = 1; FahrzeugInfo[vehicleid][fKurrierCar] = 0;
					FahrzeugInfo[vehicleid][fPreis] = 0; FahrzeugInfo[vehicleid][fBesitzer] = 0; format(FahrzeugInfo[vehicleid][fBesitzer], 0, ""); FahrzeugInfo[vehicleid][fBesitzerID] = 0; FahrzeugInfo[vehicleid][fTuning][0] = 0; FahrzeugInfo[vehicleid][fTuning][1] = 0; FahrzeugInfo[vehicleid][fTuning][2] = 0;
					FahrzeugInfo[vehicleid][fTuning][3] = 0; FahrzeugInfo[vehicleid][fTuning][4] = 0; FahrzeugInfo[vehicleid][fTuning][5] = 0; FahrzeugInfo[vehicleid][fTuning][6] = 0; FahrzeugInfo[vehicleid][fTuning][7] = 0;
					FahrzeugInfo[vehicleid][fTuning][8] = 0; FahrzeugInfo[vehicleid][fTuning][9] = 0; FahrzeugInfo[vehicleid][fTuning][10] = 0; FahrzeugInfo[vehicleid][fTuning][11] = 0; FahrzeugInfo[vehicleid][fTuning][12] = 0;
					FahrzeugInfo[vehicleid][fTuning][13] = 0; FahrzeugInfo[vehicleid][fJobEXP] = 0;

					Motor[vehicleid] = false;
					Licht[vehicleid] = false;
					DOOR[vehicleid] = false;
					Motorhaube[vehicleid] = false;
					Kofferraum[vehicleid] = false;

				    SetPlayerCheckpointEx(playerid,Pos[0],Pos[1],Pos[2],3.5);
				}
				else if(GetPVarInt(playerid,"Mission") == 2)
				{
					if(GetPVarInt(playerid,"KurrierID") == 1)
					{
				        if(Kurrierfahrzeug[0] == true)
						{
							SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Derzeit kann keine weitere Kurrierdienst Mission gestartet werden.");
							DeletePVar(playerid,"KurrierID");
	  					}
						SendClientMessage(playerid,COLOR_ORANGE,"Begib dich nach Dillimore und besorge dir das Kurrierfahrzeug. (Roter Marker)");

		 				KurrierCarTime[0] = 2;
		 				KillTimer(KurrierCarTimer[0]);
						KurrierCarTimer[0] = SetTimerEx("KurrierCarPlayer",120000,true,"i",playerid);
						Kurrierfahrzeug[0] = true;

						Pos[0] = 681.2784;
						Pos[1] = -441.3095;
						Pos[2] = 16.4046;
						Pos[3] = 90.6113;

						vehicleid = CreateVehicle(498,Pos[0],Pos[1],Pos[2],Pos[3],0,0,-1);
						KurrierCar[0] = vehicleid;
				  		format(FahrzeugInfo[vehicleid][fKennzeichen], 9, "KURRIER");
						SetVehicleNumberPlate(vehicleid,"KURRIER");
						FahrzeugInfo[vehicleid][fModelID] = 498;
				        FahrzeugInfo[vehicleid][fTank] = VehicleData[GetVehicleModel(vehicleid)-400][vehLiter];

						GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
						SetVehicleParamsEx(vehicleid, false, false, false, false, false, false, false);

						FahrzeugInfo[vehicleid][fDatabaseID] = 0; FahrzeugInfo[vehicleid][fErstellt] = true;
						FahrzeugInfo[vehicleid][fPosition][0] = Pos[0]; FahrzeugInfo[vehicleid][fPosition][1] = Pos[1]; FahrzeugInfo[vehicleid][fPosition][2] = Pos[2]; FahrzeugInfo[vehicleid][fPosition][3] = Pos[3]; FahrzeugInfo[vehicleid][fColor][1] = 0;
						FahrzeugInfo[vehicleid][fAbgeschleppt] = 0; FahrzeugInfo[vehicleid][fParkkralle] = 0; FahrzeugInfo[vehicleid][fKilometer] = 0; FahrzeugInfo[vehicleid][fColor][0] = 0; FahrzeugInfo[vehicleid][fPaintjob] = 3;
						FahrzeugInfo[vehicleid][fRang] = 0; FahrzeugInfo[vehicleid][fFraktion] = 0; FahrzeugInfo[vehicleid][fGruppe] = 0; FahrzeugInfo[vehicleid][fAutohaus] = 0; FahrzeugInfo[vehicleid][fNebenjob] = 0; FahrzeugInfo[vehicleid][fGarage] = 0; FahrzeugInfo[vehicleid][fGPark] = 0; FahrzeugInfo[vehicleid][fFahrschule] = 0;
						FahrzeugInfo[vehicleid][fSupmobil] = 0; FahrzeugInfo[vehicleid][fZiviroller] = 0; FahrzeugInfo[vehicleid][fImportCar] = 0; FahrzeugInfo[vehicleid][fKurrierCar] = playerid;
						FahrzeugInfo[vehicleid][fPreis] = 0; FahrzeugInfo[vehicleid][fBesitzer] = 0; format(FahrzeugInfo[vehicleid][fBesitzer], 0, ""); FahrzeugInfo[vehicleid][fBesitzerID] = 0; FahrzeugInfo[vehicleid][fTuning][0] = 0; FahrzeugInfo[vehicleid][fTuning][1] = 0; FahrzeugInfo[vehicleid][fTuning][2] = 0;
						FahrzeugInfo[vehicleid][fTuning][3] = 0; FahrzeugInfo[vehicleid][fTuning][4] = 0; FahrzeugInfo[vehicleid][fTuning][5] = 0; FahrzeugInfo[vehicleid][fTuning][6] = 0; FahrzeugInfo[vehicleid][fTuning][7] = 0;
						FahrzeugInfo[vehicleid][fTuning][8] = 0; FahrzeugInfo[vehicleid][fTuning][9] = 0; FahrzeugInfo[vehicleid][fTuning][10] = 0; FahrzeugInfo[vehicleid][fTuning][11] = 0; FahrzeugInfo[vehicleid][fTuning][12] = 0;
						FahrzeugInfo[vehicleid][fTuning][13] = 0; FahrzeugInfo[vehicleid][fJobEXP] = 0;

						Motor[vehicleid] = false;
						Licht[vehicleid] = false;
						DOOR[vehicleid] = false;
						Motorhaube[vehicleid] = false;
						Kofferraum[vehicleid] = false;

					    SetPlayerCheckpointEx(playerid,Pos[0],Pos[1],Pos[2],3.5);
					}
					else if(GetPVarInt(playerid,"KurrierID") == 2)
					{
     					if(Kurrierfahrzeug[1] == true)
						{
							SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Derzeit kann keine weitere Kurrierdienst Mission gestartet werden.");
							DeletePVar(playerid,"KurrierID");
	  					}
						SendClientMessage(playerid,COLOR_ORANGE,"Begib dich nach Fort Carson und besorge dir das Kurrierfahrzeug. (Roter Marker)");

		 				KurrierCarTime[1] = 2;
		 				KillTimer(KurrierCarTimer[1]);
						KurrierCarTimer[1] = SetTimerEx("KurrierCarPlayer",120000,true,"i",playerid);
						Kurrierfahrzeug[1] = true;

						Pos[0] = -733.9844;
						Pos[1] = 1546.2740;
						Pos[2] = 38.6802;
						Pos[3] = 268.9030;

						vehicleid = CreateVehicle(468,Pos[0],Pos[1],Pos[2],Pos[3],6,6,-1);
						KurrierCar[1] = vehicleid;
				  		format(FahrzeugInfo[vehicleid][fKennzeichen], 9, "KURRIER");
						SetVehicleNumberPlate(vehicleid,"KURRIER");
						FahrzeugInfo[vehicleid][fModelID] = 468;
				        FahrzeugInfo[vehicleid][fTank] = VehicleData[GetVehicleModel(vehicleid)-400][vehLiter];

						GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
						SetVehicleParamsEx(vehicleid, false, false, false, false, false, false, false);

						FahrzeugInfo[vehicleid][fDatabaseID] = 0; FahrzeugInfo[vehicleid][fErstellt] = true;
						FahrzeugInfo[vehicleid][fPosition][0] = Pos[0]; FahrzeugInfo[vehicleid][fPosition][1] = Pos[1]; FahrzeugInfo[vehicleid][fPosition][2] = Pos[2]; FahrzeugInfo[vehicleid][fPosition][3] = Pos[3]; FahrzeugInfo[vehicleid][fColor][1] = 6;
						FahrzeugInfo[vehicleid][fAbgeschleppt] = 0; FahrzeugInfo[vehicleid][fParkkralle] = 0; FahrzeugInfo[vehicleid][fKilometer] = 0; FahrzeugInfo[vehicleid][fColor][0] = 6; FahrzeugInfo[vehicleid][fPaintjob] = 3;
						FahrzeugInfo[vehicleid][fRang] = 0; FahrzeugInfo[vehicleid][fFraktion] = 0; FahrzeugInfo[vehicleid][fGruppe] = 0; FahrzeugInfo[vehicleid][fAutohaus] = 0; FahrzeugInfo[vehicleid][fNebenjob] = 0; FahrzeugInfo[vehicleid][fGarage] = 0; FahrzeugInfo[vehicleid][fGPark] = 0; FahrzeugInfo[vehicleid][fFahrschule] = 0;
						FahrzeugInfo[vehicleid][fSupmobil] = 0; FahrzeugInfo[vehicleid][fZiviroller] = 0; FahrzeugInfo[vehicleid][fImportCar] = 0; FahrzeugInfo[vehicleid][fKurrierCar] = playerid;
						FahrzeugInfo[vehicleid][fPreis] = 0; FahrzeugInfo[vehicleid][fBesitzer] = 0; format(FahrzeugInfo[vehicleid][fBesitzer], 0, ""); FahrzeugInfo[vehicleid][fBesitzerID] = 0; FahrzeugInfo[vehicleid][fTuning][0] = 0; FahrzeugInfo[vehicleid][fTuning][1] = 0; FahrzeugInfo[vehicleid][fTuning][2] = 0;
						FahrzeugInfo[vehicleid][fTuning][3] = 0; FahrzeugInfo[vehicleid][fTuning][4] = 0; FahrzeugInfo[vehicleid][fTuning][5] = 0; FahrzeugInfo[vehicleid][fTuning][6] = 0; FahrzeugInfo[vehicleid][fTuning][7] = 0;
						FahrzeugInfo[vehicleid][fTuning][8] = 0; FahrzeugInfo[vehicleid][fTuning][9] = 0; FahrzeugInfo[vehicleid][fTuning][10] = 0; FahrzeugInfo[vehicleid][fTuning][11] = 0; FahrzeugInfo[vehicleid][fTuning][12] = 0;
						FahrzeugInfo[vehicleid][fTuning][13] = 0; FahrzeugInfo[vehicleid][fJobEXP] = 0;

						Motor[vehicleid] = false;
						Licht[vehicleid] = false;
						DOOR[vehicleid] = false;
						Motorhaube[vehicleid] = false;
						Kofferraum[vehicleid] = false;

					    SetPlayerCheckpointEx(playerid,Pos[0],Pos[1],Pos[2],3.5);
					}
					else if(GetPVarInt(playerid,"KurrierID") == 3)
					{
     					if(Kurrierfahrzeug[2] == true)
						{
							SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Derzeit kann keine weitere Kurrierdienst Mission gestartet werden.");
							DeletePVar(playerid,"KurrierID");
	  					}
						SendClientMessage(playerid,COLOR_ORANGE,"Begib dich nach Fort Carson und besorge dir das Kurrierfahrzeug. (Roter Marker)");

		 				KurrierCarTime[2] = 4;
		 				KillTimer(KurrierCarTimer[2]);
						KurrierCarTimer[2] = SetTimerEx("KurrierCarPlayer",240000,true,"i",playerid);
						Kurrierfahrzeug[2] = true;

						Pos[0] = 2223.3511;
						Pos[1] = 1936.3907;
						Pos[2] = 31.8741;
						Pos[3] = 267.6846;

						vehicleid = CreateVehicle(414,Pos[0],Pos[1],Pos[2],Pos[3],0,0,-1);
						KurrierCar[2] = vehicleid;
				  		format(FahrzeugInfo[vehicleid][fKennzeichen], 9, "KURRIER");
						SetVehicleNumberPlate(vehicleid,"KURRIER");
						FahrzeugInfo[vehicleid][fModelID] = 414;
				        FahrzeugInfo[vehicleid][fTank] = VehicleData[GetVehicleModel(vehicleid)-400][vehLiter];

						GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
						SetVehicleParamsEx(vehicleid, false, false, false, false, false, false, false);

						FahrzeugInfo[vehicleid][fDatabaseID] = 0; FahrzeugInfo[vehicleid][fErstellt] = true;
						FahrzeugInfo[vehicleid][fPosition][0] = Pos[0]; FahrzeugInfo[vehicleid][fPosition][1] = Pos[1]; FahrzeugInfo[vehicleid][fPosition][2] = Pos[2]; FahrzeugInfo[vehicleid][fPosition][3] = Pos[3]; FahrzeugInfo[vehicleid][fColor][1] = 0;
						FahrzeugInfo[vehicleid][fAbgeschleppt] = 0; FahrzeugInfo[vehicleid][fParkkralle] = 0; FahrzeugInfo[vehicleid][fKilometer] = 0; FahrzeugInfo[vehicleid][fColor][0] = 0; FahrzeugInfo[vehicleid][fPaintjob] = 3;
						FahrzeugInfo[vehicleid][fRang] = 0; FahrzeugInfo[vehicleid][fFraktion] = 0; FahrzeugInfo[vehicleid][fGruppe] = 0; FahrzeugInfo[vehicleid][fAutohaus] = 0; FahrzeugInfo[vehicleid][fNebenjob] = 0; FahrzeugInfo[vehicleid][fGarage] = 0; FahrzeugInfo[vehicleid][fGPark] = 0; FahrzeugInfo[vehicleid][fFahrschule] = 0;
						FahrzeugInfo[vehicleid][fSupmobil] = 0; FahrzeugInfo[vehicleid][fZiviroller] = 0; FahrzeugInfo[vehicleid][fImportCar] = 0; FahrzeugInfo[vehicleid][fKurrierCar] = playerid;
						FahrzeugInfo[vehicleid][fPreis] = 0; FahrzeugInfo[vehicleid][fBesitzer] = 0; format(FahrzeugInfo[vehicleid][fBesitzer], 0, ""); FahrzeugInfo[vehicleid][fBesitzerID] = 0; FahrzeugInfo[vehicleid][fTuning][0] = 0; FahrzeugInfo[vehicleid][fTuning][1] = 0; FahrzeugInfo[vehicleid][fTuning][2] = 0;
						FahrzeugInfo[vehicleid][fTuning][3] = 0; FahrzeugInfo[vehicleid][fTuning][4] = 0; FahrzeugInfo[vehicleid][fTuning][5] = 0; FahrzeugInfo[vehicleid][fTuning][6] = 0; FahrzeugInfo[vehicleid][fTuning][7] = 0;
						FahrzeugInfo[vehicleid][fTuning][8] = 0; FahrzeugInfo[vehicleid][fTuning][9] = 0; FahrzeugInfo[vehicleid][fTuning][10] = 0; FahrzeugInfo[vehicleid][fTuning][11] = 0; FahrzeugInfo[vehicleid][fTuning][12] = 0;
						FahrzeugInfo[vehicleid][fTuning][13] = 0; FahrzeugInfo[vehicleid][fJobEXP] = 0;

						Motor[vehicleid] = false;
						Licht[vehicleid] = false;
						DOOR[vehicleid] = false;
						Motorhaube[vehicleid] = false;
						Kofferraum[vehicleid] = false;

					    SetPlayerCheckpointEx(playerid,Pos[0],Pos[1],Pos[2],3.5);
					}
				}
			}
		}
		case DIALOG_NEON:
		{
			if(response==0){}
		    else if(response==1)
	    	{
				new vehicleid = GetPlayerVehicleID(playerid), query[128];
  				switch(listitem)
				{
				    case 0://Weiß
				    {
						if(GetPlayerMoneyEx(playerid) < 2000)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld dabei.");
						if(FahrzeugInfo[vehicleid][fNeonStatus] == true)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast bereits Neon unter diesem Fahrzeug einbauen lassen.");
						GivePlayerMoneyEx(playerid,-2000);

						FahrzeugInfo[vehicleid][fNeonStatus] = true;
						FahrzeugInfo[vehicleid][fNeonColor] = 18652;
						FahrzeugInfo[vehicleid][fNeonObj][0] = CreateDynamicObject(18652,0,0,0,0,0,0);
						FahrzeugInfo[vehicleid][fNeonObj][1] = CreateDynamicObject(18652,0,0,0,0,0,0);
						AttachDynamicObjectToVehicle(FahrzeugInfo[vehicleid][fNeonObj][0], vehicleid, -0.8, 0.0, -0.60, 0.0, 0.0, 0.0);
						AttachDynamicObjectToVehicle(FahrzeugInfo[vehicleid][fNeonObj][1], vehicleid, 0.8, 0.0, -0.60, 0.0, 0.0, 0.0);


				       	mysql_format(sqlHandle, query,sizeof(query),"UPDATE `vehicles` SET `NeonFarbe`='18652' WHERE `ID`='%d'",FahrzeugInfo[vehicleid][fDatabaseID]);
						mysql_tquery(sqlHandle, query);

						SendClientMessage(playerid, COLOR_SUPER, "Du hast dir für 2.000$ weiße Unterbodenbeleuchtung einbauen lassen.");
				    }
				    case 1://Blau / Pink
				    {
				        if(GetPlayerMoneyEx(playerid) < 2000)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld dabei.");
				        if(FahrzeugInfo[vehicleid][fNeonStatus] == true)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast bereits Neon unter diesem Fahrzeug einbauen lassen.");
					    GivePlayerMoneyEx(playerid,-2000);

						FahrzeugInfo[vehicleid][fNeonStatus] = true;
						FahrzeugInfo[vehicleid][fNeonColor] = 18648;
			  			FahrzeugInfo[vehicleid][fNeonObj][0] = CreateDynamicObject(18648,0,0,0,0,0,0);
			  			FahrzeugInfo[vehicleid][fNeonObj][1] = CreateDynamicObject(18648,0,0,0,0,0,0);
			  			AttachDynamicObjectToVehicle(FahrzeugInfo[vehicleid][fNeonObj][0], vehicleid, -0.8, 0.0, -0.60, 0.0, 0.0, 0.0);
			  			AttachDynamicObjectToVehicle(FahrzeugInfo[vehicleid][fNeonObj][1], vehicleid, 0.8, 0.0, -0.60, 0.0, 0.0, 0.0);

						mysql_format(sqlHandle, query,sizeof(query),"UPDATE `vehicles` SET `NeonFarbe`='18648' WHERE `ID`='%d'",FahrzeugInfo[vehicleid][fDatabaseID]);
						mysql_tquery(sqlHandle, query);

			  			SendClientMessage(playerid, COLOR_SUPER, "Du hast dir für 2.000$ blaue Unterbodenbeleuchtung einbauen lassen.");
				    }
				    case 2://Rot
				    {
						if(GetPlayerMoneyEx(playerid) < 2000)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld dabei.");
						if(FahrzeugInfo[vehicleid][fNeonStatus] == true)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast bereits Neon unter diesem Fahrzeug einbauen lassen.");
						GivePlayerMoneyEx(playerid,-2000);

						FahrzeugInfo[vehicleid][fNeonStatus] = true;
						FahrzeugInfo[vehicleid][fNeonColor] = 18647;
			 			FahrzeugInfo[vehicleid][fNeonObj][0] = CreateDynamicObject(18647,0,0,0,0,0,0);
			  			FahrzeugInfo[vehicleid][fNeonObj][1] = CreateDynamicObject(18647,0,0,0,0,0,0);
			  			AttachDynamicObjectToVehicle(FahrzeugInfo[vehicleid][fNeonObj][0], vehicleid, -0.8, 0.0, -0.60, 0.0, 0.0, 0.0);
			  			AttachDynamicObjectToVehicle(FahrzeugInfo[vehicleid][fNeonObj][1], vehicleid, 0.8, 0.0, -0.60, 0.0, 0.0, 0.0);

						mysql_format(sqlHandle, query,sizeof(query),"UPDATE `vehicles` SET `NeonFarbe`='18647' WHERE `ID`='%d'",FahrzeugInfo[vehicleid][fDatabaseID]);
						mysql_tquery(sqlHandle, query);

			  			SendClientMessage(playerid, COLOR_SUPER, "Du hast dir für 2.000$ rote Unterbodenbeleuchtung einbauen lassen.");
				    }
				    case 3://Gelb
				    {
						if(GetPlayerMoneyEx(playerid) < 2000)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld dabei.");
						if(FahrzeugInfo[vehicleid][fNeonStatus] == true)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast bereits Neon unter diesem Fahrzeug einbauen lassen.");
						GivePlayerMoneyEx(playerid,-2000);

						FahrzeugInfo[vehicleid][fNeonStatus] = true;
						FahrzeugInfo[vehicleid][fNeonColor] = 18650;
			 			FahrzeugInfo[vehicleid][fNeonObj][0] = CreateDynamicObject(18650,0,0,0,0,0,0);
			  			FahrzeugInfo[vehicleid][fNeonObj][1] = CreateDynamicObject(18650,0,0,0,0,0,0);
			  			AttachDynamicObjectToVehicle(FahrzeugInfo[vehicleid][fNeonObj][0], vehicleid, -0.8, 0.0, -0.60, 0.0, 0.0, 0.0);
			  			AttachDynamicObjectToVehicle(FahrzeugInfo[vehicleid][fNeonObj][1], vehicleid, 0.8, 0.0, -0.60, 0.0, 0.0, 0.0);

						mysql_format(sqlHandle, query,sizeof(query),"UPDATE `vehicles` SET `NeonFarbe`='18650' WHERE `ID`='%d'",FahrzeugInfo[vehicleid][fDatabaseID]);
						mysql_tquery(sqlHandle, query);

			  			SendClientMessage(playerid, COLOR_SUPER, "Du hast dir für 2.000$ gelbe Unterbodenbeleuchtung einbauen lassen.");
				    }
 				   	case 4://Grün
				    {
						if(GetPlayerMoneyEx(playerid) < 2000)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld dabei.");
						if(FahrzeugInfo[vehicleid][fNeonStatus] == true)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast bereits Neon unter diesem Fahrzeug einbauen lassen.");
						GivePlayerMoneyEx(playerid,-2000);

						FahrzeugInfo[vehicleid][fNeonStatus] = true;
						FahrzeugInfo[vehicleid][fNeonColor] = 18649;
			 			FahrzeugInfo[vehicleid][fNeonObj][0] = CreateDynamicObject(18649,0,0,0,0,0,0);
			 			FahrzeugInfo[vehicleid][fNeonObj][1] = CreateDynamicObject(18649,0,0,0,0,0,0);
			 			AttachDynamicObjectToVehicle(FahrzeugInfo[vehicleid][fNeonObj][0], vehicleid, -0.8, 0.0, -0.60, 0.0, 0.0, 0.0);
			 			AttachDynamicObjectToVehicle(FahrzeugInfo[vehicleid][fNeonObj][1], vehicleid, 0.8, 0.0, -0.60, 0.0, 0.0, 0.0);

						mysql_format(sqlHandle, query,sizeof(query),"UPDATE `vehicles` SET `NeonFarbe`='18649' WHERE `ID`='%d'",FahrzeugInfo[vehicleid][fDatabaseID]);
						mysql_tquery(sqlHandle, query);

			 			SendClientMessage(playerid, COLOR_SUPER, "Du hast dir für 2.000$ grüne Unterbodenbeleuchtung einbauen lassen.");
				    }
				    case 5://Pink
				    {
						if(GetPlayerMoneyEx(playerid) < 2000)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld dabei.");
						if(FahrzeugInfo[vehicleid][fNeonStatus] == true)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast bereits Neon unter diesem Fahrzeug einbauen lassen.");
						GivePlayerMoneyEx(playerid,-2000);

						FahrzeugInfo[vehicleid][fNeonStatus] = true;
						FahrzeugInfo[vehicleid][fNeonColor] = 18651;
						FahrzeugInfo[vehicleid][fNeonObj][0] = CreateDynamicObject(18651,0,0,0,0,0,0);
						FahrzeugInfo[vehicleid][fNeonObj][1] = CreateDynamicObject(18651,0,0,0,0,0,0);
						AttachDynamicObjectToVehicle(FahrzeugInfo[vehicleid][fNeonObj][0], vehicleid, -0.8, 0.0, -0.60, 0.0, 0.0, 0.0);
						AttachDynamicObjectToVehicle(FahrzeugInfo[vehicleid][fNeonObj][1], vehicleid, 0.8, 0.0, -0.60, 0.0, 0.0, 0.0);

						mysql_format(sqlHandle, query,sizeof(query),"UPDATE `vehicles` SET `NeonFarbe`='18651' WHERE `ID`='%d'",FahrzeugInfo[vehicleid][fDatabaseID]);
						mysql_tquery(sqlHandle, query);

						SendClientMessage(playerid, COLOR_SUPER, "Du hast dir für 2.000$ pinke Unterbodenbeleuchtung einbauen lassen.");
				    }
		    		case 6://Neon entfernen
				    {
						if(GetPlayerMoneyEx(playerid) < 2000)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld dabei.");
						if(FahrzeugInfo[vehicleid][fNeonStatus] == false)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Unter diesem Fahrzeug wurde kein Neon eingebaut.");
						GivePlayerMoneyEx(playerid,-2000);

						FahrzeugInfo[vehicleid][fNeonStatus] = false;
						FahrzeugInfo[vehicleid][fNeonColor] = 0;
						DestroyDynamicObject(FahrzeugInfo[vehicleid][fNeonObj][0]);
						DestroyDynamicObject(FahrzeugInfo[vehicleid][fNeonObj][1]);
						FahrzeugInfo[vehicleid][fNeonObj][0] = INVALID_OBJECT_ID;
						FahrzeugInfo[vehicleid][fNeonObj][1] = INVALID_OBJECT_ID;

						mysql_format(sqlHandle, query,sizeof(query),"UPDATE `vehicles` SET `NeonFarbe`='0' WHERE `ID`='%d'",FahrzeugInfo[vehicleid][fDatabaseID]);
						mysql_tquery(sqlHandle, query);

						SendClientMessage(playerid, COLOR_SUPER, "Du hast dir für 2.000$ die Unterbodenbeleuchtung entfernen lassen.");
				    }
				}
		    }
		}
		case DIALOG_GARAGE:
		{
			if(response==0){}
		    else if(response==1)
	    	{
				new vehicleid = GetPlayerVehicleID(playerid), hs = GetNearGarageID(playerid);
				SetPVarInt(playerid,"GaragenID",hs);
				SetPVarInt(playerid,"GarageVehicleID",vehicleid);
  				switch(listitem)
				{
				    case 0://Parkplatz 1
				    {
				        if(GaragenInfo[hs][giFahrzeug][0] > 0)return SendClientMessage(playerid, COLOR_RED, "Auf Parkplatz 1 steht bereits ein Fahrzeug.");
          				foreach(new i : Player)
						{
						    if(!IsPlayerInAnyVehicle(i))continue;
						    if(GetPlayerVehicleID(playerid) != GetPlayerVehicleID(i))continue;
				        	RemovePlayerFromVehicle(i);
			        		SetTimerEx("Unfreeze",3000,false,"i",i);
							TogglePlayerControllable(i, false);
							SetPlayerPos(i,2414.4395,2820.4709,-47.9852);
							SetPlayerInterior(i,0);
							SetPlayerVirtualWorld(i,hs);
							SetCameraBehindPlayer(i);
							SetPVarInt(i,"GarageID",hs);
							SetPVarInt(i,"InGarage",1);
							SetPlayerWeather(i,2);
						}
				        SetTimerEx("SpawnCarInGarage",3000,false,"i",playerid);
				        SetPVarInt(playerid,"Parkplatz",1);
				        SetPVarFloat(playerid,"ParkPosX",2405.1667);
				        SetPVarFloat(playerid,"ParkPosY",2826.0759);
				        SetPVarFloat(playerid,"ParkPosZ",-47.9936);
				        SetPVarFloat(playerid,"ParkPosA",269.1802);
				    }
				    case 1://Parkplatz 2
				    {
						if(GaragenInfo[hs][giFahrzeug][1] > 0)return SendClientMessage(playerid, COLOR_RED, "Auf Parkplatz 2 steht bereits ein Fahrzeug.");
  						foreach(new i : Player)
						{
						    if(!IsPlayerInAnyVehicle(i))continue;
						    if(GetPlayerVehicleID(playerid) != GetPlayerVehicleID(i))continue;
				        	RemovePlayerFromVehicle(i);
			        		SetTimerEx("Unfreeze",3000,false,"i",i);
							TogglePlayerControllable(i, false);
							SetPlayerPos(i,2414.4395,2820.4709,-47.9852);
							SetPlayerInterior(i,0);
							SetPlayerVirtualWorld(i,hs);
							SetCameraBehindPlayer(i);
							SetPVarInt(i,"GarageID",hs);
							SetPVarInt(i,"InGarage",1);
							SetPlayerWeather(i,2);
						}
				        SetTimerEx("SpawnCarInGarage",3000,false,"i",playerid);
				        SetPVarInt(playerid,"Parkplatz",2);
				        SetPVarFloat(playerid,"ParkPosX",2405.3621);
				        SetPVarFloat(playerid,"ParkPosY",2830.8975);
				        SetPVarFloat(playerid,"ParkPosZ",-47.9936);
				        SetPVarFloat(playerid,"ParkPosA",269.5629);
				    }
				    case 2://Parkplatz 3
				    {
						if(GaragenInfo[hs][giFahrzeug][2] > 0)return SendClientMessage(playerid, COLOR_RED, "Auf Parkplatz 3 steht bereits ein Fahrzeug.");
  						foreach(new i : Player)
						{
						    if(!IsPlayerInAnyVehicle(i))continue;
						    if(GetPlayerVehicleID(playerid) != GetPlayerVehicleID(i))continue;
				        	RemovePlayerFromVehicle(i);
			        		SetTimerEx("Unfreeze",3000,false,"i",i);
							TogglePlayerControllable(i, false);
							SetPlayerPos(i,2414.4395,2820.4709,-47.9852);
							SetPlayerInterior(i,0);
							SetPlayerVirtualWorld(i,hs);
							SetCameraBehindPlayer(i);
							SetPVarInt(i,"GarageID",hs);
							SetPVarInt(i,"InGarage",1);
							SetPlayerWeather(i,2);
						}
				        SetTimerEx("SpawnCarInGarage",3000,false,"i",playerid);
				        SetPVarInt(playerid,"Parkplatz",3);
				        SetPVarFloat(playerid,"ParkPosX",2405.5627);
				        SetPVarFloat(playerid,"ParkPosY",2835.4319);
				        SetPVarFloat(playerid,"ParkPosZ",-47.9936);
				        SetPVarFloat(playerid,"ParkPosA",270.1735);
				    }
				    case 3://Parkplatz 4
				    {
						if(GaragenInfo[hs][giFahrzeug][3] > 0)return SendClientMessage(playerid, COLOR_RED, "Auf Parkplatz 4 steht bereits ein Fahrzeug.");
  						foreach(new i : Player)
						{
						    if(!IsPlayerInAnyVehicle(i))continue;
						    if(GetPlayerVehicleID(playerid) != GetPlayerVehicleID(i))continue;
				        	RemovePlayerFromVehicle(i);
							SetTimerEx("Unfreeze",3000,false,"i",i);
							TogglePlayerControllable(i, false);
							SetPlayerPos(i,2414.4395,2820.4709,-47.9852);
							SetPlayerInterior(i,0);
							SetPlayerVirtualWorld(i,hs);
							SetCameraBehindPlayer(i);
							SetPVarInt(i,"GarageID",hs);
							SetPVarInt(i,"InGarage",1);
							SetPlayerWeather(i,2);
						}
				        SetTimerEx("SpawnCarInGarage",3000,false,"i",playerid);
				        SetPVarInt(playerid,"Parkplatz",4);
				        SetPVarFloat(playerid,"ParkPosX",2405.7219);
				        SetPVarFloat(playerid,"ParkPosY",2839.9592);
				        SetPVarFloat(playerid,"ParkPosZ",-47.9936);
				        SetPVarFloat(playerid,"ParkPosA",269.2777);
				    }
				    case 4://Parkplatz 5
				    {
						if(GaragenInfo[hs][giFahrzeug][4] > 0)return SendClientMessage(playerid, COLOR_RED, "Auf Parkplatz 5 steht bereits ein Fahrzeug.");
  						foreach(new i : Player)
						{
						    if(!IsPlayerInAnyVehicle(i))continue;
						    if(GetPlayerVehicleID(playerid) != GetPlayerVehicleID(i))continue;
				        	RemovePlayerFromVehicle(i);
			        		SetTimerEx("Unfreeze",3000,false,"i",i);
							TogglePlayerControllable(i, false);
							SetPlayerPos(i,2414.4395,2820.4709,-47.9852);
							SetPlayerInterior(i,0);
							SetPlayerVirtualWorld(i,hs);
							SetCameraBehindPlayer(i);
							SetPVarInt(i,"GarageID",hs);
							SetPVarInt(i,"InGarage",1);
							SetPlayerWeather(i,2);
						}
				        SetTimerEx("SpawnCarInGarage",3000,false,"i",playerid);
				        SetPVarInt(playerid,"Parkplatz",5);
				        SetPVarFloat(playerid,"ParkPosX",2405.8633);
				        SetPVarFloat(playerid,"ParkPosY",2844.2336);
				        SetPVarFloat(playerid,"ParkPosZ",-47.9936);
				        SetPVarFloat(playerid,"ParkPosA",270.2021);
				    }
				    case 5://Parkplatz 6
				    {
						if(GaragenInfo[hs][giFahrzeug][5] > 0)return SendClientMessage(playerid, COLOR_RED, "Auf Parkplatz 6 steht bereits ein Fahrzeug.");
  						foreach(new i : Player)
						{
						    if(!IsPlayerInAnyVehicle(i))continue;
						    if(GetPlayerVehicleID(playerid) != GetPlayerVehicleID(i))continue;
				        	RemovePlayerFromVehicle(i);
			        		SetTimerEx("Unfreeze",3000,false,"i",i);
							TogglePlayerControllable(i, false);
							SetPlayerPos(i,2414.4395,2820.4709,-47.9852);
							SetPlayerInterior(i,0);
							SetPlayerVirtualWorld(i,hs);
							SetCameraBehindPlayer(i);
							SetPVarInt(i,"GarageID",hs);
							SetPVarInt(i,"InGarage",1);
							SetPlayerWeather(i,2);
						}
				        SetTimerEx("SpawnCarInGarage",3000,false,"i",playerid);
				        SetPVarInt(playerid,"Parkplatz",6);
				        SetPVarFloat(playerid,"ParkPosX",2422.6580);
				        SetPVarFloat(playerid,"ParkPosY",2826.0208);
				        SetPVarFloat(playerid,"ParkPosZ",-47.9936);
				        SetPVarFloat(playerid,"ParkPosA",89.9365);
				    }
				    case 6://Parkplatz 7
				    {
						if(GaragenInfo[hs][giFahrzeug][6] > 0)return SendClientMessage(playerid, COLOR_RED, "Auf Parkplatz 7 steht bereits ein Fahrzeug.");
  						foreach(new i : Player)
						{
						    if(!IsPlayerInAnyVehicle(i))continue;
						    if(GetPlayerVehicleID(playerid) != GetPlayerVehicleID(i))continue;
				        	RemovePlayerFromVehicle(i);
			        		SetTimerEx("Unfreeze",3000,false,"i",i);
							TogglePlayerControllable(i, false);
							SetPlayerPos(i,2414.4395,2820.4709,-47.9852);
							SetPlayerInterior(i,0);
							SetPlayerVirtualWorld(i,hs);
							SetCameraBehindPlayer(i);
							SetPVarInt(i,"GarageID",hs);
							SetPVarInt(i,"InGarage",1);
							SetPlayerWeather(i,2);
						}
				        SetTimerEx("SpawnCarInGarage",3000,false,"i",playerid);
				        SetPVarInt(playerid,"Parkplatz",7);
				        SetPVarFloat(playerid,"ParkPosX",2422.6277);
				        SetPVarFloat(playerid,"ParkPosY",2830.5173);
				        SetPVarFloat(playerid,"ParkPosZ",-47.9936);
				        SetPVarFloat(playerid,"ParkPosA",89.4820);
				    }
				    case 7://Parkplatz 8
				    {
						if(GaragenInfo[hs][giFahrzeug][7] > 0)return SendClientMessage(playerid, COLOR_RED, "Auf Parkplatz 8 steht bereits ein Fahrzeug.");
  						foreach(new i : Player)
						{
						    if(!IsPlayerInAnyVehicle(i))continue;
						    if(GetPlayerVehicleID(playerid) != GetPlayerVehicleID(i))continue;
				        	RemovePlayerFromVehicle(i);
			        		SetTimerEx("Unfreeze",3000,false,"i",i);
							TogglePlayerControllable(i, false);
							SetPlayerPos(i,2414.4395,2820.4709,-47.9852);
							SetPlayerInterior(i,0);
							SetPlayerVirtualWorld(i,hs);
							SetCameraBehindPlayer(i);
							SetPVarInt(i,"GarageID",hs);
							SetPVarInt(i,"InGarage",1);
							SetPlayerWeather(i,2);
						}
				        SetTimerEx("SpawnCarInGarage",3000,false,"i",playerid);
				        SetPVarInt(playerid,"Parkplatz",8);
				        SetPVarFloat(playerid,"ParkPosX",2422.6326);
				        SetPVarFloat(playerid,"ParkPosY",2835.1450);
				        SetPVarFloat(playerid,"ParkPosZ",-47.9936);
				        SetPVarFloat(playerid,"ParkPosA",89.6107);
				    }
				    case 8://Parkplatz 9
				    {
						if(GaragenInfo[hs][giFahrzeug][8] > 0)return SendClientMessage(playerid, COLOR_RED, "Auf Parkplatz 9 steht bereits ein Fahrzeug.");
  						foreach(new i : Player)
						{
						    if(!IsPlayerInAnyVehicle(i))continue;
						    if(GetPlayerVehicleID(playerid) != GetPlayerVehicleID(i))continue;
				        	RemovePlayerFromVehicle(i);
			        		SetTimerEx("Unfreeze",3000,false,"i",i);
							TogglePlayerControllable(i, false);
							SetPlayerPos(i,2414.4395,2820.4709,-47.9852);
							SetPlayerInterior(i,0);
							SetPlayerVirtualWorld(i,hs);
							SetCameraBehindPlayer(i);
							SetPVarInt(i,"GarageID",hs);
							SetPVarInt(i,"InGarage",1);
							SetPlayerWeather(i,2);
						}
				        SetTimerEx("SpawnCarInGarage",3000,false,"i",playerid);
				        SetPVarInt(playerid,"Parkplatz",9);
				        SetPVarFloat(playerid,"ParkPosX",2422.6853);
				        SetPVarFloat(playerid,"ParkPosY",2839.8669);
				        SetPVarFloat(playerid,"ParkPosZ",-47.9936);
				        SetPVarFloat(playerid,"ParkPosA",89.6220);
				    }
				    case 9://Parkplatz 10
				    {
						if(GaragenInfo[hs][giFahrzeug][9] > 0)return SendClientMessage(playerid, COLOR_RED, "Auf Parkplatz 10 steht bereits ein Fahrzeug.");
  						foreach(new i : Player)
						{
						    if(!IsPlayerInAnyVehicle(i))continue;
						    if(GetPlayerVehicleID(playerid) != GetPlayerVehicleID(i))continue;
				        	RemovePlayerFromVehicle(i);
			        		SetTimerEx("Unfreeze",3000,false,"i",i);
							TogglePlayerControllable(i, false);
							SetPlayerPos(i,2414.4395,2820.4709,-47.9852);
							SetPlayerInterior(i,0);
							SetPlayerVirtualWorld(i,hs);
							SetCameraBehindPlayer(i);
							SetPVarInt(i,"GarageID",hs);
							SetPVarInt(i,"InGarage",1);
							SetPlayerWeather(i,2);
						}
				        SetTimerEx("SpawnCarInGarage",3000,false,"i",playerid);
				        SetPVarInt(playerid,"Parkplatz",10);
				        SetPVarFloat(playerid,"ParkPosX",2422.7322);
				        SetPVarFloat(playerid,"ParkPosY",2844.5952);
				        SetPVarFloat(playerid,"ParkPosZ",-47.9936);
				        SetPVarFloat(playerid,"ParkPosA",89.1004);
				    }
				}
			}
		}
		case DIALOG_BETA_KEY:
		{
			if(response==0){Kick(playerid);}
		    else if(response==1)
	    	{
      			if(strlen(inputtext) < 1 || strlen(inputtext) > 50)
		        {
		            ShowPlayerDialog(playerid,DIALOG_BETA_KEY,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Beta Key","{FFFFFF}Bitte gib unten dein gültigen Beta Key an.\n\n{FF0000}(Ungültiger Beta Key)","Weiter","Abbrechen");
		            return 1;
		        }
		    	if(!strcmp(inputtext, mysql_ReturnBetaKey(SpielerInfo[playerid][sName]), true))
		        {
		            SendClientMessage(playerid,COLOR_SUPER,"Dein Account wurde aktiviert. Viel Spaß bei der Beta Phase.");
		            mysql_SetInt("beta", "Aktiviert", 1, "Name", SpielerInfo[playerid][sName]);
		            CheckedAccount(playerid);
		        }
		        else
		  		{
		  		    ShowPlayerDialog(playerid,DIALOG_BETA_KEY,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Beta Key","{FFFFFF}Bitte gib unten dein gültigen Beta Key an.\n\n{FF0000}(Ungültiger Beta Key)","Weiter","Abbrechen");
		  		}
			}
		}
		case DIALOG_TRUCKER_LIEFERUNG:
		{
			if(response==0){}
		    else if(response==1)
	    	{
  				switch(listitem)
				{
				    case 0://Kraftstoffe
				    {
				        new vehicleid = GetPlayerVehicleID(playerid),Text[128], rand = random(5);
						if(rand == 0)
						{
						    SpielerLKWTrailer[playerid] = CreateVehicle(584,2204.3945,-2274.2075,14.1392,45.7255,-1,-1,-1);
						    SetPlayerCheckpointEx(playerid,2204.3945,-2274.2075,14.1392,5.0);
						}
						else if(rand == 1)
						{
							SpielerLKWTrailer[playerid] = CreateVehicle(584,2211.9963,-2266.7429,14.1426,44.3254,-1,-1,-1);
							SetPlayerCheckpointEx(playerid,2211.9963,-2266.7429,14.1426,5.0);
						}
						else if(rand == 2)
						{
							SpielerLKWTrailer[playerid] = CreateVehicle(584,2219.3379,-2259.0630,14.1391,44.1156,-1,-1,-1);
							SetPlayerCheckpointEx(playerid,2219.3379,-2259.0630,14.1391,5.0);
						}
						else if(rand == 3)
						{
							SpielerLKWTrailer[playerid] = CreateVehicle(584,2226.4819,-2251.9451,14.1409,45.3496,-1,-1,-1);
							SetPlayerCheckpointEx(playerid,2226.4819,-2251.9451,14.1409,5.0);
						}
						else if(rand == 4)
						{
							SpielerLKWTrailer[playerid] = CreateVehicle(584,2233.7722,-2244.5063,14.1410,46.0410,-1,-1,-1);
							SetPlayerCheckpointEx(playerid,2233.7722,-2244.5063,14.1410,5.0);
						}
					    SetPVarInt(playerid,"TruckerAngebot",2);
						format(Text, sizeof(Text), "Jobfahrzeug von\n{FE0000}%s", SpielerInfo[playerid][sName]);
						UpdateDynamic3DTextLabelText(FahrzeugInfo[vehicleid][fLabel], COLOR_WHITE, Text);
						SendClientMessage(playerid,COLOR_INFO,"Koppel deinen Anhänger an. Der Anhänger befindet sich am roten Marker.");
				    }
				    case 1://Waren 24/7
				    {
						KeineFunktion
				    }
				    case 2://Waren Ammunation
				    {
						KeineFunktion
				    }
				}
	    	}
		}
		case DIALOG_ANTIAFK:
        {
			if(response==0){}
		    else if(response==1)
	    	{
	            if(strval(inputtext)==GetPVarInt(playerid,"BackNummer"))
	            {
	                Delete3DTextLabel(Afklabel[playerid]);
	                TogglePlayerControllable(playerid, true);
	                Afk[playerid] = 0;
	                Afkversuche[playerid] = 0;
	                afktimedrestka[playerid] = 0;
	                SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Willkommen zurück.");
	                TextDrawHideForPlayer(playerid, StatusAFK);
	                DeletePVar(playerid,"IsAutoAFK");
	            }
	            else
	            {
	                Afkversuche[playerid] += 1;
	                if(Afkversuche[playerid] > 3)
	                {
	                    new str[128];
	                	SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast den AFK - Code zu oft falsch eingegeben.");
	                	format(str,sizeof(str),"%s %s hat den AFK - Code zu oft eingeben und wurde daher vom System gekickt.",AdminName(playerid),SpielerInfo[playerid][sName]);
	                	CreateServerLogEntry("KICK_LOG", str);
						KickPlayer(playerid,"AFK");
	                }
	                new str65[250];
					new nr = random(89999) + 10000;
					SetPVarInt(playerid,"BackNummer",nr);
					format(str65, sizeof(str65), "{FFFFFF}Du bist als Abwesend gemeldet.\nGebe diesen Code ein um wieder ins Spiel hinein zu kommen.\nCode: {FF0000}%d",nr);
					ShowPlayerDialog(playerid,DIALOG_ANTIAFK,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - AFK",str65,"Bestätigen","");
	            }
			}
        }
 		case DIALOG_OBIBAUMARKT:
		{
			if(response==0){}
		    else if(response==1)
	    	{
  				switch(listitem)
				{
				    case 0://Schaufel
				    {
						if(GetPlayerMoneyEx(playerid) < 500)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
						GivePlayerMoneyEx(playerid,-500);
						GivePlayerWeapon(playerid,WEAPON:6,1);
						SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Du hast dir für 500$ eine Schaufel gekauft.");
				    }
				    case 1://Beutel
				    {
						if(GetPlayerMoneyEx(playerid) < 10)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
						GivePlayerMoneyEx(playerid,-10);
						SpielerInfo[playerid][sBeutel]++;
						SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Du hast dir für 10$ ein Beutel gekauft.");
				    }
        			case 2://Helm 1
	                {
	                    if(GetPlayerMoneyEx(playerid) < 50)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
                        SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Du hast dir für 50$ einen Helm gekauft.");
                        SpielerInfo[playerid][sHelm] = 18645;
						GivePlayerMoneyEx(playerid,-50);
	                }
	                case 3://Helm 2
	                {
	                    if(GetPlayerMoneyEx(playerid) < 50)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
                        SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Du hast dir für 50$ einen Helm gekauft.");
                        SpielerInfo[playerid][sHelm] = 18976;
						GivePlayerMoneyEx(playerid,-50);
	                }
	                case 4://Helm 3
	                {
	                    if(GetPlayerMoneyEx(playerid) < 75)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
                        SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Du hast dir für 75$ einen Helm gekauft.");
                        SpielerInfo[playerid][sHelm] = 18977;
						GivePlayerMoneyEx(playerid,-75);
	                }
	                case 5://Helm 4
	                {
	                    if(GetPlayerMoneyEx(playerid) < 75)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
                        SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Du hast dir für 75$ einen Helm gekauft.");
                        SpielerInfo[playerid][sHelm] = 18978;
						GivePlayerMoneyEx(playerid,-75);
	                }
	                case 6://Helm 5
	                {
	                    if(GetPlayerMoneyEx(playerid) < 80)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
                        SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Du hast dir für 80$ einen Helm gekauft.");
                        SpielerInfo[playerid][sHelm] = 18979;
						GivePlayerMoneyEx(playerid,-80);
	                }
	                case 7://Feuerzeug
	                {
	                    if(GetPlayerMoneyEx(playerid) < 150)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
	                    if(SpielerInfo[playerid][sFeuerzeug] > 4)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du kannst nicht mehr als 5 Feuerzeuge tragen.");
                        SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Du hast dir für 150$ ein Feuerzeug gekauft.");
                        SpielerInfo[playerid][sFeuerzeug] += 1;
						GivePlayerMoneyEx(playerid,-150);
	                }
	                case 8://Spraydose
	                {
	                    if(GetPlayerMoneyEx(playerid) < 300)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
                        SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Du hast dir für 300$ eine Spraydose gekauft.");
						GivePlayerMoneyEx(playerid,-300);
						GivePlayerWeapon(playerid, WEAPON:41, 200);
	                }
	                case 9://Obstkorb
	                {
	                    if(GetPlayerMoneyEx(playerid) < 500)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
	                    if(SpielerInfo[playerid][sObstkorb] > 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du kannst nicht mehr als einen Obstkorb tragen.");
                        SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Du hast dir für 500$ einen Obstkorb gekauft.");
						GivePlayerMoneyEx(playerid,-500);
						SpielerInfo[playerid][sObstkorb] = 1;
	                }
				}
	    	}
		}
		case DIALOG_GYM:
		{
			if(response==0){}
		    else if(response==1)
	    	{
  				switch(listitem)
				{
				    case 0://Standart
				    {
						if(GetPlayerMoneyEx(playerid) < 10000)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
						GivePlayerMoneyEx(playerid,-10000);
						SpielerInfo[playerid][sKampfstyle] = 1;
						SetPlayerFightingStyle(playerid,FIGHT_STYLE_NORMAL);
						SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Du hast den Standart Kampfstyle für 10000$ erlernt.");
				    }
				    case 1://Boxer
				    {
						if(GetPlayerMoneyEx(playerid) < 20000)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
						GivePlayerMoneyEx(playerid,-20000);
						SpielerInfo[playerid][sKampfstyle] = 2;
						SetPlayerFightingStyle(playerid,FIGHT_STYLE_BOXING);
						SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Du hast den Boxer Kampfstyle für 20000$ erlernt.");
				    }
				    case 2://Kungfu
				    {
						if(GetPlayerMoneyEx(playerid) < 30000)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
						GivePlayerMoneyEx(playerid,-30000);
						SpielerInfo[playerid][sKampfstyle] = 3;
						SetPlayerFightingStyle(playerid,FIGHT_STYLE_KUNGFU);
      					SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Du hast den Kungfu Kampfstyle für 30000$ erlernt.");
				    }
				    case 3://Kneehead
				    {
						if(GetPlayerMoneyEx(playerid) < 40000)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
						GivePlayerMoneyEx(playerid,-40000);
						SpielerInfo[playerid][sKampfstyle] = 4;
						SetPlayerFightingStyle(playerid,FIGHT_STYLE_KNEEHEAD);
						SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Du hast den Kneehead Kampfstyle für 40000$ erlernt.");
				    }
				    case 4://Roundshousekick
				    {
						if(GetPlayerMoneyEx(playerid) < 40000)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
						GivePlayerMoneyEx(playerid,-50000);
						SpielerInfo[playerid][sKampfstyle] = 5;
						SetPlayerFightingStyle(playerid,FIGHT_STYLE_GRABKICK);
						SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Du hast den Roundhousekick Kampfstyle für 50000$ erlernt.");
				    }
				    case 5://Ellebogen
				    {
						if(GetPlayerMoneyEx(playerid) < 50000)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
						GivePlayerMoneyEx(playerid,-60000);
						SpielerInfo[playerid][sKampfstyle] = 6;
						SetPlayerFightingStyle(playerid,FIGHT_STYLE_ELBOW);
						SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Du hast den Ellebogen Kampfstyle für 60000$ erlernt.");
				    }
				}
	    	}
		}
		case DIALOG_FILL_ATM:
		{
  			if(response==0){DeletePVar(playerid,"ATMID");}//Zurück
		    if(response==1)//Weiter
		    {
		        new atmid = GetPVarInt(playerid,"ATMID");
     			if(strval(inputtext) < 1 || strval(inputtext) > 10000 || !IsNumeric(inputtext))
		        {
		            new atmdialog[364];
       				format(atmdialog,sizeof(atmdialog),"{FFFFFF}Bankautomat aktueller Stand: ${FF0000}%d{FFFFFF}/$10.000\n\n{FFFFFF}Mit wie viel Geld möchtest du diesen Bankautomat füllen?{FF0000}($1-$10.000)",ATMInfo[atmid][atmGeld]);
					ShowPlayerDialog(playerid,DIALOG_FILL_ATM,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Geldlieferant",atmdialog,"Auffuellen","Abbrechen");
		        }
		        else
		        {
		            new wert = strval(inputtext), ergebnis = 10000-ATMInfo[atmid][atmGeld]-wert;
					if(ergebnis >= 0)
					{
					    if(GetPVarInt(playerid,"GeldkofferWert") >= wert)
					    {
					        SetPVarInt(playerid,"ATMFillVorgang",1);
						    SetPVarInt(playerid,"ATMWert",wert);
	 						TogglePlayerControllable(playerid, false);
							ApplyAnimation(playerid,"DEALER","DRUGS_BUY", 4.0, true, false, false, false, 0);
							GameTextForPlayer(playerid, "~r~Bitte warten...", 3000, 5);
							KillTimer(FillATMTimer[playerid]);
							FillATMTimer[playerid] = SetTimerEx("FillATM",3000,false,"i",playerid);
						}
						else
						{
							new atmdialog[364];
							format(atmdialog,sizeof(atmdialog),"{FFFFFF}Bankautomat aktueller Stand: ${FF0000}%d{FFFFFF}/$10.000\n\n{FFFFFF}In deinem Geldkoffer ist nicht mehr soviel Geld.",ATMInfo[atmid][atmGeld]);
							ShowPlayerDialog(playerid,DIALOG_FILL_ATM,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Geldlieferant",atmdialog,"Auffuellen","Abbrechen");
						}
					}
					else
					{
						new atmdialog[364];
						format(atmdialog,sizeof(atmdialog),"{FFFFFF}Bankautomat aktueller Stand: ${FF0000}%d{FFFFFF}/$10.000\n\n{FFFFFF}In dem Bankautomat passt nicht mehr soviel Geld rein.",ATMInfo[atmid][atmGeld]);
						ShowPlayerDialog(playerid,DIALOG_FILL_ATM,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Geldlieferant",atmdialog,"Auffuellen","Abbrechen");
					}
		        }
			}
		}
		case DIALOG_BANKAUTOMATEN:
		{
			if(response==0){}
		    else if(response==1)
	    	{
	    	    new atmmessage[128], id = playerAtmDialogHelper[playerid][listitem];
	    	    format(atmmessage,sizeof(atmmessage),"Bankautomat Nr.%d wurde dir rot auf der Minimap markiert.",id);
				SendClientMessage(playerid,COLOR_SUPER,atmmessage);
				SetPlayerCheckpointEx(playerid,ATMInfo[listitem][atmPos_X],ATMInfo[listitem][atmPos_Y],ATMInfo[listitem][atmPos_Z],3.0);
				SendClientMessage(playerid,COLOR_INFO,"JOB: Hole das Geld mit /geldkoffer aus dem Fahrzeug und stecke es mit /auffuellen in den ATM.");
			}
		}
		case DIALOG_DEFEKTE_BLITZER:
		{
			if(response==0){}
		    else if(response==1)
	    	{
	    	    new blitzermessage[128], blitzerid = BlitzerKaputt[playerid][listitem+1];
	    	    format(blitzermessage,sizeof(blitzermessage),"Blitzer Nr.%d wurde dir rot auf der Minimap markiert.",blitzerid);
				SendClientMessage(playerid,COLOR_SUPER,blitzermessage);
				SetPlayerCheckpointEx(playerid,Blitzer[blitzerid][oPosX],Blitzer[blitzerid][oPosY],Blitzer[blitzerid][oPosZ],3.0);
			}
		}
		case DIALOG_DEFEKTE_BANKAUTOMATEN:
		{
			if(response==0){}
		    else if(response==1)
	    	{
	    	    new atmmessage[128], atmid = ATMKaputt[playerid][listitem+1];
	    	    format(atmmessage,sizeof(atmmessage),"Bankautomat Nr.%d wurde dir rot auf der Minimap markiert.",atmid);
				SendClientMessage(playerid,COLOR_SUPER,atmmessage);
				SetPlayerCheckpointEx(playerid,ATMInfo[atmid][atmPos_X],ATMInfo[atmid][atmPos_Y],ATMInfo[atmid][atmPos_Z],3.0);
			}
		}
		case DIALOG_GELDKOFFER_HOLEN:
		{
  			if(response==0){}//Zurück
		    if(response==1)//Weiter
		    {
     			if(strval(inputtext) < 1 || strval(inputtext) > 3000 || !IsNumeric(inputtext))
		        {
		            new transporterdialog[364];
					format(transporterdialog,sizeof(transporterdialog),"{FFFFFF}Geldtransporter Kapazität: ${FF0000}%d{FFFFFF}/$10.000\n\n{FFFFFF}Wie viel Geld möchtest du in den Koffer tun ? (MAX. $3.000)",GetPVarInt(playerid,"GeldtransporterGeld"));
					ShowPlayerDialog(playerid,DIALOG_GELDKOFFER_HOLEN,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Geldlieferant",transporterdialog,"auffuellen","Abbrechen");
		        }
		        else
		        {
					if(GetPVarInt(playerid,"GeldtransporterGeld") >= strval(inputtext))
					{
					    new wert = strval(inputtext), i = GetPVarInt(playerid,"GeldtransporterID");
					    SetPVarInt(playerid,"PackeGeldkoffer",wert);
     					SetVehicleParamsCarDoors(i,false,false,true,true);
		    			TogglePlayerControllable(playerid, false);
		    			ApplyAnimation(playerid,"DEALER","DRUGS_BUY", 4.0, true, false, false, false, 0);
						GameTextForPlayer(playerid, "~r~Bitte warten...", 3000, 5);
						KillTimer(GeldkofferTimer[playerid]);
						GeldkofferTimer[playerid] = SetTimerEx("GeldkofferHolen",3000,false,"i",playerid);
					}
					else
					{
			            new transporterdialog[464];
						format(transporterdialog,sizeof(transporterdialog),"{FFFFFF}Geldtransporter Kapazität: ${FF0000}%d{FFFFFF}/$10.000\n\n{FFFFFF}So viel Geld liegt nicht mehr im Geldtransporter.\nWähle einen anderen Betrag. (MAX. $3.000)",GetPVarInt(playerid,"GeldtransporterGeld"));
						ShowPlayerDialog(playerid,DIALOG_GELDKOFFER_HOLEN,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Geldlieferant",transporterdialog,"auffuellen","Abbrechen");
					}
		        }
			}
		}
		case DIALOG_WERKZEUG_HOLEN:
		{
  			if(response==0){}//Zurück
		    if(response==1)//Weiter
		    {
  				switch(listitem)
				{
				    case 0://Hammer
				    {
					    new i = GetPVarInt(playerid,"ElektrikerID");
					    SetPVarInt(playerid,"HoleWerkzeug",1);
		    			TogglePlayerControllable(playerid, false);
		    			ApplyAnimation(playerid,"DEALER","DRUGS_BUY", 4.0, true, false, false, false, 0);
						GameTextForPlayer(playerid, "~r~Bitte warten...", 5000, 5);
						KillTimer(WerkzeugTimer[playerid]);
						WerkzeugTimer[playerid] = SetTimerEx("WerkzeugHolen",5000,false,"i",playerid);
						if(Kofferraum[i] == false)
   						{
   						    Kofferraum[i] = true;
   						    GetVehicleParamsEx(i, engine, lights, alarm, doors, bonnet, boot, objective);
   						    SetVehicleParamsEx(i, engine, lights, alarm, doors, bonnet, true, objective);
						}
					}
	    			case 1://Schraubendreher
				    {
					    new i = GetPVarInt(playerid,"ElektrikerID");
					    SetPVarInt(playerid,"HoleWerkzeug",2);
		    			TogglePlayerControllable(playerid, false);
		    			ApplyAnimation(playerid,"DEALER","DRUGS_BUY", 4.0, true, false, false, false, 0);
						GameTextForPlayer(playerid, "~r~Bitte warten...", 5000, 5);
						KillTimer(WerkzeugTimer[playerid]);
						WerkzeugTimer[playerid] = SetTimerEx("WerkzeugHolen",5000,false,"i",playerid);
						if(Kofferraum[i] == false)
   						{
   						    Kofferraum[i] = true;
   						    GetVehicleParamsEx(i, engine, lights, alarm, doors, bonnet, boot, objective);
   						    SetVehicleParamsEx(i, engine, lights, alarm, doors, bonnet, true, objective);
						}
					}
		        }
			}
		}
		case DIALOG_AUFTRAGSLISTE:
		{
  			if(response==0){}//Zurück
		    if(response==1)//Weiter
		    {
  				switch(listitem)
				{
				    case 0://Bankautomaten
				    {
					    new atmdialog[2048], count = 0;
				    	for(new atm=1; atm<sizeof(ATMInfo); atm++)
				 		{
				 		    if(ATMInfo[atm][atmKaputt] == 0)continue;
				 		    count++;
							format(atmdialog,sizeof atmdialog,"%s\nBankautomat Nr.%d ist defekt",atmdialog,atm);
							ATMKaputt[playerid][count] = atm;
				 		}
						if(count > 0){ShowPlayerDialog(playerid,DIALOG_DEFEKTE_BANKAUTOMATEN,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Defekte Bankautomaten",atmdialog,"Orten","Beenden");}
						else {SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Zurzeit sind keine Bankautomaten defekt.");}
				    }
				    case 1://Blitzer
				    {
						new blitzerdialog[1048], count = 0;
						for(new blitzerid=1;blitzerid<MAX_BLITZER;blitzerid++)
						{
							if(Blitzer[blitzerid][Erstellt] == false)continue;
							if(Blitzer[blitzerid][Kaputt] == 0)continue;
							count++;
							format(blitzerdialog,sizeof blitzerdialog,"%s\nBlitzer Nr.%d ist ausgefallen",blitzerdialog,blitzerid);
							BlitzerKaputt[playerid][count] = blitzerid;
						}
						if(count > 0){ShowPlayerDialog(playerid,DIALOG_DEFEKTE_BLITZER,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Defekte Blitzer",blitzerdialog,"Orten","Beenden");}
						else {SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Zurzeit sind keine Blitzer defekt.");}
					}
				}
			}
    	}
    	case DIALOG_VEH_LABEL:
		{
		    if(response==0){}//Abbrchen
		    else if(response==1)
		    {
                new vehicleid = GetPlayerVehicleID(playerid), labelString[264];
				switch(listitem)
				{
					case 0://Bitte folgen
					{
                        if(FahrzeugInfo[vehicleid][fLabel] != Text3D:INVALID_3DTEXT_ID)
                    	{
                    		DestroyDynamic3DTextLabel(FahrzeugInfo[vehicleid][fLabel]);
                    		FahrzeugInfo[vehicleid][fLabel] = Text3D:INVALID_3DTEXT_ID;
                    	}
                    	format(labelString,sizeof(labelString),"{FFFFFF}%s\n{FF002D}{{ Bitte folgen }}",FrakKurzel(SpielerInfo[playerid][sFraktion]));
                        FahrzeugInfo[vehicleid][fLabel] = CreateDynamic3DTextLabel(labelString, 0xFFFFFFFF, 0.0, 0.0, 2.0, 40.0, INVALID_PLAYER_ID, vehicleid);
					}
				    case 1: // Verkehrsunfall
					{
                        if(FahrzeugInfo[vehicleid][fLabel] != Text3D:INVALID_3DTEXT_ID)
                    	{
                    		DestroyDynamic3DTextLabel(FahrzeugInfo[vehicleid][fLabel]);
                    		FahrzeugInfo[vehicleid][fLabel] = Text3D:INVALID_3DTEXT_ID;
                    	}
                        format(labelString,sizeof(labelString),"{FFFFFF}%s\n{FF002D}{{ Einsatz - Nicht folgen }}",FrakKurzel(SpielerInfo[playerid][sFraktion]));
                        FahrzeugInfo[vehicleid][fLabel] = CreateDynamic3DTextLabel(labelString, 0xFFFFFFFF, 0.0, 0.0, 2.0, 40.0, INVALID_PLAYER_ID, vehicleid);
					}
					case 2: // Verkehrskontrolle
					{
                        if(FahrzeugInfo[vehicleid][fLabel] != Text3D:INVALID_3DTEXT_ID)
                    	{
                    		DestroyDynamic3DTextLabel(FahrzeugInfo[vehicleid][fLabel]);
                    		FahrzeugInfo[vehicleid][fLabel] = Text3D:INVALID_3DTEXT_ID;
                    	}
                        format(labelString,sizeof(labelString),"{FFFFFF}%s\n{FF002D}{{ Einsatzleitung }}",FrakKurzel(SpielerInfo[playerid][sFraktion]));
                        FahrzeugInfo[vehicleid][fLabel] = CreateDynamic3DTextLabel(labelString, 0xFFFFFFFF, 0.0, 0.0, 2.0, 40.0, INVALID_PLAYER_ID, vehicleid);
					}
					case 3: // Kolonne
					{
                        if(FahrzeugInfo[vehicleid][fLabel] != Text3D:INVALID_3DTEXT_ID)
                    	{
                    		DestroyDynamic3DTextLabel(FahrzeugInfo[vehicleid][fLabel]);
                    		FahrzeugInfo[vehicleid][fLabel] = Text3D:INVALID_3DTEXT_ID;
                    	}
                        format(labelString,sizeof(labelString),"{FFFFFF}%s\n{FF002D}{{ Überholverbot }}",FrakKurzel(SpielerInfo[playerid][sFraktion]));
                        FahrzeugInfo[vehicleid][fLabel] = CreateDynamic3DTextLabel(labelString, 0xFFFFFFFF, 0.0, 0.0, 2.0, 40.0, INVALID_PLAYER_ID, vehicleid);
					}
					case 4: // Kolonne
					{
                        if(FahrzeugInfo[vehicleid][fLabel] != Text3D:INVALID_3DTEXT_ID)
                    	{
                    		DestroyDynamic3DTextLabel(FahrzeugInfo[vehicleid][fLabel]);
                    		FahrzeugInfo[vehicleid][fLabel] = Text3D:INVALID_3DTEXT_ID;
                    	}
                        format(labelString,sizeof(labelString),"{FFFFFF}%s\n{FF002D}{{ Allgemeine Verkehrskontrolle }}",FrakKurzel(SpielerInfo[playerid][sFraktion]));
                        FahrzeugInfo[vehicleid][fLabel] = CreateDynamic3DTextLabel(labelString, 0xFFFFFFFF, 0.0, 0.0, 2.0, 40.0, INVALID_PLAYER_ID, vehicleid);
					}
                    case 5: // Label entfernen
                    {
                        if(FahrzeugInfo[vehicleid][fLabel] != Text3D:INVALID_3DTEXT_ID)
                    	{
                    		DestroyDynamic3DTextLabel(FahrzeugInfo[vehicleid][fLabel]);
                    		FahrzeugInfo[vehicleid][fLabel] = Text3D:INVALID_3DTEXT_ID;
                    	}
                    }
				}
			}
		}
		case DIALOG_SMNEBENJOB:
		{
		    if(response==0)//Abbrechen
		    {
		        SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Emilio{FFFFFF} sagt: Komm wieder, wenn du was brauchst.");
				TogglePlayerControllable(playerid, true);
				SetCameraBehindPlayer(playerid);
				DeletePVar(playerid,"Schwarzmarkt");
		    }
		    else if(response==1)//Weiter
		    {
		        switch(listitem)
		        {
		            case 0://Drogendealer
		            {
		                SetPVarInt(playerid,"SMNebenjob",1);
		                ShowPlayerDialog(playerid,DIALOG_SMNEBENJOB_INFO,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Schwarzmarkt Nebenjobs","{FFFFFF}Als Drogendealer kaufst du Drogen von Gangs und verkaufst diese weiter.\nGangs können Drogen nur an \
					 	Drogendealer verkaufen. Das bedeutet: {007DFF}du bestimmst den Kurs der Drogen mit{FFFFFF}. Du kannst großes Geld machen, oder im Knast landen.","Annehmen","Zurück");
		            }
					case 1://Waffendealer
					{
					    SetPVarInt(playerid,"SMNebenjob",2);
					    ShowPlayerDialog(playerid,DIALOG_SMNEBENJOB_INFO,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Schwarzmarkt Nebenjobs","{FFFFFF}Als Waffendealer kaufst du Materialien vom Materialiendealer und baust daraus Waffen. Deine Waffen kannst du verkaufen oder für den Eigengebrauch nutzen. \
				 		Waffendealer verkaufen. Das bedeutet: {007DFF}du bestimmst den Kurs der Waffen mit{FFFFFF}. Du kannst großes Geld machen, oder im Knast landen.","Annehmen","Zurück");
					}
		        }
		    }
		}
		case DIALOG_SMNEBENJOB_INFO:
		{
		    if(response==0)//Zurück
		    {
		        DeletePVar(playerid,"SMNebenjob");
		        ShowPlayerDialog(playerid,DIALOG_SMNEBENJOB,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Schwarzmarkt Nebenjobs","Drogendealer\nWaffendealer","Weiter","Abbrechen");
		    }
		    else if(response==1)//Annehmen
		    {
		        if(GetPVarInt(playerid,"SMNebenjob") == 1)//Drogendealer (12)
		        {
		            if(SpielerInfo[playerid][sNebenjob] == 12)
		            {
		                DeletePVar(playerid,"SMNebenjob");
		        		ShowPlayerDialog(playerid,DIALOG_SMNEBENJOB,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Schwarzmarkt Nebenjobs","Drogendealer\nWaffendealer","Weiter","Abbrechen");
		        		SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Emilio{FFFFFF} sagt: Bruder... ich kann an deinen veranzten Händen sehen das du schon Drogendealer bist.");
		        		return 1;
		            }
		            SpielerInfo[playerid][sNebenjob] = 12;
		            SpielerInfo[playerid][sQuitJob] = 0;
                    SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Emilio{FFFFFF} sagt: Alles klar Bruder, ich gebe dir noch ein paar meiner Tipps mit auf den Weg.");
                    SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Emilio{FFFFFF} sagt: Kontaktiere Mitglieder von Gangs und kaufe Drogen von Ihnen.");
                    SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Emilio{FFFFFF} sagt: Versuch den Preis zu drücken. Die sind handelsbereiter als du glaubst!");
                    SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Emilio{FFFFFF} sagt: Die Drogen solltest du dann teurer an andere Leute verkaufen. Also, viel Erfolg Bruder!");
                    TogglePlayerControllable(playerid, true);
					SetCameraBehindPlayer(playerid);
					DeletePVar(playerid,"Schwarzmarkt");
					DeletePVar(playerid,"SMNebenjob");
		        }
		        else if(GetPVarInt(playerid,"SMNebenjob") == 2)//Waffendealer (13)
		        {
		            if(SpielerInfo[playerid][sNebenjob] == 13)
		            {
		                DeletePVar(playerid,"SMNebenjob");
		        		ShowPlayerDialog(playerid,DIALOG_SMNEBENJOB,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Schwarzmarkt Nebenjobs","Drogendealer\nWaffendealer","Weiter","Abbrechen");
		        		SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Emilio{FFFFFF} sagt: Dein Ernst?... Du bist bereits Waffendealer Bruder, oder glaubst du doppelt hält besser?");
		        		return 1;
		            }
		            SpielerInfo[playerid][sNebenjob] = 13;
		            SpielerInfo[playerid][sQuitJob] = 0;
                    SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Emilio{FFFFFF} sagt: Alles klar Bruder, ich gebe dir noch ein paar meiner Tipps mit auf den Weg.");
                    SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Emilio{FFFFFF} sagt: Kontaktiere Mitglieder von Gangs und kaufe Materialien von Ihnen.");
                    SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Emilio{FFFFFF} sagt: Du kanns daraus Waffen zusammen bauen und diese an andere Leute verkaufen. Also, viel Erfolg Bruder!");
                    TogglePlayerControllable(playerid, true);
					SetCameraBehindPlayer(playerid);
					DeletePVar(playerid,"Schwarzmarkt");
					DeletePVar(playerid,"SMNebenjob");
		        }
		    }
		}
		case DIALOG_NAMECHANGE:
		{
			if(response==0)//Abbrechen
			{
			    new pID = GetPVarInt(playerid,"NameChangeGiver"), string2[128];
			    format(string2,sizeof(string2),"[Info]: {FFFFFF}Du hast das Namechange-Ticket von %s %s abgelehnt.",AdminName(pID),SpielerInfo[pID][sName]);
			    SendClientMessage(playerid,COLOR_INFO,string2);
			    format(string2,sizeof(string2),"[Info]: {FFFFFF}%s hat das Namechange-Ticket abgelehnt.",SpielerInfo[playerid][sName]);
			    SendClientMessage(pID,COLOR_RED,string2);
			}
			else if(response==1)//Weiter
			{
			    new pID = GetPVarInt(playerid,"NameChangeGiver"), string2[300];
			    if(strlen(inputtext) < 3 || strlen(inputtext) > 24)
			    {
			        format(string2,sizeof(string2),"{FFFFFF}%s %s hat dir ein Namechange-Ticket gegeben.\nDu kannst jetzt deinen neuen Namen einfach unten in das Feld eintippen und auf 'Weiter' klicken.\n\nBitte gebe einen gültigen Namen mit mindestens 3 und maximal 24 Zeichen an.",AdminName(pID),SpielerInfo[pID][sName]);
					ShowPlayerDialog(playerid,DIALOG_NAMECHANGE,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Namensänderung",string2,"Weiter","Abbrechen");
					return 1;
			    }
			    format(string2,sizeof(string2),"[Info]: {FFFFFF}Du hast das Namechange-Ticket von %s %s angenommen. Glückwunsch zum neuem Namen!",AdminName(pID),SpielerInfo[pID][sName]);
			    SendClientMessage(playerid,COLOR_INFO,string2);
			    new newname[MAX_PLAYER_NAME];
			    format(newname,sizeof(newname),"%s",inputtext);
			    SetPlayerName(playerid,newname);

			    mysql_format(sqlHandle, string2,sizeof(string2),"UPDATE `accounts` SET `Name`='%s' WHERE `Name`='%s'", newname, SpielerInfo[playerid][sName]);
				mysql_tquery(sqlHandle, string2);

			    format(string2,sizeof(string2),"[Info]: {FFFFFF}%s hat das Namechange-Ticket angenommen. Sein Name lautet nun: %s",SpielerInfo[playerid][sName],newname);
			    SendClientMessage(pID,COLOR_RED,string2);
			}
		}
		case DIALOG_PDAKTE:
		{
		    if(response==1){}//OK
		    else if(response==0)//Eintrag
		    {
		        new stringdi[128];
		        ShowPlayerDialog(playerid,DIALOG_PDAKTE_ENTRY,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Akteneintrag hinzufügen","Bitte halte deinen Akteneintrag möglichst kurz:","Absenden","Abbrechen");
                if(GetPVarInt(playerid,"CopMaske") == 1){format(stringdi,sizeof(stringdi),"* Unbekannter tippt auf seinem Dienst-Tablet herum.");}
				else format(stringdi,sizeof(stringdi),"* %s %s tippt auf seinem Dienst-Tablet herum.",RangName(playerid),SpielerInfo[playerid][sName]);
	        	ProxDetector(12.0, playerid, stringdi, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
		}
		case DIALOG_PDAKTE_ENTRY:
		{
		    if(response==0){}//Abbrechen
		    else if(response==1)//Eintrag
		    {
		        new stringdi[400];
		        mysql_format(sqlHandle, stringdi, sizeof(stringdi),"SELECT `Akte` FROM `accounts` WHERE `Name` = '%s'", SpielerInfo[GetPVarInt(playerid,"AktenEintrag")][sName]);
		   	 	new Cache:result = mysql_query(sqlHandle, stringdi);
				
				new var[255], merker = 0;
				for(new i = 0; i < cache_num_rows(); i++)
				{
		  			cache_get_value_name(i, "akte",var);
		  			format(var,sizeof(var),"%s",var);
			    	if(strlen(var) + strlen(inputtext)){merker = 1;}
			    	else if(strlen(inputtext) < 3){merker = 2;}
					else merker = 3;
			    }
				cache_delete(result);
			    if(merker == 1)
		    	{
			        ShowPlayerDialog(playerid,DIALOG_PDAKTE_ENTRY,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Akteneintrag hinzufügen","Bitte halte deinen Akteneintrag möglichst kurz:\n\nDer angegebene Eintrag passt nicht mehr in die Akte.","Absenden","Abbrechen");
			    }
			    else if(merker == 2)
			    {
			        ShowPlayerDialog(playerid,DIALOG_PDAKTE_ENTRY,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Akteneintrag hinzufügen","Bitte halte deinen Akteneintrag möglichst kurz:\n\nBitte trage mindestens 3 Zeichen in die Akte ein.","Absenden","Abbrechen");
			    }
			    else if(merker == 3)
			    {
			        new newakte[255];
			        format(newakte,sizeof(newakte),"%s\n%s",var,inputtext);
			        mysql_format(sqlHandle, var,sizeof(var),"UPDATE `accounts` SET `Akte`='%s' WHERE `Name`='%s'",newakte,SpielerInfo[GetPVarInt(playerid,"AktenEintrag")][sName]);
					mysql_tquery(sqlHandle, var);
	                if(GetPVarInt(playerid,"CopMaske") == 1){format(stringdi,sizeof(stringdi),"* Unbekannter tippt auf seinem Dienst-Tablet herum und steckt es wieder ein.");}
					else format(stringdi,sizeof(stringdi),"* %s %s tippt auf seinem Dienst-Tablet herum und steckt es wieder ein.",RangName(playerid),SpielerInfo[playerid][sName]);
		        	ProxDetector(12.0, playerid, stringdi, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		        	SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Akteneintrag hinzugefügt.");
		        	DeletePVar(playerid,"AktenEintrag");
			    }
		    }
		}
		case DIALOG_KONTAKTE:
		{
		    if(response==0){}//Abbrechen
		    else if(response==1)//Weiter
		    {
		        SetPVarInt(playerid,"HandyKontaktAuswahl",listitem+1);
		        ShowPlayerDialog(playerid,DIALOG_KONTAKTE_EDIT,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Kontakte","{FFFFFF}Kontakt bearbeiten:\nGebe die Handy-Nummer des neuen Kontakt ein. Gebe '0' ein um den Kontakt zu löschen.","Ändern","Zurück");
		    }
		}
		case DIALOG_TUTORIAL:
		{
		    if(response==0){}
		    else if(response==1)
		    {
		        new reggstring[600];
			    if(SpielerInfo[playerid][sTutorial] == 0)
			    {
			        SpielerInfo[playerid][sTutorial] = 1;
					format(reggstring,sizeof(reggstring),"{FFFFFF}"SERV_NAME" bietet dir extrem viele Möglichkeiten dich zu entfalten. Wir haben ein Missionssystem welches du über {007DFF}/missionen{FFFFFF} erreichen kannst.\n\
					Während du spielst wirst du viele tolle Dinge erleben. Einige davon sind Teil unserer Achievements ( {007DFF}/achiv{FFFFFF} ). Erhalte EXP, also Erfahrungspunkte, für nahezu alles was du tust und\n");
					format(reggstring,sizeof(reggstring),"%sbringe damit dein Level voran. Je nach Level kannst du {007DFF}Businesse, Häuser, mehrere Fahrzeuge, höhere Waffenschein-Klassen{FFFFFF} und viele andere großartige Dinge kaufen.",reggstring);
					ShowPlayerDialog(playerid,DIALOG_TUTORIAL,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Herzlich Willkommen! (2/3)",reggstring,"Weiter","");
			    }
		     	else if(SpielerInfo[playerid][sTutorial] == 1)
			    {
			        SpielerInfo[playerid][sTutorial] = 2;
					format(reggstring,sizeof(reggstring),"Dir steht das ehrgeizige Team von "SERV_NAME" zur Seite. Über {007DFF}/newb{FFFFFF} kannst du jederzeit Fragen stellen und musst kein Support-Ticket eröffnen.\n\
					Deine Frage erreicht das gesamte Team & kann sofort beantwortet werden. "SERV_NAME" leitet dich am Anfang durch ein simples Tutorial. So legst du den perfekten Start hin!\n\n");
					format(reggstring,sizeof(reggstring),"%sIm nächsten Schritt erstellst du dir deinen Account. Dann wird gezockt!",reggstring);
					ShowPlayerDialog(playerid,DIALOG_TUTORIAL,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Herzlich Willkommen! (3/3)",reggstring,"Weiter","");
			    }
			    else if(SpielerInfo[playerid][sTutorial] == 2)
			    {
			        SpielerInfo[playerid][sTutorial] = 3;
					format(reggstring,sizeof(reggstring),"{FFFFFF}Auf geht's {007DFF}%s{FFFFFF}.\nBitte erstelle dir einen Account. Mit diesem wirst du dann am Spiel teilhaben können.\nWähle für deinen Account ein sicheres Passwort, es muss zwischen {FE0000}8 und 24 Zeichen{FFFFFF} lang sein.",SpielerInfo[playerid][sName]);
					ShowPlayerDialog(playerid,DIALOG_REGSTEP1,DIALOG_STYLE_PASSWORD,"{007DFF}"SERV_NAME"{FFFFFF} - Account erstellen 1/5",reggstring,"Erstellen","");
			    }
			}
		}
		case DIALOG_FRAKV_UCM:
		{
		    if(response==0){ShowFrakVerwaltung(playerid);}//Zurück
		    else if(response==1)//Weiter
		    {
		        if(SpielerInfo[playerid][sFraktion] != 2)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Der Chief of Police hat dem FBI lediglich Leserechte eingeräumt.");
		        SetPVarInt(playerid,"NameUndercoverEdit",listitem+1);
		        ShowPlayerDialog(playerid,DIALOG_FRAKV_UCM_EDIT,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Bitte gebe einen Namen ein, der für den Undercover-Einsatz verfügbar sein soll.\n\n3-24 Zeichen. aA-zZ. 0-9. Keine Sonderzeichen. Kein Leerzeichen.","Weiter","Zurück");
		    }
		}
		case DIALOG_FRAKV_UCM_EDIT:
		{
		    if(response==0)//Zurück
		    {
		        new XXXquerystring[400], XXXUndercover1var[25][10];
                mysql_format(sqlHandle, XXXquerystring, sizeof(XXXquerystring),"SELECT Undercover1, Undercover2, Undercover3, Undercover4, Undercover5, Undercover6, Undercover7, Undercover8, Undercover9, Undercover10 FROM `frakinfos` WHERE `FID` = '2'");
		   	 	new Cache:result = mysql_query(sqlHandle, XXXquerystring);
				
				cache_get_value_name(0, "Undercover1",XXXUndercover1var[0]);
				cache_get_value_name(0, "Undercover2",XXXUndercover1var[1]);
				cache_get_value_name(0, "Undercover3",XXXUndercover1var[2]);
				cache_get_value_name(0, "Undercover4",XXXUndercover1var[3]);
				cache_get_value_name(0, "Undercover5",XXXUndercover1var[4]);
				cache_get_value_name(0, "Undercover6",XXXUndercover1var[5]);
				cache_get_value_name(0, "Undercover7",XXXUndercover1var[6]);
				cache_get_value_name(0, "Undercover8",XXXUndercover1var[7]);
				cache_get_value_name(0, "Undercover9",XXXUndercover1var[8]);
				cache_get_value_name(0, "Undercover10",XXXUndercover1var[9]);
			    
			    cache_delete(result);
			    format(XXXquerystring,sizeof(XXXquerystring),"%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s",
				XXXUndercover1var[0],XXXUndercover1var[1],XXXUndercover1var[2],XXXUndercover1var[3],XXXUndercover1var[4],XXXUndercover1var[5],XXXUndercover1var[6],XXXUndercover1var[7],XXXUndercover1var[8],XXXUndercover1var[9]);
            	ShowPlayerDialog(playerid,DIALOG_FRAKV_UCM,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",XXXquerystring,"Weiter","Zurück");
            	return 1;
		    }
		    else if(response==1)//Weiter
		    {
		        if(strlen(inputtext) < 3 || strlen(inputtext) > 24)return ShowPlayerDialog(playerid,DIALOG_FRAKV_UCM_EDIT,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung","Bitte gebe einen Namen ein, der für den Undercover-Einsatz verfügbar sein soll.\n\n{FE0000}3-24 Zeichen. aA-zZ. 0-9. Keine Sonderzeichen. Kein Leerzeichen.","Weiter","Zurück");
				new queryfrakucm[128];
				mysql_format(sqlHandle, queryfrakucm, sizeof(queryfrakucm),"SELECT Name FROM `accounts` WHERE `Name` = '%s'",inputtext);
		        new Cache:result = mysql_query(sqlHandle, queryfrakucm);
				
				if(cache_num_rows() > 0)
				{
				    SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Dieser Name wird bereits von einem realen Spieler benutzt.");
				    cache_delete(result);
				    ShowFrakVerwaltung(playerid);
				    return 1;
				}
				cache_delete(result);
				new stringx[15], stringaa[3];
				format(stringx,sizeof(stringx),"Undercover%d",GetPVarInt(playerid,"NameUndercoverEdit"));
				format(stringaa,sizeof(stringaa),"%d",SpielerInfo[playerid][sFraktion]);
				mysql_SetString("frakinfos", stringx, inputtext, "FID", stringaa);
				SendClientMessage(playerid,COLOR_INFO,"[FrakV]: {FFFFFF}Namen angepasst.");
				ShowFrakVerwaltung(playerid);
			}
		}
		case DIALOG_KONTAKTE_EDIT:
		{
		    if(response==0)//Zurück
		    {
		        new stringx[500], Kontakt1[25], Kontakt2[25], Kontakt3[25], Kontakt4[25], Kontakt5[25], var[25];
			    mysql_format(sqlHandle, stringx, sizeof(stringx),"SELECT Kontakt1, Kontakt2, Kontakt3, Kontakt4, Kontakt5 FROM `accounts` WHERE `Name` = '%s'", SpielerInfo[playerid][sName]);
		   	 	new Cache:result = mysql_query(sqlHandle, stringx);
				
				cache_get_value_name(0, "Kontakt1",var); format(Kontakt1,25,"%s",var);
				cache_get_value_name(0, "Kontakt2",var); format(Kontakt2,25,"%s",var);
				cache_get_value_name(0, "Kontakt3",var); format(Kontakt3,25,"%s",var);
				cache_get_value_name(0, "Kontakt4",var); format(Kontakt4,25,"%s",var);
				cache_get_value_name(0, "Kontakt5",var); format(Kontakt5,25,"%s",var);
			    
			    cache_delete(result);
			    format(stringx,sizeof(stringx),"%s\n%s\n%s\n%s\n%s",Kontakt1,Kontakt2,Kontakt3,Kontakt4,Kontakt5);
			    ShowPlayerDialog(playerid,DIALOG_KONTAKTE,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Handy - Kontakte",stringx,"Weiter","Abbrechen");
		    }
		    else if(response==1)//Weiter
		    {
		        if(strval(inputtext) == 0)
		        {
		            new stringx[128];
		            mysql_format(sqlHandle, stringx,sizeof(stringx),"UPDATE `accounts` SET `Kontakt%d`='Niemand' WHERE `Name`='%s'",GetPVarInt(playerid,"HandyKontaktAuswahl"),SpielerInfo[playerid][sName]);
					mysql_tquery(sqlHandle, stringx);
					SendClientMessage(playerid,COLOR_SUPER,"[Handy]: {FFFFFF}Die Kontaktdaten wurden aktualisiert.");
		        }
		        else
		        {
			        new stringx[200];
			        mysql_format(sqlHandle, stringx, sizeof(stringx),"SELECT Name FROM `accounts` WHERE `Handy` = '%i'", strval(inputtext));
			        new Cache:result = mysql_query(sqlHandle, stringx);
					
					if(cache_num_rows() > 0)
					{
					    new kontaktName[80];
			  			cache_get_value_name(0, "Name",kontaktName);
			  			format(kontaktName,sizeof(kontaktName),"%s - %d",kontaktName,strval(inputtext));
				    	mysql_format(sqlHandle, stringx,sizeof(stringx),"UPDATE `accounts` SET `Kontakt%d`='%s' WHERE `Name`='%s'",GetPVarInt(playerid,"HandyKontaktAuswahl"),kontaktName,SpielerInfo[playerid][sName]);
						mysql_tquery(sqlHandle, stringx);
						SendClientMessage(playerid,COLOR_SUPER,"[Handy]: {FFFFFF}Die Kontaktdaten wurden aktualisiert.");
						DeletePVar(playerid,"HandyKontaktAuswahl");
					}
					else ShowPlayerDialog(playerid,DIALOG_KONTAKTE_EDIT,DIALOG_STYLE_INPUT,"{007DFF}"SERV_NAME"{FFFFFF} - Handy - Kontakte","{FFFFFF}Kontakt bearbeiten:\nGebe die Handy-Nummer des neuen Kontakt ein. Gebe '0' ein um den Kontakt zu löschen.\nDiese Nummer wurde nicht gefunden.","Ändern","Zurück");
				    cache_delete(result);
				}
		    }
		}
		case DIALOG_VICTIM:
		{
			if(response==0){}//Abbrechen
			else if(response==1)//Weiter
			{
			    switch(listitem)
			    {
			        case 0:
			        {
			            if(SpielerInfo[playerid][sGeschlecht] == 1)//Männlich
			    	    {
			    	    	ShowModelSelectionMenu(playerid, SkinsBoy, "Skinauswahl");
			    	    }
			    	    else if(SpielerInfo[playerid][sGeschlecht] == 2)//Weiblich
			    	    {
							ShowModelSelectionMenu(playerid, SkinsGirl, "Skinauswahl");
			    	    }
			        }
			        case 1:
			        {
			            ShowPlayerDialog(playerid,DIALOG_VICTIM_SCHMUCK,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Victim","Sonnenbrille\nCap\nBandana","Weiter","Zurück");
			        }
			        case 2:
			        {
			            ShowPlayerDialog(playerid,DIALOG_VICTIM_SCHMUCKSELL,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Victim","Sonnenbrille\nCap\nBandana","Weiter","Zurück");
			        }
			    }
			}
		}
		case DIALOG_VICTIM_SCHMUCKSELL:
		{
		    if(response==0)//Zurück
		    {
		        ShowPlayerDialog(playerid,DIALOG_VICTIM,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Victim","Skin\nSchmuck\nSchmuck verkaufen","Weiter","Abbrechen");
		    }
		    else if(response==1)//Weiter
		    {
				switch(listitem)
				{
					case 0://Sonnenbrille
					{
					    if(SpielerInfo[playerid][sVictimBrille] < 1)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast keine Sonnenbrille.");
					    GivePlayerMoneyEx(playerid,580);
					    SendClientMessage(playerid,COLOR_BLUE,"Tracy sagt: {FFFFFF}580$ für Sie. Schade, dass Sie die Sonnebrille nicht mehr möchten.");
					    GovVars[govKasse] -= 580;
					    SpielerInfo[playerid][sVictimBrille] = 0;
					    RemovePlayerAttachedObject(playerid, ATTACH_INDEX_BRILLE);
					}
					case 1://Cap
					{
					    if(SpielerInfo[playerid][sVictimCap] < 1)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast keine Cap.");
					    GivePlayerMoneyEx(playerid,750);
					    SendClientMessage(playerid,COLOR_BLUE,"Tracy sagt: {FFFFFF}750$ für Sie. Schade, dass Sie die Cap nicht mehr möchten.");
					    GovVars[govKasse] -= 750;
					    SpielerInfo[playerid][sVictimCap] = 0;
					    RemovePlayerAttachedObject(playerid, ATTACH_INDEX_CAP);
					}
					case 2://Bandana
					{
					    if(SpielerInfo[playerid][sVictimBandana] < 1)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast kein Bandana.");
					    GivePlayerMoneyEx(playerid,1500);
					    SendClientMessage(playerid,COLOR_BLUE,"Tracy sagt: {FFFFFF}1.500$ für Sie. Schade, dass Sie das Bandana nicht mehr möchten.");
					    GovVars[govKasse] -= 1500;
					    SpielerInfo[playerid][sVictimBandana] = 0;
					    RemovePlayerAttachedObject(playerid, ATTACH_INDEX_BANDANA);
					}
				}
		    }
		}
		case DIALOG_VICTIM_SCHMUCK:
		{
		    if(response==0)//Zurück
		    {
		        ShowPlayerDialog(playerid,DIALOG_VICTIM,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Victim","Skin\nSchmuck","Weiter","Abbrechen");
			}
			else if(response==1)//Weiter
			{
			    SetPVarInt(playerid,"VictimSchmuck",listitem+1);
			    ShowPlayerDialog(playerid,DIALOG_VICTIM_SCHMUCK1,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Victim","Weiß\nSchwarz\nGrün\nBlau\nRot","Weiter","Zurück");
			}
		}
		case DIALOG_VICTIM_SCHMUCK1:
		{
		    if(response==0)//Zurück
		    {
		        DeletePVar(playerid,"VictimSchmuck");
		        ShowPlayerDialog(playerid,DIALOG_VICTIM_SCHMUCK,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Victim","Sonnenbrille\nCap\nBandana","Weiter","Zurück");
		    }
		    else if(response==1)//Weiter
		    {
		        switch(listitem)
		        {
		            case 0://Weiß
		            {
		                if(GetPVarInt(playerid,"VictimSchmuck") == 1)//Sonnenbrille
		                {
		                    if(SpielerInfo[playerid][sVictimBrille] > 0)return SendClientMessage(playerid,COLOR_BLUE,"Tracy sagt: {FFFFFF}Sie haben schon eine Brille, wenn Sie möchten, können Sie sie zurückgeben.");
		                    SetPVarInt(playerid,"VictimFarbe",1);
		                    SetPlayerAttachedObject(playerid, ATTACH_INDEX_BRILLE, 19025, 2, 0.0989, 0.0389, -0.0059, 90.0000, 84.4999, -2.3999, 1.0889, 1.1460, 1.0000, 0xFFFFFFFF, 0xFFFFFFFF);
                            EditAttachedObject(playerid, ATTACH_INDEX_BRILLE);
		                }
		                else if(GetPVarInt(playerid,"VictimSchmuck") == 2)//Cap
		                {
		                    if(SpielerInfo[playerid][sVictimCap] > 0)return SendClientMessage(playerid,COLOR_BLUE,"Tracy sagt: {FFFFFF}Sie haben schon eine Cap, wenn Sie möchten, können Sie sie zurückgeben.");
		                    SetPVarInt(playerid,"VictimFarbe",1);
		                    SetPlayerAttachedObject(playerid, ATTACH_INDEX_CAP, 18929, 2, 0.1510, 0.0000, -0.0099, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0xFFFFFFFF, 0xFFFFFFFF);
                            EditAttachedObject(playerid, ATTACH_INDEX_CAP);
		                }
		                if(GetPVarInt(playerid,"VictimSchmuck") == 3)//Bandana
		                {
		                    if(SpielerInfo[playerid][sVictimBandana] > 0)return SendClientMessage(playerid,COLOR_BLUE,"Tracy sagt: {FFFFFF}Sie haben schon ein Bandana, wenn Sie möchten, können Sie es zurückgeben.");
		                    SetPVarInt(playerid,"VictimFarbe",1);
		                    SetPlayerAttachedObject(playerid, ATTACH_INDEX_BANDANA, 18919, 2, 0.0989, 0.0389, -0.0059, 90.0000, 84.4999, -2.3999, 1.0889, 1.1460, 1.0000, 0xFFFFFFFF, 0xFFFFFFFF);
                            EditAttachedObject(playerid, ATTACH_INDEX_BANDANA);
		                }
		            }
		            case 1://Schwarz
		            {
		                if(GetPVarInt(playerid,"VictimSchmuck") == 1)//Sonnenbrille
		                {
		                    if(SpielerInfo[playerid][sVictimBrille] > 0)return SendClientMessage(playerid,COLOR_BLUE,"Tracy sagt: {FFFFFF}Sie haben schon eine Brille, wenn Sie möchten, können Sie sie zurückgeben.");
		                    SetPVarInt(playerid,"VictimFarbe",2);
		                    SetPlayerAttachedObject(playerid, ATTACH_INDEX_BRILLE, 19025, 2, 0.0989, 0.0389, -0.0059, 90.0000, 84.4999, -2.3999, 1.0889, 1.1460, 1.0000, 0xFF0A0A0A, 0xFFFFFFFF);
                            EditAttachedObject(playerid, ATTACH_INDEX_BRILLE);
		                }
		                else if(GetPVarInt(playerid,"VictimSchmuck") == 2)//Cap
		                {
                            if(SpielerInfo[playerid][sVictimCap] > 0)return SendClientMessage(playerid,COLOR_BLUE,"Tracy sagt: {FFFFFF}Sie haben schon eine Cap, wenn Sie möchten, können Sie sie zurückgeben.");
		                    SetPVarInt(playerid,"VictimFarbe",2);
		                    SetPlayerAttachedObject(playerid, ATTACH_INDEX_CAP, 18929, 2, 0.1510, 0.0000, -0.0099, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0xFF0A0A0A, 0xFFFFFFFF);
                            EditAttachedObject(playerid, ATTACH_INDEX_CAP);
		                }
		                if(GetPVarInt(playerid,"VictimSchmuck") == 3)//Bandana
		                {
		                    if(SpielerInfo[playerid][sVictimBandana] > 0)return SendClientMessage(playerid,COLOR_BLUE,"Tracy sagt: {FFFFFF}Sie haben schon ein Bandana, wenn Sie möchten, können Sie es zurückgeben.");
		                    SetPVarInt(playerid,"VictimFarbe",2);
		                    SetPlayerAttachedObject(playerid, ATTACH_INDEX_BANDANA, 18919, 2, 0.0989, 0.0389, -0.0059, 90.0000, 84.4999, -2.3999, 1.0889, 1.1460, 1.0000, 0xFF0A0A0A, 0xFFFFFFFF);
                            EditAttachedObject(playerid, ATTACH_INDEX_BANDANA);
		                }
		            }
		            case 2://Grün
		            {
		                if(GetPVarInt(playerid,"VictimSchmuck") == 1)//Sonnenbrille
		                {
		                    if(SpielerInfo[playerid][sVictimBrille] > 0)return SendClientMessage(playerid,COLOR_BLUE,"Tracy sagt: {FFFFFF}Sie haben schon eine Brille, wenn Sie möchten, können Sie sie zurückgeben.");
		                    SetPVarInt(playerid,"VictimFarbe",3);
		                    SetPlayerAttachedObject(playerid, ATTACH_INDEX_BRILLE, 19025, 2, 0.0989, 0.0389, -0.0059, 90.0000, 84.4999, -2.3999, 1.0889, 1.1460, 1.0000, 0xFF00FE00, 0xFFFFFFFF);
                            EditAttachedObject(playerid, ATTACH_INDEX_BRILLE);
		                }
		                else if(GetPVarInt(playerid,"VictimSchmuck") == 2)//Cap
		                {
		                    if(SpielerInfo[playerid][sVictimCap] > 0)return SendClientMessage(playerid,COLOR_BLUE,"Tracy sagt: {FFFFFF}Sie haben schon eine Cap, wenn Sie möchten, können Sie sie zurückgeben.");
		                    SetPVarInt(playerid,"VictimFarbe",3);
		                    SetPlayerAttachedObject(playerid, ATTACH_INDEX_CAP, 18929, 2, 0.1510, 0.0000, -0.0099, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0xFF00FE00, 0xFFFFFFFF);
                            EditAttachedObject(playerid, ATTACH_INDEX_CAP);
		                }
		                if(GetPVarInt(playerid,"VictimSchmuck") == 3)//Bandana
		                {
		                    if(SpielerInfo[playerid][sVictimBandana] > 0)return SendClientMessage(playerid,COLOR_BLUE,"Tracy sagt: {FFFFFF}Sie haben schon ein Bandana, wenn Sie möchten, können Sie es zurückgeben.");
		                    SetPVarInt(playerid,"VictimFarbe",3);
		                    SetPlayerAttachedObject(playerid, ATTACH_INDEX_BANDANA, 18919, 2, 0.0989, 0.0389, -0.0059, 90.0000, 84.4999, -2.3999, 1.0889, 1.1460, 1.0000, 0xFF00FE00, 0xFFFFFFFF);
                            EditAttachedObject(playerid, ATTACH_INDEX_BANDANA);
		                }
		            }
		            case 3://Blau
		            {
		                if(GetPVarInt(playerid,"VictimSchmuck") == 1)//Sonnenbrille
		                {
		                    if(SpielerInfo[playerid][sVictimBrille] > 0)return SendClientMessage(playerid,COLOR_BLUE,"Tracy sagt: {FFFFFF}Sie haben schon eine Brille, wenn Sie möchten, können Sie sie zurückgeben.");
		                    SetPVarInt(playerid,"VictimFarbe",4);
		                    SetPlayerAttachedObject(playerid, ATTACH_INDEX_BRILLE, 19025, 2, 0.0989, 0.0389, -0.0059, 90.0000, 84.4999, -2.3999, 1.0889, 1.1460, 1.0000, 0xFF0000FF, 0xFFFFFFFF);
                            EditAttachedObject(playerid, ATTACH_INDEX_BRILLE);
		                }
		                else if(GetPVarInt(playerid,"VictimSchmuck") == 2)//Cap
		                {
		                    if(SpielerInfo[playerid][sVictimCap] > 0)return SendClientMessage(playerid,COLOR_BLUE,"Tracy sagt: {FFFFFF}Sie haben schon eine Cap, wenn Sie möchten, können Sie sie zurückgeben.");
		                    SetPVarInt(playerid,"VictimFarbe",4);
		                    SetPlayerAttachedObject(playerid, ATTACH_INDEX_CAP, 18929, 2, 0.1510, 0.0000, -0.0099, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0xFF0000FF, 0xFFFFFFFF);
                            EditAttachedObject(playerid, ATTACH_INDEX_CAP);
		                }
		                if(GetPVarInt(playerid,"VictimSchmuck") == 3)//Bandana
		                {
		                    if(SpielerInfo[playerid][sVictimBandana] > 0)return SendClientMessage(playerid,COLOR_BLUE,"Tracy sagt: {FFFFFF}Sie haben schon ein Bandana, wenn Sie möchten, können Sie es zurückgeben.");
		                    SetPVarInt(playerid,"VictimFarbe",4);
		                    SetPlayerAttachedObject(playerid, ATTACH_INDEX_BANDANA, 18919, 2, 0.0989, 0.0389, -0.0059, 90.0000, 84.4999, -2.3999, 1.0889, 1.1460, 1.0000, 0xFF0000FF, 0xFFFFFFFF);
                            EditAttachedObject(playerid, ATTACH_INDEX_BANDANA);
		                }
		            }
		            case 4://Rot
		            {
		                if(GetPVarInt(playerid,"VictimSchmuck") == 1)//Sonnenbrille
		                {
		                    if(SpielerInfo[playerid][sVictimBrille] > 0)return SendClientMessage(playerid,COLOR_BLUE,"Tracy sagt: {FFFFFF}Sie haben schon eine Brille, wenn Sie möchten, können Sie sie zurückgeben.");
		                    SetPVarInt(playerid,"VictimFarbe",5);
		                    SetPlayerAttachedObject(playerid, ATTACH_INDEX_BRILLE, 19025, 2, 0.0989, 0.0389, -0.0059, 90.0000, 84.4999, -2.3999, 1.0889, 1.1460, 1.0000, 0xFFFE0000, 0xFFFFFFFF);
                            EditAttachedObject(playerid, ATTACH_INDEX_BRILLE);
		                }
		                else if(GetPVarInt(playerid,"VictimSchmuck") == 2)//Cap
		                {
		                    if(SpielerInfo[playerid][sVictimCap] > 0)return SendClientMessage(playerid,COLOR_BLUE,"Tracy sagt: {FFFFFF}Sie haben schon eine Cap, wenn Sie möchten, können Sie sie zurückgeben.");
		                    SetPVarInt(playerid,"VictimFarbe",5);
		                    SetPlayerAttachedObject(playerid, ATTACH_INDEX_CAP, 18929, 2, 0.1510, 0.0000, -0.0099, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0xFFFE0000, 0xFFFFFFFF);
                            EditAttachedObject(playerid, ATTACH_INDEX_CAP);
		                }
		                if(GetPVarInt(playerid,"VictimSchmuck") == 3)//Bandana
		                {
		                    if(SpielerInfo[playerid][sVictimBandana] > 0)return SendClientMessage(playerid,COLOR_BLUE,"Tracy sagt: {FFFFFF}Sie haben schon ein Bandana, wenn Sie möchten, können Sie es zurückgeben.");
		                    SetPVarInt(playerid,"VictimFarbe",5);
		                    SetPlayerAttachedObject(playerid, ATTACH_INDEX_BANDANA, 18919, 2, 0.0989, 0.0389, -0.0059, 90.0000, 84.4999, -2.3999, 1.0889, 1.1460, 1.0000, 0xFFFE0000, 0xFFFFFFFF);
                            EditAttachedObject(playerid, ATTACH_INDEX_BANDANA);
		                }
		            }
		        }
		    }
		}
		case DIALOG_VICTIM_SCHMUCK2:
		{
		    if(response==0)
			{
			    if(GetPVarInt(playerid,"VictimSchmuck") == 1){RemovePlayerAttachedObject(playerid, ATTACH_INDEX_BRILLE);}
			    else if(GetPVarInt(playerid,"VictimSchmuck") == 2){RemovePlayerAttachedObject(playerid, ATTACH_INDEX_CAP);}
			    else if(GetPVarInt(playerid,"VictimSchmuck") == 3){RemovePlayerAttachedObject(playerid, ATTACH_INDEX_BANDANA);}
			    ShowPlayerDialog(playerid,DIALOG_VICTIM_SCHMUCK,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Victim","Sonnenbrille\nCap\nBandana","Weiter","Zurück");
			}
		    else if(response==1)
		    {
		        if(GetPVarInt(playerid,"VictimSchmuck") == 1)//Sonnenbrille
		        {
					if(GetPlayerMoney(playerid) < 850)
					{
					    RemovePlayerAttachedObject(playerid, ATTACH_INDEX_BANDANA);
						SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
						return 1;
					}
					GivePlayerMoneyEx(playerid,-850);
					GovVars[govKasse] += 850;
					SpielerInfo[playerid][sVictimBrille] = 1;
	        		SpielerInfo[playerid][sVictimBrilleF] = GetPVarInt(playerid,"VictimFarbe");
	        		SendClientMessage(playerid,COLOR_BLUE,"Tracy sagt: {FFFFFF}Einfach super. Diese Sonnenbrille steht dir richtig gut!");
	        		new query[600];
	        		mysql_format(sqlHandle, query,sizeof(query),"UPDATE `accounts` SET `sVictimBrilleOffX`='%f', `sVictimBrilleOffY`='%f', `sVictimBrilleOffZ`='%f', `sVictimBrilleRotX`='%f', `sVictimBrilleRotY`='%f', `sVictimBrilleRotZ`='%f', `sVictimBrilleScaX`='%f', `sVictimBrilleScaY`='%f', `sVictimBrilleScaZ`='%f' WHERE `Name`='%s'",
					SpielerInfo[playerid][sVictimBrilleOffX],SpielerInfo[playerid][sVictimBrilleOffY],SpielerInfo[playerid][sVictimBrilleOffZ],SpielerInfo[playerid][sVictimBrilleRotX],SpielerInfo[playerid][sVictimBrilleRotY],SpielerInfo[playerid][sVictimBrilleRotZ],SpielerInfo[playerid][sVictimBrilleScaX],
					SpielerInfo[playerid][sVictimBrilleScaY],SpielerInfo[playerid][sVictimBrilleScaZ],SpielerInfo[playerid][sName]);
					mysql_tquery(sqlHandle, query);
		        }
		        else if(GetPVarInt(playerid,"VictimSchmuck") == 2)//Cap
		        {
					if(GetPlayerMoney(playerid) < 1250)
					{
					    RemovePlayerAttachedObject(playerid, ATTACH_INDEX_BANDANA);
						SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
						return 1;
					}
					GivePlayerMoneyEx(playerid,-1250);
					GovVars[govKasse] += 1250;
					SpielerInfo[playerid][sVictimCap] = 1;
	        		SpielerInfo[playerid][sVictimCapF] = GetPVarInt(playerid,"VictimFarbe");
	        		SendClientMessage(playerid,COLOR_BLUE,"Tracy sagt: {FFFFFF}Einfach super. Diese Cap steht dir richtig gut!");
	        		new query[600];
	        		mysql_format(sqlHandle, query,sizeof(query),"UPDATE `accounts` SET `sVictimCapOffX`='%f', `sVictimCapOffY`='%f', `sVictimCapOffZ`='%f', `sVictimCapRotX`='%f', `sVictimCapRotY`='%f', `sVictimCapRotZ`='%f', `sVictimCapScaX`='%f', `sVictimCapScaY`='%f', `sVictimCapScaZ`='%f' WHERE `Name`='%s'",
					SpielerInfo[playerid][sVictimCapOffX],SpielerInfo[playerid][sVictimCapOffY],SpielerInfo[playerid][sVictimCapOffZ],SpielerInfo[playerid][sVictimCapRotX],SpielerInfo[playerid][sVictimCapRotY],SpielerInfo[playerid][sVictimCapRotZ],SpielerInfo[playerid][sVictimCapScaX],
					SpielerInfo[playerid][sVictimCapScaY],SpielerInfo[playerid][sVictimCapScaZ],SpielerInfo[playerid][sName]);
					mysql_tquery(sqlHandle, query);
		        }
		        if(GetPVarInt(playerid,"VictimSchmuck") == 3)//Bandana
		        {
					if(GetPlayerMoney(playerid) < 2250)
					{
					    RemovePlayerAttachedObject(playerid, ATTACH_INDEX_BANDANA);
						SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht genügend Geld bei dir.");
						return 1;
					}
					GivePlayerMoneyEx(playerid,-2250);
					GovVars[govKasse] += 2250;
					SpielerInfo[playerid][sVictimBandana] = 1;
	        		SpielerInfo[playerid][sVictimBandanaF] = GetPVarInt(playerid,"VictimFarbe");
	        		SendClientMessage(playerid,COLOR_BLUE,"Tracy sagt: {FFFFFF}Einfach super. Dieses Bandana steht dir richtig gut!");
	        		new query[600];
	        		mysql_format(sqlHandle, query,sizeof(query),"UPDATE `accounts` SET `sVictimBandanaOffX`='%f', `sVictimBandanaOffY`='%f', `sVictimBandanaOffZ`='%f', `sVictimBandanaRotX`='%f', `sVictimBandanaRotY`='%f', `sVictimBandanaRotZ`='%f', `sVictimBandanaScaX`='%f', `sVictimBandanaScaY`='%f', `sVictimBandanaScaZ`='%f' WHERE `Name`='%s'",
					SpielerInfo[playerid][sVictimBandanaOffX],SpielerInfo[playerid][sVictimBandanaOffY],SpielerInfo[playerid][sVictimBandanaOffZ],SpielerInfo[playerid][sVictimBandanaRotX],SpielerInfo[playerid][sVictimBandanaRotY],SpielerInfo[playerid][sVictimBandanaRotZ],SpielerInfo[playerid][sVictimBandanaScaX],
					SpielerInfo[playerid][sVictimBandanaScaY],SpielerInfo[playerid][sVictimBandanaScaZ],SpielerInfo[playerid][sName]);
					mysql_tquery(sqlHandle, query);
		        }
		    }
		}
		case DIALOG_FRAKV_UCMPICK:
		{
		    if(response==0){}//Abbrechen
		    else if(response==1)//Weiter
		    {
			    if(strcmp("Kein_Name", inputtext, true, 10) == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Dieser Undercover-Name wurde noch nicht eingestellt.");
			    new bool:checker = SetPlayerName(playerid, inputtext);
				if(checker == true)
				{
					new ucstringx[128];
					SetPVarInt(playerid,"CopUndercover",1);
					SpielerInfo[playerid][sHandy] = random(9999);
					format(ucstringx,sizeof(ucstringx),"[Info]: {FFFFFF}Du bist jetzt als '%s' mit der Handynummer '%d' im Undercover-Modus.",inputtext,SpielerInfo[playerid][sHandy]);
					SendClientMessage(playerid,COLOR_INFO,ucstringx);
					SetPVarInt(playerid,"RealHandyNummer",SpielerInfo[playerid][sHandy]);
				}
				else if(checker == false)
				{
					SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist bereits mit diesem Namen unterwegs.");
				}
				else
				{
					SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Dieser Undercover-Name kann nicht gesetzt werden.");
				}
			}
		}
		case DIALOG_ICP_TASTEN:
		{
		    if(response==0){}//Abbrechen
		    else if(response==1)//Weiter
		    {
		        SetPVarInt(playerid,"AuswahlICPTasten",listitem+1);
		        ShowPlayerDialog(playerid,DIALOG_ICP_TASTEN2,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - ICP Tasten","Numpad 4\nNumpad 6\nLinke ALT-Taste (Nur zu Fuß)\nMausrad-Klick (Nur im Fahrzeug)\nZ Taste\nBelegung löschen","Belegen","Zurück");
		    }
		}
		case DIALOG_ICP_TASTEN2:
		{
		    if(response==0)//Zurück
			{
                new stringtype[310];
			    format(stringtype,sizeof(stringtype),"Funktion\tBelegte Taste\n\
				Fahrzeug auf/abschliessen (Privat)\t%s\n\
				Fahrzeug auf/abschliessen (Fraktion)\t%s\n\
				Motor starten/stoppen\t%s\n\
				Licht ein/ausschalten\t%s",GetKeyName(SpielerInfo[playerid][sICPTasteCarlock]),GetKeyName(SpielerInfo[playerid][sICPTasteFlock]),GetKeyName(SpielerInfo[playerid][sICPTasteMotor]),GetKeyName(SpielerInfo[playerid][sICPTasteLicht]));
			    ShowPlayerDialog(playerid,DIALOG_ICP_TASTEN,DIALOG_STYLE_TABLIST_HEADERS,"{007DFF}"SERV_NAME"{FFFFFF} - ICP Tasten",stringtype,"Weiter","Abbrechen");
			}
		    else if(response==1)
		    {
		        new icpauswahl = GetPVarInt(playerid,"AuswahlICPTasten");
		        switch(listitem)
		        {
		            case 0://Numpad 4
		            {
		                if(icpauswahl == 1){SpielerInfo[playerid][sICPTasteCarlock] = 8192;}//Fahrzeug auf/abschliessen (Privat)
		                else if(icpauswahl == 2){SpielerInfo[playerid][sICPTasteFlock] = 8192;}//Fahrzeug auf/abschliessen (Fraktion)
		                else if(icpauswahl == 3){SpielerInfo[playerid][sICPTasteMotor] = 8192;}//Motor starten/stoppen
		                else if(icpauswahl == 4){SpielerInfo[playerid][sICPTasteLicht] = 8192;}//Licht ein/ausschalten
		                SendClientMessage(playerid,COLOR_SUPER,"[Info]: Einstellung auf Taste 'Numpad 4' angepasst.");
		            }
		            case 1://Numpad 6
		            {
		                if(icpauswahl == 1){SpielerInfo[playerid][sICPTasteCarlock] = 16384;}//Fahrzeug auf/abschliessen (Privat)
		                else if(icpauswahl == 2){SpielerInfo[playerid][sICPTasteFlock] = 16384;}//Fahrzeug auf/abschliessen (Fraktion)
		                else if(icpauswahl == 3){SpielerInfo[playerid][sICPTasteMotor] = 16384;}//Motor starten/stoppen
		                else if(icpauswahl == 4){SpielerInfo[playerid][sICPTasteLicht] = 16384;}//Licht ein/ausschalten
		                SendClientMessage(playerid,COLOR_SUPER,"[Info]: Einstellung auf Taste 'Numpad 6' angepasst.");
		            }
		            case 2://Linke ALT-Taste
		            {
		                if(icpauswahl == 1){SpielerInfo[playerid][sICPTasteCarlock] = 1024;}//Fahrzeug auf/abschliessen (Privat)
		                else if(icpauswahl == 2){SpielerInfo[playerid][sICPTasteFlock] = 1024;}//Fahrzeug auf/abschliessen (Fraktion)
		                else if(icpauswahl == 3){SpielerInfo[playerid][sICPTasteMotor] = 1024;}//Motor starten/stoppen
		                else if(icpauswahl == 4){SpielerInfo[playerid][sICPTasteLicht] = 1024;}//Licht ein/ausschalten
		                SendClientMessage(playerid,COLOR_SUPER,"[Info]: Einstellung auf Taste 'Linke ALT-Taste' angepasst.");
		            }
		            case 3://Mausrad-Klick
		            {
		                if(icpauswahl == 1){SpielerInfo[playerid][sICPTasteCarlock] = 320;}//Fahrzeug auf/abschliessen (Privat)
		                else if(icpauswahl == 2){SpielerInfo[playerid][sICPTasteFlock] = 320;}//Fahrzeug auf/abschliessen (Fraktion)
		                else if(icpauswahl == 3){SpielerInfo[playerid][sICPTasteMotor] = 320;}//Motor starten/stoppen
		                else if(icpauswahl == 4){SpielerInfo[playerid][sICPTasteLicht] = 320;}//Licht ein/ausschalten
		                SendClientMessage(playerid,COLOR_SUPER,"[Info]: Einstellung auf Taste 'Mausrad-Klick (Taste 2 im Fahrzeug)' angepasst.");
		            }
		            case 4://Z-Taste
		            {
		                if(icpauswahl == 1){SpielerInfo[playerid][sICPTasteCarlock] = 65536;}//Fahrzeug auf/abschliessen (Privat)
		                else if(icpauswahl == 2){SpielerInfo[playerid][sICPTasteFlock] = 65536;}//Fahrzeug auf/abschliessen (Fraktion)
		                else if(icpauswahl == 3){SpielerInfo[playerid][sICPTasteMotor] = 65536;}//Motor starten/stoppen
		                else if(icpauswahl == 4){SpielerInfo[playerid][sICPTasteLicht] = 65536;}//Licht ein/ausschalten
		                SendClientMessage(playerid,COLOR_SUPER,"[Info]: Einstellung auf Taste 'Z' angepasst.");
		            }
		            case 5://Belegung löschen
		            {
		                if(icpauswahl == 1){SpielerInfo[playerid][sICPTasteCarlock] = 0;}//Fahrzeug auf/abschliessen (Privat)
		                else if(icpauswahl == 2){SpielerInfo[playerid][sICPTasteFlock] = 0;}//Fahrzeug auf/abschliessen (Fraktion)
		                else if(icpauswahl == 3){SpielerInfo[playerid][sICPTasteMotor] = 0;}//Motor starten/stoppen
		                else if(icpauswahl == 4){SpielerInfo[playerid][sICPTasteLicht] = 0;}//Licht ein/ausschalten
		                SendClientMessage(playerid,COLOR_SUPER,"[Info]: Du hast die Belegung der Taste gelöscht.");
		            }
		        }
		    }
		}
    	//letzter dialog - dialog ende
	}
	return 1;
}

public OnPlayerClickPlayer(playerid, clickedplayerid, CLICK_SOURCE:source)
{
	if(SpielerInfo[playerid][sAdmin] >= 3)
	{
	    new dialogstring[232];
	    SetPVarInt(playerid,"ClickedPlayer",clickedplayerid);
		format(dialogstring,sizeof(dialogstring),"Spielerstatistik von %s\nVerbindungsinfos von %s\n%s vom Server kicken\n%s permanent bannen\n%s auf Zeit bannen",SpielerInfo[clickedplayerid][sName],SpielerInfo[clickedplayerid][sName],SpielerInfo[clickedplayerid][sName],SpielerInfo[clickedplayerid][sName],SpielerInfo[clickedplayerid][sName]);
		ShowPlayerDialog(playerid,DIALOG_ADMIN_PANEL,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - ACHECK",dialogstring,"Weiter","Abbrechen");
	}
	return 1;
}

public OnPlayerModelSelection(playerid, response, listid, modelid)
{
	if(listid==SkinordnungSAPD && GetPVarInt(playerid,"PDSkinChange") > 0)
	{
	    SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Du hast eine neue Uniform für deinen Dienst ausgewählt.");
	    DeletePVar(playerid,"PDSkinChange");
	    SetPVarInt(playerid,"UniformGewollt",modelid);
	    SetPlayerSkin(playerid,modelid);
	    return 1;
	}
	else if(listid==SkinordnungGovernment || listid==SkinordnungSAPD || listid==SkinordnungSFPD || listid==SkinordnungMEDIC || listid==SkinordnungFIRE || listid==SkinordnungFBI ||
	   listid==SkinordnungOrdnungsamt || listid==SkinordnungSanNews || listid==SkinordnungGrove || listid==SkinordnungBallas || listid==SkinordnungVagos ||
	   listid==SkinordnungAztecas || listid==SkinordnungRifa || listid==SkinordnungTriads || listid==SkinordnungDaNangBoys || listid==SkinordnungBikers ||
	   listid==SkinordnungItalia || listid==SkinordnungRussia)
	{
	    if(response)
	    {
  			if(GetPVarInt(playerid,"FrakV") == 0)
			{
		        new string[84], skinlist[3];
		        format(skinlist,sizeof(skinlist),"%d",SpielerInfo[playerid][sFraktion]);
				format(string,sizeof(string),"Rang%d",GetPVarInt(playerid,"Skinordnung"));
				mysql_SetInt("skinordnung", string, modelid, "frakid", skinlist);
		        format(string,sizeof(string),"Du hast Rang %d die SkinID '%d' zugewiesen.",GetPVarInt(playerid,"Skinordnung"),modelid);
		        SendClientMessage(playerid,COLOR_INFO,string);
		        DeletePVar(playerid,"Skinordnung");
				new r1[32], r2[32], r3[32], r4[32], r5[32], r6[32], r7[24], ranklist[145];
				format(ranklist,sizeof(ranklist),"%d",SpielerInfo[playerid][sFraktion]);
				format(r1,sizeof(r1),"%s",mysql_GetString("rangnamen", "1", "frakid", ranklist));
				format(r2,sizeof(r2),"%s",mysql_GetString("rangnamen", "2", "frakid", ranklist));
				format(r3,sizeof(r3),"%s",mysql_GetString("rangnamen", "3", "frakid", ranklist));
				format(r4,sizeof(r4),"%s",mysql_GetString("rangnamen", "4", "frakid", ranklist));
				format(r5,sizeof(r5),"%s",mysql_GetString("rangnamen", "5", "frakid", ranklist));
				format(r6,sizeof(r6),"%s",mysql_GetString("rangnamen", "6", "frakid", ranklist));
				format(r7,sizeof(r7),"%s",mysql_GetString("rangnamen", "7", "frakid", ranklist));
				format(ranklist,sizeof(ranklist),"%s\n%s\n%s\n%s\n%s\n%s\n%s",r1,r2,r3,r4,r5,r6,r7);
				ShowPlayerDialog(playerid,DIALOG_FRAKV_SKINR,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",ranklist,"Weiter","Zurück");
			}
			else if(GetPVarInt(playerid,"FrakV") == 1)
			{
		        new string[84], skinlist[3];
		        format(skinlist,sizeof(skinlist),"%d",SpielerInfo[playerid][sFraktion]);
				format(string,sizeof(string),"Rang%d",GetPVarInt(playerid,"Skinordnung"));
				mysql_SetInt("skinordnung", string, modelid, "frakid", skinlist);
		        format(string,sizeof(string),"Du hast Rang %d die SkinID '%d' zugewiesen.",GetPVarInt(playerid,"Skinordnung"),modelid);
		        SendClientMessage(playerid,COLOR_INFO,string);
		        DeletePVar(playerid,"Skinordnung");
				new r1[32], r2[32], r3[32], r4[32], r5[32], r6[32], r7[24], ranklist[145];
				format(ranklist,sizeof(ranklist),"%d",SpielerInfo[playerid][sFraktion]);
				format(r1,sizeof(r1),"%s",mysql_GetString("rangnamen", "1", "frakid", ranklist));
				format(r2,sizeof(r2),"%s",mysql_GetString("rangnamen", "2", "frakid", ranklist));
				format(r3,sizeof(r3),"%s",mysql_GetString("rangnamen", "3", "frakid", ranklist));
				format(r4,sizeof(r4),"%s",mysql_GetString("rangnamen", "4", "frakid", ranklist));
				format(r5,sizeof(r5),"%s",mysql_GetString("rangnamen", "5", "frakid", ranklist));
				format(r6,sizeof(r6),"%s",mysql_GetString("rangnamen", "6", "frakid", ranklist));
				format(r7,sizeof(r7),"%s",mysql_GetString("rangnamen", "7", "frakid", ranklist));
				format(ranklist,sizeof(ranklist),"%s\n%s\n%s\n%s\n%s\n%s\n%s",r1,r2,r3,r4,r5,r6,r7);
				ShowPlayerDialog(playerid,DIALOG_SARDV_SKINR,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",ranklist,"Weiter","Zurück");
			}
			else if(GetPVarInt(playerid,"FrakV") == 2)
		  	{
     			new string[84], skinlist[3];
		        format(skinlist,sizeof(skinlist),"%d",SpielerInfo[playerid][sFraktion]);
				format(string,sizeof(string),"TRang%d",GetPVarInt(playerid,"Skinordnung"));
				mysql_SetInt("skinordnung", string, modelid, "frakid", skinlist);
		        format(string,sizeof(string),"Du hast Rang %d die SkinID '%d' zugewiesen.",GetPVarInt(playerid,"Skinordnung"),modelid);
		        SendClientMessage(playerid,COLOR_INFO,string);
		        DeletePVar(playerid,"Skinordnung");
				new r1[32], r2[32], r3[32], r4[32], r5[32], r6[32], r7[24], ranklist[145];
				format(ranklist,sizeof(ranklist),"%d",SpielerInfo[playerid][sFraktion]);
				format(r1,sizeof(r1),"%s",mysql_GetString("rangnamen", "T1", "frakid", ranklist));
				format(r2,sizeof(r2),"%s",mysql_GetString("rangnamen", "T2", "frakid", ranklist));
				format(r3,sizeof(r3),"%s",mysql_GetString("rangnamen", "T3", "frakid", ranklist));
				format(r4,sizeof(r4),"%s",mysql_GetString("rangnamen", "T4", "frakid", ranklist));
				format(r5,sizeof(r5),"%s",mysql_GetString("rangnamen", "T5", "frakid", ranklist));
				format(r6,sizeof(r6),"%s",mysql_GetString("rangnamen", "T6", "frakid", ranklist));
				format(r7,sizeof(r7),"%s",mysql_GetString("rangnamen", "T7", "frakid", ranklist));
				format(ranklist,sizeof(ranklist),"%s\n%s\n%s\n%s\n%s\n%s\n%s",r1,r2,r3,r4,r5,r6,r7);
				ShowPlayerDialog(playerid,DIALOG_SARDV_SKINR,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",ranklist,"Weiter","Zurück");
		  	}
	    }
	}
	else if(listid==SkinsBoy || listid==SkinsGirl)
	{
	    if(response)
	    {
	        if(GetPlayerMoneyEx(playerid) < 100)return SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Tracy{FFFFFF} sagt: Komm wieder wenn du {FF0000}100${FFFFFF} dabei hast.");
			mysql_SetInt("accounts", "SkinID", modelid, "Name", SpielerInfo[playerid][sName]);
	        GivePlayerMoneyEx(playerid,-100);

   	   		if(GetPVarInt(playerid,"TruckerDuty") == 1 && GetPVarInt(playerid,"PizzaboteDuty") == 1 &&
				GetPVarInt(playerid,"KehrmaschinenDuty") == 1 && GetPVarInt(playerid,"PilotDuty") == 1 &&
				GetPVarInt(playerid,"BusfahrerDuty") == 1 && GetPVarInt(playerid,"MüllmannDuty") == 1 &&
				GetPVarInt(playerid,"LandwirtDuty") == 1 || GetPVarInt(playerid,"CopDuty") == 1 ||
				GetPVarInt(playerid,"FBIDuty") == 1 || GetPVarInt(playerid,"MedicDuty") == 1 ||
				GetPVarInt(playerid,"FeuerwehrDuty") == 1 || GetPVarInt(playerid,"SanNewsDuty") == 1 || SpielerInfo[playerid][sFraktion] > 8 && SpielerInfo[playerid][sFraktion] < 19)
	    	{
				SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Tracy{FFFFFF} sagt: Ich habe Ihre Sachen in die Tüte gepackt. Das macht dann {FF0000}100${FFFFFF}. Ich hoffe Sie besuchen uns bald wieder!");
	    	    return 1;
	    	}
	    	else
	  		{
	  		    SetPlayerSkin(playerid,modelid);
	    	    SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Tracy{FFFFFF} sagt: Sieht toll aus! Das macht dann {FF0000}100${FFFFFF}. Ich hoffe Sie besuchen uns bald wieder!");
	    	    return 1;
	  		}

	    }
	}
	return 1;
}

public OnPlayerModelSelectionEx(playerid, response, extraid, modelid)
{
	//FurnitureSystem
	Furniture_ModelSelectionEx(playerid, response, extraid, modelid);
	//FastFoodStood
	FastFoodStood_ModelSelectionEx(playerid, response, extraid, modelid);
	//CouponSystem
	Coupon_ModelSelectionEx(playerid, response, extraid, modelid);

	if(extraid == CUSTOM_FUHRPARK_MENU)
	{
	    if(response)
	    {
	        SetPVarInt(playerid,"FrakVFahrzeugModel",modelid);
			new r1[32], r2[32], r3[32], r4[32], r5[32], r6[32], r7[24], ranklist[145];
			format(ranklist,sizeof(ranklist),"%d",SpielerInfo[playerid][sFraktion]);
			format(r1,sizeof(r1),"%s",mysql_GetString("rangnamen", "1", "frakid", ranklist));
			format(r2,sizeof(r2),"%s",mysql_GetString("rangnamen", "2", "frakid", ranklist));
			format(r3,sizeof(r3),"%s",mysql_GetString("rangnamen", "3", "frakid", ranklist));
			format(r4,sizeof(r4),"%s",mysql_GetString("rangnamen", "4", "frakid", ranklist));
			format(r5,sizeof(r5),"%s",mysql_GetString("rangnamen", "5", "frakid", ranklist));
			format(r6,sizeof(r6),"%s",mysql_GetString("rangnamen", "6", "frakid", ranklist));
			format(r7,sizeof(r7),"%s",mysql_GetString("rangnamen", "7", "frakid", ranklist));
			format(ranklist,sizeof(ranklist),"%s\n%s\n%s\n%s\n%s\n%s\n%s",r1,r2,r3,r4,r5,r6,r7);
			ShowPlayerDialog(playerid,DIALOG_FRAKV_CARRANG,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Fraktionsverwaltung",ranklist,"Weiter","Zurück");
		}
	    else return 1;
	}
	else if(extraid == CUSTOM_FUHRPARK_GRUPPE_MENU)
	{
	    if(response)
	    {
	        SetPVarInt(playerid,"GruppenVFahrzeugModel",modelid);
			new r1[32], r2[32], r3[32], r4[32], r5[32], r6[32], r7[24], ranklist[145];
			format(ranklist,sizeof(ranklist),"%d",SpielerInfo[playerid][sGruppe]);
			format(r1,sizeof(r1),"%s",mysql_GetString("grangnamen", "1", "gid", ranklist));
			format(r2,sizeof(r2),"%s",mysql_GetString("grangnamen", "2", "gid", ranklist));
			format(r3,sizeof(r3),"%s",mysql_GetString("grangnamen", "3", "gid", ranklist));
			format(r4,sizeof(r4),"%s",mysql_GetString("grangnamen", "4", "gid", ranklist));
			format(r5,sizeof(r5),"%s",mysql_GetString("grangnamen", "5", "gid", ranklist));
			format(r6,sizeof(r6),"%s",mysql_GetString("grangnamen", "6", "gid", ranklist));
			format(r7,sizeof(r7),"%s",mysql_GetString("grangnamen", "7", "gid", ranklist));
			format(ranklist,sizeof(ranklist),"%s\n%s\n%s\n%s\n%s\n%s\n%s",r1,r2,r3,r4,r5,r6,r7);
			ShowPlayerDialog(playerid,DIALOG_GRUPPENV_CARRANG,DIALOG_STYLE_LIST,"{007DFF}"SERV_NAME"{FFFFFF} - Gruppenverwaltung",ranklist,"Weiter","Zurück");
		}
	    else return 1;
	}
	return 1;
}

public OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid)
{
    if(playertextid == ICPMessageEdit[playerid])
    {
        if(SpielerInfo[playerid][icpNachrichten] == 1)
        {
			SpielerInfo[playerid][icpNachrichten] = 0;
			PlayerTextDrawSetString(playerid, ICPMessageEdit[playerid], "~r~] Deaktiviert");
			PlayerPlaySound(playerid,5202,0,0,0);
        }
        else if(SpielerInfo[playerid][icpNachrichten] == 0)
        {
			SpielerInfo[playerid][icpNachrichten] = 1;
			PlayerTextDrawSetString(playerid, ICPMessageEdit[playerid], "~g~] Aktiviert");
			PlayerPlaySound(playerid,5202,0,0,0);
        }
    }
	else if(playertextid == ICPHitsoundEdit[playerid])
	{
	    if(SpielerInfo[playerid][icpHitsound] == 1)
	    {
			SpielerInfo[playerid][icpHitsound] = 0;
			PlayerTextDrawSetString(playerid, ICPHitsoundEdit[playerid], "~r~] Deaktiviert");
			PlayerPlaySound(playerid,5202,0,0,0);
			PlayerPlaySound(playerid,5202,0,0,0);
	    }
	    else if(SpielerInfo[playerid][icpHitsound] == 0)
	    {
			SpielerInfo[playerid][icpHitsound] = 1;
			PlayerTextDrawSetString(playerid, ICPHitsoundEdit[playerid], "~g~] Aktiviert");
			PlayerPlaySound(playerid,5202,0,0,0);
			PlayerPlaySound(playerid,5202,0,0,0);
	    }
	}
	else if(playertextid == ICPOChatEdit[playerid])
	{
	    if(SpielerInfo[playerid][icpOChat] == 1)
	    {
			SpielerInfo[playerid][icpOChat] = 0;
			PlayerTextDrawSetString(playerid, ICPOChatEdit[playerid], "~r~] Deaktiviert");
			PlayerPlaySound(playerid,5202,0,0,0);
	    }
	    else if(SpielerInfo[playerid][icpOChat] == 0)
	    {
			SpielerInfo[playerid][icpOChat] = 1;
			PlayerTextDrawSetString(playerid, ICPOChatEdit[playerid], "~g~] Aktiviert");
			PlayerPlaySound(playerid,5202,0,0,0);
	    }
	}
	else if(playertextid == ICPCameraEdit[playerid])
	{
	    if(SpielerInfo[playerid][icpCamera] == 1)
	    {
			SpielerInfo[playerid][icpCamera] = 0;
			PlayerTextDrawSetString(playerid, ICPCameraEdit[playerid], "~r~] Deaktiviert");
			PlayerPlaySound(playerid,5202,0,0,0);
	    }
	    else if(SpielerInfo[playerid][icpCamera] == 0)
	    {
			SpielerInfo[playerid][icpCamera] = 1;
			PlayerTextDrawSetString(playerid, ICPCameraEdit[playerid], "~g~] Aktiviert");
			PlayerPlaySound(playerid,5202,0,0,0);
	    }
	}
	else if(playertextid == ICPHandyEdit[playerid])
	{
	    if(SpielerInfo[playerid][icpHandy] == 1)
	    {
			SpielerInfo[playerid][icpHandy] = 0;
			PlayerTextDrawSetString(playerid, ICPHandyEdit[playerid], "~r~] Ausgeschaltet");
			PlayerPlaySound(playerid,5202,0,0,0);
	    }
	    else if(SpielerInfo[playerid][icpHandy] == 0)
	    {
			SpielerInfo[playerid][icpHandy] = 1;
			PlayerTextDrawSetString(playerid, ICPHandyEdit[playerid], "~g~] Angeschaltet");
			PlayerPlaySound(playerid,5202,0,0,0);
	    }
	}
	else if(playertextid == ICPBlinkerEdit[playerid])
	{
	    new string[310];
	    format(string,sizeof(string),"Funktion\tBelegte Taste\n\
		Fahrzeug auf/abschliessen (Privat)\t%s\n\
		Fahrzeug auf/abschliessen (Fraktion)\t%s\n\
		Motor starten/stoppen\t%s\n\
		Licht ein/ausschalten\t%s",GetKeyName(SpielerInfo[playerid][sICPTasteCarlock]),GetKeyName(SpielerInfo[playerid][sICPTasteFlock]),GetKeyName(SpielerInfo[playerid][sICPTasteMotor]),GetKeyName(SpielerInfo[playerid][sICPTasteLicht]));
	    ShowPlayerDialog(playerid,DIALOG_ICP_TASTEN,DIALOG_STYLE_TABLIST_HEADERS,"{007DFF}"SERV_NAME"{FFFFFF} - ICP Tasten",string,"Weiter","Abbrechen");
	}
    else if(playertextid == ICPSave[playerid])
    {
		PlayerTextDrawHide(playerid, ICPBox[playerid]);
		PlayerTextDrawHide(playerid, ICPTitel[playerid]);
		PlayerTextDrawHide(playerid, ICPMessage[playerid]);
		PlayerTextDrawHide(playerid, ICPMessageEdit[playerid]);
		PlayerTextDrawHide(playerid, ICPHitsound[playerid]);
		PlayerTextDrawHide(playerid, ICPHitsoundEdit[playerid]);
		PlayerTextDrawHide(playerid, ICPSave[playerid]);
		PlayerTextDrawHide(playerid, ICPOChat[playerid]);
		PlayerTextDrawHide(playerid, ICPOChatEdit[playerid]);
		PlayerTextDrawHide(playerid, ICPCamera[playerid]);
		PlayerTextDrawHide(playerid, ICPCameraEdit[playerid]);
		PlayerTextDrawHide(playerid, ICPHandy[playerid]);
		PlayerTextDrawHide(playerid, ICPHandyEdit[playerid]);
		PlayerTextDrawHide(playerid, ICPBlinker[playerid]);
		PlayerTextDrawHide(playerid, ICPBlinkerEdit[playerid]);
		CancelSelectTextDraw(playerid);
		SendClientMessage(playerid,COLOR_ICP,"Deine Einstellungen wurden gespeichert.");
		DeletePVar(playerid,"ICPEdit");
		PlayerPlaySound(playerid,5202,0,0,0);
	}
	else if(playertextid == DiceDraw[playerid][9]) //Einsatz erhöhen
	{
		if(GetPVarInt(playerid,"DiceEinsatz") == 50000)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Der Einsatz darf max. nur $50.000 betragen!");

		new dice[64];
		SetPVarInt(playerid,"DiceEinsatz",GetPVarInt(playerid,"DiceEinsatz")+500);

		format(dice,sizeof(dice),"$%d",GetPVarInt(playerid,"DiceEinsatz"));
		PlayerTextDrawSetString(playerid, DiceDraw[playerid][7], dice);
	}
	else if(playertextid == DiceDraw[playerid][11]) //Einsatz verringern
	{
		if(GetPVarInt(playerid,"DiceEinsatz") == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du kannst dein Einsatz nicht noch mehr verringern!");

		new dice[64];
		SetPVarInt(playerid,"DiceEinsatz",GetPVarInt(playerid,"DiceEinsatz")-500);

		format(dice,sizeof(dice),"$%d",GetPVarInt(playerid,"DiceEinsatz"));
		PlayerTextDrawSetString(playerid, DiceDraw[playerid][7], dice);
	}
	else if(playertextid == DiceDraw[playerid][5])
	{
		if(GetPVarInt(playerid,"DiceEinsatz") == 0)return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Dein Einsatz muss min. $500 betragen!");
		if(GetPlayerMoneyEx(playerid) < GetPVarInt(playerid,"DiceEinsatz"))return SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast nicht so viel Bargeld bei dir!");
		SetPVarInt(playerid,"DiceReady",1);
		new pID = GetPVarInt(playerid,"DiceGegner"), string[164];

		if(GetPVarInt(pID,"DiceReady") == 1)
		{
  			format(string,sizeof(string),"Du hast einen Einsatz in Höhe von $%d gesetzt. In 3 Sekunden wird gewürfelt!",GetPVarInt(playerid,"DiceEinsatz"),SpielerInfo[pID][sName]);
	 	    SendClientMessage(playerid,COLOR_INFO,string);
	 	    format(string,sizeof(string),"%s hat $%d gesetzt. In 3 Sekunden wird gewürfelt!",SpielerInfo[playerid][sName],GetPVarInt(playerid,"DiceEinsatz"));
	 	    SendClientMessage(pID,COLOR_INFO,string);
			DiceTimer[playerid] = SetTimerEx("StartDice",3000,false,"i",playerid);
	 	} else {
	 	    format(string,sizeof(string),"%s hat $%d gesetzt. Er wartet jetzt auf deinen Einsatz!",SpielerInfo[playerid][sName],GetPVarInt(playerid,"DiceEinsatz"));
	 	    SendClientMessage(pID,COLOR_INFO,string);
	 	    format(string,sizeof(string),"Du hast einen Einsatz in Höhe von $%d gesetzt. Warte jetzt auf %s!",GetPVarInt(playerid,"DiceEinsatz"),SpielerInfo[pID][sName]);
	 	    SendClientMessage(playerid,COLOR_INFO,string);
	 	}
	 	CancelSelectTextDraw(playerid);
	 	GivePlayerMoneyEx(playerid,-GetPVarInt(playerid,"DiceEinsatz"));
	 	return 1;
	}
    return 1;
}

public OnPlayerTakeDamage(playerid, issuerid, Float: amount, weaponid, bodypart)
{
	//Anti-Interiorflucht by GangstaSunny

	SetPVarInt(playerid,!"dmg_sperre",gettime()+5);

	if(IsPlayerNPC(playerid)){SetPlayerHealth(playerid,100);}

	if(issuerid == INVALID_PLAYER_ID || issuerid == playerid)
	{
	    new Float:playerHP;
	    GetPlayerHealth(playerid, playerHP);
	    if(amount > 10 && playerHP > 0 && MedicDuty > 0)
	    {
	        SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du hast dir etwas gebrochen!");
	        SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Rufe einen Krankenwagen per '/service' und lasse dich behandeln!");
	        SpielerInfo[playerid][sLegBroken] = 1;
	    }
	}
	else if(issuerid != INVALID_PLAYER_ID && playerid != INVALID_PLAYER_ID)
	{
	    if(GetPVarInt(playerid,"WurdeGeradeAngeschossen") < 1)
	    {
	    	SetPVarInt(playerid,"WurdeGeradeAngeschossen",1);
	    	SetTimerEx("WurdeGeradeAngeschossenT", 30000, false, "i", playerid);
		}
		SetPVarInt(playerid,"AntiIntFlucht",1);
		SetPVarInt(issuerid,"AntiIntFlucht",1);
		SetPVarInt(playerid, "AntiIntFluchtTimestamp", gettime() + 30);
		SetPVarInt(issuerid, "AntiIntFluchtTimestamp", gettime() + 30);

		if(GetPVarInt(playerid,"AdminDuty") > 0)
		{
		    new Float:Position[3];
		    GetPlayerPos(issuerid,Position[0],Position[1],Position[2]);
		    SetPlayerPos(issuerid,Position[0],Position[1],Position[2]+10);
		    new Float:losed;
		    GetPlayerHealth(playerid,losed);
		    SetPlayerHealth(playerid, losed + amount);
		    SendClientMessage(issuerid,COLOR_RED,"[Info]: {FFFFFF}Achtung, das Teammitglied ist im Admin-Dienst.");
		}

		//Anti-SDM by GangstaSunny
		SetPVarInt(playerid,"AttackNotwehr",issuerid);
		if(GetPlayerScore(issuerid) < 2 && GetPVarInt(issuerid,"AttackNotwehr") != playerid)
		{
			TogglePlayerControllable(issuerid,false);
			TogglePlayerControllable(issuerid,true);
			KillTimer(SDMTimer[issuerid]);
		    SDMTimer[issuerid] = SetTimerEx("AntiSDMFunction",15000,false,"i",issuerid);
		    SendClientMessage(issuerid,COLOR_RED,"[Info]: {FFFFFF} Achtung, unterlasse das DM als Neuling oder du wirst gebannt.");
		}
		//---------------------------------------------
		if(!IsPlayerNPC(playerid) && GetPVarInt(playerid, "InNoDMZone") == 1 && IsPlayerInNoDMZone(playerid) && GetPVarInt(playerid,"CopDuty") < 1 && GetPVarInt(playerid,"FBIDuty") < 1)
		{
		    new string[164];
			format(string, sizeof(string), "[No-DM-Zone]: {FFFFFF}Spieler %s hat dich in einer No-DM-Zone angegriffen.", SpielerInfo[issuerid][sName]);
			SendClientMessage(playerid,COLOR_RED,string);
			SendClientMessage(issuerid,COLOR_RED,"[No-DM-Zone]: {FFFFFF}Unterlasse das DM in einer No-DM-Zone oder Du wirst sanktioniert.");

			if(GetPVarInt(issuerid,"CopDuty") < 1 && GetPVarInt(issuerid,"FBIDuty") < 1)
			{
				format(string,sizeof(string),"[Info]: {FFFFFF}%s hat %s innerhalb einer No-DM Zone mit '%s' angegriffen.",SpielerInfo[issuerid][sName],SpielerInfo[playerid][sName],WaffenName(GetPlayerWeapon(weaponid)));
				SendAdminMessage(COLOR_RED,string);
			}
		}
		if(SpielerInfo[issuerid][icpHitsound] == 1)
		{
		    PlayerPlaySound(issuerid,17802,0.0,0.0,0.0);
		}
		if(bodypart == 9 && GetPlayerWeapon(issuerid) == WEAPON:34)
		{
		    if(GetDistanceBetweenPlayersEx(playerid,issuerid) <= 80)
		    {
		        SetPlayerHealth(playerid,0.0);
		        GameTextForPlayer(issuerid,"~r~KOPFSCHUSS",3000,4);
		    }
		    else if(GetDistanceBetweenPlayersEx(playerid,issuerid) > 80)
		    {
		        new rand = random(5);
		        if(rand == 1)
		        {
		            SetPlayerHealth(playerid,0.0);
	       			GameTextForPlayer(issuerid,"~r~KOPFSCHUSS",3000,4);
		        }
		    }
	 	}
  	}
	return 1;
}

public OnPlayerGiveDamage(playerid, damagedid, Float: amount, weaponid, bodypart)
{
	Casino_OnPlayerGiveDamage( playerid, damagedid, amount, weaponid, bodypart );
    if(weaponid == 23)
    {
        if(GetPVarInt(playerid,"CopDuty") > 0 || GetPVarInt(playerid,"FBIDuty") > 0)
        {
            KillTimer(TazerTimer[playerid]);
			SetTimerEx("Tazer",10000,false,"i",damagedid);
			KillTimer(TazerTimer[playerid]);
            TazerTimer[playerid] = SetTimerEx("TazerSperre",10000,false,"i",playerid);
			SetPVarInt(playerid,"TazerSperre",1);
			SetPVarInt(damagedid,"Getazert",1);
			SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Du hast den Spieler getazert.");
			TogglePlayerControllable(damagedid,false);
		}
    }
	return 1;
}

public OnPlayerWeaponShot(playerid, weaponid, BULLET_HIT_TYPE:hittype, hitid, Float:fX, Float:fY, Float:fZ)
{
	new string[144];
	if(hittype == BULLET_HIT_TYPE_OBJECT)
	{
		if(IsValidObject(hitid))
  		{
  		    if(hitid == BombenTor)
  		    {
  		        if(SpielerInfo[playerid][sFraktion] >= 9 && SpielerInfo[playerid][sFraktion] < 19)
  		        {
  		            if(BombenTorHealth == 10000)
  		            {
                		new rand = random(25);
                        BombenTorHealth -= rand;
                        format(string,sizeof(string),"Zugefügter Schaden: {FF0000}%d{00CDFF} | Verbleibender Schaden: {FF0000}%d{00CDFF}/{FF0000}10000",rand,BombenTorHealth);
                        SendClientMessage(playerid,COLOR_WHITE,string);
         		    	SendCopMessage(COLOR_BLUE,"ZENTRALE: AN ALLE EINHEITEN !! ES WIRD VERSUCHT, DAS TOR IN DER AREA 51 ZU ZERSTÖREN.");
  		            }
  		            else if(BombenTorHealth < 10000 && BombenTorHealth >= 25)
  		            {
  		                new rand = random(25);
  		                if(rand < 3){rand += 10;}
                        BombenTorHealth -= rand;
                        format(string,sizeof(string),"Zugefügter Schaden: {FF0000}%d{00CDFF} | Verbleibender Schaden: {FF0000}%d{00CDFF}/{FF0000}10000",rand,BombenTorHealth);
                        SendClientMessage(playerid,COLOR_WHITE,string);
  		            }
  		            else if(BombenTorHealth <= 25)
  		            {
  		                SendCopMessage(COLOR_BLUE,"ZENTRALE: AN ALLE EINHEITEN !! DAS TOR IN DER AREA 51 WURDE ZERSTÖRT.");
						SendClientMessage(playerid,COLOR_SUPER,"[Info] {FFFFFF}Das Tor wurde erfolgreich zerstört!");
						DestroyObject(BombenTor);
						SetTimer("BombTorTimer",180000,false);
  		            }
  		        }
  		        else NichtBerechtigt
  		        return 1;
  		    }
  		}
	}
	return 1;
}

public ServerRestart()
{
    ServerRestartFolgt = 0;
	SendRconCommand("gmx");
}

public SaveAll()
{
    if(ServerRestartFolgt == 1)
	{
	    ServerRestartFolgt = 2;
		foreach(new i : Player)
		{
			if(IsPlayerNPC(i))
			{
				KickPlayer(i,"Server Restart");
			}
			else
   			{
			    SaveAccount(i);
	     		SavePlayerWeapons(i);
	  			SavePrivatCar(i);
  			}
		}
		SendClientMessageToAll(COLOR_RED,"[Info]: {FFFFFF}Alle Accounts wurden erfolgreich gespeichert.");
		return 1;
	}
	else if(ServerRestartFolgt == 2)
	{
	    ServerRestartFolgt = 3;
	    SaveFrakInfo();
	    SendClientMessageToAll(COLOR_RED,"[Info]: {FFFFFF}Alle Fraktionen wurden erfolgreich gespeichert.");
	    return 1;
	}
	else if(ServerRestartFolgt == 3)
	{
 		ServerRestartFolgt = 4;
    	SaveGangZones();
    	SaveDrogen();
    	SendClientMessageToAll(COLOR_RED,"[Info]: {FFFFFF}Alle Gangzonen & Drogenpflanzen wurden erfolgreich gespeichert.");
    	return 1;
	}
	else if(ServerRestartFolgt == 4)
	{
 		ServerRestartFolgt = 5;
    	SaveGruppen();
    	SendClientMessageToAll(COLOR_RED,"[Info]: {FFFFFF}Alle Gruppen wurden erfolgreich gespeichert.");
    	return 1;
	}
	else if(ServerRestartFolgt == 5)
	{
	    ServerRestartFolgt = 6;
        SaveTankstellen();
        SaveAmmunations();
        SaveStores();
        SendClientMessageToAll(COLOR_RED,"[Info]: {FFFFFF}Alle Businesse wurden erfolgreich gespeichert.");
        return 1;
	}
	else if(ServerRestartFolgt == 6)
	{
        SaveHauser();
        SaveGarage();
        ServerRestartFolgt = 7;
        SendClientMessageToAll(COLOR_RED,"[Info]: {FFFFFF}Alle Immobilien wurden erfolgreich gespeichert.");
	}
	else if(ServerRestartFolgt == 7)
	{
        SaveWerbetafel();
        ServerRestartFolgt = 8;
        SendClientMessageToAll(COLOR_RED,"[Info]: {FFFFFF}Alle Werbetafeln wurden erfolgreich gespeichert.");
	}
	else if(ServerRestartFolgt == 8)
	{
        SaveVehicles();
        ServerRestartFolgt = 0;
        SendClientMessageToAll(COLOR_RED,"[Info]: {FFFFFF}Alle Fahrzeuge wurden erfolgreich gespeichert.");
        SendClientMessageToAll(COLOR_SUPER,"[Info]: {FFFFFF}Die Speicherung des Servers wurde erfolgreich abgeschlossen.");
        KillTimer(SaveAllTimer);
	}
	return 1;
}

public ServerSpeichern()
{
    if(ServerSpeichernStatus == 1)
	{
	    ServerSpeichernStatus = 2;
		foreach(new i : Player)
		{
		    if(!IsPlayerConnectedEx(i) || IsPlayerNPC(i))continue;
		    SaveAccount(i);
   			SavePlayerWeapons(i);
  			SavePrivatCar(i);
		}
		SendClientMessageToAll(COLOR_RED,"[Info]: {FFFFFF}Alle Accounts wurden erfolgreich gespeichert.");
		return 1;
	}
	else if(ServerSpeichernStatus == 2)
	{
	    ServerSpeichernStatus = 3;
	    SaveFrakInfo();
		SendClientMessageToAll(COLOR_RED,"[Info]: {FFFFFF}Alle Fraktionen wurden erfolgreich gespeichert.");
	    return 1;
	}
	else if(ServerSpeichernStatus == 3)
	{
 		ServerSpeichernStatus = 4;
    	SaveGangZones();
    	SaveDrogen();
    	SaveRegierung();
    	SaveServerLager();
    	SaveNewsKiosk();
		SendClientMessageToAll(COLOR_RED,"[Info]: {FFFFFF}Alle Gangzonen & Drogenpflanzen wurden erfolgreich gespeichert.");
		SendClientMessageToAll(COLOR_RED,"[Info]: {FFFFFF}Server Lager & Zeitungsstaende wurde gespeichert.");
		SendClientMessageToAll(COLOR_RED,"[Info]: {FFFFFF}Alle Einstellungen des Präsidenten (Regierungsoptionen) wurden gespeichert.");
    	return 1;
	}
	else if(ServerSpeichernStatus == 4)
	{
 		ServerSpeichernStatus = 5;
    	SaveGruppen();
		SendClientMessageToAll(COLOR_RED,"[Info]: {FFFFFF}Alle Gruppen wurden erfolgreich gespeichert.");
    	return 1;
	}
	else if(ServerSpeichernStatus == 5)
	{
	    ServerSpeichernStatus = 6;
        SaveTankstellen();
        SaveAmmunations();
        SaveStores();
		SendClientMessageToAll(COLOR_RED,"[Info]: {FFFFFF}Alle Businesse wurden erfolgreich gespeichert.");
        return 1;
	}
	else if(ServerSpeichernStatus == 6)
	{
        SaveHauser();
        SaveGarage();
        ServerSpeichernStatus = 7;
		SendClientMessageToAll(COLOR_RED,"[Info]: {FFFFFF}Alle Immobilien wurden erfolgreich gespeichert.");
		return 1;
	}
	else if(ServerSpeichernStatus == 7)
	{
		SaveWerbetafel();
        ServerSpeichernStatus = 8;
		SendClientMessageToAll(COLOR_RED,"[Info]: {FFFFFF}Alle Werbetafeln wurden erfolgreich gespeichert.");
		return 1;
	}
	else if(ServerSpeichernStatus == 8)
	{
        SaveVehicles();
        ServerSpeichernStatus = 9;
		SendClientMessageToAll(COLOR_RED,"[Info]: {FFFFFF}Alle Fahrzeuge wurden erfolgreich gespeichert.");
        return 1;
	}
	else if(ServerSpeichernStatus == 9)
	{
	    SendClientMessageToAll(COLOR_SUPER,"[Info]: {FFFFFF}Die Speicherung des Servers wurde erfolgreich abgeschlossen.");
        ServerSpeichernStatus = 0;
        KillTimer(ServerSpeichernTimer);
	}
	return 1;
}

public ServerLaden()
{
	if(ServerLadenStatus == 1)
	{
	    SendRconCommand("hostname "SERV_NAME" - Laden: Noch 13 Sekunden.");
	    printf("1. Fahrzeuginformationen werden geladen.");
	    LoadCarInfos();
	    ServerLadenStatus = 2;
	}
	else if(ServerLadenStatus == 2)
	{
	    SendRconCommand("hostname "SERV_NAME" - Laden: Noch 12 Sekunden.");
	    ServerLadenStatus = 3;
	    printf("2. Fraktionsdaten und Spraytags werden geladen.");
	    LoadFrakInfo();
	    LoadSprayTags();
	}
	else if(ServerLadenStatus == 3)
	{
	    SendRconCommand("hostname "SERV_NAME" - Laden: Noch 11 Sekunden.");
	    printf("3. Fahrzeuge werden geladen.");
	    LoadVehicles();
	    ServerLadenStatus = 4;
	}
	else if(ServerLadenStatus == 4)
	{
	    SendRconCommand("hostname "SERV_NAME" - Laden: Noch 10 Sekunden.");
	    printf("4. Gangzonen & Drogenpflanzen werden geladen.");
	    LoadGangZones();
	    LoadDrogen();
	    ServerLadenStatus = 5;
	}
	else if(ServerLadenStatus == 5)
	{
	    SendRconCommand("hostname "SERV_NAME" - Laden: Noch 9 Sekunden.");
	    printf("5. Tankstellen werden geladen");
	    LoadTankstellen();
	    ServerLadenStatus = 6;
	}
	else if(ServerLadenStatus == 6)
	{
	    SendRconCommand("hostname "SERV_NAME" - Laden: Noch 8 Sekunden.");
	    printf("6. Ammunations werden geladen.");
	    LoadAmmunations();
	    ServerLadenStatus = 7;
	    return 1;
	}
	else if(ServerLadenStatus == 7)
	{
	    SendRconCommand("hostname "SERV_NAME" - Laden: Noch 7 Sekunden.");
	    printf("7. 24/7 und Strassenschilder werden geladen.");
	    LoadStores();
	    LoadStrassenSchilder();
	    ServerLadenStatus = 8;
	}
	else if(ServerLadenStatus == 8)
	{
	    SendRconCommand("hostname "SERV_NAME" - Laden: Noch 6 Sekunden.");
	    printf("8. Hauser werden geladen.");
	    LoadHauser();
	    ServerLadenStatus = 9;
	}
	else if(ServerLadenStatus == 9)
	{
	    SendRconCommand("hostname "SERV_NAME" - Laden: Noch 4 Sekunden.");
	    printf("9. Garagen werden geladen.");
	    LoadGaragen();
	    ServerLadenStatus = 10;
	}
	else if(ServerLadenStatus == 10)
	{
	    SendRconCommand("hostname "SERV_NAME" - Laden: Noch 3 Sekunden.");
 		printf("11. Blitzer und Regierungsoptionen werden geladen.");
	    LoadBlitzer();
	    LoadRegierung();
	    ServerLadenStatus = 11;
	}
	else if(ServerLadenStatus == 11)
	{
	    SendRconCommand("hostname "SERV_NAME" - Laden: Noch 2 Sekunden.");
 		printf("12. Gruppen und Eventboxen werden geladen.");
	    LoadGruppen();
	    LoadEventboxen();
	    ServerLadenStatus = 12;
	}
	else if(ServerLadenStatus == 12)
	{
		SendRconCommand("hostname "SERV_NAME" - Laden: Noch 1 Sekunde.");
 		printf("13. Werbetafeln & Serverlager & Zeitungsstaende werden geladen.");
 		LoadServerLager();
 		LoadNewsKisok();
	    LoadWerbetafeln();
	    ServerLadenStatus = 13;
	}
	else if(ServerLadenStatus == 13)
	{
		printf("-- Der Serverladevorgang wurde erfolgreich beendet.");
		KillTimer(ServerLadenTimer);
	    ServerLadenStatus = 0;
		SetGameModeText(SERV_MODE);

		addServerTimelineEvent(TIMELINE_TAG_SERVER_STARTED, -1, "Der Server wurde erfolgreich gestartet.");

        new serverPort = GetConsoleVarAsInt("network.port");
		if(serverPort == 7777)
		{
			SendRconCommand("password 0");
			SendRconCommand("hostname "SERV_STAG" "SERV_NAME" - "SERV_SLOG"");

			if(GlobalVars[DoubleEXP])
			{
				SendRconCommand("hostname "SERV_STAG" "SERV_NAME" - "SERV_SLOG" - DOUBLE EXP");
			}
		}
		else SendRconCommand("hostname [Testserver] "SERV_STAG" "SERV_NAME" - "SERV_SLOG"");
	}
	return 1;
}

public KickTimer(playerid)
{
	SetPVarInt(playerid,"BeKicked", GetPVarInt(playerid,"BeKicked") + 1);
	if(GetPVarInt(playerid,"BeKicked") == 1)
	{
		TogglePlayerControllable(playerid,false);
		SetTimerEx("KickTimer",100,false,"i",playerid);
	}
	else if(GetPVarInt(playerid,"BeKicked") == 2){Kick(playerid);}
	return 1;
}

public LockLicht(vehicleid)
{
    GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
    SetVehicleParamsEx(vehicleid,engine,VEHICLE_PARAMS_OFF,alarm,doors,bonnet,boot,objective);
    return 1;
}

public TimeToKnast(playerid)
{
	if(SpielerInfo[playerid][sKnast] > 0)
	{
        SpielerInfo[playerid][sKnast] -= 1;
	}
	if(SpielerInfo[playerid][sKnast] < 1)
	{
	    KillTimer(KnastTimer[playerid]);
		GameTextForPlayer(playerid,"Entlassen",3000,1);
		SpielerInfo[playerid][sKnast] = 0;
		SpielerInfo[playerid][sZelle] = 0;
		if(SpielerInfo[playerid][sFraktion] >= 9 && SpielerInfo[playerid][sFraktion] < 19)//Gang
  		{
  		    if(FrakInfo[SpielerInfo[playerid][sFraktion]][fiSkinordnung] > 0)
  		    {
				new skinid[3], string[25];
				format(skinid,sizeof(skinid),"%d",SpielerInfo[playerid][sFraktion]);
				format(string,sizeof(string),"Rang%d",SpielerInfo[playerid][sRank]);
				SetPlayerSkin(playerid,mysql_GetInt("skinordnung", string, "frakid", skinid));
			}
			else SetPlayerSkin(playerid,mysql_GetInt("accounts", "SkinID", "Name", SpielerInfo[playerid][sName]));
		}
		SetPlayerPos(playerid,1550.6349,-1675.4946,15.4941);
	    SetPlayerFacingAngle(playerid, 90.3821);
	    SetPlayerInterior(playerid,0);
	    SetCameraBehindPlayer(playerid);
	    SetPlayerWetter(playerid);
	}
	return 1;
}

public TimeToPrison(playerid)
{
    SpielerInfo[playerid][sPrison] -= 1;
	if(SpielerInfo[playerid][sPrison] == 0)
	{
	    KillTimer(PrisonTimer[playerid]);
		GameTextForPlayer(playerid,"Freiheit",3000,1);
		SpielerInfo[playerid][sPrison] = 0;
		SpawnPlayerEx(playerid);
	}
}

public LSPDGarageT()
{
	MoveDynamicObject(LSPDGarage, 1593.3000500,-1638.0999800,12.5000000,3.0,0.0000000,0.0000000,180.0000000);
	return 1;
}

public LSPDSchrankeT()
{
	MoveDynamicObject(LSPDSchranke, 1544.6999500,-1630.9000200,13.1000000-0.01,4.0,0.0000000,270.0000000,270.0000000);
	return 1;
}

public OAmtSchrankeT()
{
	MoveDynamicObject(oamtbasemapschranke, 1106.0683, -1691.4707, 12.9108-0.01, 2.5, 0.0000, 90.0000, 90.0000);
	return 1;
}

public FBITorT()
{
	MoveDynamicObject(FBITor, -2168.68530, 249.60730, 36.57600,3.0,0.00000, 0.00000, 90.00000);
	return 1;
}

public RussenTorT()
{
	MoveDynamicObject(RussenTor, 321.191,-1187.818,75.783,3.0,0.000,0.000,38.177);
	return 1;
}

public MautSchrankeT(playerid)
{
	if(GetPVarInt(playerid,"MautStation") == 1)
	{
	    MoveDynamicObject(MautSchranke[5], 1724.22595, 518.73871, 28.09300-0.01,4.0,0.00000, 89.00000, -19.00000);
	    DeletePVar(playerid,"MautStation");
	    return 1;
	}
	else if(GetPVarInt(playerid,"MautStation") == 2)
	{
	    MoveDynamicObject(MautSchranke[6], 1749.94031, 517.41351, 27.70300-0.01,4.0,0.00000, -89.80000, -19.00000);
	    DeletePVar(playerid,"MautStation");
	    return 1;
	}
	else if(GetPVarInt(playerid,"MautStation") == 3)
	{
	    MoveDynamicObject(MautSchranke[0], 50.20850, -1528.00586, 4.59290-0.01,4.0,0.00000, 88.00000, 81.00000);
	    DeletePVar(playerid,"MautStation");
	    return 1;
	}
	else if(GetPVarInt(playerid,"MautStation") == 4)
	{
	    MoveDynamicObject(MautSchranke[1], 55.64380, -1535.61462, 4.65890-0.01,4.0,0.00000, -88.00000, 82.00000);
	    DeletePVar(playerid,"MautStation");
	    return 1;
	}
	else if(GetPVarInt(playerid,"MautStation") == 5)
	{
	    MoveDynamicObject(MautSchranke[2], 32.93180, -1338.09875, 9.97200-0.01,4.0,0.00000, -89.50000, -51.00000);
	    DeletePVar(playerid,"MautStation");
	    return 1;
	}
	else if(GetPVarInt(playerid,"MautStation") == 6)
	{
	    MoveDynamicObject(MautSchranke[3], -9.03120, -1324.38770, 10.83550-0.01,4.0,0.00000, 89.50000, -50.00000);
	    DeletePVar(playerid,"MautStation");
	    return 1;
	}
	else if(GetPVarInt(playerid,"MautStation") == 7)
	{
	    MoveDynamicObject(MautSchranke[4], 518.43420, 470.30151, 18.66560-0.01,4.0,0.00000, 90.00000, 35.00000);
	    DeletePVar(playerid,"MautStation");
	    return 1;
	}
	return 1;
}

public LspdDoorTimer(playerid)
{
    if(lspdaufzu == false)
    {
        lspdaufzu = true;
    	PlayerPlaySound(playerid, 5205, 0.0, 0.0, 0.0);
        MoveDynamicObject(lspddoor, 345.81671, 1827.40979, 2240.56494 - 0.01, 0.4, 0.0, 0.0, 270.0);
    }
    else
    {
        lspdaufzu = false;
        PlayerPlaySound(playerid, 5205, 0.0, 0.0, 0.0);
        MoveDynamicObject(lspddoor, 345.81671, 1827.40979, 2240.56494 + 0.01, 0.4, 0.0, 0.0, 0.0);
    }
    return 1;
}

public LspdDoorTimer2(playerid)
{
    if(lspd2aufzu == false)
    {
        lspd2aufzu = true;
    	PlayerPlaySound(playerid, 5205, 0.0, 0.0, 0.0);
        MoveDynamicObject(lspddoor2, -2458.99023, 513.31030, 24.0757 + 0.01, 0.01, 0.0, 0.0, 90.0);
    }
    else
    {
        lspd2aufzu = false;
        PlayerPlaySound(playerid, 5205, 0.0, 0.0, 0.0);
        MoveDynamicObject(lspddoor2, -2458.99023, 513.31030, 24.0757 - 0.01, 0.01, 0.0, 0.0, 180.0);
    }
    return 1;
}

public LspdDoorTimer3(playerid)
{
    if(lspd3aufzu == false)
    {
        lspd3aufzu = true;
    	PlayerPlaySound(playerid, 5205, 0.0, 0.0, 0.0);
        MoveDynamicObject(lspddoor3, 345.81671, 1827.40979, 2240.56494, 0.01, 0.0, 0.0, 270.0);
        //lspddoor3 = CreateDynamicObject(1495, 345.81671, 1827.40979, 2240.56494,   0.00000, 0.00000, 0.00000); // lspd tür innen
    }
    else
    {
        lspd3aufzu = false;
        PlayerPlaySound(playerid, 5205, 0.0, 0.0, 0.0);
        MoveDynamicObject(lspddoor3, 345.81671, 1827.40979, 2240.56494 - 0.01, 0.01, 0.0, 0.0, 0.0);
    }
    return 1;
}

public LspdDoorWKTimer(playerid)
{
    if(lspdaufzu == false)
    {
        lspdaufzu = true;
    	PlayerPlaySound(playerid, 5205, 0.0, 0.0, 0.0);
        //lspddoorWK = CreateDynamicObject(1495, 322.76929, 1834.26904, 2240.58203,   0.00000, 0.00000, 90.00000); //lspd tür waffenkammer innen
        MoveDynamicObject(lspddoorWK, 322.76929, 1834.26904, 2240.58203 - 0.01, 0.3, 0.0, 0.0, 90.0);
    }
    else
    {
        lspdaufzu = false;
        PlayerPlaySound(playerid, 5205, 0.0, 0.0, 0.0);
        MoveDynamicObject(lspddoorWK, 322.76929, 1834.26904, 2240.58203 + 0.01, 0.3, 0.0, 0.0, 0.0);
        //lspddoorWK = CreateDynamicObject(1495, 322.76929, 1834.26904, 2240.58203,   0.00000, 0.00000, 0.00000); //lspd tür waffenkammer innen
    }
    return 1;
}

public NewsTor1T()
{
	MoveDynamicObject(NewsTor[0], 781.79523, -1384.78162, 12.88760,3.0, 0.00000, 0.00000, 180.00000);
	return 1;
}

public NewsTor2T()
{
	MoveDynamicObject(NewsTor[1], 781.77570, -1330.23206, 12.70840,3.0, 0.00000, 0.00000, 179.60001);
	return 1;
}


public NewsStudioT()
{
	MoveDynamicObject(NewsStudioTor, 671.36200, -1353.85547,1696.4069,6.0, 0.00000, 0.00000, 0.00000);
	return 1;
}

public Tazer(playerid)
{
	DeletePVar(playerid,"Getazert");
	TogglePlayerControllable(playerid, true);
	return 1;
}

public TazerSperre(playerid)
{
	SendClientMessage(playerid,COLOR_SUPER,"Dein Tazer ist wieder einsatzbereit.");
    DeletePVar(playerid,"TazerSperre");
    return 1;
}

public PDEquiptGone(playerid)
{
	DeletePVar(playerid,"PDEquipt");
	return 1;
}

public CountdownTime(Sekunden)
{
	CountdownVar++;
	if(Sekunden-CountdownVar <= 5)
	{
	    foreach(new players : Player)
		{
		    if(GetPVarInt(players,"ProbeFahrt") == 1 || GetPVarInt(players,"ImImportCar") == 1)continue;
			PlayerPlaySound(players, 1139, 0.0, 0.0, 10.0);
	    	format(CountdownString,sizeof(CountdownString),"~y~%d~w~ Sekunden",Sekunden-CountdownVar);
			PlayerTextDrawSetString(players,CountdownDraw[players][3],CountdownString);
		}
	}
	else
	{
 		foreach(new players2 : Player)
		{
		    if(GetPVarInt(players2,"ProbeFahrt") == 1 || GetPVarInt(players2,"ImImportCar") == 1)continue;
			format(CountdownString,sizeof(CountdownString),"%d Sekunden",Sekunden-CountdownVar);
			PlayerTextDrawSetString(players2,CountdownDraw[players2][3],CountdownString);
		}
	}
	if(CountdownVar == Sekunden)
	{
		foreach(new players3 : Player)
		{
		    if(GetPVarInt(players3,"ProbeFahrt") == 1 || GetPVarInt(players3,"ImImportCar") == 1)continue;
		    PlayerTextDrawHide(players3,CountdownDraw[players3][0]);
		    PlayerTextDrawHide(players3,CountdownDraw[players3][1]);
		    PlayerTextDrawHide(players3,CountdownDraw[players3][2]);
		    PlayerTextDrawHide(players3,CountdownDraw[players3][3]);
	    }
		KillTimer(CountdownTimer);
		CountdownVar = 0;
		if(GlobalVars[crespawn] == 1)//Alle - Fahrzeuge
		{
		    for(new i=1; i<MAX_VEHICLES; i++)
		    {
	        	if(GetVehicleDriverEx(i) >= 1)continue;
	        	if(FahrzeugInfo[i][fZiviroller] == 1 || FahrzeugInfo[i][fImportCar] == 1 || FahrzeugInfo[i][fKurrierCar] == 1)continue;
	        	SetVehicleToRespawn(i);
		    }
		    SendClientMessageToAll(COLOR_INFO,"[Info]: {FFFFFF}Alle unbenutzen Fahrzeuge wurden respawnt.");
		    GlobalVars[crespawn] = 0;
		}
		else if(GlobalVars[crespawn] == 2)//LKW Job - Fahrzeuge
		{
    		for(new i=1; i<MAX_VEHICLES; i++)
    		{
				if(FahrzeugInfo[i][fNebenjob] == 1)
  				{
	        		if(GetVehicleDriverEx(i) == -1)
	        		SetVehicleToRespawn(i);
				}
		    }
		    SendClientMessageToAll(COLOR_INFO,"[Info]: {FFFFFF}Alle unbenutzen Fahrzeuge vom Trucker Job wurden respawnt.");
		    GlobalVars[crespawn] = 0;
		}
		else if(GlobalVars[crespawn] == 3)//Pizzabote Job - Fahrzeuge
		{
			for(new i=1; i<MAX_VEHICLES; i++)
    		{
				if(FahrzeugInfo[i][fNebenjob] == 2)
				{
		        	if(GetVehicleDriverEx(i) >= 1)continue;
		        	if(FahrzeugInfo[i][fJobFahrer] != 0)continue;
		        	SetVehicleToRespawn(i);
			    }
		    }
		    SendClientMessageToAll(COLOR_INFO,"[Info]: {FFFFFF}Alle unbenutzen Fahrzeuge vom Pizzaboten Job wurden respawnt.");
		    GlobalVars[crespawn] = 0;
		}
		else if(GlobalVars[crespawn] == 4)//Kehrmaschinenfahrer Job - Fahrzeuge
		{
			for(new i=1; i<MAX_VEHICLES; i++)
    		{
				if(FahrzeugInfo[i][fNebenjob] == 3)
	    		{
		        	if(GetVehicleDriverEx(i) >= 1)continue;
		        	if(FahrzeugInfo[i][fJobFahrer] != 0)continue;
		        	SetVehicleToRespawn(i);
			    }
			}
		    SendClientMessageToAll(COLOR_INFO,"[Info]: {FFFFFF}Alle unbenutzen Fahrzeuge vom Kehrmaschinenfahrer Job wurden respawnt.");
		    GlobalVars[crespawn] = 0;
		}
		else if(GlobalVars[crespawn] == 5)//Piloten Job - Fahrzeuge
		{
			for(new i=1; i<MAX_VEHICLES; i++)
    		{
				if(FahrzeugInfo[i][fNebenjob] == 4)
	    		{
		        	if(GetVehicleDriverEx(i) >= 1)continue;
		        	if(FahrzeugInfo[i][fJobFahrer] != 0)continue;
		        	SetVehicleToRespawn(i);
			    }
			}
		    SendClientMessageToAll(COLOR_INFO,"[Info]: {FFFFFF}Alle unbenutzen Fahrzeuge vom Piloten Job wurden respawnt.");
		    GlobalVars[crespawn] = 0;
		}
		else if(GlobalVars[crespawn] == 6)//Busfahrer Job - Fahrzeuge
		{
			for(new i=1; i<MAX_VEHICLES; i++)
    		{
				if(FahrzeugInfo[i][fNebenjob] == 5)
	    		{
		        	if(GetVehicleDriverEx(i) >= 1)continue;
		        	if(FahrzeugInfo[i][fJobFahrer] != 0)continue;
		        	SetVehicleToRespawn(i);
			    }
			}
		    SendClientMessageToAll(COLOR_INFO,"[Info]: {FFFFFF}Alle unbenutzen Fahrzeuge vom Busfahrer Job wurden respawnt.");
		    GlobalVars[crespawn] = 0;
		}
		else if(GlobalVars[crespawn] == 7)//Müllmann Job - Fahrzeuge
		{
			for(new i=1; i<MAX_VEHICLES; i++)
    		{
				if(FahrzeugInfo[i][fNebenjob] == 6)
	    		{
		        	if(GetVehicleDriverEx(i) >= 1)continue;
		        	if(FahrzeugInfo[i][fJobFahrer] != 0)continue;
		        	SetVehicleToRespawn(i);
			    }
			}
		    SendClientMessageToAll(COLOR_INFO,"[Info]: {FFFFFF}Alle unbenutzen Fahrzeuge vom Müllmann Job wurden respawnt.");
		    GlobalVars[crespawn] = 0;
		}
		else if(GlobalVars[crespawn] == 8)//Landwirt Job - Fahrzeuge
		{
			for(new i=1; i<MAX_VEHICLES; i++)
    		{
				if(FahrzeugInfo[i][fNebenjob] == 7)
	    		{
		        	if(GetVehicleDriverEx(i) >= 1)continue;
		        	if(FahrzeugInfo[i][fJobFahrer] != 0)continue;
		        	SetVehicleToRespawn(i);
			    }
			}
		    SendClientMessageToAll(COLOR_INFO,"[Info]: {FFFFFF}Alle unbenutzen Fahrzeuge vom Landwirt Job wurden respawnt.");
		    GlobalVars[crespawn] = 0;
		}
		else if(GlobalVars[crespawn] == 9)//Geldlieferanten Job - Fahrzeuge
		{
			for(new i=1; i<MAX_VEHICLES; i++)
    		{
				if(FahrzeugInfo[i][fNebenjob] == 10)
	    		{
		        	if(GetVehicleDriverEx(i) >= 1)continue;
		        	if(FahrzeugInfo[i][fJobFahrer] != 0)continue;
		        	SetVehicleToRespawn(i);
			    }
			}
		    SendClientMessageToAll(COLOR_INFO,"[Info]: {FFFFFF}Alle unbenutzen Fahrzeuge vom Geldlieferanten Job wurden respawnt.");
		    GlobalVars[crespawn] = 0;
		}
		else if(GlobalVars[crespawn] == 10)//Elektriker Job - Fahrzeuge
		{
			for(new i=1; i<MAX_VEHICLES; i++)
    		{
				if(FahrzeugInfo[i][fNebenjob] == 11)
	    		{
		        	if(GetVehicleDriverEx(i) >= 1)continue;
		        	if(FahrzeugInfo[i][fJobFahrer] != 0)continue;
		        	SetVehicleToRespawn(i);
			    }
			}
		    SendClientMessageToAll(COLOR_INFO,"[Info]: {FFFFFF}Alle unbenutzen Fahrzeuge vom Elektriker Job wurden respawnt.");
		    GlobalVars[crespawn] = 0;
		}
		else if(GlobalVars[crespawn] == 11)//Langstreckenfahrer Job - Fahrzeuge
		{
			for(new i=1; i<MAX_VEHICLES; i++)
    		{
				if(FahrzeugInfo[i][fNebenjob] == 16)
	    		{
		        	if(GetVehicleDriverEx(i) >= 1)continue;
		        	if(FahrzeugInfo[i][fJobFahrer] != 0)continue;
		        	SetVehicleToRespawn(i);
			    }
			}
		    SendClientMessageToAll(COLOR_INFO,"[Info]: {FFFFFF}Alle unbenutzen Fahrzeuge vom Langstreckenfahrer Job wurden respawnt.");
		    GlobalVars[crespawn] = 0;
		}
		else if(GlobalVars[crespawn] == 12)//Fraktion - Fahrzeuge
		{
			for(new i=1; i<MAX_VEHICLES; i++)
    		{
				if(FahrzeugInfo[i][fFraktion] > 0)
	    		{
		        	if(GetVehicleDriverEx(i) >= 1)continue;
		        	SetVehicleToRespawn(i);
			    }
			}
		    SendClientMessageToAll(COLOR_INFO,"[Info]: {FFFFFF}Alle unbenutzen Fahrzeuge von Fraktionen wurden respawnt.");
		    GlobalVars[crespawn] = 0;
		}
		else if(GlobalVars[crespawn] == 13)//Autohaus - Fahrzeuge
		{
			for(new i=1; i<MAX_VEHICLES; i++)
    		{
				if(FahrzeugInfo[i][fAutohaus] == 7)
	    		{
		        	if(GetVehicleDriverEx(i) >= 1)continue;
		        	SetVehicleToRespawn(i);
			    }
			}
		    SendClientMessageToAll(COLOR_INFO,"[Info]: {FFFFFF}Alle unbenutzen Fahrzeuge von Autohäusern wurden respawnt.");
		    GlobalVars[crespawn] = 0;
		}
		else if(GlobalVars[crespawn] == 14)
		{
			for(new i=1; i<MAX_VEHICLES; i++)
    		{
				if(FahrzeugInfo[i][fNebenjob] == 17)
	    		{
		        	if(GetVehicleDriverEx(i) >= 1)continue;
		        	if(FahrzeugInfo[i][fJobFahrer] != 0)continue;
		        	SetVehicleToRespawn(i);
			    }
			}
		    SendClientMessageToAll(COLOR_INFO,"[Info]: {FFFFFF}Alle unbenutzen Fahrzeuge vom Fluglieferanten Job wurden respawnt.");
		    GlobalVars[crespawn] = 0;
		}
		else if(GlobalVars[crespawn] == 15)
		{
			for(new i=1; i<MAX_VEHICLES; i++)
    		{
				if(FahrzeugInfo[i][fNebenjob] == 18)
	    		{
		        	if(GetVehicleDriverEx(i) >= 1)continue;
		        	if(FahrzeugInfo[i][fJobFahrer] != 0)continue;
		        	SetVehicleToRespawn(i);
			    }
			}
		    SendClientMessageToAll(COLOR_INFO,"[Info]: {FFFFFF}Alle unbenutzen Fahrzeuge vom Hochseefischer Job wurden respawnt.");
		    GlobalVars[crespawn] = 0;
		}
	}
	return 1;
}

public LevelUpPlayer(playerid)
{
	if(GetPVarInt(playerid,"LevelUpTime") == 1)
	{
		PlayerTextDrawHide(playerid, LevelUP[playerid]);
	    PlayerTextDrawColour(playerid, LevelUP[playerid], 0x00E1FFFF);
		PlayerTextDrawShow(playerid, LevelUP[playerid]);
	    SetTimerEx("LevelUpPlayer",1000,false,"i",playerid);
	    SetPVarInt(playerid,"LevelUpTime",2);
	}
	else if(GetPVarInt(playerid,"LevelUpTime") == 2)
	{
	    PlayerTextDrawHide(playerid, LevelUP[playerid]);
	    PlayerTextDrawColour(playerid, LevelUP[playerid], 0xEBFF00FF);
	    PlayerTextDrawShow(playerid, LevelUP[playerid]);
	    SetTimerEx("LevelUpPlayer",1000,false,"i",playerid);
	    SetPVarInt(playerid,"LevelUpTime",3);
	}
	else if(GetPVarInt(playerid,"LevelUpTime") == 3)
	{
	    PlayerTextDrawHide(playerid, LevelUP[playerid]);
	    SetPlayerScore(playerid, GetPlayerScore(playerid)+1);
	    StopAudioStreamForPlayer(playerid);
	    DeletePVar(playerid,"LevelUpTime");

		new string[64];
		format(string, sizeof(string), "hat das Spielerlevel %i erreicht.", GetPlayerScore(playerid));

		addServerTimelineEvent(TIMELINE_TAG_USER_LEVELUP, SpielerInfo[playerid][sDBID], string);
	}
	return 1;
}

public settimefunc(playerid)
{
    new string[256],hours,minutes,seconds;
    gettime(hours, minutes, seconds);
    SetWorldTime(hours);
    format(string, sizeof string, "%s%d:%s%d:%s%d", (hours < 10) ? ("0") : (""), hours, (minutes < 10) ? ("0") : (""), minutes, (seconds < 10) ? ("0") : (""), seconds);
    TextDrawSetString(Time, string);
    return 1;
}

public WerbungTimer()
{
	GlobalVars[WerbungAktiv] = 0;
	TextDrawSetString(StatusWerbung, "~g~Werbung: ~w~Keine - Benutze /ad um eine Werbung zu schalten.");
	return 1;
}

public PlayerMuted(playerid)
{
	SpielerInfo[playerid][sMuted] -= 1;
	if(SpielerInfo[playerid][sMuted] == 0)
	{
	    SendClientMessage(playerid,COLOR_SUPER,"Du bist wieder entmutet, reiß dich in Zukunft zusammen.");
	    KillTimer(MutePlayerTimer[playerid]);
	}
	return 1;
}

public PlayerPrison(playerid)
{
	SpielerInfo[playerid][sPrison] -= 1;
	if(SpielerInfo[playerid][sPrison] == 0)
	{
	    SendClientMessage(playerid,COLOR_SUPER,"Du hast deine Strafzeit abgesessen, reiß dich in Zukunft zusammen.");
	    KillTimer(PrisonPlayerTimer[playerid]);
	    SpawnPlayerEx(playerid);
	}
	return 1;
}

public PlayerWerbungSperre(playerid)
{
	SpielerInfo[playerid][sADSperre] -= 1;
	if(SpielerInfo[playerid][sADSperre] == 0)
	{
	    SendClientMessage(playerid,COLOR_SUPER,"Du bist wieder für die Werbung freigegeben, reiß dich in Zukunft zusammen.");
	}
	return 1;
}

public TryToNap(playerid)
{
	DeletePVar(playerid,"TriedToNap");
	return 1;
}

public Personalausweis(playerid)
{
	if(GetPVarInt(playerid,"Warten") == 1)
	{
		SendClientMessage(playerid,COLOR_WHITE,"");
		SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Achso du hast nicht genug Geld dabei. Komm einfach wieder sobald du 50$ dabei hast. Aufwiedersehen.");
	    DeletePVar(playerid,"Warten");
	    DeletePVar(playerid,"Rathaus");
        TogglePlayerControllable(playerid, true);
		SetCameraBehindPlayer(playerid);
		return 1;
	}
	SendClientMessage(playerid,COLOR_WHITE," ");
	SendClientMessage(playerid,COLOR_WHITE," ");
    SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Hier dein Personalausweis.");
	SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Da Los Santos eine große Stadt ist, werde ich dir noch einen Stadtplan mitgeben.");
	SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Michelle S.{FFFFFF} sagt: Am besten begibst du dich zur Fahrschule, du findest Sie im Stadtplan. Viel spaß noch.");
	SendClientMessage(playerid,COLOR_INFO,"* Du hast einen Personalausweis und einen Stadtplan erhalten. +25 EXP!");
	GivePlayerEXP(playerid,25);
	SpielerInfo[playerid][sPerso] = 1;
	SpielerInfo[playerid][sStadtplan] = 1;
	GivePlayerMoneyEx(playerid,-50);
	TogglePlayerControllable(playerid, true);
	SetCameraBehindPlayer(playerid);
	DeletePVar(playerid,"Rathaus");

	if(SpielerInfo[playerid][sAchivPerso] < 1)
    {
        ShowAchievement(playerid,"Besorge dir deinen Personalausweis","+ 50 EXP");
        GivePlayerEXP(playerid,50);
        SpielerInfo[playerid][sAchivPerso] = 1;
    }
	return 1;
}

public SpeedoMeter(playerid)
{
	if(IsPlayerConnectedEx(playerid) && IsPlayerInAnyVehicle(playerid))
	{
	 	new veh = GetPlayerVehicleID(playerid);
	 	if(IsAFahrrad(veh))return 1;
		if(FahrzeugInfo[veh][fTank] <= 0)
		{
			GetVehicleParamsEx(veh, engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(veh, false, false, alarm, doors, bonnet, boot, objective);
			GameTextForPlayer(playerid,"Motor ~r~ausgeschaltet",3000,6);
			Motor[veh] = false;
			Licht[veh] = false;
		    GameTextForPlayer(playerid,"~r~~n~~n~~n~~n~~n~~n~~n~~n~Der Tank ist leer.",3000,3);
		    KillTimer(TachoTimer[playerid]);
		    return 1;
		}
	    new string[24], Float:vHealth;
		GetVehicleHealth(GetPlayerVehicleID(playerid), vHealth);
  		PlayerTextDrawHide(playerid, Tacho[playerid][6]);
	    format(string,sizeof(string),"~g~%i",GetPlayerSpeed(playerid));
	    if(GetPlayerSpeed(playerid) >= 90){format(string,sizeof(string),"~y~%i",GetPlayerSpeed(playerid));}
		if(GetPlayerSpeed(playerid) >= 160){format(string,sizeof(string),"~r~%i",GetPlayerSpeed(playerid));}
		PlayerTextDrawSetString(playerid, Tacho[playerid][6], string);
		PlayerTextDrawShow(playerid, Tacho[playerid][6]);
	    PlayerTextDrawHide(playerid, Tacho[playerid][5]);
	    format(string,sizeof(string),"Schaden %.0f%",((1000 - vHealth) / 10));
		PlayerTextDrawSetString(playerid, Tacho[playerid][5], string);
		PlayerTextDrawShow(playerid, Tacho[playerid][5]);
	    NewKilometer[GetPlayerVehicleID(playerid)] = GetPlayerSpeed(playerid);
	    Kilometer(playerid);
	}
	return 1;
}

public ProbeFahrtPlayer(playerid)
{
	if(!IsPlayerConnectedEx(playerid)) return 1;
	new string[80];
	ProbefahrtTime[playerid]--;
 	format(string,sizeof(string),"~g~%d~w~ Minuten",ProbefahrtTime[playerid]);
 	if(ProbefahrtTime[playerid] == 2){format(string,sizeof(string),"~y~%d~w~ Minuten",ProbefahrtTime[playerid]);}
 	if(ProbefahrtTime[playerid] == 1){format(string,sizeof(string),"~r~%d~w~ Minuten",ProbefahrtTime[playerid]);}
 	if(ProbefahrtTime[playerid] == 0)
	{
	    new stringanzeige[250];
	    KillTimer(ProbefahrtTimer[playerid]);
		SetPlayerWantedLevelEx(playerid, GetPlayerWantedLevelEx(playerid) +1);
		SendClientMessage(playerid,COLOR_YELLOW,"Du hast das Fahrzeug nicht zurückgebracht. Das Autohaus hat Anzeige erstattet!");
		format(stringanzeige,sizeof(stringanzeige),"Aktuelles Wantedlevel: %d",GetPlayerWantedLevelEx(playerid));
		SendClientMessage(playerid,COLOR_YELLOW,stringanzeige);
		format(string,sizeof(string),"~r~STRAFANZEIGE");
		SendCopMessage(COLOR_BLUE,"ZENTRALE: ACHTUNG: AN ALLE EINHEITEN! ES IST SOEBEN EINE NEUE STRAFANZEIGE EINGEGANGEN !!");
		format(stringanzeige,sizeof(stringanzeige),"ZENTRALE: Das Autohaus meldet ein geklautetes Fahrzeug. Der %s soll das Fahrzeug nach Ablauf der",SpielerInfo[playerid][sName]);
		SendCopMessage(COLOR_BLUE,stringanzeige);
		SendCopMessage(COLOR_BLUE,"ZENTRALE: Probefahrt-Frist nicht zurückgebracht haben. Bitte fahnden Sie nach dem Flüchtigen.");
		format(stringanzeige,sizeof(stringanzeige),"ZENTRALE: Laut Autohaus-Inhaber kann das Fahrzeug über '/orten [%d]' per GPS-Sender geortet werden.", ProbefahrtCar[playerid]);
		SendCopMessage(COLOR_BLUE,stringanzeige);
	}
	PlayerTextDrawSetString(playerid, CountdownDraw[playerid][3], string);
	return 1;
}

public ImportCarPlayer()
{
	new string[80];
	ImportCarTime--;
 	format(string,sizeof(string),"~g~%d~w~ Minuten",ImportCarTime);
 	if(ImportCarTime == 10){format(string,sizeof(string),"~y~%d~w~ Minuten",ImportCarTime);}
 	if(ImportCarTime == 5){format(string,sizeof(string),"~r~%d~w~ Minuten",ImportCarTime);}
 	if(ImportCarTime == 0)
	{
	    KillTimer(ImportCarTimer);
	    Importfahrzeug = false;
		SetTimer("_ImportCarTimer",3600000,false);
		DeleteVehicle(ImportCar);
		ImportCar = 0;
		SendClientMessageToAll(COLOR_ORANGE,"Das Importfahrzeug konnte nicht rechtzeitig abgeliefert werden.");
	}
	foreach(new i : Player)
	{
	    if(GetPVarInt(i,"Probefahrt") == 1)continue;
		PlayerTextDrawSetString(i, CountdownDraw[i][3], string);
	}
	return 1;
}

public KurrierCarPlayer(playerid)
{
	new string[80], kurrierid = GetPVarInt(playerid,"KurrierID");
	kurrierid--;
	KurrierCarTime[kurrierid]--;
 	format(string,sizeof(string),"~g~%d~w~ Minuten",KurrierCarTime[kurrierid]);
 	if(KurrierCarTime[kurrierid] == 1){format(string,sizeof(string),"~r~%d~w~ Minuten",KurrierCarTime[kurrierid]);}
 	if(KurrierCarTime[kurrierid] == 0)
	{
 		if(GetPVarInt(FahrzeugInfo[KurrierCar[kurrierid]][fKurrierCar],"Probefahrt") == 0)
        {
			PlayerTextDrawHide(FahrzeugInfo[KurrierCar[kurrierid]][fKurrierCar],CountdownDraw[FahrzeugInfo[KurrierCar[kurrierid]][fKurrierCar]][0]);
			PlayerTextDrawHide(FahrzeugInfo[KurrierCar[kurrierid]][fKurrierCar],CountdownDraw[FahrzeugInfo[KurrierCar[kurrierid]][fKurrierCar]][1]);
			PlayerTextDrawHide(FahrzeugInfo[KurrierCar[kurrierid]][fKurrierCar],CountdownDraw[FahrzeugInfo[KurrierCar[kurrierid]][fKurrierCar]][2]);
			PlayerTextDrawHide(FahrzeugInfo[KurrierCar[kurrierid]][fKurrierCar],CountdownDraw[FahrzeugInfo[KurrierCar[kurrierid]][fKurrierCar]][3]);
        }
	    KillTimer(KurrierCarTimer[kurrierid]);
	    SpielerInfo[FahrzeugInfo[KurrierCar[kurrierid]][fKurrierCar]][sKurrier] = 1;
		SendClientMessage(FahrzeugInfo[KurrierCar[kurrierid]][fKurrierCar],COLOR_ORANGE,"Das Kurrierfahrzeug konnte nicht rechtzeitig abgeliefert werden.");
  		Kurrierfahrzeug[kurrierid] = false;
		DeleteVehicle(KurrierCar[kurrierid]);
		KurrierCar[kurrierid] = 0;
		if(GetPVarInt(playerid,"KurrierID") == 1){SetPlayerPos(FahrzeugInfo[KurrierCar[kurrierid]][fKurrierCar],777.7709,-1016.0993,26.3594);}
		else if(GetPVarInt(playerid,"KurrierID") == 2){SetPlayerPos(FahrzeugInfo[KurrierCar[kurrierid]][fKurrierCar],-939.2057,1425.2814,30.4340);}
		else if(GetPVarInt(playerid,"KurrierID") == 3){SetPlayerPos(FahrzeugInfo[KurrierCar[kurrierid]][fKurrierCar],2300.4077,1928.9025,10.8417);}
	}
	foreach(new i : Player)
	{
	    if(GetPVarInt(i,"Probefahrt") == 1)continue;
		PlayerTextDrawSetString(i, CountdownDraw[i][3], string);
	}
	return 1;
}

public FrakCarRespawnTimout(Fraktion)
{
	FrakInfo[Fraktion][fiCarRespawn]--;
	if(FrakInfo[Fraktion][fiCarRespawn] == 0)
	{
	    KillTimer(FrakInfo[Fraktion][fiCarRespawnTimer]);
	}
}

public GruppenCarRespawnTimout(Gruppe)
{
	GruppenInfo[Gruppe][gCarRespawn]--;
	if(GruppenInfo[Gruppe][gCarRespawn] == 0)
	{
	    KillTimer(GruppenInfo[Gruppe][gCarRespawnTimer]);
	}
}

public GodmodeCheck(playerid,pID)
{
	if(!IsPlayerConnectedEx(pID))return NichtOnline
	new Float:Leben,string[164];
	GetPlayerHealth(pID,Leben);
	SendClientMessage(pID,COLOR_SUPER,"Godmode Test: Der Godmode Check wurde erfolgreich beendet.");
	SendClientMessage(pID,COLOR_SUPER,"Godmode Test: Das Ergebnis wurde dem Teammitglied übermittelt.");
	format(string,sizeof(string),"Godmode Test: Du hast %s auf Godmode überprüft.",SpielerInfo[pID][sName]);
	SendClientMessage(playerid,COLOR_SUPER,string);
	if(Leben >= 100)
	{
		SendClientMessage(playerid,COLOR_WHITE,"Godmode Test: {00FF00}Positiv{FFFFFF}!");
		SetPlayerHealth(pID,100);
	}
	else
	{
    	SendClientMessage(playerid,COLOR_WHITE,"Godmode Test: {FF0000}Negativ{FFFFFF}!");
    	SetPlayerHealth(pID,100);
	}
	SetPlayerHealth(pID,GetPVarFloat(pID,"GodtestHealth"));
	SetPlayerArmour(pID,GetPVarFloat(pID,"GodtestArmour"));
	DeletePVar(pID,"GodtestHealth");
	DeletePVar(pID,"GodtestArmour");
	return 1;
}

public TrailerBetanken(playerid)
{
    PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
	TogglePlayerControllable(playerid, true);
	if(!AnTankstelle(playerid))
	{
		SendClientMessage(playerid,COLOR_SUPER,"Dein Anhänger wurde erfolgreich aufgetankt. Du kannst die Tankstellen jetzt beliefern.");
		SendClientMessage(playerid,COLOR_INFO,"Hinweis: Benutze '/tankstelleninfo' um den Status der Tankstellen einzusehen.");
		SetCameraBehindPlayer(playerid);
	}
	else
 	{
 	    new merker = false, tsid = GetNearTankstelleID(playerid);
 	    DeletePVar(playerid,"TStelleBetanken");
     	if(GetPVarInt(playerid,"TrailerBetanken") == 1)//Benzin
     	{
     	    new Liter = 10000-TankstellenInfo[tsid][tsBenzinLiter];
			new abzug = GetPVarInt(playerid,"TrailerKapazität")-Liter;
			if(abzug <= 0)
			{
				TankstellenInfo[tsid][tsBenzinLiter] += GetPVarInt(playerid,"TrailerKapazität");
				SetPVarInt(playerid,"TrailerKapazität",0);
  				merker = true;

			}
			else if(abzug > 0)
			{
			    TankstellenInfo[tsid][tsBenzinLiter] += Liter;
			    SetPVarInt(playerid,"TrailerKapazität",abzug);
			}
   			TankstellenInfo[tsid][tsIsFillingB] = 0;
     	}
     	else if(GetPVarInt(playerid,"TrailerBetanken") == 2)//Diesel
     	{
 	    	new Liter = 10000-TankstellenInfo[tsid][tsDieselLiter];
			new abzug = GetPVarInt(playerid,"TrailerKapazität")-Liter;
			if(abzug <= 0)
			{
  				TankstellenInfo[tsid][tsDieselLiter] += GetPVarInt(playerid,"TrailerKapazität");
  				SetPVarInt(playerid,"TrailerKapazität",0);
  				merker = true;
			}
			else if(abzug > 0)
			{
			    TankstellenInfo[tsid][tsDieselLiter] += Liter;
			    SetPVarInt(playerid,"TrailerKapazität",abzug);
			}
			TankstellenInfo[tsid][tsIsFillingD] = 0;
     	}
     	else if(GetPVarInt(playerid,"TrailerBetanken") == 3)//Kerosin
     	{
	    	new Liter = 10000-TankstellenInfo[tsid][tsKerosinLiter];
			new abzug = GetPVarInt(playerid,"TrailerKapazität")-Liter;
			if(abzug <= 0)
			{
  				TankstellenInfo[tsid][tsKerosinLiter] += GetPVarInt(playerid,"TrailerKapazität");
  				SetPVarInt(playerid,"TrailerKapazität",0);
				merker = true;
			}
			else if(abzug > 0)
			{
			    TankstellenInfo[tsid][tsKerosinLiter] += Liter;
			    SetPVarInt(playerid,"TrailerKapazität",abzug);
			}
			TankstellenInfo[tsid][tsIsFillingK] = 0;
     	}
		SaveTankstelleByID(tsid);
	    new string[224];
	    SendClientMessage(playerid,COLOR_YELLOW,">>> Neue Anhänger Kapazität <<<");
	    format(string,sizeof(string),"{FF0000}%d{FFFFFF}L/1000L",GetPVarInt(playerid,"TrailerKapazität"));
	    SendClientMessage(playerid,COLOR_WHITE,string);
	    SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}");
        SendClientMessage(playerid,COLOR_YELLOW,">>> Neue Tankstellen Kapazität <<");
        format(string,sizeof(string),"Benzin: {FF0000}%d{FFFFFF}L/10000L",TankstellenInfo[tsid][tsBenzinLiter]);
    	SendClientMessage(playerid,COLOR_WHITE,string);
     	format(string,sizeof(string),"Diesel: {FF0000}%d{FFFFFF}L/10000L",TankstellenInfo[tsid][tsDieselLiter]);
    	SendClientMessage(playerid,COLOR_WHITE,string);
     	format(string,sizeof(string),"Kerosin: {FF0000}%d{FFFFFF}L/10000L",TankstellenInfo[tsid][tsKerosinLiter]);
    	SendClientMessage(playerid,COLOR_WHITE,string);
    	SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}");
		if(merker)
		{
		    SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}");
		    DeletePVar(playerid,"TruckerAngebot");
		    SendClientMessage(playerid,COLOR_INFO,"Gebe deinen Anhänger am roten Marker ab. Dies ist notwendig, um dein Gehalt zu erhalten.");
		    SetPlayerCheckpointEx(playerid,2153.7937,-2290.0913,13.3805,5.0);
		}
	}
	return 1;
}

public OhneSchein(playerid)
{
	SetPlayerDrunkLevel(playerid, 8000);
}

public Heilen(playerid)
{
	new pID = GetPVarInt(playerid,"Arzt");
 	new Float:Health, string[128];
	GetPlayerHealth(playerid,Health);
	if(!IsPlayerConnectedEx(pID) || GetDistanceBetweenPlayersEx(playerid, pID) > 12)
 	{
 	    DeletePVar(playerid,"Arzt");
 	    DeletePVar(playerid,"HealthPreis");
 	    SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Die Behandlung wurde abgebrochen.");
 	    KillTimer(HealthTimer[playerid]);
 	    KillTimer(HealthTimer[pID]);
 	    return 1;
  	}
  	else
   	{
		if(Health < 100)
  		{
  		    SetPlayerHealth(playerid,Health+7);
			return 1;
		}
		else if(Health == 100 || Health > 100)
		{
		    SetPlayerHealth(playerid,100);
			format(string,sizeof(string),"%s %s hat dich erfolgreich geheilt.",RangName(pID),SpielerInfo[pID][sName]);
			SendClientMessage(playerid,COLOR_SUPER,string);
			format(string,sizeof(string),"Du hast %s erfolgreich geheilt.",SpielerInfo[playerid][sName]);
			SendClientMessage(pID,COLOR_SUPER,string);
			TogglePlayerControllable(playerid, true);
			TogglePlayerControllable(pID,true);
		    KillTimer(HealthTimer[playerid]);
		    KillTimer(HealthTimer[pID]);
		    SpielerInfo[playerid][sLegBroken] = 0;
		    DeletePVar(playerid,"Arzt");
 	    	DeletePVar(playerid,"HealthPreis");
 	    	DeletePVar(pID,"Patient");
 	    	DeletePVar(pID,"HealthPreis");
		    return 1;
		}
	}
	return 1;
}

public Krankenhaus(playerid)
{
    SpielerInfo[playerid][sKrankenhaus] = 0;
    SpielerInfo[playerid][sWiederbeleben] = 0;
    ClearChat(playerid,10);
    TogglePlayerControllable(playerid, true);
    KillTimer(KrankenhausTimer[playerid]);
	if(SpielerInfo[playerid][sHealthInsurance] != -1) {
		SendClientMessage(playerid,COLOR_WHITE,"Du wurdest aus dem Krankenhaus entlassen. Die Behandlung wurde durch deine {FF0000}Krankenversicherung{FFFFFF} übernommen.");
	} else {
		GivePlayerMoneyEx(playerid,-250);
		SendClientMessage(playerid,COLOR_WHITE,"Du wurdest aus dem Krankenhaus entlassen. Die Behandlung kostete dich {FF0000}250${FFFFFF}.");
	}
	if(SpielerInfo[playerid][sFraktion] < 9)//Zivilist
	{
	    SetPlayerSkin(playerid,mysql_GetInt("accounts", "SkinID", "Name", SpielerInfo[playerid][sName]));
	}
	else if(SpielerInfo[playerid][sFraktion] >= 9)//Gang
	{
		new skinid[3], string[25];
		format(skinid,sizeof(skinid),"%d",SpielerInfo[playerid][sFraktion]);
		format(string,sizeof(string),"Rang%d",SpielerInfo[playerid][sRank]);
		SetPlayerSkin(playerid,mysql_GetInt("skinordnung", string, "frakid", skinid));
	}
	Tot_X[playerid] = 0;
	Tot_Y[playerid] = 0;
 	Tot_Z[playerid] = 0;
	Tot_Int[playerid] = 0;
	Tot_World[playerid] = 0;
	SetCameraBehindPlayer(playerid);
	//SetPlayerPos(playerid,1650.8616,-1245.4158,15.4659);
	//SetPlayerFacingAngle(playerid,271.4131);
	SetPlayerVirtualWorld(playerid,0);
	SetPlayerInterior(playerid,0);

	SpawnPlayerEx(playerid);
	return 1;
}

public DeadCountdown(playerid)
{
	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid,x,y,z);
	SpielerInfo[playerid][sWiederbeleben] = 0;
	SpielerInfo[playerid][sKrankenhaus] = 1;
	SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Dr.Maylay{FFFFFF} sagt: Wir haben dich schwer verletzt auf dem Boden gefunden.");
	SendClientMessage(playerid,COLOR_WHITE,"{FF0000}Dr.Maylay{FFFFFF} sagt: Wir werden alles geben, damit du wieder Gesund wirst.");
	SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Du bist für insgesamt 30 Sekunden im Krankenhaus.");
	SetPlayerPos(playerid,1157.0767,-1333.8702,-0.8598);
	SetPlayerInterior(playerid,0);
	SetPlayerVirtualWorld(playerid,0);
	TogglePlayerControllable(playerid, false);
	InterpolateCameraPos(playerid, 1218.753417, -1390.132690, 27.705785, 1213.214477, -1286.707763, 21.138881, 30000);
	InterpolateCameraLookAt(playerid, 1215.090942, -1387.057373, 26.246854, 1209.218261, -1289.590820, 20.291431, 30000);
	KillTimer(KrankenhausTimer[playerid]);
	KrankenhausTimer[playerid] = SetTimerEx("Krankenhaus",30000,false,"i",playerid);
	KillTimer(FallPlayerTimer[playerid]);
   	KillTimer(DeadTimer[playerid]);

 	ResetPlayerDuty(playerid);
}

public FallPlayer(playerid)
{
	SetPlayerPos(playerid, Tot_X[playerid], Tot_Y[playerid], Tot_Z[playerid]);
	SetPlayerInterior(playerid, Tot_Int[playerid]);
	SetPlayerVirtualWorld(playerid, Tot_World[playerid]);
	ApplyAnimationEx(playerid,"PED","KO_skid_front",4.1,false,true,true,true,0);
}

public Reanimation(playerid)
{
	ClearAnimations(playerid, SYNC_NONE);
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 2.0, false, false, false, false, 0);
	SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Du wurdest wiederbelebt.");
	TogglePlayerControllable(GetPVarInt(playerid,"Lebensretter"), true);
	TogglePlayerControllable(playerid, true);
	SetCameraBehindPlayer(playerid);
	return 1;
}

public PayDay(playerid)
{
    SpielerInfo[playerid][sPlayedTimeToday] += 1;
    if(Afk[playerid] < 1)
    {
		new string[264], GehaltRang[32];
		SpielerInfo[playerid][sPayDay]++;
		if(SpielerInfo[playerid][sPayDay] > 44)
		{
		    if(SpielerInfo[playerid][sBankAngelegt] > 0){SpielerInfo[playerid][sBankAngelegt] -= 1;}
		    strdel(AllPaycheckstring[playerid],0,1024);
		    SetPVarInt(playerid,"HatPayDayGehabt",1);
		    new OldGiro = SpielerInfo[playerid][sBankkonto];
		    GameTextForPlayer(playerid,"~g~Zahltag",2000,1);
		    SpielerInfo[playerid][sPayDay] = 0;

		    if(SpielerInfo[playerid][sAchivJobGehalt] < 1 && SpielerInfo[playerid][sPayDayGeld] > 10000)
		    {
		        ShowAchievement(playerid,"Erreiche ein Nebenjob-Gehalt von $10k","+ 150 EXP");
		        GivePlayerEXP(playerid,150);
		        SpielerInfo[playerid][sAchivJobGehalt] = 1;
		    }

   			if(SpielerInfo[playerid][sVIP] == 0){GivePlayerEXP(playerid,25);}
   			else if(SpielerInfo[playerid][sVIP] > 0){GivePlayerEXP(playerid,50);}
		    if(SpielerInfo[playerid][sNebenjob] != 0 && SpielerInfo[playerid][sVIP] <= 0)
			{
				if(SpielerInfo[playerid][sQuitJob] < 7) {
					SpielerInfo[playerid][sQuitJob]++;
				}
			}
		 	if(SpielerInfo[playerid][sKurrier] == 1)
	   		{
	        	SendClientMessage(playerid,COLOR_YELLOW,"[Payday]: {FFFFFF}Du kannst nun wieder die Kurrier Mission ausüben.");
	        	SpielerInfo[playerid][sKurrier] = 0;
		 	}
			if(SpielerInfo[playerid][sFraktion] != 0)
			{
			    new FrakID[3], Gehalt;
				if(SpielerInfo[playerid][sTeam] == 0)
			    {
				    format(GehaltRang,sizeof(GehaltRang),"Gehalt_Rang%d",SpielerInfo[playerid][sRank]);
				    format(FrakID,sizeof(FrakID),"%d",SpielerInfo[playerid][sFraktion]);
				    Gehalt = mysql_GetInt("frakinfos", GehaltRang, "FID", FrakID);
			    }
			    else if(SpielerInfo[playerid][sTeam] > 0)
			    {
			    	format(GehaltRang,sizeof(GehaltRang),"Gehalt_TRang%d",SpielerInfo[playerid][sRank]);
				    format(FrakID,sizeof(FrakID),"%d",SpielerInfo[playerid][sFraktion]);
				    Gehalt = mysql_GetInt("frakinfos", GehaltRang, "FID", FrakID);
			    }
			    if(FrakInfo[SpielerInfo[playerid][sFraktion]][fiFrakKasse] >= Gehalt)
			    {
			        if(SpielerInfo[playerid][sBankPin] == 0)
			        {
			            GivePlayerMoneyEx(playerid,Gehalt);
			            FrakInfo[SpielerInfo[playerid][sFraktion]][fiFrakKasse] -= Gehalt;
	  				    format(string,sizeof(string),"Fraktionsgehalt: %d$\n",Gehalt);
						strcat(AllPaycheckstring[playerid],string,1024);
			        }
			        else
			        {
					    SpielerInfo[playerid][sBankkonto] += Gehalt;
					    FrakInfo[SpielerInfo[playerid][sFraktion]][fiFrakKasse] -= Gehalt;
					    format(string,sizeof(string),"Fraktionsgehalt: %d$\n",Gehalt);
					    strcat(AllPaycheckstring[playerid],string,1024);
					    if(Gehalt > 0)
					    {
					        new Uhrzeit[16], Datum[16], payDayTrans[7];
							new payDayTransTime = gettime(payDayTrans[0], payDayTrans[1], payDayTrans[2]);
							getdate(payDayTrans[3], payDayTrans[4], payDayTrans[5]);
							format(Uhrzeit,sizeof(Uhrzeit),"%02d:%02d:%02d",payDayTrans[0],payDayTrans[1],payDayTrans[2]);
							format(Datum,sizeof(Datum),"%02d.%02d.%d",payDayTrans[5],payDayTrans[4],payDayTrans[3]);
							new query[600];
							mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO zz_colucp_transactions (Kontoinhaber, Sender, Betrag, Verwendungszweck, Datum, Uhrzeit, serv_Data) VALUES ('%s', '%s', '%i', 'Fraktionsgehalt', '%s', '%s', '%i')",SpielerInfo[playerid][sName],FrakName(SpielerInfo[playerid][sFraktion]),Gehalt,Datum,Uhrzeit,payDayTransTime);
						    mysql_tquery(sqlHandle, query);
					    }
					}
				}
				else
				{
	   				format(string,sizeof(string),"Fraktionsgehalt: Nicht genügend Geld in der Fraktionskasse\n",Gehalt);
	   				strcat(AllPaycheckstring[playerid],string,1024);
				}
			}
			if(SpielerInfo[playerid][sGruppe] != 0)
			{
				if(GruppenInfo[SpielerInfo[playerid][sGruppe]][gUpgrade][0] == 1)
				{
				    new gid[2], gruppenid = SpielerInfo[playerid][sGruppe];
				    format(GehaltRang,sizeof(GehaltRang),"Gehalt_Rang%d",SpielerInfo[playerid][sGRank]);
				    format(gid,sizeof(gid),"%d",SpielerInfo[playerid][sGruppe]);
				    new Gehalt2 = mysql_GetInt("gruppen", GehaltRang, "ID", gid);
				    if(GruppenInfo[gruppenid][gKasse] >= Gehalt2)
				    {
				        if(SpielerInfo[playerid][sBankPin] == 0)
				        {
				            GruppenInfo[gruppenid][gKasse] -= Gehalt2;
		  				    format(string,sizeof(string),"Gruppengehalt: %d$\n",Gehalt2);
		  				    strcat(AllPaycheckstring[playerid],string,1024);
				        }
				        else
				        {
						    GruppenInfo[gruppenid][gKasse] -= Gehalt2;
						    format(string,sizeof(string),"Gruppengehalt: %d$\n",Gehalt2);
						    strcat(AllPaycheckstring[playerid],string,1024);
						    if(Gehalt2 > 0)
						    {
						        new Uhrzeit[16], Datum[16], payDayTrans[7];
								new payDayTransTime = gettime(payDayTrans[0], payDayTrans[1], payDayTrans[2]);
								getdate(payDayTrans[3], payDayTrans[4], payDayTrans[5]);
								format(Uhrzeit,sizeof(Uhrzeit),"%02d:%02d:%02d",payDayTrans[0],payDayTrans[1],payDayTrans[2]);
								format(Datum,sizeof(Datum),"%02d.%02d.%d",payDayTrans[5],payDayTrans[4],payDayTrans[3]);
								new query[600];
								mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO zz_colucp_transactions (Kontoinhaber, Sender, Betrag, Verwendungszweck, Datum, Uhrzeit, serv_Data) VALUES ('%s', 'Gruppe', '%i', 'Gruppengehalt', '%s', '%s', '%i')",SpielerInfo[playerid][sName],Gehalt2,Datum,Uhrzeit,payDayTransTime);
								mysql_tquery(sqlHandle, query);
							}
						}
					}
					else
					{
		   				format(string,sizeof(string),"Gruppengehalt: Nicht genügend Geld in der Gruppenkasse\n",Gehalt2);
		   				strcat(AllPaycheckstring[playerid],string,1024);
					}
				}
			}
			if(SpielerInfo[playerid][sNebenjob] != 0 || SpielerInfo[playerid][sPayDayGeld] > 0)
			{
			    SpielerInfo[playerid][sBankkonto] += SpielerInfo[playerid][sPayDayGeld];

			    if(SpielerInfo[playerid][sPayDayGeld] > 0)
			    {
			        new Uhrzeit[16], Datum[16], payDayTrans[7];
					new payDayTransTime = gettime(payDayTrans[0], payDayTrans[1], payDayTrans[2]);
					getdate(payDayTrans[3], payDayTrans[4], payDayTrans[5]);
					format(Uhrzeit,sizeof(Uhrzeit),"%02d:%02d:%02d",payDayTrans[0],payDayTrans[1],payDayTrans[2]);
					format(Datum,sizeof(Datum),"%02d.%02d.%d",payDayTrans[5],payDayTrans[4],payDayTrans[3]);
					new query[600];
					mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO zz_colucp_transactions (Kontoinhaber, Sender, Betrag, Verwendungszweck, Datum, Uhrzeit, serv_Data) VALUES ('%s', 'Staatskasse', '%i', 'Nebenjobgehalt', '%s', '%s', '%i')",SpielerInfo[playerid][sName],SpielerInfo[playerid][sPayDayGeld],Datum,Uhrzeit,payDayTransTime);
				    mysql_tquery(sqlHandle, query);
				}

			    SpielerInfo[playerid][sPayDayGeld] = 0;
			}
			if(SpielerInfo[playerid][sBankPin] != 0)
			{
			    format(string,sizeof(string),"Girokonto vorher: %d$ Jetzt/Neu: %d$ (+%d$ insgesamt)\n",OldGiro,SpielerInfo[playerid][sBankkonto],SpielerInfo[playerid][sBankkonto]-OldGiro);
                strcat(AllPaycheckstring[playerid],string,1024);
		    }
		    if(SpielerInfo[playerid][sTankstelle] != 0)
			{
			    new biztax = floatround(TankstellenInfo[SpielerInfo[playerid][sTankstelle]][tsKasse] / GovVars[govSteuern]);
	  			format(string,128,"Geschäftskonto (Tankstelle):	%d$ (-%d$ Steuern - Stand: %d$)\n",TankstellenInfo[SpielerInfo[playerid][sTankstelle]][tsKasse],biztax,TankstellenInfo[SpielerInfo[playerid][sTankstelle]][tsKasse]-biztax);
	  			strcat(AllPaycheckstring[playerid],string,1024);
	  			TankstellenInfo[SpielerInfo[playerid][sTankstelle]][tsKasse] -= biztax;
			}
	  		if(SpielerInfo[playerid][sAmmunation] != 0)
			{
			    new biztax = floatround(AmmunationInfo[SpielerInfo[playerid][sAmmunation]][amKasse] / GovVars[govSteuern]);
				format(string,128,"Geschäftskonto (Ammunation):	%d$ (-%d$ Steuern - Stand: %d$)\n",AmmunationInfo[SpielerInfo[playerid][sAmmunation]][amKasse],biztax,AmmunationInfo[SpielerInfo[playerid][sAmmunation]][amKasse]-biztax);
				strcat(AllPaycheckstring[playerid],string,1024);
				AmmunationInfo[SpielerInfo[playerid][sAmmunation]][amKasse] -= biztax;
			}
			if(SpielerInfo[playerid][sStore] != 0)
			{
			    new biztax = floatround(StoreInfo[SpielerInfo[playerid][sStore]][siKasse] / GovVars[govSteuern]);
				format(string,128,"Geschäftskonto (24/7): %d$ (-%d$ Steuern - Stand: %d$)\n",StoreInfo[SpielerInfo[playerid][sStore]][siKasse],biztax,StoreInfo[SpielerInfo[playerid][sStore]][siKasse]-biztax);
				strcat(AllPaycheckstring[playerid],string,1024);
				StoreInfo[SpielerInfo[playerid][sStore]][siKasse] -= biztax;
			}
			if(SpielerInfo[playerid][sBankPin] != 0)
			{
			    new payedtaxes = 0;
			    if(SpielerInfo[playerid][sVIP] > 0)//Donator Vorteile
			    {
			        payedtaxes = floatround(SpielerInfo[playerid][sBankkonto] / GovVars[govSteuern]+10);
			    }
				else payedtaxes = floatround(SpielerInfo[playerid][sBankkonto] / GovVars[govSteuern]);

				if(SpielerInfo[playerid][sHaus] > 0)
				{
				    new HausSteuer = floatround(HausInfo[SpielerInfo[playerid][sHaus]][hsPreis] / GovVars[govSteuernHaus]);
				    SpielerInfo[playerid][sBankkonto] -= HausSteuer;
				    format(string,128,"Steuern für das Haus: -%d$ Steuern\n",HausSteuer);
					strcat(AllPaycheckstring[playerid],string,1024);
					GovVars[govKasse] += HausSteuer;
				}

				new stVehSteuerAnzahl = 0;
				for(new stVeh = 0; stVeh < MAX_VEHICLES; stVeh++)
				{
					if(FahrzeugInfo[stVeh][fDatabaseID] == 0) continue;
					if(FahrzeugInfo[stVeh][fBesitzerID] == -1) continue;
				    if(FahrzeugInfo[stVeh][fBesitzerID] != playerid)continue;
				    stVehSteuerAnzahl++;
				}
				if(stVehSteuerAnzahl > 0)
				{
				    new stVehSteuerDollar = floatround(stVehSteuerAnzahl * GovVars[govSteuernKFZ]);
				    SpielerInfo[playerid][sBankkonto] -= stVehSteuerDollar;
				    format(string,128,"KFZ-Steuer (Fahr & Flugzeuge): -%d$ Steuern\n",stVehSteuerDollar);
					strcat(AllPaycheckstring[playerid],string,1024);
					GovVars[govKasse] += stVehSteuerDollar;
				}


				if(SpielerInfo[playerid][sBankkonto] < 200001)
				{
					new Float:getZinsen = 0;
					if(SpielerInfo[playerid][sVIP] > 0){getZinsen = SpielerInfo[playerid][sBankkonto] / 100 * 0.8;}//Donator Vorteile
					else{getZinsen = SpielerInfo[playerid][sBankkonto] / 100 * 0.5;}
					SpielerInfo[playerid][sBankkonto] += floatround(getZinsen);
					format(string,sizeof(string),"Zinsen: Du hast $%d Zinsen auf dein Bankkonto erhalten.\n",floatround(getZinsen));
					strcat(AllPaycheckstring[playerid],string,1024);
				}
				else
				{
					new Float:getZinsen = 0;
					if(SpielerInfo[playerid][sVIP] > 0){getZinsen = 200000 / 100 * 0.8;}//Donator Vorteile
					else{getZinsen = 200000 / 100 * 0.5;}
					SpielerInfo[playerid][sBankkonto] += floatround(getZinsen);
					format(string,sizeof(string),"Zinsen: Du hast $%d Zinsen auf dein Bankkonto erhalten (maximal 200.000$ werden verzinst).\n",floatround(getZinsen));
					strcat(AllPaycheckstring[playerid],string,1024);
				}

			    SpielerInfo[playerid][sBankkonto] -= payedtaxes;
			    GovVars[govKasse] += payedtaxes;
                format(string,sizeof(string),"Grundsteuersatz: dividiert durch %d - Gezahlte Steuern: %d$\n",GovVars[govSteuern],payedtaxes);
                strcat(AllPaycheckstring[playerid],string,1024);

                if(payedtaxes > 0)
			    {
			        new Uhrzeit[16], Datum[16], payDayTrans[7];
					payDayTrans[6] = gettime(payDayTrans[0], payDayTrans[1], payDayTrans[2]);
					getdate(payDayTrans[3], payDayTrans[4], payDayTrans[5]);
					format(Uhrzeit,sizeof(Uhrzeit),"%02d:%02d:%02d",payDayTrans[0],payDayTrans[1],payDayTrans[2]);
					format(Datum,sizeof(Datum),"%02d.%02d.%d",payDayTrans[5],payDayTrans[4],payDayTrans[3]);
					new query[600];
					mysql_format(sqlHandle, query, sizeof(query), "INSERT INTO zz_colucp_transactions (Kontoinhaber, Sender, Betrag, Verwendungszweck, Datum, Uhrzeit, serv_Data) VALUES ('Staatskasse', '%s', '%i', 'Steuern', '%s', '%s', '%i')",SpielerInfo[playerid][sName],payedtaxes,Datum,Uhrzeit,payDayTrans[6]);
					mysql_tquery(sqlHandle, query);
				}

				if(SpielerInfo[playerid][sHealthInsurance] != -1) {
					if(SpielerInfo[playerid][sHealthInsuranceTime] > gettime()) {
						SpielerInfo[playerid][sBankkonto] -= HealthInsuranceCosts[SpielerInfo[playerid][sHealthInsurance]];
						format(string,sizeof(string),"Krankenversicherung: -%i$.\n", HealthInsuranceCosts[SpielerInfo[playerid][sHealthInsurance]]);
						strcat(AllPaycheckstring[playerid],string,1024);
						FrakInfo[5][fiFrakKasse] -= HealthInsuranceCosts[SpielerInfo[playerid][sHealthInsurance]];
					} else {
						SpielerInfo[playerid][sHealthInsurance] = -1;
						SpielerInfo[playerid][sHealthInsuranceTime] = 0;
					}
				}

				format(string,sizeof(string),"\n{FFFFFF}Endgültiger neuer Kontostand: $%d\n",SpielerInfo[playerid][sBankkonto]);
                strcat(AllPaycheckstring[playerid],string,1024);
/*
				if(SpielerInfo[playerid][sAdmin] > 0)
				{
				    SendClientMessage(playerid,COLOR_SUPER,"[Payday]: Da du ein Teammitglied bist, bekommst du +$500 als Aufwandsentschädigung.");
				    GivePlayerMoneyEx(playerid,500);
				}*/
			}
		    if(GetPlayerWantedLevelEx(playerid) != 0)
		    {
				SetPlayerWantedLevelEx(playerid,GetPlayerWantedLevelEx(playerid)-1);
				format(string,128,"Aktuelles Wantedlevel gesunken: Noch %d Wanted(s) verbleibend.",GetPlayerWantedLevelEx(playerid));
				SendClientMessage(playerid,COLOR_YELLOW,string);
		    }
		    SendClientMessage(playerid,COLOR_YELLOW,"[Payday]: {FFFFFF}Du hast soeben deinen Payday erhalten. Benutze '/payday' zum prüfen.");
		    new lvlbonus[128];
		    format(lvlbonus,sizeof(lvlbonus),"[Payday]: {FFFFFF}Dein Levelbonus von '$%d' wurde dir BAR auf die Hand gegeben.",GetPlayerScore(playerid) * 100);
		    SendClientMessage(playerid,COLOR_YELLOW,lvlbonus);
		    GivePlayerMoneyEx(playerid,GetPlayerScore(playerid) * 100);
		}
		if(SpielerInfo[playerid][stvoCarLic] > 0){SpielerInfo[playerid][stvoCarLic] -= 1;}
		if(SpielerInfo[playerid][stvoBikeLic] > 0){SpielerInfo[playerid][stvoBikeLic] -= 1;}
		if(SpielerInfo[playerid][stvoFlugLic] > 0){SpielerInfo[playerid][stvoFlugLic] -= 1;}
		if(SpielerInfo[playerid][stvoTruckLic] > 0){SpielerInfo[playerid][stvoTruckLic] -= 1;}
		if(SpielerInfo[playerid][stvoBootLic] > 0){SpielerInfo[playerid][stvoBootLic] -= 1;}
		UpdatePayDayTextdraw(playerid);
	}
	return 1;
}

public RobBarT(playerid)
{
	if(RobBarValue[playerid] < 409.000000)
	{
	    RobBarValue[playerid] += 3.000000;
	    if(RobBarValue[playerid] > 409.000000)
	    {
	        RobBarValue[playerid] = 409.000000;
	    }
	    PlayerTextDrawHide(playerid,RobBar[playerid][1]);
    	PlayerTextDrawTextSize(playerid,RobBar[playerid][1], RobBarValue[playerid], -1.000000);
    	PlayerTextDrawShow(playerid, RobBar[playerid][1]);
	}
	else
	{
	    new money = 4000+random(8500);
	    GovVars[govKasse] -= money;
	    SendClientMessage(playerid,COLOR_SUPER,"Der Raub war erfolgreich. Bringe nun das Geld schnell zum Abgabepunkt!");
	    SetPlayerCheckpointEx(playerid,375.8552,-2054.8748,8.0156,5.0);
	    SetPVarInt(playerid,"GeldImGeldsack",money);
		SetPVarInt(playerid,"HatGeldsack",1);
		SetPlayerAttachedObject(playerid,ATTACH_INDEX_GELDSACK,1550,1,0.070999,-0.285000,0.016999,3.200000,84.000015,0.699999,0.913000,0.907999,0.778000);
		PlayerTextDrawHide(playerid,RobBar[playerid][0]);
		PlayerTextDrawHide(playerid,RobBar[playerid][1]);
		PlayerTextDrawHide(playerid,RobBar[playerid][2]);
		KillTimer(RobBarTimer[playerid]);
		RobBarValue[playerid] = 0;
	}
	return 1;
}

public TimeToRob(playerid)
{
    RobBarAllowed[playerid] = 0;
	return 1;
}

public KickPlayer(playerid, const string[])
{
	SetPVarInt(playerid,"BeKicked",0);
	SetTimerEx("KickTimer",100,false,"i",playerid);
	if(strlen(string) < 2)
	{
	    new kick[128];
	    format(kick,sizeof(kick),"%s wurde vom System gekickt.",SpielerInfo[playerid][sName]);
	    CreateServerLogEntry("KICK_LOG", kick);
	}
	else {CreateServerLogEntry("KICK_LOG", string);}
	return 1;
}

public SendAdminMessage(color,const message[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnectedEx(i) && SpielerInfo[i][sAdmin] > 0)
		{
			//SendClientMessage(i,color,message);
			SendSplitMessage(i,color,message);
		}
	}
	return 1;
}

public GetPlayerSpeed(playerid)
{
	if(playerid == INVALID_PLAYER_ID)return 0;
	if(IsPlayerInAnyVehicle(playerid))
	{
		GetVehicleVelocity(GetPlayerVehicleID(playerid),KMHPos[playerid][0],KMHPos[playerid][1],KMHPos[playerid][2]);
	}
	new Float:Speed = floatsqroot(KMHPos[playerid][0]*KMHPos[playerid][0] + KMHPos[playerid][1]*KMHPos[playerid][1] + KMHPos[playerid][2]*KMHPos[playerid][2]);
	return floatround(Speed * 100 * 1.61);
}

public AntiSDMFunction(playerid)
{
	TogglePlayerControllable(playerid,true);
	KillTimer(SDMTimer[playerid]);
	return 1;
}

public EndIPBan(playerid){Ban(playerid);}

public ServerNews()
{
	if(ServerNewsVar == 0)
	{
	    SendClientMessageToAll(COLOR_WHITE," ");
	    SendClientMessageToAll(COLOR_YELLOW,""SERV_NAME" - Zwischennachricht");
	    SendClientMessageToAll(COLOR_WHITE,"Schon gewusst? Du kannst den Server Unterstützen. In dem du eine kleine Spende an den Server gibst.");
	    SendClientMessageToAll(COLOR_WHITE,"Dafür kannst du einfach den Shop in unserem User Control Panel aufsuchen.");
	    SendClientMessageToAll(COLOR_WHITE," ");
	    ServerNewsVar++;
	}
	else if(ServerNewsVar == 1)
	{
	    SendClientMessageToAll(COLOR_WHITE," ");
	    SendClientMessageToAll(COLOR_YELLOW,""SERV_NAME" - Zwischennachricht");
	    SendClientMessageToAll(COLOR_WHITE,"Du kannst fast alle Läden ausrauben oder ein hochattraktives Lotto-System spielen.");
	    SendClientMessageToAll(COLOR_WHITE,"Alles zu 'neu'? Fetz dich in die PaintBall-Arena und mach dir einen Namen.");
	    SendClientMessageToAll(COLOR_WHITE," ");
	    ServerNewsVar++;
	}
	else if(ServerNewsVar == 2)
	{
	    SendClientMessageToAll(COLOR_WHITE," ");
	    SendClientMessageToAll(COLOR_YELLOW,""SERV_NAME" - Zwischennachricht");
	    SendClientMessageToAll(COLOR_WHITE,"Der San Andreas Medical Department kann dir ein Erste-Hilfe-Paket verkaufen.");
	    SendClientMessageToAll(COLOR_WHITE,"Mit diesem Paket kannst du dich überall und jederzeit auf 150 HP heilen!");
	    SendClientMessageToAll(COLOR_WHITE," ");
	    ServerNewsVar++;
	}
	else if(ServerNewsVar == 3)
	{
	    SendClientMessageToAll(COLOR_WHITE," ");
	    SendClientMessageToAll(COLOR_YELLOW,""SERV_NAME" - Zwischennachricht");
	    SendClientMessageToAll(COLOR_WHITE,"Im Forum findest du jederzeit unsere Changelogs und wichtige Ankündigungen.");
	    SendClientMessageToAll(COLOR_WHITE,"");
	    SendClientMessageToAll(COLOR_WHITE," ");
	    ServerNewsVar = 0;
	}
}

public PilotRoute(playerid)
{
	TogglePlayerControllable(playerid, true);
	if(GetPVarInt(playerid,"PilotArbeitet") == 1)
	{
 		SetPVarInt(playerid,"PilotArbeitet",2);
	    SendClientMessage(playerid,COLOR_SUPER,"Das Flugzeug wurde beladen. Bringe die Ware zum San Fierro Airport.");
	    SetPlayerCheckpointEx(playerid,-1642.5271,-149.6707,14.8681,7.0);
	    return 1;
	}
	else if(GetPVarInt(playerid,"PilotArbeitet") == 2)
	{
	    SetPVarInt(playerid,"PilotArbeitet",3);
	    SendClientMessage(playerid,COLOR_SUPER,"Das Flugzeug wurde beladen. Bringe die Ware zum Las Venturas Airport.");
	    SetPlayerCheckpointEx(playerid,1388.8792,1683.4226,11.5457,7.0);
	    return 1;
	}
	else if(GetPVarInt(playerid,"PilotArbeitet") == 3)
	{
	    SetPVarInt(playerid,"PilotArbeitet",4);
	    SendClientMessage(playerid,COLOR_SUPER,"Das Flugzeug wurde beladen. Bringe die Ware zum Los Santos Airport.");
	    SetPlayerCheckpointEx(playerid,2061.6660,-2593.2915,14.2723,7.0);
	    return 1;
	}
	return 1;
}

public CameraFahrten(playerid)
{
    KillTimer(CamFahrten[playerid]);
	if(GetPVarInt(playerid,"CamFahrt") == 0)//FBI Base
	{
	    InterpolateCameraPos(playerid, -2118.856201, 334.437530, 92.006568, -2138.267822, 191.594757, 72.065650, 10000);
		InterpolateCameraLookAt(playerid, -2122.397216, 331.727752, 94.268913, -2140.997314, 195.449249, 70.424758, 10000);
		SetPVarInt(playerid,"CamFahrt",1);
		return 1;
	}
	else if(GetPVarInt(playerid,"CamFahrt") == 1)//LS Stadthalle
	{
	    InterpolateCameraPos(playerid, 1365.949462, -1731.150146, 52.851879, 1504.315917, -1717.744018, 24.425392, 10000);
		InterpolateCameraLookAt(playerid, 1370.783935, -1731.203613, 51.577049, 1501.608154, -1721.939941, 24.175498, 10000);
	    SetPVarInt(playerid,"CamFahrt",2);
	    return 1;
	}
	else if(GetPVarInt(playerid,"CamFahrt") == 2)//LS Ammunation
	{
	    InterpolateCameraPos(playerid, 1346.778320, -1504.113525, 57.420509, 1335.881958, -1268.780395, 15.793972, 10000);
		InterpolateCameraLookAt(playerid, 1346.864135, -1499.293823, 56.092876, 1340.156250, -1271.351440, 16.141666, 10000);
 		SetPVarInt(playerid,"CamFahrt",3);
	    return 1;
	}
	else if(GetPVarInt(playerid,"CamFahrt") == 3)//LS Police
	{
		InterpolateCameraPos(playerid, 1510.096435, -1732.273437, 42.812564, 1514.012817, -1585.462646, 55.850650, 10000);
		InterpolateCameraLookAt(playerid, 1513.704345, -1729.464111, 40.790184, 1516.362182, -1589.218627, 53.532752, 10000);
 		DeletePVar(playerid,"CamFahrt");
	    return 1;
	}
	return 1;
}

public FreikaufKeyWeg(playerid)
{
	DeletePVar(playerid,"FreikaufSchluessel");
	SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Du hast ab sofort kein Zugang mehr zur OAmt-Schranke.");
	return 1;
}

public _ImportCarTimer()
{
	ImportCar = true;
	return 1;
}

public BombTorTimer()
{
    SendCopMessage(COLOR_BLUE,"ZENTRALE: AN ALLE EINHEITEN !!DAS TOR IN DER AREA 51 WURDE REPARIERT.");
	BombenTor = CreateObject(971, 283.05493, 1868.84778, 7.75518,   0.00000, 0.00000, 269.82675);
	BombenTorHealth = 10000;
	return 1;
}

public BombTimer(playerid)
{
	new string[144];
	if(GetPVarInt(playerid,"BombCountdown") >= 1)
	{
		SetPVarInt(playerid,"BombCountdown",GetPVarInt(playerid,"BombCountdown")-1);
		format(string,sizeof(string),"Bombe explodiert in~n~~r~%d sec",GetPVarInt(playerid,"BombCountdown"));
		GameTextForPlayer(playerid, string, 1000, 5);
		return 1;
	}
	else
	{
	    KillTimer(BombenTimer[playerid]);
	    GameTextForPlayer(playerid, "~r~Bombe explodiert!", 1000, 5);
 		SpielerInfo[playerid][sBombe] = 0;
 		new Float:Pos[3], bombID = GetPVarInt(playerid,"BombID");
		GetObjectPos(bombID,Pos[0],Pos[1],Pos[2]);
 		CreateExplosion(Pos[0],Pos[1],Pos[2],1,5.0);
		if(GetDistanceBetweenObjects(bombID, LSPDSchranke) <= 5)
		{
 		    DestroyDynamicObject(LSPDSchranke);
 		    LSPDSchrankeZ = 600;
			SendClientMessage(playerid,COLOR_SUPER,"Die Schranke vom LSPD wurde zerstört.");
 		}
		else if(GetDistanceBetweenObjects(bombID, LSPDGarage) <= 5)
		{
 		    DestroyDynamicObject(LSPDGarage);
 		    LSPDGarageZ = 600;
			SendClientMessage(playerid,COLOR_SUPER,"Das Tor zur LSPD Garage wurde gesprengt.");
 		}
		else if(GetDistanceBetweenObjects(bombID, FBITor) <= 5)
		{
 		    DestroyObject(FBITor);
 		    FBITorZ = 600;
			SendClientMessage(playerid,COLOR_SUPER,"Das FBI Tor wurde gesprengt.");
 		}
		else if(GetDistanceBetweenObjects(bombID, RussenTor) <= 5)
		{
 		    DestroyObject(RussenTor);
 		    RussenTorZ = 600;
			SendClientMessage(playerid,COLOR_SUPER,"Das Tor von der Russen Mafia wurde gesprengt.");
 		}
 		DeletePVar(playerid,"BombCountdown");
 		DeletePVar(playerid,"BombID");
 		DestroyObject(bombID);
 		return 1;
	}
}

public TorStatus()
{
	if(LSPDGarageZ > 1)
	{
	    LSPDGarageZ--;
	}
	else if(LSPDGarageZ == 1)
	{
	    LSPDGarage = CreateDynamicObject(969,1593.3000500,-1638.0999800,12.5000000,0.0000000,0.0000000,180.0000000); //object(LSPD Tor)
	    LSPDGarageZ = 0;
	}
	if(LSPDSchrankeZ > 1)
	{
	    LSPDSchrankeZ--;
	}
	else if(LSPDSchrankeZ == 1)
	{
 		LSPDSchranke = CreateDynamicObject(968,1544.6999500,-1630.9000200,13.1000000,0.0000000,270.0000000,270.0000000); //object(barrierturn) (1)
	    LSPDSchrankeZ = 0;
	}
	if(FBITorZ > 1)
	{
	    FBITorZ--;
	}
	else if(FBITorZ == 1)
	{
	    FBITor = CreateDynamicObject(2990, -2168.68530, 249.60730, 36.57600,   0.00000, 0.00000, 90.00000);
	    FBITorZ = 0;
	}
	if(RussenTorZ > 1)
	{
	    RussenTorZ--;
	}
	else if(RussenTorZ == 1)
	{
	    RussenTor = CreateDynamicObject(988,321.191,-1187.818,75.783,0.000,0.000,38.177);
	    RussenTorZ = 0;
	}
	return 1;
}

public Afktimered(playerid)
{
    if(GetPVarInt(playerid,"LoggedIn") == 1 && IsPlayerConnectedEx(playerid))
    {
        if(Afk[playerid] == 1)return 1;
        if(GetPVarInt(playerid,"AdminDuty") > 0)return 1;
        if(afktimedrestka[playerid] <= 0)
        {
            new Float:X,Float:Y,Float:Z;
            GetPlayerPos(playerid,X,Y,Z);
            AfkX[playerid] = X;
            AfkY[playerid] = Y;
            AfkZ[playerid] = Z;
            afktimedrestka[playerid] += 1;
        }
        if(afktimedrestka[playerid] >= 1)
        {
            if(IsPlayerInRangeOfPoint(playerid,3,AfkX[playerid],AfkY[playerid],AfkZ[playerid]))
            {
                if(Afk[playerid] == 0)
                {
                    if(afktimedrestka[playerid] < 9)
                    {
                        afktimedrestka[playerid] += 1;
                    }
                    else
                    {
						Afk[playerid] = 1;
						new hour,minute,second;
						new string1[10];
						gettime(hour,minute,second);
						format(string1, sizeof string1, "%s%d:%s%d:%s%d", (hour < 10) ? ("0") : (""), hour, (minute < 10) ? ("0") : (""), minute, (second < 10) ? ("0") : (""), second);
						new string[125];
						format(string,sizeof(string),"* Spieler ist Abwesend seit [{FF0000}%s{FFFFFF}] *",string1);
						Afklabel[playerid] = Create3DTextLabel(string, COLOR_WHITE, 30.0, 40.0, 0.3, 20.0, playerid);
						Attach3DTextLabelToPlayer(Afklabel[playerid], playerid, 0.0, 0.0, 0.4);
						TogglePlayerControllable(playerid, false);
						afktimedrestka[playerid]=0;
						SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF} Du bist nun Abwesend gemeldet. Benutze '/back'");
						TextDrawShowForPlayer(playerid, StatusAFK);
						SetPVarInt(playerid,"IsAutoAFK",1);
					}
   				}
  			}
     		else
       		{
         		afktimedrestka[playerid] -= 1;
           	}
		}
	}
    return 1;
}

public LoadScreen(playerid, vehicleid)
{
	ClearChat(playerid,10);
	new Float:_tempVehPos[3];
	GetVehicleBoot(vehicleid, _tempVehPos[0], _tempVehPos[1], _tempVehPos[2]);
	SetPlayerPos(playerid, _tempVehPos[0], _tempVehPos[1], _tempVehPos[2]);
	SetPlayerAttachedObject(playerid, 0,1210,6,0.303294, 0.081651, 0.010630, 0.000000, 270.000000, 0.000000);
	ApplyAnimation(playerid,"DEALER","DRUGS_BUY", 4.0, true, false, false, false, 0);
	SetVehicleParamsCarDoors(vehicleid,false,false,true,true);
	PlayerTextDrawHide(playerid,LoadingScreen[playerid][0]);
	PlayerTextDrawHide(playerid,LoadingScreen[playerid][1]);
	InterpolateCameraPos(playerid, 1631.411621, -1887.614990, 17.074045, 1610.435058, -1887.597534, 14.802719, 10000);
	InterpolateCameraLookAt(playerid, 1627.019531, -1889.766845, 16.035015, 1614.614013, -1890.295410, 14.294700, 10000);
	SetTimerEx("endingLoadScreen", 10000, false, "i", playerid);
}

forward endingLoadScreen(playerid);
public endingLoadScreen(playerid) {
	if(playerid != GlobalVars[Geldlieferant]) return 1;
	new string[224], veh = GetPVarInt(playerid, "GeldtransporterID");

	GlobalVars[Geldlieferant] = 0;
	DeletePVar(playerid,"GeldlieferantAbholung");
	if(SpielerInfo[playerid][sJobEXP][10] < 50){SetPVarInt(playerid,"GeldtransporterGeld",10000);}
	else SetPVarInt(playerid,"GeldtransporterGeld",15000);
	TogglePlayerControllable(playerid, true);
	RemovePlayerAttachedObject(playerid, 0);
	SetCameraBehindPlayer(playerid);

	PutPlayerInVehicle(playerid, veh, 0);

	SetVehicleParamsCarDoors(veh,false,false,false,false);

	if(SpielerInfo[playerid][sJobEXP][10] < 50)
	{
		format(string, sizeof(string), "Jobfahrzeug von\n{FE0000}%s{FFFFFF}\nKapazität{FFFFFF}\n{FE0000}$10.000{FFFFFF} / {009300}$10.000", SpielerInfo[playerid][sName]);
		UpdateDynamic3DTextLabelText(FahrzeugInfo[veh][fLabel], COLOR_WHITE, string);
		SendClientMessage(playerid,COLOR_SUPER,"Sehr gut, dein Fahrzeug wurde von der Bank mit $10.000 beladen (Job-Level 1).");
		SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Benutze '/atmlist' um eine Übersicht aller, Bankautomaten in San Andreas zu erhalten.");
	}
	else
	{
		format(string, sizeof(string), "Jobfahrzeug von\n{FE0000}%s{FFFFFF}\nKapazität{FFFFFF}\n{FE0000}$15.000{FFFFFF} / {009300}$15.000", SpielerInfo[playerid][sName]);
		UpdateDynamic3DTextLabelText(FahrzeugInfo[veh][fLabel], COLOR_WHITE, string);
		SendClientMessage(playerid,COLOR_SUPER,"Sehr gut, dein Fahrzeug wurde von der Bank mit $15.000 beladen (Job-Level 2).");
		SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Benutze '/atmlist' um eine Übersicht aller, Bankautomaten in San Andreas zu erhalten.");
	}
	return 1;
}

public OnVehicleSirenStateChange(playerid, vehicleid, newstate)
{
	if(GetVehicleModel(vehicleid) == 560)
	{
	    if(newstate)
		{
			FahrzeugInfo[vehicleid][fSirene][0] = CreateDynamicObject(19288,0,0,-1000,0,0,0,-1,-1,-1,100,100);
			FahrzeugInfo[vehicleid][fSirene][1] = CreateDynamicObject(19419,0,0,0,0,0,0,-1,-1,-1,100,100);
			FahrzeugInfo[vehicleid][fSirene][2] = CreateDynamicObject(19288,0,0,0,0,0,0,-1,-1,-1,100,100);
			FahrzeugInfo[vehicleid][fSirene][3] = CreateDynamicObject(19288,0,0,0,0,0,0,-1,-1,-1,100,100);
			FahrzeugInfo[vehicleid][fSirene][4] = CreateDynamicObject(19292,0,0,0,0,0,0,-1,-1,-1,100,100);
			AttachDynamicObjectToVehicle(FahrzeugInfo[vehicleid][fSirene][0], vehicleid,0 ,2.6,0,0,0,0);//Vorne Mitte
			AttachDynamicObjectToVehicle(FahrzeugInfo[vehicleid][fSirene][1],vehicleid,0.0,0.0,0.85,0,0,0);//Dach sirene
			AttachDynamicObjectToVehicle(FahrzeugInfo[vehicleid][fSirene][2], vehicleid,0.7,2.6,0,0,0,0);//Vorne Licht Beifahrerseite
			AttachDynamicObjectToVehicle(FahrzeugInfo[vehicleid][fSirene][3], vehicleid,-0.7,2.6,0,0,0,0);//Vorne Licht Fahrerseite
			AttachDynamicObjectToVehicle(FahrzeugInfo[vehicleid][fSirene][4], vehicleid,0,0.9,0.4,0,0,0);//Mittig im Fenster
			FahrzeugInfo[vehicleid][fSireneBool] = true;
			SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du schraubst eine Sirene auf das Dach...");
	 	}
	    else
	    {
			DestroyDynamicObject(FahrzeugInfo[vehicleid][fSirene][0]);
			DestroyDynamicObject(FahrzeugInfo[vehicleid][fSirene][1]);
			DestroyDynamicObject(FahrzeugInfo[vehicleid][fSirene][2]);
			DestroyDynamicObject(FahrzeugInfo[vehicleid][fSirene][3]);
			DestroyDynamicObject(FahrzeugInfo[vehicleid][fSirene][4]);
			FahrzeugInfo[vehicleid][fSirene][0] = -1;
			FahrzeugInfo[vehicleid][fSirene][1] = -1;
			FahrzeugInfo[vehicleid][fSirene][2] = -1;
			FahrzeugInfo[vehicleid][fSirene][3] = -1;
			FahrzeugInfo[vehicleid][fSirene][4] = -1;
			FahrzeugInfo[vehicleid][fSireneBool] = false;
			SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Sirene abgeschraubt.");
		}
	}
    return 1;
}

public LoseHealth(playerid)
{
	if(Afk[playerid] > 0)return 1;
	new Float:playerHealth;
	GetPlayerHealth(playerid, playerHealth);
	SetPlayerHealth(playerid, playerHealth-1);
	return 1;
}

public SpawnWaffenTransporter()
{
	if(WaffenTransporter != INVALID_VEHICLE_ID)return 1;
	new spawnpunkt = random(3);
	switch(spawnpunkt)
	{
	    case 0:
	    {
	        WaffenTransporter = CreateVehicle(498,2096.5737,-1982.2908,13.6123,89.4685,0,0,-1,false);
	    }
	    case 1:
	    {
	        WaffenTransporter = CreateVehicle(498,1206.6199,-1879.7694,13.6215,90.5658,0,0,-1,false);
	    }
	    case 2:
	    {
	        WaffenTransporter = CreateVehicle(498,581.2584,-1354.9531,14.6413,101.3389,0,0,-1,false);
	    }
	    default:
	    {
	        WaffenTransporter = CreateVehicle(498,2096.5737,-1982.2908,13.6123,89.4685,0,0,-1,false);
	    }
	}
	FahrzeugInfo[WaffenTransporter][fTank] = VehicleData[GetVehicleModel(WaffenTransporter)-400][vehLiter];
	WaffenTransporterMats = 0;
	SetVehicleHealth(WaffenTransporter, 25000);
	foreach(new i : Player)
	{
	    if(SpielerInfo[i][sFraktion] > 8)
	    {
	        SendClientMessage(i,COLOR_INFO,"[MATS-TRANSPORT]: Der Transporter für die Materialien ist gerade gespawnt!");
	    }
	}
	return 1;
}

public AntiFahrschulDesyncs(playerid, vehicleid)
{
    DeletePVar(playerid,"NotKickFahrschulDesyncs");
    DeletePVar(playerid,"FahrschulCar");
	PutPlayerInVehicle(playerid,vehicleid,0);
	return 1;
}

public AttachTrailer(trailerid, vehicleid)
{
	AttachTrailerToVehicle(trailerid, vehicleid);
	return 1;
}

public LoadObjectsForPlayer(playerid)
{
	GameTextForPlayer(playerid,"Lade Objekte...",1800,4);
	TogglePlayerControllable(playerid, false);
	SetTimerEx("LoadObjectsForPlayerTime",2000,false,"i",playerid);
	return 1;
}

public LoadObjectsForPlayerTime(playerid)
{
    TogglePlayerControllable(playerid, true);
	return 1;
}


public NewbChatBlock(playerid)
{
	SetPVarInt(playerid,"NewbChatBlock", GetPVarInt(playerid,"NewbChatBlock") - 1);
	if(GetPVarInt(playerid,"NewbChatBlock") < 1)
	{
	    DeletePVar(playerid,"NewbChatBlock");
	}
	return 1;
}

public HatGradeWerbungGemachtTimer(playerid)
{
	DeletePVar(playerid,"HatGradeWerbungGemacht");
	return 1;
}

public PoliceAufbrechen()
{
    PoliceAufbrechenUsed = false;
	return 1;
}

public OnPlayerClickTextDraw(playerid, Text:clickedid)
{
	//FastFoodStood
	FastFoodStood_ClickTextDraw(playerid, clickedid);

	if(clickedid == Text:INVALID_TEXT_DRAW && GetPVarInt(playerid,"ICPEdit") == 1){SelectTextDraw(playerid,0x6E6E6EFF);}
	if(clickedid == Text:INVALID_TEXT_DRAW && GetPVarInt(playerid,"DiceShow") == 1){SelectTextDraw(playerid,0x6E6E6EFF);}
	return 0;
}

public HatDrogenGenutztTime(playerid)
{
	DeletePVar(playerid,"HatDrogenGenutzt");
	return 1;
}

public ServerZwischenSpeichern()
{
    new serverPort = GetConsoleVarAsInt("network.port");
	if(serverPort == 7778)return 1;//Testserver
	SendClientMessageToAll(COLOR_SUPER,"[Zwischenspeicherung]:");
	SendClientMessageToAll(COLOR_WHITE,":: Der Server speichert alle 2 Stunden einige Systeme und Funktionen. ::");
	SendClientMessageToAll(COLOR_WHITE,":: In den nächsten 2 bis 4 Sekunden kann es zu Verzögerungen (Lags) kommen. ::");
	SaveFrakInfo();
	SaveGangZones();
	SaveDrogen();
	SaveWerbetafel();
	SaveServerLager();
	SaveNewsKiosk();
	return 1;
}

public PlusMinusHide(playerid)
{
	PlayerTextDrawHide(playerid,PlusMinusTD[playerid]);
	return 1;
}

public OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ)
{
	if(SpielerInfo[playerid][sAdmin] < 1)return 1;
	SpielerInfo[playerid][sAdminClickedMap][0] = fX;
	SpielerInfo[playerid][sAdminClickedMap][1] = fY;
	new Float:_getZ;
	CA_FindZ_For2DCoord(fX, fY, _getZ);
	SpielerInfo[playerid][sAdminClickedMap][2] = _getZ;
	SetPVarInt(playerid,"MapMarkerSetted", 1);
	return 1;
}

public HidePaybackCard(playerid)
{
    for(new i = 0; i < 12; i++)
	{
	    TextDrawHideForPlayer(playerid, PaybackCardTD[i]);
	}
	PlayerTextDrawHide(playerid, PaybackKarte[playerid]);
	return 1;
}

public ActDashcam(playerid)
{
	new Float:pX, Float:pY, Float:pZ, Float:pA, merker = 0;
	GetXYInFrontOfPlayer(playerid, pX, pY, pZ, pA, 40.0);
	//GetXYInFrontOfVehicle(GetPlayerVehicleID(playerid),pX,pY,pZ,50.00);
 	//if(IsPlayerInRangeOfPoint(playerid,50.00,pX,pY,pZ))
	foreach(new xyI : Player)
	{
		if(!IsPlayerInAnyVehicle(xyI))continue;
		if(!IsPlayerInRangeOfPoint(xyI,40.0,pX,pY,pZ))continue;
		if(GetPlayerVehicleID(xyI) == GetPlayerVehicleID(playerid))continue;
		merker = xyI;
		break;
	}
	if(merker > 0)
	{
	    new xyString[64];
	    format(xyString,sizeof(xyString),"Model: %s",FahrzeugName[FahrzeugInfo[GetPlayerVehicleID(merker)][fModelID]-400]);
	    PlayerTextDrawSetString(playerid, DashcamTD[playerid][1], xyString);

	    new Float:xyVHealth;
	    GetVehicleHealth(GetPlayerVehicleID(merker), xyVHealth);
	    if(xyVHealth > 650){format(xyString,sizeof(xyString),"Zustand: ~g~In Ordnung");}
	    else if(xyVHealth < 650 && xyVHealth > 450){format(xyString,sizeof(xyString),"Zustand: ~y~Mangelhaft");}
	    else if(xyVHealth < 450){format(xyString,sizeof(xyString),"Zustand: ~r~Resigniert");}
	    PlayerTextDrawSetString(playerid, DashcamTD[playerid][2], xyString);

	    if(GetPlayerSpeed(merker) < 90){format(xyString,sizeof(xyString),"KM/H: ~g~%d",GetPlayerSpeed(merker));}
	    else if(GetPlayerSpeed(merker) > 90 && GetPlayerSpeed(merker) < 160){format(xyString,sizeof(xyString),"KM/H: ~y~%d",GetPlayerSpeed(merker));}
	    else if(GetPlayerSpeed(merker) > 160){format(xyString,sizeof(xyString),"KM/H: ~r~%d",GetPlayerSpeed(merker));}
	    PlayerTextDrawSetString(playerid, DashcamTD[playerid][3], xyString);
	}
	else
	{
	    PlayerTextDrawSetString(playerid, DashcamTD[playerid][1], "Model: -");
	    PlayerTextDrawSetString(playerid, DashcamTD[playerid][2], "Zustand: -");
	    PlayerTextDrawSetString(playerid, DashcamTD[playerid][3], "KM/H: -");
	}
	return 1;
}

public PortInZug(playerid,vehicleid)
{
    PutPlayerInVehicle(playerid, vehicleid, 0);
    TogglePlayerControllable(playerid, true);
	return 1;
}

public SatOrtungTimer()
{
	SatOrtung = 0;
	return 1;
}

/*public HttpProxyCheck(playerid, response_code, data[])
{
    new sollCheck = mysql_GetInt("accounts", "VPNOK", "Name", SpielerInfo[playerid][sName]);
    if(sollCheck == 1)return 1;
    if(response_code == 200)
    {
        new datstring[2];
        format(datstring,sizeof(datstring),"%s",data);
        if(!strcmp(datstring, "Y"))//Proxy in benutzung
        {
            SendClientMessage(playerid,COLOR_RED,"[System]: {FFFFFF}Deine IP-Adresse wurde als nicht vertrauenswürdig erkannt.");
            SendClientMessage(playerid,COLOR_RED,"[System]: {FFFFFF}Bitte deaktiviere falls vorhanden deinen VPN bzw. Proxy.");
            KickPlayer(playerid,"AntiProxyVPN");
        }
    }
    return 1;
}*/

public CanGangFightAgain(frakid)
{
	FrakInfo[frakid][fiGangFightDisabled] = 0;
	foreach(new i : Player)
	{
		if(SpielerInfo[i][sFraktion] > 8 && SpielerInfo[i][sFraktion] != 19)
		{
		    new string[128];
		    format(string,sizeof(string),"[Gangfight]: Die '%s' kann nun wieder aktiv an Gangfights teilnehmen.",FrakName(frakid));
		    SendClientMessage(i,COLOR_GANGFIGHT,string);
		}
	}
	return 1;
}

public RefillScriptsideVehicles()
{
	if(WaffenTransporter != INVALID_VEHICLE_ID){FahrzeugInfo[WaffenTransporter][fTank] = VehicleData[GetVehicleModel(WaffenTransporter)-400][vehLiter];}
	return 1;
}

public WurdeGeradeAngeschossenT(playerid){DeletePVar(playerid,"WurdeGeradeAngeschossen");return 1;}

public WaitToFindDetektiv(playerid)
{
	SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Du kannst jetzt wieder '/horten' benutzen.");
	DeletePVar(playerid,"WaitToFind");
	return 1;
}

public PDInnenHackingT(playerid)
{
    if(IsPlayerInRangeOfPoint(playerid,5.0,345.47363, 1827.52173, 2241.95728) || IsPlayerInRangeOfPoint(playerid,5.0,347.63062, 1827.36877, 2241.95728))
    {
        foreach(new i : Player)
        {
            if(SpielerInfo[i][sKnast] > 0)
            {
                SpielerInfo[i][sKnast] = 0;
				TimeToKnast(i);
				SendClientMessage(i,COLOR_INFO,"[Info]: {FFFFFF}Jemand hat die Zellentüren gehackt. Du bist frei.");
            }
        }
        SetTimer("PDInnenFrei", 1800000, false);
        SendClientMessage(playerid,COLOR_SUPER,"[Info]: {FFFFFF}Du hast die Zellen gehackt. Alle Insassen wurden entlassen.");
    }
    else
    {
        SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Du bist zu weit von der Innentür entfernt. Der Hack ist fehlgeschlagen.");
        SetTimer("PDInnenFrei", 1800000, false);
    }
	return 1;
}

public PDInnenFrei()
{
	PDInnenHacking = 0;
	return 1;
}

public OnPlayerEditAttachedObject(playerid, EDIT_RESPONSE:response, index, modelid, boneid, Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ, Float:rotationX, Float:rotationY, Float:rotationZ, Float:scaleX, Float:scaleY, Float:scaleZ)
{
	if(response)
	{
	    if(scaleX > 2 || scaleY > 2 || scaleZ > 2)
	    {
	        EditAttachedObject(playerid, index);
	    	SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Solche unrealistischen Werte sind nicht willkommen.");
	        return 1;
	    }
	    if(GetPVarInt(playerid,"VictimSchmuck") == 1)
		{
			ShowPlayerDialog(playerid,DIALOG_VICTIM_SCHMUCK2,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Victim Schmuck","Möchtest du die Sonnenbrille für 850$ kaufen?","Kaufen","Abbrechen");
			SpielerInfo[playerid][sVictimBrilleOffX] = fOffsetX;
			SpielerInfo[playerid][sVictimBrilleOffY] = fOffsetY;
			SpielerInfo[playerid][sVictimBrilleOffZ] = fOffsetZ;
			SpielerInfo[playerid][sVictimBrilleRotX] = rotationX;
			SpielerInfo[playerid][sVictimBrilleRotY] = rotationY;
			SpielerInfo[playerid][sVictimBrilleRotZ] = rotationZ;
			SpielerInfo[playerid][sVictimBrilleScaX] = scaleX;
			SpielerInfo[playerid][sVictimBrilleScaY] = scaleY;
			SpielerInfo[playerid][sVictimBrilleScaZ] = scaleZ;
		}
        if(GetPVarInt(playerid,"VictimSchmuck") == 2)
		{
			ShowPlayerDialog(playerid,DIALOG_VICTIM_SCHMUCK2,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Victim Schmuck","Möchtest du diese Cap für 1.250$ kaufen?","Kaufen","Abbrechen");
            SpielerInfo[playerid][sVictimCapOffX] = fOffsetX;
			SpielerInfo[playerid][sVictimCapOffY] = fOffsetY;
			SpielerInfo[playerid][sVictimCapOffZ] = fOffsetZ;
			SpielerInfo[playerid][sVictimCapRotX] = rotationX;
			SpielerInfo[playerid][sVictimCapRotY] = rotationY;
			SpielerInfo[playerid][sVictimCapRotZ] = rotationZ;
			SpielerInfo[playerid][sVictimCapScaX] = scaleX;
			SpielerInfo[playerid][sVictimCapScaY] = scaleY;
			SpielerInfo[playerid][sVictimCapScaZ] = scaleZ;
		}
        if(GetPVarInt(playerid,"VictimSchmuck") == 3)
		{
			ShowPlayerDialog(playerid,DIALOG_VICTIM_SCHMUCK2,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Victim Schmuck","Möchtest du dieses Bandana für 2.250$ kaufen?","Kaufen","Abbrechen");
            SpielerInfo[playerid][sVictimBandanaOffX] = fOffsetX;
			SpielerInfo[playerid][sVictimBandanaOffY] = fOffsetY;
			SpielerInfo[playerid][sVictimBandanaOffZ] = fOffsetZ;
			SpielerInfo[playerid][sVictimBandanaRotX] = rotationX;
			SpielerInfo[playerid][sVictimBandanaRotY] = rotationY;
			SpielerInfo[playerid][sVictimBandanaRotZ] = rotationZ;
			SpielerInfo[playerid][sVictimBandanaScaX] = scaleX;
			SpielerInfo[playerid][sVictimBandanaScaY] = scaleY;
			SpielerInfo[playerid][sVictimBandanaScaZ] = scaleZ;
		}
	}
	else
	{
	    EditAttachedObject(playerid, index);
	    SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Drücke auf das 'Speicherkarte'-Symbol um fortzufahren.");
	}
	return 1;
}

public OnActorStreamIn(actorid, forplayerid)
{
	Actor_OnActorStreamIn();
	return 1;
}

public HandschellenKnacken(playerid, pID)
{
    if(GetDistanceBetweenPlayersEx(playerid, pID) >= 7)
    {
        DeletePVar(playerid,"vHandschellenKnack");
        DeletePVar(pID,"HandschellenKnack");
        SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Knackversuch abgebrochen. Du bist zu weit entfernt.");
        return 1;
    }
    SetPlayerSpecialAction(pID, SPECIAL_ACTION_NONE);
	RemovePlayerAttachedObject(pID, ATTACH_INDEX_HANDCUFF);
	DeletePVar(pID,"Handschellen");
	new string[128];
	format(string,sizeof(string),"%s hat die Handschellen von %s geknackt.",SpielerInfo[playerid][sName],SpielerInfo[pID][sName]);
	ProxDetector(12, playerid, string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	return 1;
}

public TuningAnmelden(playerid, tmpcar)
{
	SendClientMessage(playerid,COLOR_INFO,"[Info]: {FFFFFF}Tuningdaten angemeldet. Gute Fahrt!");
	FahrzeugInfo[tmpcar][fTuningGemeldet] = 1;
	new dbidstring[11];
	format(dbidstring,sizeof(dbidstring),"%d",tmpcar);
	mysql_SetInt("vehicles", "TuningGemeldet", 1, "ID", dbidstring);
	DeletePVar(playerid,"MeldetTuning");
	TogglePlayerControllable(playerid, true);
	GivePlayerMoneyEx(playerid,-5000);
	return 1;
}

public DestroyHookedTrainSpawn(vehicleid)
{
	DestroyVehicle(vehicleid);
	return 1;
}

public BlockedZugDutyT()
{
    BlockedZugDuty = false;
	return 1;
}

public CopHasBeenContractedT()
{
    CopHasBeenContracted = false;
	return 1;
}

//stocks - redv-reallife.de Reloaded


stock OnPlayerChangeWeapon(playerid, oldweapon, newweapon)
{
	new oWeapon[24], nWeapon[24];
	GetWeaponName(WEAPON:oldweapon, oWeapon, sizeof(oWeapon));
	GetWeaponName(WEAPON:newweapon, nWeapon, sizeof(nWeapon));

	if(IsPlayerInNoDMZone(playerid) && GetPVarInt(playerid,"CopDuty") < 1 && GetPVarInt(playerid,"FBIDuty") < 1) {
	    SetPlayerArmedWeapon(playerid, WEAPON:0);
 	}
}

stock ResetPlayerDuty(playerid)
{
	if(GetPVarInt(playerid,"CopDuty") == 1 && SpielerInfo[playerid][sWiederbeleben] == 0)
	{
	    DeletePVar(playerid,"CopDuty");
	    CopDuty--;
		ResetPlayerWeapons(playerid);
        SetPlayerArmour(playerid,0);
        SetPlayerColor(playerid,COLOR_WHITE);
        SetPlayerColor(playerid, GetPlayerColor(playerid) & 0xFFFFFF00);
		KillTimer(PDEquiptTimer[playerid]);
	}
 	if(GetPVarInt(playerid,"FBIDuty") == 1 && SpielerInfo[playerid][sWiederbeleben] == 0)
	{
	    DeletePVar(playerid,"FBIDuty");
	    FBIDuty--;
		ResetPlayerWeapons(playerid);
        SetPlayerArmour(playerid,0);
        SetPlayerColor(playerid,COLOR_WHITE);
        SetPlayerColor(playerid, GetPlayerColor(playerid) & 0xFFFFFF00);
		KillTimer(PDEquiptTimer[playerid]);
	}
	if(GetPVarInt(playerid,"MedicDuty") == 1 && SpielerInfo[playerid][sWiederbeleben] == 0)
	{
		DeletePVar(playerid,"MedicDuty");
		MedicDuty--;
		ResetPlayerWeapons(playerid);
        SetPlayerArmour(playerid,0);
        SetPlayerColor(playerid,COLOR_WHITE);
        SetPlayerColor(playerid, GetPlayerColor(playerid) & 0xFFFFFF00);
	}
	if(GetPVarInt(playerid,"FeuerwehrDuty") == 1 && SpielerInfo[playerid][sWiederbeleben] == 0)
	{
		DeletePVar(playerid,"FeuerwehrDuty");
		FeuerwehrDuty--;
		ResetPlayerWeapons(playerid);
        SetPlayerArmour(playerid,0);
        SetPlayerColor(playerid,COLOR_WHITE);
        SetPlayerColor(playerid, GetPlayerColor(playerid) & 0xFFFFFF00);
	}
	if(GetPVarInt(playerid,"SanNewsDuty") == 1 && SpielerInfo[playerid][sWiederbeleben] == 0)
	{
		DeletePVar(playerid,"SanNewsDuty");
		SanNewsDuty--;
		ResetPlayerWeapons(playerid);
        SetPlayerArmour(playerid,0);
        SetPlayerColor(playerid,COLOR_WHITE);
        SetPlayerColor(playerid, GetPlayerColor(playerid) & 0xFFFFFF00);
	}
	if(GetPVarInt(playerid,"TruckerDuty") != 0 && SpielerInfo[playerid][sWiederbeleben] == 0)
	{
	    DeleteJobFahrzeug(playerid);
		DeletePVar(playerid,"TruckerDuty");
	}
	if(GetPVarInt(playerid,"LSFDuty") != 0 && SpielerInfo[playerid][sWiederbeleben] == 0)
	{
	    DeleteJobFahrzeug(playerid);
		DeletePVar(playerid,"LSFDuty");
	}
	if(GetPVarInt(playerid,"PizzaboteDuty") != 0 && SpielerInfo[playerid][sWiederbeleben] == 0)
	{
	    DeleteJobFahrzeug(playerid);
		DeletePVar(playerid,"PizzaboteDuty");
		DeletePVar(playerid,"PizzaTragen");
	    DeletePVar(playerid,"PizzaGeholt");
	    DeletePVar(playerid,"PizzaAusliefern");
	    PizzaKundenPos[playerid][0] = 0;
	    PizzaKundenPos[playerid][1] = 0;
	    PizzaKundenPos[playerid][2] = 0;
	    PizzaKofferraumPos[playerid][0] = 0;
	    PizzaKofferraumPos[playerid][1] = 0;
	    PizzaKofferraumPos[playerid][2] = 0;
		PizzaAusgeliefert[playerid] = 0;
	}
	if(GetPVarInt(playerid,"KehrmaschinenDuty") != 0 && SpielerInfo[playerid][sWiederbeleben] == 0)
	{
	    DeleteJobFahrzeug(playerid);
		DeletePVar(playerid,"KehrmaschinenDuty");
		DeletePVar(playerid,"KfahrerArbeitet");
		DeletePVar(playerid,"KehrmaschinenAuftrag");
	}
	if(GetPVarInt(playerid,"PilotDuty") != 0 && SpielerInfo[playerid][sWiederbeleben] == 0)
	{
	    DeleteJobFahrzeug(playerid);
		DeletePVar(playerid,"PilotDuty");
		DeletePVar(playerid,"PilotArbeitet");
		DeletePVar(playerid,"FlugID");
	}
 	if(GetPVarInt(playerid,"BusfahrerDuty") != 0 && SpielerInfo[playerid][sWiederbeleben] == 0)
	{
	    DeleteJobFahrzeug(playerid);
		DeletePVar(playerid,"BusfahrerDuty");
		DeletePVar(playerid,"BusfahrerLinie");
		DeletePVar(playerid,"AnBusHaltestelle");
		DeletePVar(playerid,"BusfahrerRoute");
	}
	if(GetPVarInt(playerid,"MüllmannDuty") != 0 && SpielerInfo[playerid][sWiederbeleben] == 0)
	{
	    DeleteJobFahrzeug(playerid);
		DeletePVar(playerid,"MüllmannDuty");
		DeletePVar(playerid,"MüllmannArbeitet");
		DeletePVar(playerid,"Müllauto");
		DeletePVar(playerid,"MüllBeutelHand");
		DeletePVar(playerid,"MüllBeutel");
	}
	if(GetPVarInt(playerid,"LandwirtDuty") != 0 && SpielerInfo[playerid][sWiederbeleben] == 0)
	{
	    DeleteJobFahrzeug(playerid);
		DeletePVar(playerid,"LandwirtDuty");
		DeletePVar(playerid,"LandwirtArbeitet");
		DeletePVar(playerid,"LandwirtAbgabe");
		DeletePVar(playerid,"LandwirtStufe");
		DeletePVar(playerid,"HeuballenImWalton");
	}
	if(GetPVarInt(playerid,"GeldlieferantDuty") != 0 && SpielerInfo[playerid][sWiederbeleben] == 0)
	{
	    DeleteJobFahrzeug(playerid);
		DeletePVar(playerid,"GeldlieferantDuty");
		DeletePVar(playerid,"GeldlieferantArbeitet");
		DeletePVar(playerid,"GeldlieferantAbholung");
		DeletePVar(playerid,"GeldkofferInHand");
		DeletePVar(playerid,"GeldtransporterGeld");
	}
	if(GetPVarInt(playerid,"ElektrikerDuty") != 0 && SpielerInfo[playerid][sWiederbeleben] == 0)
	{
	    DeleteJobFahrzeug(playerid);
		DeletePVar(playerid,"ElektrikerDuty");
		DeletePVar(playerid,"ElektrikerArbeitet");
		DeletePVar(playerid,"ElektrikerAbgabe");
		DeletePVar(playerid,"ElektrikerGehalt");
	}
	return 1;
}

//Anticheat - by Tobi_DeKey

stock CreateFCar(playerid,schein)
{
    SetPVarInt(playerid,"HatFahrschulCar", 1);
	new vehicleid, Float:Position[4], rand = random(3);
	if(schein == 1)//Autoschein
	{
		if(rand == 0)
		{
		    Position[0] = 1034.8416;
		    Position[1] = -1330.5389;
		    Position[2] = 13.1160;
		    Position[3] = 270.4880;
		}
		else if(rand == 1)
		{
		    Position[0] = 1012.1721;
		    Position[1] = -1330.4299;
		    Position[2] = 13.1099;
		    Position[3] = 269.1209;
		}
		else if(rand == 2)
		{
		    Position[0] = 979.4965;
		    Position[1] = -1330.5557;
		    Position[2] = 13.1047;
		    Position[3] = 270.2867;
		}
		vehicleid = CreateVehicle(405,Position[0],Position[1],Position[2],Position[3],2,2,-1);
		format(FahrzeugInfo[vehicleid][fKennzeichen], 0, "Fahrschule");
		SetVehicleNumberPlate(vehicleid,"Fahrschule");
		FahrzeugInfo[vehicleid][fModelID] = 401;
  		FahrzeugInfo[vehicleid][fLabel] = CreateDynamic3DTextLabel("{FF0000}* Achtung Fahrschule *", 0x008080FF, 0.0, 0.0, 0.0, 15.0, INVALID_PLAYER_ID, vehicleid);
  		Attach3DTextLabelToVehicle(FahrzeugInfo[vehicleid][fLabel],vehicleid, 0.0, 0.0, 1.2);
	}
	else if(schein == 2)//Flugschein
	{
		if(rand == 0)
		{
		    Position[0] = 978.7614;
		    Position[1] = -1377.6647;
		    Position[2] = 21.8329;
		    Position[3] = 269.9409;
		}
		else if(rand == 1)
		{
		    Position[0] = 980.8425;
		    Position[1] = -1359.5309;
		    Position[2] = 21.8329;
		    Position[3] = 269.8376;
		}
		else if(rand == 2)
		{
		    Position[0] = 980.8580;
		    Position[1] = -1344.3140;
		    Position[2] = 21.8336;
		    Position[3] = 268.9448;
		}
		vehicleid = CreateVehicle(487,Position[0],Position[1],Position[2],Position[3],2,1,-1);
		format(FahrzeugInfo[vehicleid][fKennzeichen], 0, "Fahrschule");
		FahrzeugInfo[vehicleid][fModelID] = 487;
		SetVehicleHealth(vehicleid,3000);
		FahrzeugInfo[vehicleid][fLabel] = CreateDynamic3DTextLabel("{FF0000}* Achtung Fahrschule *", 0x008080FF, 0.0, 0.0, 0.0, 15.0, INVALID_PLAYER_ID, vehicleid);
		Attach3DTextLabelToVehicle(FahrzeugInfo[vehicleid][fLabel],vehicleid, 0.0, 0.0, 1.2);
	}
	else if(schein == 3)//LKWschein
	{
		if(rand == 0)
		{
		    Position[0] = 953.4742;
		    Position[1] = -1329.7324;
		    Position[2] = 14.3993;
		    Position[3] = 270.1272;
		}
		else if(rand == 1)
		{
		    Position[0] = 986.0818;
		    Position[1] = -1329.8043;
		    Position[2] = 14.4118;
		    Position[3] = 269.8145;
		}
		else if(rand == 2)
		{
		    Position[0] = 1033.3359;
		    Position[1] = -1329.8627;
		    Position[2] = 14.4101;
		    Position[3] = 269.3374;
		}
		vehicleid = CreateVehicle(515,Position[0],Position[1],Position[2],Position[3],2,2,-1);
		format(FahrzeugInfo[vehicleid][fKennzeichen], 0, "Fahrschule");
		SetVehicleNumberPlate(vehicleid,"Fahrschule");
		FahrzeugInfo[vehicleid][fModelID] = 515;
		FahrzeugInfo[vehicleid][fLabel] = CreateDynamic3DTextLabel("{FF0000}* Achtung Fahrschule *", 0x008080FF, 0.0, 0.0, 0.0, 15.0, INVALID_PLAYER_ID, vehicleid);
	    Attach3DTextLabelToVehicle(FahrzeugInfo[vehicleid][fLabel],vehicleid, 0.0, 0.0, 1.2);
	}
	else if(schein == 4)//Bikeschein
	{
		if(rand == 0)
		{
		    Position[0] = 1020.5880;
		    Position[1] = -1316.3042;
		    Position[2] = 12.9426;
		    Position[3] = 90.1790;
		}
		else if(rand == 1)
		{
		    Position[0] = 998.9742;
		    Position[1] = -1316.3723;
		    Position[2] = 12.9530;
		    Position[3] = 90.1789;
		}
		else if(rand == 2)
		{
		    Position[0] = 973.7923;
		    Position[1] = -1316.4506;
		    Position[2] = 12.9265;
		    Position[3] = 90.1789;
		}
		vehicleid = CreateVehicle(461,Position[0],Position[1],Position[2],Position[3],2,2,-1);
		format(FahrzeugInfo[vehicleid][fKennzeichen], 0, "Fahrschule");
		SetVehicleNumberPlate(vehicleid,"Fahrschule");
		FahrzeugInfo[vehicleid][fModelID] = 461;
		FahrzeugInfo[vehicleid][fLabel] = CreateDynamic3DTextLabel("{FF0000}* Achtung Fahrschule *", 0x008080FF, 0.0, 0.0, 0.0, 15.0, INVALID_PLAYER_ID, vehicleid);
		Attach3DTextLabelToVehicle(FahrzeugInfo[vehicleid][fLabel],vehicleid, 0.0, 0.0, 1.2);
	}
	else if(schein == 5)//Bootschein
	{
	    new rand2 = random(4);
		if(rand2 == 0)
		{
		    Position[0] = -2941.1711;
		    Position[1] = 496.0121;
		    Position[2] = 0.0226;
		    Position[3] = 0.6833;
		}
		else if(rand2 == 1)
		{
		    Position[0] = -2953.5635;
		    Position[1] = 495.5471;
		    Position[2] = 0.3342;
		    Position[3] = 357.7354;
		}
		else if(rand2 == 2)
		{
		    Position[0] = -2969.8521;
		    Position[1] = 496.5679;
		    Position[2] = -0.0450;
		    Position[3] = 0.2871;
		}
		else if(rand2 == 3)
		{
		    Position[0] = -2981.9565;
		    Position[1] = 496.6998;
		    Position[2] = 0.4628;
		    Position[3] = 359.5481;
		}
		vehicleid = CreateVehicle(454,Position[0],Position[1],Position[2],Position[3],2,2,-1);
		FahrzeugInfo[vehicleid][fModelID] = 454;
		FahrzeugInfo[vehicleid][fLabel] = CreateDynamic3DTextLabel("{FF0000}* Achtung Fahrschule *", 0x008080FF, 0.0, 0.0, 0.0, 15.0, INVALID_PLAYER_ID, vehicleid);
		Attach3DTextLabelToVehicle(FahrzeugInfo[vehicleid][fLabel],vehicleid, 0.0, 0.0, 1.2);
		PutPlayerInVehicle(playerid,vehicleid,0);
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,0);
	}

	FahrzeugInfo[vehicleid][fTank] = VehicleData[FahrzeugInfo[vehicleid][fModelID]-400][vehLiter];
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(vehicleid, false, false, false, true, false, false, false);
	SetPVarInt(playerid,"NotKickFahrschulDesyncs",1);
	new Float:PositionDesync[3];
	GetPlayerPos(playerid,PositionDesync[0],PositionDesync[1],PositionDesync[2]);
	SetPlayerPos(playerid,PositionDesync[0],PositionDesync[1],PositionDesync[2]+3);
	SetTimerEx("AntiFahrschulDesyncs",2000,false,"ii",playerid,vehicleid);
	GameTextForPlayer(playerid,"Einen Moment, bitte",2000,4);

	FahrzeugInfo[vehicleid][fDatabaseID] = 0; FahrzeugInfo[vehicleid][fErstellt] = true;
	FahrzeugInfo[vehicleid][fPosition][0] = Position[0]; FahrzeugInfo[vehicleid][fPosition][1] = Position[1]; FahrzeugInfo[vehicleid][fPosition][2] = Position[2]; FahrzeugInfo[vehicleid][fPosition][3] = Position[3]; FahrzeugInfo[vehicleid][fColor][1] = 2;
 	FahrzeugInfo[vehicleid][fAbgeschleppt] = 0; FahrzeugInfo[vehicleid][fParkkralle] = 0; FahrzeugInfo[vehicleid][fKilometer] = 0; FahrzeugInfo[vehicleid][fColor][0] = 2; FahrzeugInfo[vehicleid][fPaintjob] = 3;
	FahrzeugInfo[vehicleid][fTank] = VehicleData[GetVehicleModel(vehicleid)-400][vehLiter]; FahrzeugInfo[vehicleid][fRang] = 0; FahrzeugInfo[vehicleid][fFraktion] = 0; FahrzeugInfo[vehicleid][fGruppe] = 0;
	FahrzeugInfo[vehicleid][fAutohaus] = 0; FahrzeugInfo[vehicleid][fNebenjob] = 0; FahrzeugInfo[vehicleid][fGarage] = 0; FahrzeugInfo[vehicleid][fGPark] = 0; FahrzeugInfo[vehicleid][fFahrschule] = 1;
	FahrzeugInfo[vehicleid][fSupmobil] = 0; FahrzeugInfo[vehicleid][fZiviroller] = 0; FahrzeugInfo[vehicleid][fImportCar] = 0; FahrzeugInfo[vehicleid][fKurrierCar] = 0;
	FahrzeugInfo[vehicleid][fPreis] = 0; FahrzeugInfo[vehicleid][fBesitzer] = 0; format(FahrzeugInfo[vehicleid][fBesitzer], 0, ""); FahrzeugInfo[vehicleid][fBesitzerID] = 0; FahrzeugInfo[vehicleid][fTuning][0] = 0; FahrzeugInfo[vehicleid][fTuning][1] = 0; FahrzeugInfo[vehicleid][fTuning][2] = 0;
	FahrzeugInfo[vehicleid][fTuning][3] = 0; FahrzeugInfo[vehicleid][fTuning][4] = 0; FahrzeugInfo[vehicleid][fTuning][5] = 0; FahrzeugInfo[vehicleid][fTuning][6] = 0; FahrzeugInfo[vehicleid][fTuning][7] = 0;
	FahrzeugInfo[vehicleid][fTuning][8] = 0; FahrzeugInfo[vehicleid][fTuning][9] = 0; FahrzeugInfo[vehicleid][fTuning][10] = 0; FahrzeugInfo[vehicleid][fTuning][11] = 0; FahrzeugInfo[vehicleid][fTuning][12] = 0; FahrzeugInfo[vehicleid][fTuning][13] = 0; FahrzeugInfo[vehicleid][fJobEXP] = 0;
	SetVehicleNumberPlate(vehicleid,"Fahrschule");

	FahrschulCar[vehicleid] = playerid;
	SetPVarInt(playerid,"FahrschulCar",vehicleid);

	Motor[vehicleid] = false;
	Licht[vehicleid] = false;
	DOOR[vehicleid] = true;
	Motorhaube[vehicleid] = false;
	Kofferraum[vehicleid] = false;
	return 1;
}

stock GetPlayerArea(playerid)
{
    new str[130];
    //if(GetPlayerInterior(playerid) > 0){format(str,sizeof(str),"INTERIOR");}
    format(str,sizeof(str),"%s",Zones[GetPlayerZone(playerid)][zone_name]);
    return str;
}

stock GetPlayerAreaName(Float:x, Float:y, Float:z) {
	new str[130];
	format(str,sizeof(str),"%s",Zones[GetPlayerZoneByPos(x, y, z)][zone_name]);
    return str;
}

stock GetPlayerZoneByPos(Float:x, Float:y, Float:z)
{
    for(new i=0;i<sizeof(Zones);i++)
    {
        if(x > Zones[i][zone_minx] && y > Zones[i][zone_miny] && z > Zones[i][zone_minz] && x < Zones[i][zone_maxx] && y < Zones[i][zone_maxy] && z < Zones[i][zone_maxz])
        return i;
    }
    return false;
}

stock GetPlayerZone(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid,x,y,z);
    for(new i=0;i<sizeof(Zones);i++)
    {
        if(x > Zones[i][zone_minx] && y > Zones[i][zone_miny] && z > Zones[i][zone_minz] && x < Zones[i][zone_maxx] && y < Zones[i][zone_maxy] && z < Zones[i][zone_maxz])
        return i;
    }
    return false;
}

stock ShowAchievement(playerid, const name[],const belohnung[])
{
	//format(stats,sizeof(stats),""); << zum kopieren für mein faulen Traummann :)<333
	new achievement[1024];

	//Achievement Name
	format(achievement,sizeof(achievement),"%s",name);
	PlayerTextDrawSetString(playerid, AchievementDraw[playerid][4], achievement);

	//Belohnung
	format(achievement,sizeof(achievement),"%s",belohnung);
	PlayerTextDrawSetString(playerid, AchievementDraw[playerid][5], achievement);

	ShowPlayerAchievement(playerid);

	SetPVarInt(playerid,"ShowAchievement",6);
    PlayAudioStreamForPlayer(playerid,"https://"SERV_WURL"/sounds/mission_success.mp3");
	return 1;
}

stock DestroyVars(playerid)
{
	new string[264];
	if(!IsValidVehicle(ProbefahrtTimer[playerid])) {
		KillTimer(ProbefahrtTimer[playerid]);
		FahrzeugInfo[ProbefahrtCar[playerid]][fTank] = 0;
		ProbefahrtTime[playerid] = 0;
		DestroyVehicleEx(ProbefahrtCar[playerid]);
	}
	//ParteiSystem
	DestroyParteyVars(playerid);

	if(GlobalVars[WinterMode]) {
		if(Winter_GetSnowflakeStatus(playerid)) Winter_SetSnowflakeStatus(playerid, false);
		if(Winter_GetSnowObjStatus(playerid)) Winter_ShowSnowObjects(playerid, false);
		if(!Winter_GetColdBreathStatus(playerid)) Winter_SetColdBreathStatus(playerid, false);
	}

	SpielerInfo[playerid][sChainsaw] = 0;
	NotrufSperre[playerid][0] = 0;
	NotrufSperre[playerid][1] = 0;
	NotrufSperre[playerid][2] = 0;
  	Tot_X[playerid] = 0;
	Tot_Y[playerid] = 0;
 	Tot_Z[playerid] = 0;
	Tot_Int[playerid] = 0;
	Tot_World[playerid] = 0;
	AfkX[playerid] = 0;
	AfkY[playerid] = 0;
	AfkZ[playerid] = 0;
	Afk[playerid] = 0;
	lastUpdate[playerid] = 0;
	Afkversuche[playerid] = 0;
	afktimedrestka[playerid] = 0;
	stopACFehlerpunkte[playerid] = 0;
	Fehlerpunkte[playerid] = 0;
	PaintBallCount[playerid] = 0;
	PaintBallSpree[playerid] = 0;
	SpielerInfo[playerid][sTutorial] = 0;

   	KillTimer(FallPlayerTimer[playerid]);
   	KillTimer(DeadTimer[playerid]);
   	KillTimer(KrankenhausTimer[playerid]);
   	KillTimer(HealthTimer[playerid]);
   	KillTimer(PayDayTimer[playerid]);
   	KillTimer(NotrufTimer[playerid][0]);
   	KillTimer(NotrufTimer[playerid][1]);
   	KillTimer(NotrufTimer[playerid][2]);
   	KillTimer(NotrufTimer[playerid][3]);
   	KillTimer(KnastTimer[playerid]);
   	KillTimer(PrisonTimer[playerid]);
   	KillTimer(SDMTimer[playerid]);
   	KillTimer(PilotenTimer[playerid]);
   	KillTimer(CamFahrten[playerid]);
   	KillTimer(BusfahrerTimer[playerid]);
	KillTimer(AC_Check[playerid]);
	KillTimer(BombenTimer[playerid]);
	KillTimer(Afktimer[playerid]);
	KillTimer(MutePlayerTimer[playerid]);
	KillTimer(PrisonPlayerTimer[playerid]);
	KillTimer(WerbungSperrePlayerTimer[playerid]);
	KillTimer(GeldkofferTimer[playerid]);
	KillTimer(FillATMTimer[playerid]);
	KillTimer(WerkzeugTimer[playerid]);
	KillTimer(RepVorgangTimer[playerid]);
	KillTimer(DiceTimer[playerid]);

	DeleteJobFahrzeug(playerid);

	if(GetPVarInt(playerid,"Ziviroller") > 0)
	{
	    new vehicleid = GetPVarInt(playerid,"Ziviroller");
	    DeleteVehicle(vehicleid);
	}
   	if(GetPVarInt(playerid,"SupTicket") == 1)
   	{
		DeleteSupTicket(playerid);
   	}
	if(GetPVarInt(playerid,"Fahrradverleih") == 1)
	{
	    DestroyVehicleEx(GetPVarInt(playerid,"FahrradID"));
	}
 	if(GetPVarInt(playerid,"FSchein") != 0)
    {
        new vehicleid = GetPVarInt(playerid,"FahrschulCar");
  		DisablePlayerCheckpoint(playerid);
		DeletePVar(playerid,"FahrschulStunde");
		DeletePVar(playerid,"FSchein");
		DeletePVar(playerid,"FahrschulCar");
		DeletePVar(playerid,"HatFahrschulCar");
		schulung[playerid] = 0;
		FahrschulCar[vehicleid] = 0;
		Fehlerpunkte[playerid] = 0;
		DestroyDynamic3DTextLabel(FahrzeugInfo[vehicleid][fLabel]);
		FahrzeugInfo[vehicleid][fLabel] = Text3D:INVALID_3DTEXT_ID;
		DeleteVehicle(vehicleid);
        DisablePlayerCheckpoint(playerid);
    }
	if(GetPVarInt(playerid,"Supmobil") != 0)
    {
        DestroyDynamic3DTextLabel(FahrzeugInfo[GetPVarInt(playerid,"Supmobil")][fSupmobil3DText]);
        FahrzeugInfo[GetPVarInt(playerid,"Supmobil")][fSupmobil3DText] = Text3D:INVALID_3DTEXT_ID;
		DeleteVehicle(GetPVarInt(playerid,"Supmobil"));
		DeletePVar(playerid,"Supmobil");
    }
	if(SpielerLKWTrailer[playerid] > 0)
	{
	    DestroyVehicleEx(SpielerLKWTrailer[playerid]);
		SetVehicleToRespawn(GetPVarInt(playerid,"SpielerLKW"));
	    SpielerLKWTrailer[playerid] = 0;
	}
	if(GetPVarInt(playerid,"Bankrob") == 1)
	{
	    BankRobAmLaufen = 0;
	    DeleteVehicle(BankRobVan);
	    BankRobVan = INVALID_VEHICLE_ID;
	    KillTimer(PlayerBankRobTimer[playerid]);
		SendCopMessage(COLOR_BLUE,"ZENTRALE: AN ALLE EINHEITEN !! EINE STRAFANZEIGE WURDE SOEBEN >ZURÜCKGEZOGEN<.");
		format(string,sizeof(string),"ZENTRALE: Der Bankräuber hat sich aus dem Staub gemacht (Logout).",SpielerInfo[playerid][sName]);
		SendCopMessage(COLOR_BLUE,string);
		PlayerTextDrawHide(playerid, BankraubTD[playerid][0]);
		PlayerTextDrawHide(playerid, BankraubTD[playerid][1]);
		PlayerTextDrawHide(playerid, BankraubTD[playerid][2]);
		PlayerTextDrawHide(playerid, BankraubTD[playerid][3]);
		PlayerTextDrawHide(playerid, BankraubTD[playerid][4]);
		PlayerTextDrawHide(playerid, BankraubTD[playerid][5]);
		for(new sackid=0; sackid<sizeof(GeldSack); sackid++)
 		{
 		    DestroyDynamicObject(BankRobGeldSack[sackid]);
 		    DestroyDynamic3DTextLabel(BankRobGeldSackLabel[sackid]);
 		    BankRobGeldSackLabel[sackid] = Text3D:INVALID_3DTEXT_ID;
 		}
	}
	if(GetPVarInt(playerid,"BombID") != 0)
	{
	    DestroyObject(GetPVarInt(playerid,"BombID"));
	}
 	Delete3DTextLabel(Afklabel[playerid]);
 	Afklabel[playerid] = Text3D:INVALID_3DTEXT_ID;

	if(SpielerInfo[playerid][sSpectate] > 0){DeletePVar(SpielerInfo[playerid][sSpectate],"SpectateVon");}

	DeletePVar(playerid, "NewsAuslieferung");
	DeletePVar(playerid, "NewsPaperPlace");
	DeletePVar(playerid, "NewsDistance");
	DeletePVar(playerid, "NewsPaperAmount");
	DeletePVar(playerid, "GetNewsPaper");
	DeletePVar(playerid, "ChoosenNewspaper");
	DeletePVar(playerid, "SelectNewspaper");
	DeletePVar(playerid, "NewNewspaper");

 	SpielerInfo[playerid][sDBID] = 0; SpielerInfo[playerid][sPosX] = 0; SpielerInfo[playerid][sPosY] = 0; SpielerInfo[playerid][sPosZ] = 0;
 	SpielerInfo[playerid][sPosA] = 0; SpielerInfo[playerid][sInterior] = 0; SpielerInfo[playerid][sVirtualWorld] = 0; SpielerInfo[playerid][sGeschlecht] = 0;
 	SpielerInfo[playerid][sAlter] = 0; SpielerInfo[playerid][sTutorial] = 0; SpielerInfo[playerid][sKongress] = 0; SpielerInfo[playerid][sSenator] = 0;
 	SpielerInfo[playerid][sStadt] = 0; SpielerInfo[playerid][sSpawn] = 0; SpielerInfo[playerid][sAdmin] = 0; SpielerInfo[playerid][sFV] = 0; SpielerInfo[playerid][sFraktion] = 0;
 	SpielerInfo[playerid][sTeam] = 0; SpielerInfo[playerid][sLastFaction] = 0; SpielerInfo[playerid][sRank] = 0; SpielerInfo[playerid][sLeader] = 0;
 	SpielerInfo[playerid][sKnast] = 0; SpielerInfo[playerid][sZelle] = 0; SpielerInfo[playerid][sEXP] = 0; SpielerInfo[playerid][sEXPNeeded] = 0;
 	SpielerInfo[playerid][sWarns] = 0; SpielerInfo[playerid][sMuted] = 0; SpielerInfo[playerid][sADSperre] = 0; SpielerInfo[playerid][sBadword] = 0;
 	SpielerInfo[playerid][sPerso] = 0; SpielerInfo[playerid][sStadtplan] = 0; SpielerInfo[playerid][sBankPin] = 0; SpielerInfo[playerid][sBankkonto] = 0;
 	SpielerInfo[playerid][sTankstelle] = 0; SpielerInfo[playerid][sAmmunation] = 0; SpielerInfo[playerid][sStore] = 0; SpielerInfo[playerid][sHaus] = 0;
 	SpielerInfo[playerid][sGarage] = 0; SpielerInfo[playerid][sGHaus] = 0; SpielerInfo[playerid][sMieter] = 0; SpielerInfo[playerid][sGMieter] = 0;
 	SpielerInfo[playerid][sWanteds] = 0; SpielerInfo[playerid][sNebenjob] = 0; SpielerInfo[playerid][sQuitJob] = 0; SpielerInfo[playerid][sCarLic] = 0;
 	SpielerInfo[playerid][sBikeLic] = 0; SpielerInfo[playerid][sFlugLic] = 0; SpielerInfo[playerid][sTruckLic] = 0; SpielerInfo[playerid][sBootLic] = 0;
 	SpielerInfo[playerid][sWeaponLic] = 0; SpielerInfo[playerid][sKrankenhaus] = 0; SpielerInfo[playerid][sWiederbeleben] = 0; SpielerInfo[playerid][sPaket] = 0;
 	SpielerInfo[playerid][sPayDay] = 0; SpielerInfo[playerid][sNavi] = 0; SpielerInfo[playerid][sHandy] = 0; SpielerInfo[playerid][sGuthaben] = 0;
 	SpielerInfo[playerid][sTelefonbuch] = 0; SpielerInfo[playerid][sRepairkit] = 0; SpielerInfo[playerid][sPBKills] = 0; SpielerInfo[playerid][sPBTode] = 0;
 	SpielerInfo[playerid][sStartbonus] = 0; SpielerInfo[playerid][sBlitzerZeit] = 0; SpielerInfo[playerid][sFrakSperre] = 0; SpielerInfo[playerid][icpNachrichten] = 0;
 	SpielerInfo[playerid][icpHitsound] = 0; SpielerInfo[playerid][icpOChat] = 0; SpielerInfo[playerid][icpCamera] = 0; SpielerInfo[playerid][icpHandy] = 0;
 	SpielerInfo[playerid][icpBlinker] = 0; SpielerInfo[playerid][stvoCarLic] = 0; SpielerInfo[playerid][stvoBikeLic] = 0; SpielerInfo[playerid][stvoFlugLic] = 0;
 	SpielerInfo[playerid][stvoTruckLic] = 0; SpielerInfo[playerid][stvoBootLic] = 0; SpielerInfo[playerid][sTicketsBearbeitet] = 0; SpielerInfo[playerid][sPayDayGeld] = 0;
 	SpielerInfo[playerid][sJobEXP][0] = 0; SpielerInfo[playerid][sJobEXP][1] = 0; SpielerInfo[playerid][sJobEXP][2] = 0; SpielerInfo[playerid][sJobEXP][3] = 0;
 	SpielerInfo[playerid][sJobEXP][4] = 0; SpielerInfo[playerid][sJobEXP][5] = 0; SpielerInfo[playerid][sJobEXP][6] = 0; SpielerInfo[playerid][sJobEXP][7] = 0;
 	SpielerInfo[playerid][sJobEXP][8] = 0; SpielerInfo[playerid][sJobEXP][9] = 0; SpielerInfo[playerid][sJobEXP][10] = 0; SpielerInfo[playerid][sLotto][0] = 0;
 	SpielerInfo[playerid][sLotto][1] = 0; SpielerInfo[playerid][sLotto][2] = 0; SpielerInfo[playerid][sDrogen] = 0; SpielerInfo[playerid][sContract] = 0;
 	SpielerInfo[playerid][sGLeader] = 0; SpielerInfo[playerid][sGruppe] = 0; SpielerInfo[playerid][sGRank] = 0; SpielerInfo[playerid][sVIP] = 0;
 	SpielerInfo[playerid][sMaterialien] = 0; SpielerInfo[playerid][sOnline] = 0; SpielerInfo[playerid][sKurrier] = 0; SpielerInfo[playerid][sBombe] = 0;
 	SpielerInfo[playerid][sSpectate] = 0; SpielerInfo[playerid][sPfandflaschen] = 0; SpielerInfo[playerid][sBeutel] = 0; SpielerInfo[playerid][sKampfstyle] = 0;
 	SpielerInfo[playerid][sHelm] = 0; SpielerInfo[playerid][sPrisonCP] = 0; SpielerInfo[playerid][sPrison] = 0; SpielerInfo[playerid][sKicks] = 0;
 	SpielerInfo[playerid][sTimebans] = 0; SpielerInfo[playerid][sPrisons] = 0; SpielerInfo[playerid][sTagesbelohnung] = 0; SpielerInfo[playerid][sLastTagesbelohnung] = 0;
 	SpielerInfo[playerid][sACEnable] = 0; SpielerInfo[playerid][sKanister] = 0; SpielerInfo[playerid][sLastCPX] = 0; SpielerInfo[playerid][sLastCPY] = 0;
 	SpielerInfo[playerid][sLastCPZ] = 0; SpielerInfo[playerid][sLastCPSize] = 0; SpielerInfo[playerid][sMissionSolved][1] = 0; SpielerInfo[playerid][sMissionSolved][2] = 0;
	SpielerInfo[playerid][sMissionSolved][3] = 0; SpielerInfo[playerid][sMissionSolved][4] = 0; SpielerInfo[playerid][sMissionSolved][5] = 0; SpielerInfo[playerid][sMissionSolved][6] = 0;
	SpielerInfo[playerid][sAchivLeader] = 0; SpielerInfo[playerid][sAchivMillion] = 0; SpielerInfo[playerid][sAchivAuto] = 0; SpielerInfo[playerid][sAchivJobGehalt] = 0;
	SpielerInfo[playerid][sAchivFlugLic] = 0; SpielerInfo[playerid][sAchivPfand] = 0; SpielerInfo[playerid][sAchivVIP] = 0; SpielerInfo[playerid][sAchivPB] = 0;
	SpielerInfo[playerid][sAchivPerso] = 0; SpielerInfo[playerid][sPosX] = 0; SpielerInfo[playerid][sPosX] = 0; SpielerInfo[playerid][sPosX] = 0;
	SpielerInfo[playerid][sAdminClickedMap][0] = 0; SpielerInfo[playerid][sAdminClickedMap][1] = 0; SpielerInfo[playerid][sAdminClickedMap][2] = 0; SpielerInfo[playerid][sPayBackCard] = 0;
	SpielerInfo[playerid][sPayBackPunkte] = 0; SpielerInfo[playerid][sPlayedTimeToday] = 0; SpielerInfo[playerid][sFeuerzeug] = 0; SpielerInfo[playerid][sFischGewicht] = 0;
	SpielerInfo[playerid][sZweitKey] = 0; SpielerInfo[playerid][sLegBroken] = 0; SpielerInfo[playerid][sVictimBrille] = 0; SpielerInfo[playerid][sVictimBrilleF] = 0;
	SpielerInfo[playerid][sVictimCap] = 0; SpielerInfo[playerid][sVictimCapF] = 0; SpielerInfo[playerid][sVictimBandana] = 0; SpielerInfo[playerid][sVictimBandanaF] = 0;
	SpielerInfo[playerid][sPDSwat] = 0; SpielerInfo[playerid][sBankAngelegt] = 0; SpielerInfo[playerid][sBankAngelegtMoney] = 0; SpielerInfo[playerid][sICPTasteCarlock] = 0;
	SpielerInfo[playerid][sICPTasteFlock] = 0; SpielerInfo[playerid][sICPTasteMotor] = 0; SpielerInfo[playerid][sICPTasteLicht] = 0; SpielerInfo[playerid][sObstkorb] = 0;
	SpielerInfo[playerid][sOrangen] = 0;
	SpielerInfo[playerid][sPlayerObjects] = 0;

	if(IsPlayerAttachedObjectSlotUsed(playerid, ATTACH_INDEX_BRILLE)){RemovePlayerAttachedObject(playerid, ATTACH_INDEX_BRILLE);}
	if(IsPlayerAttachedObjectSlotUsed(playerid, ATTACH_INDEX_CAP)){RemovePlayerAttachedObject(playerid, ATTACH_INDEX_CAP);}
	if(IsPlayerAttachedObjectSlotUsed(playerid, ATTACH_INDEX_BANDANA)){RemovePlayerAttachedObject(playerid, ATTACH_INDEX_BANDANA);}

	//Anti-Cheat Reset Variablen
 	AnticheatInfo[playerid][sSetMoney] = false; AnticheatInfo[playerid][sLooseMoney] = false; AnticheatInfo[playerid][sSetHealth] = false;
    AnticheatInfo[playerid][sSetArmour] = false;
	AnticheatInfo[playerid][sBargeld] = 0; AnticheatInfo[playerid][sHealth] = 100;  AnticheatInfo[playerid][sArmour] = 0;

	AnticheatInfo[playerid][sStopAC][0] = 0; AnticheatInfo[playerid][sStopAC][1] = 0;
	return 1;
}


stock AmRestaurant(playerid)
{
	for(new id=0; id<sizeof(FastFoodInfo); id++)
 	{
 		if(IsPlayerInRangeOfPoint(playerid,2.5,FastFoodInfo[id][fEPos_X],FastFoodInfo[id][fEPos_Y],FastFoodInfo[id][fEPos_Z]))
 		{
 	    	return 1;
		}
	}
	return 0;
}

stock GetRestaurant(playerid)
{
 	for(new id=0; id<sizeof(FastFoodInfo); id++)
	{
		if(IsPlayerInRangeOfPoint(playerid,2.5,FastFoodInfo[id][fEPos_X],FastFoodInfo[id][fEPos_Y],FastFoodInfo[id][fEPos_Z]))return id;
	}
	return -1;
}

stock AmGeldSack(playerid)
{
 	for(new sackid=0; sackid<sizeof(GeldSack); sackid++)
 	{
 		if(IsPlayerInRangeOfPoint(playerid,2.5,GeldSack[sackid][0],GeldSack[sackid][1],GeldSack[sackid][2]))
 		{
 	    	return 1;
		}
	}
	return 0;
}

stock GetGeldSack(playerid)
{
 	for(new sackid=0; sackid<sizeof(GeldSack); sackid++)
 	{
 	    if(BankRobGeldSack[sackid] == 0)continue;
		if(IsPlayerInRangeOfPoint(playerid,1.0,GeldSack[sackid][0],GeldSack[sackid][1],GeldSack[sackid][2]))return sackid;
	}
	return -1;
}

stock mysql_connection()
{
    sqlHandle = mysql_connect(MYSQL_HOST, MYSQL_USER, MYSQL_PASS, MYSQL_DATA);
	//mysql_log(ALL);
    if(mysql_errno(sqlHandle) != 0)
    {
        print("MYSQL: Es konnte keine Verbindung zur Datenbank hergestellt werden!");
        printf("Host: %s | User: %s | Passwort: %s | Datenbank: %s",MYSQL_HOST, MYSQL_USER, MYSQL_PASS, MYSQL_DATA);
		SendRconCommand("exit");
		return 0;
	}
	else
    {
       	#if defined LOCALHOST
        print("MYSQL: MySQL Verbindung zu Localhost wurde erfolgreich aufgebaut.");
		#else
		print("MYSQL: MySQL Verbindung zum Gameserver wurde erfolgreich aufgebaut.");
		#endif

		mysql_CreateTables();

		GlobalVars[Rekord] = mysql_GetInt("allgemein", "Rekord", "ServerID", "1");
		LottoJackpot = mysql_GetInt("config", "ValueInt", "Config", "LottoGewinn");
		GlobalVars[WinterMode] = mysql_GetInt("allgemein", "WinterMode", "ServerID", "1");
        return 1;
    }
    
}

public HalbeStundenTimer()
{
	if(ServerLager[drucker_farbe] < MAX_DRUCKER_FARBE_IN_LAGER)
	{
	    new Text[128];
	    ServerLager[drucker_farbe] += DRUCKER_FARBE_PER_TIME;
	    if(ServerLager[drucker_farbe] > MAX_DRUCKER_FARBE_IN_LAGER) ServerLager[drucker_farbe] = MAX_DRUCKER_FARBE_IN_LAGER;

	    format(Text, sizeof(Text), "{FF6600}Interglobal Televison\nDruckerfarben Lager\n%i/%i", ServerLager[drucker_farbe], MAX_DRUCKER_FARBE_IN_LAGER);
     	UpdateDynamic3DTextLabelText(ServerLager[druckerfarbe_label], COLOR_WHITE, Text);
	}

	if(ServerLager[drucker_papier] < MAX_DRUCKER_PAPIER_IN_LAGER)
	{
	    new Text[128];
	    ServerLager[drucker_papier] += DRUCKER_PAPIER_PER_TIME;
	    if(ServerLager[drucker_papier] > MAX_DRUCKER_PAPIER_IN_LAGER) ServerLager[drucker_papier] = MAX_DRUCKER_PAPIER_IN_LAGER;

	    format(Text, sizeof(Text), "{FF6600}Interglobal Televison\nDruckerpapier Lager\n%i/%i", ServerLager[drucker_papier], MAX_DRUCKER_PAPIER_IN_LAGER);
     	UpdateDynamic3DTextLabelText(ServerLager[druckerpapier_label], COLOR_WHITE, Text);
	}
}

public AC_CheckStatus(playerid)
{
	new ac_string[256], Float:Position[3], Float:health, Float:armour;
	if(!IsPlayerNPC(playerid) && GetPVarInt(playerid,"LoggedIn") == 1 && Afk[playerid] == 0)
	{
	    settimefunc(playerid);
	    GetPlayerHealth(playerid,health);
     	GetPlayerArmour(playerid,armour);
		if(!(GetPlayerSurfingVehicleID(playerid) == INVALID_VEHICLE_ID))
		{
		    new vehicleid = GetPlayerSurfingVehicleID(playerid), pID = GetVehicleDriverEx(vehicleid);
      		if(!IsABoot(vehicleid))
      		{
				if(GetPlayerSpeed(pID) > 10)
				{
				    GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
					SetPlayerPos(playerid, Position[0]+2, Position[1]+2, Position[2]+1);
				}
			}
		}
 		if(AnticheatInfo[playerid][sSetMoney] == false)
		{
		    if(GetPVarInt(playerid,"InCasino") > 0){AnticheatInfo[playerid][sBargeld] = GetPlayerMoney(playerid);}
	    	if(GetPlayerMoney(playerid) > AnticheatInfo[playerid][sBargeld]) { ResetPlayerMoney(playerid); GivePlayerMoney(playerid, AnticheatInfo[playerid][sBargeld]); }
	    	if(GetPlayerMoney(playerid) < AnticheatInfo[playerid][sBargeld]) { AnticheatInfo[playerid][sBargeld] = GetPlayerMoney(playerid); AnticheatInfo[playerid][sLooseMoney] = true; }
		}
		AnticheatInfo[playerid][sSetMoney] = false;
    	if(armour > 100.0)
		{
			format(ac_string,sizeof(ac_string),"%s wurde vom System gekickt. Grund: Armour-Hack",SpielerInfo[playerid][sName]);
			SendClientMessageToAll(COLOR_RED,ac_string);
			CreateServerLogEntry("KICK_LOG", ac_string);
			KickPlayer(playerid,ac_string);
			return 1;
		}
		if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION:2)
        {
       		new bannedgstring[400], Uhrzeit[16], Datum[16];
			gettime(Hour, Minute, Second);
			getdate(Year, Month, Day);
			format(Uhrzeit,sizeof(Uhrzeit),"%02d:%02d:%02d",Hour,Minute,Second);
			format(Datum,sizeof(Datum),"%d/%02d/%02d",Day,Month,Year);
        	format(bannedgstring,sizeof(bannedgstring),"{FFFFFF}Dein Account wurde gesperrt!\nGesperrt von: Server\nGrundangabe: Jetpack-Hack\nUhrzeit: %s\nDatum: %s\n\nWenn du glaubst zu Unrecht gebannt wurden zu sein, kannst du mit {007DFF}'F8'{FFFFFF} einen Screenshot\nvon diesem Dialog machen, und dich im Forum melden. Erstelle einen Entbanantrag indem du die Vorlage dort ausfüllst.",Uhrzeit,Datum);
	        ShowPlayerDialog(playerid,9992,DIALOG_STYLE_MSGBOX,"{007DFF}"SERV_NAME"{FFFFFF} - Benutzerverwaltung",bannedgstring,"Schließen","");
      		format(ac_string,sizeof(ac_string),"%s wurde vom Server permanent gebannt. Grund: Jetpack-Hack",SpielerInfo[playerid][sName]);
			SendClientMessageToAll(COLOR_RED,ac_string);
			CreateServerLogEntry("BAN_LOG", ac_string);
            BanPlayer(playerid,"Server", "Jetpack-Hack");
            TogglePlayerControllable(playerid, false);
            return 1;
        }
        if(GetPVarInt(playerid,"ShowAchievement") > 1) { SetPVarInt(playerid,"ShowAchievement",GetPVarInt(playerid,"ShowAchievement")-1); }
        else if(GetPVarInt(playerid,"ShowAchievement") == 1)
        {
            DeletePVar(playerid,"ShowAchievement");
            HideAchievement(playerid);
        }
		if(GetPVarInt(playerid,"InGarage") == 0 || GetPVarInt(playerid,"InHaus") == 0)
		{
			SetPlayerWetter(playerid);
		}
		if(GetPVarInt(playerid,"InGarage") == 1)
		{
		    if(IsPlayerInAnyVehicle(playerid))
		    {
		        new vehicleid = GetPlayerVehicleID(playerid), PLAYER_STATE:State = GetPlayerState(playerid), gid = GetPVarInt(playerid,"GarageID");
 				if(State == PLAYER_STATE_DRIVER)
 				{
					if(GetPlayerSpeed(playerid) > 3)
					{
	    				SetVehicleVirtualWorld(vehicleid,0);
						SetVehiclePos(vehicleid,GaragenInfo[gid][giOPos_X],GaragenInfo[gid][giOPos_Y],GaragenInfo[gid][giOPos_Z]);
						SetVehicleZAngle(vehicleid,GaragenInfo[gid][giOPos_A]);

						FahrzeugInfo[vehicleid][fGPark]--;
						GaragenInfo[gid][giFahrzeug][FahrzeugInfo[vehicleid][fGPark]] = 0;
						FahrzeugInfo[vehicleid][fGarage] = 0;
						FahrzeugInfo[vehicleid][fGPark] = 0;

  						foreach(new i : Player)
  						{
				    		if(!IsPlayerInAnyVehicle(i))continue;
						    if(GetPlayerVehicleID(i) != GetPlayerVehicleID(playerid))continue;
							SetPlayerPos(i,GaragenInfo[gid][giPos_X],GaragenInfo[gid][giPos_Y],GaragenInfo[gid][giPos_Z]);
							SetPlayerInterior(i,0);
							SetPlayerVirtualWorld(i,0);
							SetCameraBehindPlayer(i);
	      					PutPlayerInVehicle(i,vehicleid,0);
							DeletePVar(i,"GarageID");
							DeletePVar(i,"InGarage");
						}
					}
 				}
		    }
  		}
		if(SpielerInfo[playerid][sNebenjob] == 7 && GetPVarInt(playerid,"LandwirtTrailer") == 0)
 		{
		    if(IsVehicleStreamedIn(GetPVarInt(playerid,"TraktorTrailer"), playerid))
		    {
		        SetPVarInt(playerid,"LandwirtTrailer",1);
				AttachTrailerToVehicle(GetPVarInt(playerid,"TraktorTrailer"), GetPVarInt(playerid,"LandwirtAuto"));
		 	}
		}
	    if(schulung[playerid] == 1 || schulung[playerid] == 3 || schulung[playerid] == 4)
        {
            if(IsPlayerInAnyVehicle(playerid))
			{
				new vehicleid = GetPlayerVehicleID(playerid);
				if(FahrzeugInfo[vehicleid][fFahrschule] == 1)
				{
		            if(GetPlayerSpeed(playerid) > 90)
					{
					    if(stopACFehlerpunkte[playerid] == 0)
						{
						    if(Fehlerpunkte[playerid] > -1 && Fehlerpunkte[playerid] < 10)
						    {
						        stopACFehlerpunkte[playerid] = 1;
			    				Fehlerpunkte[playerid] += 1;
								format(ac_string,sizeof(ac_string),"Du darfst nur maximal 90 KM/H fahren, %d/10 Fehlerpunkte!",Fehlerpunkte[playerid]);
								SendClientMessage(playerid,COLOR_RED,ac_string);
						    }
						    if(Fehlerpunkte[playerid] == 10)
						    {
						        vehicleid = GetPlayerVehicleID(playerid);
				     			DisablePlayerCheckpoint(playerid);
								DeletePVar(playerid,"FahrschulStunde");
								DeletePVar(playerid,"FSchein");
								DeletePVar(playerid,"FahrschulCar");
								DeletePVar(playerid,"HatFahrschulCar");
								schulung[playerid] = 0;
								FahrschulCar[vehicleid] = 0;
								Fehlerpunkte[playerid] = 0;
								DestroyDynamic3DTextLabel(FahrzeugInfo[vehicleid][fLabel]);
								FahrzeugInfo[vehicleid][fLabel] = Text3D:INVALID_3DTEXT_ID;
								DeleteVehicle(vehicleid);
						        DisablePlayerCheckpoint(playerid);
								SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Die Fahrschulprüfung wurde abgebrochen, da du dich nicht an die Richtgeschwindigkeit gehalten hast.");
								SetPlayerPos(playerid,2114.9937,-1930.7943,13.3838);
							}
						} else {
							stopACFehlerpunkte[playerid]--;
						}
					}
				}
			}
        }
        if(GetPlayerTargetPlayer(playerid) != INVALID_PLAYER_ID && IsPlayerNPC(GetPlayerTargetPlayer(playerid)) && GetPVarInt(playerid,"RobberyCheck") == 1)//In Progress...
	    {
	        if(SpielerInfo[playerid][sFraktion] != 2 && SpielerInfo[playerid][sFraktion] != 3 && SpielerInfo[playerid][sFraktion] != 4 && SpielerInfo[playerid][sFraktion] != 5 && SpielerInfo[playerid][sFraktion] != 6)
	        {
		        SetPVarInt(playerid,"Robbery",1);
/*				switch(random(2))
				{
		        	case 0:{FCNPC_SetSpecialAction(GetPVarInt(playerid,"IsAmingAt"),SPECIAL_ACTION_HANDSUP);}
		        	case 1:
					{
					    FCNPC_SetWeapon(GetPVarInt(playerid,"IsAmingAt"),24);
					    FCNPC_SetAmmo(GetPVarInt(playerid,"IsAmingAt"),25);
					    FCNPC_AimAtPlayer(GetPVarInt(playerid,"IsAmingAt"), playerid, true, -1, true);
					    SendClientMessage(playerid,COLOR_GREY,"Verkäufer sagt: Mach dich bloß raus hier!");
					    SetPVarInt(playerid,"AttackedByBot",GetPVarInt(playerid,"IsAmingAt"));
					}
				}*/
		        SetPVarInt(playerid,"Robbery",0);
			}
	    }
	    if(GetPlayerTargetPlayer(playerid) != INVALID_PLAYER_ID && IsPlayerNPC(GetPlayerTargetPlayer(playerid)) && GetPVarInt(GetPlayerTargetPlayer(playerid),"NPCNichtAusraubBar") == 0 && GetPlayerTargetPlayer(playerid) != 0 && GetPVarInt(playerid,"RobberyCheck") == 0 && GetPlayerWeapon(playerid) > WEAPON:18 && GetPVarInt(playerid,"HatGeldsack") == 0)//Starten...
	    {
	        if(SpielerInfo[playerid][sFraktion] != 2 && SpielerInfo[playerid][sFraktion] != 3 && SpielerInfo[playerid][sFraktion] != 4 && SpielerInfo[playerid][sFraktion] != 5 && SpielerInfo[playerid][sFraktion] != 6)
	        {
	            if(CopDuty != 0 || FBIDuty != 0)
	            {
			        new str[128], pID = GetPlayerTargetPlayer(playerid);
					if(RobBarAllowed[pID] == 0)
					{
					    SetPlayerWantedLevelEx(playerid, GetPlayerWantedLevelEx(playerid) +3);
					    SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Die Kamera hat dich erfasst und der Alarm wurde ausgelöst!");
						format(str,sizeof(str),"Aktuelles Wantedlevel: %d",GetPlayerWantedLevelEx(playerid));
						SendClientMessage(playerid,COLOR_YELLOW,str);
						SetPVarInt(playerid,"AmAusrauben",1);
				        PlayAudioStreamForPlayer(playerid,"https://"SERV_WURL"/sounds/Alarm.mp3");
		 	    		PlayerTextDrawShow(playerid, RobBar[playerid][0]);
		 	    		PlayerTextDrawTextSize(playerid,RobBar[playerid][1], 212.000000, -1.000000);
			    		PlayerTextDrawShow(playerid, RobBar[playerid][1]);
			    		PlayerTextDrawSetString(playerid, RobBar[playerid][2], "Raub in Prozess");
			    		PlayerTextDrawShow(playerid, RobBar[playerid][2]);
			    		KillTimer(RobBarTimer[playerid]);
			    		RobBarTimer[playerid] = SetTimerEx("RobBarT",1000,true,"i",playerid);
			    		RobBarValue[playerid] = 212.000000;
				        SetPVarInt(playerid,"RobberyCheck",1);
				        SetPVarInt(playerid,"IsAmingAt",pID);
				        SetTimerEx("TimeToRob",1800000,false,"i",pID);
				        RobBarAllowed[pID] = 1;

				        new string[144];
				        if(GetPVarInt(playerid,"InAmmunation") == 1)
					   	{
					    	SendCopMessage(COLOR_BLUE,"ZENTRALE: AN ALLE EINHEITEN !! DIE KAMERA EINES AMMUNATIONS, MELDET EINEN RAUBÜBERFALL.");
					    	format(string,sizeof(string),"ZENTRALE: Benutze: {FFFFFF}/showammu %d, UM DORT HIN EINEN MARKER ZUSETZEN.",GetPVarInt(playerid,"AmmunationID"));
							SendCopMessage(COLOR_BLUE,string);
						}
				  		if(GetPVarInt(playerid,"InStore") == 1)
					   	{
					    	SendCopMessage(COLOR_BLUE,"ZENTRALE: AN ALLE EINHEITEN !! DIE KAMERA EINES 24/7, MELDET EINEN RAUBÜBERFALL.");
					    	format(string,sizeof(string),"ZENTRALE: Benutze: {FFFFFF}/showstore %d, UM DORT HIN EINEN MARKER ZUSETZEN.",GetPVarInt(playerid,"StoreID"));
							SendCopMessage(COLOR_BLUE,string);
						}
					}
				}
				else SendClientMessage(playerid,COLOR_RED,"[Info]: {FFFFFF}Das Geld des Unternehmens liegt sicher im Safe. Da kommt zurzeit keiner ran.");
   			}
	    }
		if(GetPlayerTargetPlayer(playerid) == INVALID_PLAYER_ID && GetPVarInt(playerid,"RobberyCheck") == 1)//Stoppen
		{
		    KillTimer(RobBarTimer[playerid]);
			PlayerTextDrawHide(playerid,RobBar[playerid][0]);
			PlayerTextDrawHide(playerid,RobBar[playerid][1]);
			PlayerTextDrawHide(playerid,RobBar[playerid][2]);
//		    FCNPC_SetSpecialAction(GetPVarInt(playerid,"IsAmingAt"),SPECIAL_ACTION_NONE);
		    ApplyAnimation(GetPVarInt(playerid,"IsAmingAt"), "ped", "cower", 3.0, true, false, false, false, 0);
		    DeletePVar(playerid,"Robbery");
		    DeletePVar(playerid,"RobberyCheck");
		    DeletePVar(playerid,"IsAmingAt");
		}
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
		    new vehicleid = GetPlayerVehicleID(playerid);
		    if(FahrzeugInfo[vehicleid][fImportCar] == 0 || FahrzeugInfo[vehicleid][fKurrierCar] == 0)
		    {
		        new Float:VHealth;
				GetVehicleHealth(vehicleid, VHealth);
				if(VHealth <= 300 && vehicleid != BankRobVan && vehicleid != WaffenTransporter)
				{
				    SetVehicleHealth(vehicleid, 350);
				    GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
					SetVehicleParamsEx(vehicleid, false, lights, alarm, doors, bonnet, boot, objective);
					GameTextForPlayer(playerid,"Motor ~r~zerstoert",3000,6);
					Motor[vehicleid] = false;
				}
			}
		}
		if(IsPlayerInAnyVehicle(playerid))
		{
		    new PLAYER_STATE:State=GetPlayerState(playerid);
 			if(State==PLAYER_STATE_DRIVER)
			{
		    	new vehicleid = GetPlayerVehicleID(playerid), string[164];
				if(SpielerInfo[playerid][sBlitzerZeit] != 0)return SpielerInfo[playerid][sBlitzerZeit] -= 1;
				for(new blitzerid=1;blitzerid<MAX_BLITZER;blitzerid++)
		 		{
			 		if(Blitzer[blitzerid][Erstellt] == true && Blitzer[blitzerid][Kaputt] == 0)
			  		{
					  	if(IsVehicleInRangeOfPoint(vehicleid,12.5,Blitzer[blitzerid][oPosX],Blitzer[blitzerid][oPosY],Blitzer[blitzerid][oPosZ]) && gettime() > SpielerInfo[playerid][sBlitzerZeit])
					 	{
					 		if(GetPVarInt(playerid,"CopDuty") == 1)return 1;
					 		else if(GetPVarInt(playerid,"FBIDuty") == 1)return 1;
					 		else if(GetPVarInt(playerid,"MedicDuty") == 1)return 1;
					 		else if(GetPVarInt(playerid,"FeuerwehrDuty") == 1)return 1;
					 		else if(GetPVarInt(playerid,"AdminDuty") == 1)return 1;
					 	    new Float:Speed = GetPlayerSpeed(playerid);
							new str[20];
							format(str,sizeof(str),"%f",Speed);
							new NewSpeed = strval(str);

						 	if(NewSpeed > Blitzer[blitzerid][Geschwindigkeit]+10)
						 	{
						 	    new kmh = GetPlayerSpeed(playerid)-Blitzer[blitzerid][Geschwindigkeit];
						 	    new Preis = 15*kmh;
      							GivePlayerMoneyEx(playerid,-Preis);
						 	    FrakInfo[2][fiFrakKasse] += Preis;
							 	SpielerInfo[playerid][sBlitzerZeit] = 10;
						        PlayerPlaySound(playerid,1132,0.0,0.0,0.0);
								format(string,sizeof(string),"[Blitzer]:{FFFFFF} (%d / %d KM/H | Toleranz: 10 KM/H). Bußgeld: %d$",GetPlayerSpeed(playerid),Blitzer[blitzerid][Geschwindigkeit],Preis);
							    SendClientMessage(playerid,COLOR_RED,string);
							    if(GetPlayerSpeed(playerid) > Blitzer[blitzerid][Geschwindigkeit]+20)
							    {
							        SendClientMessage(playerid,COLOR_RED,"[Blitzer]:{FFFFFF} Du hast zusätzlich 3 Punkte auf deine Fahrerlaubnis erhalten.");
									if(IsAMotorrad(vehicleid))
									{
									    SpielerInfo[playerid][stvoBikeLic] += 3;
										if(SpielerInfo[playerid][stvoBikeLic] >= 10)
										{
										    SpielerInfo[playerid][stvoBikeLic] = 0;
										    SpielerInfo[playerid][sBikeLic] = 0;
										    SendClientMessage(playerid,COLOR_RED,"[Blitzer]: {FFFFFF}Du hast jetzt mindestens 10 Punkte. Deine Fahrerlaubnis hast du verloren.");
										}
									}
									else if(IsALKW(vehicleid))
									{
									    SpielerInfo[playerid][stvoTruckLic] += 3;
										if(SpielerInfo[playerid][stvoTruckLic] >= 10)
										{
										    SpielerInfo[playerid][stvoTruckLic] = 0;
										    SpielerInfo[playerid][sTruckLic] = 0;
										    SendClientMessage(playerid,COLOR_RED,"[Blitzer]: {FFFFFF}Du hast jetzt mindestens 10 Punkte. Deine Fahrerlaubnis hast du verloren.");
										}
									}
									else
									{
									    SpielerInfo[playerid][stvoCarLic] += 3;
										if(SpielerInfo[playerid][stvoCarLic] >= 10)
										{
										    SpielerInfo[playerid][stvoCarLic] = 0;
										    SpielerInfo[playerid][sCarLic] = 0;
										    SendClientMessage(playerid,COLOR_RED,"[Blitzer]: {FFFFFF}Du hast jetzt mindestens 10 Punkte. Deine Fahrerlaubnis hast du verloren.");
										}
									}
							    }
							}
					    }
			    	}
			    }
		    }
		}
	}
	return 1;
}

public OnPlayerRequestDownload(playerid, DOWNLOAD_REQUEST:type, crc)
{
	new fullurl[256+1];
	new dlfilename[64+1];
	new foundfilename=0;
	if(!IsPlayerConnected(playerid)) return 0;
	if(type == DOWNLOAD_REQUEST_TEXTURE_FILE)foundfilename = FindTextureFileNameFromCRC(crc,dlfilename,64);
	else if(type == DOWNLOAD_REQUEST_MODEL_FILE)foundfilename = FindModelFileNameFromCRC(crc,dlfilename,64);
	if(foundfilename)
	{
	    format(fullurl,256,"%s/%s",modurl,dlfilename);
	    RedirectDownload(playerid,fullurl);
	}
	return 0;
}
stock SetPlayerMapIconEx(iconid, Float:x, Float:y, Float:z, markertype, color, vw, inte, playerid = -1)
{
	#pragma unused iconid
	CreateDynamicMapIcon(x, y, z, markertype, color, vw, inte, playerid, 345.0, MAPICON_GLOBAL);
    return 1;
}

public OnPlayerEnterDynamicArea(playerid, areaid) {
	//Beachbar System
	BeachBar_PlayerEnterDynamicArea(playerid, areaid);
	//EnterExit System
	EnterExit_PlayerEnterDynamicArea(playerid, areaid);
	return 1;
}

public OnPlayerLeaveDynamicArea(playerid, areaid) {
	//Beachbar System
	BeachBar_PlayerLeaveDynamicArea(playerid, areaid);
	//EnterExit System
	EnterExit_PlayerExitDynamicArea(playerid, areaid);
	return 1;
}

public OnDynamicObjectMoved(objectid) {
	//AirDrop System
	Airdrop_DynObjectMoved(objectid);
	return 1;
}

public OnPlayerEditDynamicObject(playerid, objectid, response, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz)
{
	//ATMSystem
	ATM_OnPlayerEditDynamicObject(playerid, objectid, response, x, y, z, rx, ry, rz);
	//LumberjackSystem
	//Log_OnPlayerEditDynamicObject(playerid, objectid, response, x, y, z, rx, ry, rz);

	//AdminEditor
	AdminEditor_EditDynObject(playerid, objectid, response, x, y, z, rx, ry, rz);

	//CouponSystem Player Objects
	Coupon_EditDynamicObject(playerid, objectid, response, x, y, z, rx, ry, rz);
	//FastFoodStood
	FastFoodStood_EditDynamicObject(playerid, objectid, response, x, y, z, rx, ry, rz);
	return 1;
}

IsAntiInteriorFlucht(playerid) {
	if(GetPVarInt(playerid, "AntiIntFlucht")) {
		new timestamp = GetPVarInt(playerid, "AntiIntFluchtTimestamp");

		if(timestamp > gettime()) return 1;

		DeletePVar(playerid, "AntiIntFlucht");
		DeletePVar(playerid, "AntiIntFluchtTimestamp");
	}
	return 0;
}

public Streamer_OnItemStreamOut(type, STREAMER_ALL_TAGS:id, forplayerid) {
	Job_Streamer_OnItemStreamOut(type, forplayerid);

	return 1;
}